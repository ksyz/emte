diff --git a/ChangeLog b/ChangeLog
index b6ee465..47f1cce 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,77 @@
+Changes for 1.6.3
+
+ - [ZBX-448] fixed zabbix server status when frontend and backend are on different servers (Vedmak)
+ - [ZBX-660] fixed screen clock set to server time showed local time (Artem)
+ - [ZBX-603] fixed min autologout value to 90 seconds (amach)
+ - [ZBX-762] improved performance of processing of log and text items (Sasha)
+ - [ZBX-749] details box is open by default if any error occured (Vedmak)
+ - [ZBX-751] expanded details box added for triggers copying messages (Vedmak)
+ - [DEV-268] added support of <mode> for system.cpu.util under Solaris (Sasha)
+ - [ZBX-737] the behaviour of the agent's key "vfs.fs.size" improved to be similar to the "df" command (Dmitry)
+ - [ZBX-599] the purpose of the configuration parameter StartAgents precised (Dmitry)
+ - [ZBX-756] added tooltip in "status of ZABBIX" report for number of items and triggers parameter (Vedmak)
+ - [ZBX-740] fixed wrong aggregate graph drawing (Artem)
+ - [ZBX-747] fixed template linkage not working properly (Vedmak)
+ - [ZBX-746] fixed incorrect processing of net.tcp.listen (Sasha)
+ - [ZBX-745] fixed "invalid URL" when use small popup menus like ping etc (Vedmak)
+ - [ZBX-744] fixed "invalid URL" when add user to user group (Vedmak)
+ - [ZBX-743] fixed problem with "Too many open files" by agent under Solaris 2.5, 2.6 (Sasha)
+ - [ZBX-728] fixed displaying "no status update" error for template triggers (Vedmak)
+ - [ZBX-738] fixed processing of existing data when -n parameter is used for zabbix_server (Sasha)
+ - [ZBX-736] fixed "Undefined index error" during frontend installation (Vedmak)
+ - [ZBX-735] fixed filter in audit filtering only logs (Vedmak) 
+ - [ZBX-734] fixed evaluation of {ITEM.LASTVALUE} if the trigger expression consists of several items (Sasha) 
+ - [ZBX-732] fixed wrong action count in audit log (Vedmak)
+ - [ZBX-731] fixed resetting of web graph periods (Vedmak)
+ - [ZBX-730] fixed possible Windows agent crash when processing eventlog[] (Sasha)
+ - [ZBX-555] added entity counts on interfaces (Vedmak)
+ - [ZBX-724] improved queries in "Graphs" page (Artem)
+ - [ZBX-725] added new default user group "Disabled" (Vedmak)
+ - [ZBX-723] fixed Wrong URL when add rights to user group (Vedmak)
+ - [ZBX-720] edited configure.in file to make some error messages more sensible (Dmitry)
+ - [ZBX-665] corrected some typos in misc/conf/zabbix_server.conf (Dmitry)
+ - corrected some typos in test/env/standalone/conf/template_server.conf (Dmitry)
+ - [ZBX-615] fixed processing of four-character-long item keys (Dmitry)
+ - [ZBX-697] trigger description in "Last 20 issues" is link to the URL defined in trigger parameters + minor GUI typos fix (Vedmak)
+ - [ZBX-473] fixed SNMP-related compilation problem with undefined 'localname' under some platforms (Sasha)
+ - [ZBX-718] fixed web graphs start time not changing (Vedmak)
+ - [ZBX-699] fixed recursion detection in Include directive for config files (Sasha)
+ - [ZBX-301] fixed minor GUI text errors  (Vedmak)
+ - [ZBX-716] fixed wrong caption for graph item editing form (Vedmak)
+ - [ZBX-717] all templates linked to group Templates in default config (Sasha)
+ - [ZBX-715] fixed "Invalid URL" error when choose History from history submenu (Vedmak)
+ - [ZBX-713] fixed "values per second" having too many decimal places (Vedmak)
+ - [ZBX-710] fixed duplicating entries in hosts groups after import (Artem)
+ - [ZBX-709] improved item graph exporting (Artem)
+ - [ZBX-712] fixed simple/advanced item filter switch (Vedmak)
+ - [ZBX-707] fixed sql error when filter items by host group (Vedmak)
+ - [ZBX-706] fixed element validation in sysmap elements (Artem)
+ - [ZBX-705] improved {ESC.HISTORY} macro in recovery notifications (Sasha)
+ - [ZBX-647] fixed audit log record for graph update action "added" -> "updated" (Vedmak)
+ - [ZBX-700] fixed possible server crash when using {TRIGGER.NAME} for notifications (Sasha)
+ - [DEV-286] improved zabbix main menu (Artem)
+ - [ZBX-311] fixed PostgreSQL errors with out of range string data (Sasha)
+ - [ZBX-696] fixed import of triggers with {HOSTNAME} macro (Sasha)
+ - [ZBX-677] fixed handling of -c parameter in zabbix_sender. Thanks to Jakov Sosic (Sasha)
+ - [ZBX-693] fixed timeout handling for SNMP connect (Sasha)
+ - [ZBX-690] fixed memory leak if trigger evaluation fails (Sasha)
+ - [DEV-285] added configurable the first dropdown selection (Artem)
+ - [ZBX-689] allowed processing of non-agent based checks for unreachable hosts (Sasha)
+ - [ZBX-683] removed "Step" field for recovery messages from Event details (Sasha)
+ - [ZBX-680] fixed login while entering any page with HTTP auth enabled (Artem)
+ - [ZBX-678] default number of HTTP pollers was decreased to one (Sasha)
+ - [ZBX-676] fixed sql problem with deletion of many hosts (Artem)
+ - [ZBX-675] fixed wrong result of function "nodata" after server restart (Sasha)
+ - [ZBX-672] added polish locale (Artem)
+ - [ZBX-671] removed net-snmp debug messages from server logs (Sasha)
+ - [ZBX-662] fixed support of quotation marks in command in UserParameter's (Sasha)
+ - [ZBX-658] fixed deadlocks in dbcache module (Sasha)
+ - [ZBX-659] added define for menu caching (Artem)
+ - [ZBX-581] fixed latest data auto-refresh cripples filter viewing issue (Artem)
+ - [ZBX-657] improved performance of the graph related screen due to missing index (Sasha)
+ - [ZBX-656] fixed warning zbx_malloc: allocating already allocated memory in json.c (Sasha)
+ - [DEV-282] fixes frontend vulnerabilities (Artem)
+
 Changes for 1.6.2
 
  - [ZBX-653] fixes for postgresql (Artem)
diff --git a/bin/win32/zabbix_agentd.exe b/bin/win32/zabbix_agentd.exe
index 8ecd516..05560c8 100755
Binary files a/bin/win32/zabbix_agentd.exe and b/bin/win32/zabbix_agentd.exe differ
diff --git a/bin/win32/zabbix_get.exe b/bin/win32/zabbix_get.exe
index 917209d..61fb39f 100644
Binary files a/bin/win32/zabbix_get.exe and b/bin/win32/zabbix_get.exe differ
diff --git a/bin/win32/zabbix_sender.exe b/bin/win32/zabbix_sender.exe
index 4cf2486..3a751a0 100644
Binary files a/bin/win32/zabbix_sender.exe and b/bin/win32/zabbix_sender.exe differ
diff --git a/bin/win64/zabbix_agentd.exe b/bin/win64/zabbix_agentd.exe
index d737133..31ac444 100755
Binary files a/bin/win64/zabbix_agentd.exe and b/bin/win64/zabbix_agentd.exe differ
diff --git a/build/win32/project/Makefile_agent b/build/win32/project/Makefile_agent
new file mode 100644
index 0000000..38dd8a8
--- /dev/null
+++ b/build/win32/project/Makefile_agent
@@ -0,0 +1,188 @@
+PROGNAME = ..\..\..\bin\win32\zabbix_agentd.exe
+CC = cl.exe /nologo
+LINKER = link.exe /NOLOGO
+RC = rc.exe
+MC = mc.exe
+MT = mt.exe
+MESSAGES_H = messages.h
+INCS = /I .\ /I ..\include /I ..\..\..\include /I ..\..\..\src\zabbix_agent
+CFLAGS = $(INCS) /O2 /Ob1 /GF /FD /EHsc /MT /Gy /W3 /c /TC /D _WINDOWS /D _CONSOLE /D _MBCS /D NDEBUG /D WIN32 /D HAVE_WINLDAP_H /D HAVE_ASSERT_H /D ZABBIX_SERVICE /D WITH_COMMON_METRICS /D WITH_SPECIFIC_METRICS /D WITH_SIMPLE_METRICS /D "_VC80_UPGRADE=0x0600"
+RESOURCE_H  = resource.res
+OBJS  = ..\..\..\src\libs\zbxcommon\alias.o ..\..\..\src\libs\zbxcommon\comms.o ..\..\..\src\libs\zbxcommon\gnuregex.o ..\..\..\src\libs\zbxcommon\misc.o ..\..\..\src\libs\zbxcommon\regexp.o ..\..\..\src\libs\zbxcommon\str.o ..\..\..\src\libs\zbxcommon\xml.o ..\..\..\src\libs\zbxcommon\zbxgetopt.o ..\..\..\src\libs\zbxcomms\comms.o ..\..\..\src\libs\zbxconf\cfg.o ..\..\..\src\libs\zbxcrypto\base64.o ..\..\..\src\libs\zbxcrypto\md5.o ..\..\..\src\libs\zbxjson\json.o ..\..\..\src\libs\zbxlog\log.o ..\..\..\src\libs\zbxplugin\zbxplugin.o ..\..\..\src\libs\zbxsys\mutexs.o ..\..\..\src\libs\zbxsys\symbols.o ..\..\..\src\libs\zbxsys\threads.o ..\..\..\src\libs\zbxsysinfo\common\common.o ..\..\..\src\libs\zbxsysinfo\common\file.o ..\..\..\src\libs\zbxsysinfo\common\http.o ..\..\..\src\libs\zbxsysinfo\common\net.o ..\..\..\src\libs\zbxsysinfo\common\system.o ..\..\..\src\libs\zbxsysinfo\simple\ntp.o ..\..\..\src\libs\zbxsysinfo\simple\simple.o ..\..\..\src\libs\zbxsysinfo\win32\cpu.o ..\..\..\src\libs\zbxsysinfo\win32\diskio.o ..\..\..\src\libs\zbxsysinfo\win32\diskspace.o ..\..\..\src\libs\zbxsysinfo\win32\inodes.o ..\..\..\src\libs\zbxsysinfo\win32\kernel.o ..\..\..\src\libs\zbxsysinfo\win32\memory.o ..\..\..\src\libs\zbxsysinfo\win32\net.o ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o ..\..\..\src\libs\zbxsysinfo\win32\proc.o ..\..\..\src\libs\zbxsysinfo\win32\sensors.o ..\..\..\src\libs\zbxsysinfo\win32\services.o ..\..\..\src\libs\zbxsysinfo\win32\swap.o ..\..\..\src\libs\zbxsysinfo\win32\uptime.o ..\..\..\src\libs\zbxsysinfo\win32\win32.o ..\..\..\src\libs\zbxsysinfo\sysinfo.o ..\..\..\src\libs\zbxwin32\perfmon.o ..\..\..\src\libs\zbxwin32\service.o ..\..\..\src\zabbix_agent\active.o ..\..\..\src\zabbix_agent\cpustat.o ..\..\..\src\zabbix_agent\diskdevices.o ..\..\..\src\zabbix_agent\eventlog.o ..\..\..\src\zabbix_agent\interfaces.o ..\..\..\src\zabbix_agent\listener.o ..\..\..\src\zabbix_agent\logfiles.o ..\..\..\src\zabbix_agent\perfstat.o ..\..\..\src\zabbix_agent\stats.o ..\..\..\src\zabbix_agent\zabbix_agentd.o ..\..\..\src\zabbix_agent\zbxconf.o
+LIBS = ws2_32.lib psapi.lib pdh.lib Wldap32.lib advapi32.lib uuid.lib
+LFLAGS = /INCREMENTAL:NO /MANIFEST /MANIFESTFILE:"zabbix_agentd.exe.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /PDB:"zabbix_agentd.pdb" /SUBSYSTEM:CONSOLE /DYNAMICBASE:NO /MACHINE:X86
+
+all: $(PROGNAME)
+
+clean:
+	del $(OBJS) $(RESOURCE_H) $(MESSAGES_H) $(PROGNAME) messages.rc MSG00001.bin zabbix_agentd.exe.manifest
+
+$(PROGNAME): $(MESSAGES_H) $(OBJS) $(RESOURCE_H)
+	$(LINKER) $(OBJS) $(RESOURCE_H) /OUT:$(PROGNAME) $(LFLAGS) $(LIBS)
+	$(MT) /outputresource:"$(PROGNAME);#1" /manifest zabbix_agentd.exe.manifest /nologo
+
+$(MESSAGES_H): messages.mc
+	$(MC) -U -s -h ".\\" -r ".\\" messages.mc
+
+$(RESOURCE_H): resource.rc
+	$(RC) /d "NDEBUG" /d "_VC80_UPGRADE=0x0600" /l 0x419 /fo"$(RESOURCE_H)" resource.rc
+	
+..\..\..\src\libs\zbxcommon\alias.o: ..\..\..\src\libs\zbxcommon\alias.c
+	$(CC) ..\..\..\src\libs\zbxcommon\alias.c /Fo"..\..\..\src\libs\zbxcommon\alias.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\comms.o: ..\..\..\src\libs\zbxcommon\comms.c
+	$(CC) ..\..\..\src\libs\zbxcommon\comms.c /Fo"..\..\..\src\libs\zbxcommon\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\gnuregex.o: ..\..\..\src\libs\zbxcommon\gnuregex.c
+	$(CC) ..\..\..\src\libs\zbxcommon\gnuregex.c /Fo"..\..\..\src\libs\zbxcommon\gnuregex.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\misc.o: ..\..\..\src\libs\zbxcommon\misc.c
+	$(CC) ..\..\..\src\libs\zbxcommon\misc.c /Fo"..\..\..\src\libs\zbxcommon\misc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\regexp.o: ..\..\..\src\libs\zbxcommon\regexp.c
+	$(CC) ..\..\..\src\libs\zbxcommon\regexp.c /Fo"..\..\..\src\libs\zbxcommon\regexp.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\str.o: ..\..\..\src\libs\zbxcommon\str.c
+	$(CC) ..\..\..\src\libs\zbxcommon\str.c /Fo"..\..\..\src\libs\zbxcommon\str.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\xml.o: ..\..\..\src\libs\zbxcommon\xml.c
+	$(CC) ..\..\..\src\libs\zbxcommon\xml.c /Fo"..\..\..\src\libs\zbxcommon\xml.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\zbxgetopt.o: ..\..\..\src\libs\zbxcommon\zbxgetopt.c
+	$(CC) ..\..\..\src\libs\zbxcommon\zbxgetopt.c /Fo"..\..\..\src\libs\zbxcommon\zbxgetopt.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcomms\comms.o: ..\..\..\src\libs\zbxcomms\comms.c
+	$(CC) ..\..\..\src\libs\zbxcomms\comms.c /Fo"..\..\..\src\libs\zbxcomms\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxconf\cfg.o: ..\..\..\src\libs\zbxconf\cfg.c
+	$(CC) ..\..\..\src\libs\zbxconf\cfg.c /Fo"..\..\..\src\libs\zbxconf\cfg.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\base64.o: ..\..\..\src\libs\zbxcrypto\base64.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\base64.c /Fo"..\..\..\src\libs\zbxcrypto\base64.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\md5.o: ..\..\..\src\libs\zbxcrypto\md5.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\md5.c /Fo"..\..\..\src\libs\zbxcrypto\md5.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxjson\json.o: ..\..\..\src\libs\zbxjson\json.c
+	$(CC) ..\..\..\src\libs\zbxjson\json.c /Fo"..\..\..\src\libs\zbxjson\json.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxlog\log.o: ..\..\..\src\libs\zbxlog\log.c
+	$(CC) ..\..\..\src\libs\zbxlog\log.c /Fo"..\..\..\src\libs\zbxlog\log.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxplugin\zbxplugin.o: ..\..\..\src\libs\zbxplugin\zbxplugin.c
+	$(CC) ..\..\..\src\libs\zbxplugin\zbxplugin.c /Fo"..\..\..\src\libs\zbxplugin\zbxplugin.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\mutexs.o: ..\..\..\src\libs\zbxsys\mutexs.c
+	$(CC) ..\..\..\src\libs\zbxsys\mutexs.c /Fo"..\..\..\src\libs\zbxsys\mutexs.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\symbols.o: ..\..\..\src\libs\zbxsys\symbols.c
+	$(CC) ..\..\..\src\libs\zbxsys\symbols.c /Fo"..\..\..\src\libs\zbxsys\symbols.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\threads.o: ..\..\..\src\libs\zbxsys\threads.c
+	$(CC) ..\..\..\src\libs\zbxsys\threads.c /Fo"..\..\..\src\libs\zbxsys\threads.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\common.o: ..\..\..\src\libs\zbxsysinfo\common\common.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\common.c /Fo"..\..\..\src\libs\zbxsysinfo\common\common.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\file.o: ..\..\..\src\libs\zbxsysinfo\common\file.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\file.c /Fo"..\..\..\src\libs\zbxsysinfo\common\file.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\http.o: ..\..\..\src\libs\zbxsysinfo\common\http.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\http.c /Fo"..\..\..\src\libs\zbxsysinfo\common\http.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\net.o: ..\..\..\src\libs\zbxsysinfo\common\net.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\net.c /Fo"..\..\..\src\libs\zbxsysinfo\common\net.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\system.o: ..\..\..\src\libs\zbxsysinfo\common\system.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\system.c /Fo"..\..\..\src\libs\zbxsysinfo\common\system.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\simple\ntp.o: ..\..\..\src\libs\zbxsysinfo\simple\ntp.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\simple\ntp.c /Fo"..\..\..\src\libs\zbxsysinfo\simple\ntp.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\simple\simple.o: ..\..\..\src\libs\zbxsysinfo\simple\simple.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\simple\simple.c /Fo"..\..\..\src\libs\zbxsysinfo\simple\simple.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\cpu.o: ..\..\..\src\libs\zbxsysinfo\win32\cpu.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\cpu.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\cpu.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\diskio.o: ..\..\..\src\libs\zbxsysinfo\win32\diskio.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\diskio.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\diskio.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\diskspace.o: ..\..\..\src\libs\zbxsysinfo\win32\diskspace.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\diskspace.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\diskspace.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\inodes.o: ..\..\..\src\libs\zbxsysinfo\win32\inodes.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\inodes.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\inodes.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\kernel.o: ..\..\..\src\libs\zbxsysinfo\win32\kernel.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\kernel.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\kernel.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\memory.o: ..\..\..\src\libs\zbxsysinfo\win32\memory.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\memory.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\memory.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\net.o: ..\..\..\src\libs\zbxsysinfo\win32\net.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\net.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\net.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o: ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\proc.o: ..\..\..\src\libs\zbxsysinfo\win32\proc.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\proc.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\proc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\sensors.o: ..\..\..\src\libs\zbxsysinfo\win32\sensors.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\sensors.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\sensors.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\services.o: ..\..\..\src\libs\zbxsysinfo\win32\services.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\services.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\services.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\swap.o: ..\..\..\src\libs\zbxsysinfo\win32\swap.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\swap.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\swap.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\uptime.o: ..\..\..\src\libs\zbxsysinfo\win32\uptime.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\uptime.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\uptime.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\win32.o: ..\..\..\src\libs\zbxsysinfo\win32\win32.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\win32.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\win32.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\sysinfo.o: ..\..\..\src\libs\zbxsysinfo\sysinfo.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\sysinfo.c /Fo"..\..\..\src\libs\zbxsysinfo\sysinfo.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxwin32\perfmon.o: ..\..\..\src\libs\zbxwin32\perfmon.c
+	$(CC) ..\..\..\src\libs\zbxwin32\perfmon.c /Fo"..\..\..\src\libs\zbxwin32\perfmon.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxwin32\service.o: ..\..\..\src\libs\zbxwin32\service.c
+	$(CC) ..\..\..\src\libs\zbxwin32\service.c /Fo"..\..\..\src\libs\zbxwin32\service.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\active.o: ..\..\..\src\zabbix_agent\active.c
+	$(CC) ..\..\..\src\zabbix_agent\active.c /Fo"..\..\..\src\zabbix_agent\active.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\cpustat.o: ..\..\..\src\zabbix_agent\cpustat.c
+	$(CC) ..\..\..\src\zabbix_agent\cpustat.c /Fo"..\..\..\src\zabbix_agent\cpustat.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\diskdevices.o: ..\..\..\src\zabbix_agent\diskdevices.c
+	$(CC) ..\..\..\src\zabbix_agent\diskdevices.c /Fo"..\..\..\src\zabbix_agent\diskdevices.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\eventlog.o: ..\..\..\src\zabbix_agent\eventlog.c
+	$(CC) ..\..\..\src\zabbix_agent\eventlog.c /Fo"..\..\..\src\zabbix_agent\eventlog.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\interfaces.o: ..\..\..\src\zabbix_agent\interfaces.c
+	$(CC) ..\..\..\src\zabbix_agent\interfaces.c /Fo"..\..\..\src\zabbix_agent\interfaces.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\listener.o: ..\..\..\src\zabbix_agent\listener.c
+	$(CC) ..\..\..\src\zabbix_agent\listener.c /Fo"..\..\..\src\zabbix_agent\listener.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\logfiles.o: ..\..\..\src\zabbix_agent\logfiles.c
+	$(CC) ..\..\..\src\zabbix_agent\logfiles.c /Fo"..\..\..\src\zabbix_agent\logfiles.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\perfstat.o: ..\..\..\src\zabbix_agent\perfstat.c
+	$(CC) ..\..\..\src\zabbix_agent\perfstat.c /Fo"..\..\..\src\zabbix_agent\perfstat.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\stats.o: ..\..\..\src\zabbix_agent\stats.c
+	$(CC) ..\..\..\src\zabbix_agent\stats.c /Fo"..\..\..\src\zabbix_agent\stats.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\zabbix_agentd.o: ..\..\..\src\zabbix_agent\zabbix_agentd.c
+	$(CC) ..\..\..\src\zabbix_agent\zabbix_agentd.c /Fo"..\..\..\src\zabbix_agent\zabbix_agentd.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\zbxconf.o: ..\..\..\src\zabbix_agent\zbxconf.c
+	$(CC) ..\..\..\src\zabbix_agent\zbxconf.c /Fo"..\..\..\src\zabbix_agent\zbxconf.o" $(CFLAGS)
+	
diff --git a/build/win32/project/Makefile_agent_x64 b/build/win32/project/Makefile_agent_x64
new file mode 100644
index 0000000..4a5ee75
--- /dev/null
+++ b/build/win32/project/Makefile_agent_x64
@@ -0,0 +1,188 @@
+PROGNAME = ..\..\..\bin\win64\zabbix_agentd.exe
+CC = cl.exe /nologo
+LINKER = link.exe /NOLOGO
+RC = rc.exe
+MC = mc.exe
+MT = mt.exe
+MESSAGES_H = messages.h
+INCS = /I .\ /I ..\include /I ..\..\..\include /I ..\..\..\src\zabbix_agent
+CFLAGS = $(INCS) /O2 /Ob1 /GF /FD /EHsc /MT /Gy /W3 /c /TC /D _WINDOWS /D _CONSOLE /D _MBCS /D NDEBUG /D _WIN64 /D HAVE_WINLDAP_H /D HAVE_ASSERT_H /D ZABBIX_SERVICE /D WITH_COMMON_METRICS /D WITH_SPECIFIC_METRICS /D WITH_SIMPLE_METRICS /D "_VC80_UPGRADE=0x0600"
+RESOURCE_H  = resource.res
+OBJS  = ..\..\..\src\libs\zbxcommon\alias.o ..\..\..\src\libs\zbxcommon\comms.o ..\..\..\src\libs\zbxcommon\gnuregex.o ..\..\..\src\libs\zbxcommon\misc.o ..\..\..\src\libs\zbxcommon\regexp.o ..\..\..\src\libs\zbxcommon\str.o ..\..\..\src\libs\zbxcommon\xml.o ..\..\..\src\libs\zbxcommon\zbxgetopt.o ..\..\..\src\libs\zbxcomms\comms.o ..\..\..\src\libs\zbxconf\cfg.o ..\..\..\src\libs\zbxcrypto\base64.o ..\..\..\src\libs\zbxcrypto\md5.o ..\..\..\src\libs\zbxjson\json.o ..\..\..\src\libs\zbxlog\log.o ..\..\..\src\libs\zbxplugin\zbxplugin.o ..\..\..\src\libs\zbxsys\mutexs.o ..\..\..\src\libs\zbxsys\symbols.o ..\..\..\src\libs\zbxsys\threads.o ..\..\..\src\libs\zbxsysinfo\common\common.o ..\..\..\src\libs\zbxsysinfo\common\file.o ..\..\..\src\libs\zbxsysinfo\common\http.o ..\..\..\src\libs\zbxsysinfo\common\net.o ..\..\..\src\libs\zbxsysinfo\common\system.o ..\..\..\src\libs\zbxsysinfo\simple\ntp.o ..\..\..\src\libs\zbxsysinfo\simple\simple.o ..\..\..\src\libs\zbxsysinfo\win32\cpu.o ..\..\..\src\libs\zbxsysinfo\win32\diskio.o ..\..\..\src\libs\zbxsysinfo\win32\diskspace.o ..\..\..\src\libs\zbxsysinfo\win32\inodes.o ..\..\..\src\libs\zbxsysinfo\win32\kernel.o ..\..\..\src\libs\zbxsysinfo\win32\memory.o ..\..\..\src\libs\zbxsysinfo\win32\net.o ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o ..\..\..\src\libs\zbxsysinfo\win32\proc.o ..\..\..\src\libs\zbxsysinfo\win32\sensors.o ..\..\..\src\libs\zbxsysinfo\win32\services.o ..\..\..\src\libs\zbxsysinfo\win32\swap.o ..\..\..\src\libs\zbxsysinfo\win32\uptime.o ..\..\..\src\libs\zbxsysinfo\win32\win32.o ..\..\..\src\libs\zbxsysinfo\sysinfo.o ..\..\..\src\libs\zbxwin32\perfmon.o ..\..\..\src\libs\zbxwin32\service.o ..\..\..\src\zabbix_agent\active.o ..\..\..\src\zabbix_agent\cpustat.o ..\..\..\src\zabbix_agent\diskdevices.o ..\..\..\src\zabbix_agent\eventlog.o ..\..\..\src\zabbix_agent\interfaces.o ..\..\..\src\zabbix_agent\listener.o ..\..\..\src\zabbix_agent\logfiles.o ..\..\..\src\zabbix_agent\perfstat.o ..\..\..\src\zabbix_agent\stats.o ..\..\..\src\zabbix_agent\zabbix_agentd.o ..\..\..\src\zabbix_agent\zbxconf.o
+LIBS = ws2_32.lib psapi.lib pdh.lib Wldap32.lib advapi32.lib uuid.lib
+LFLAGS = /INCREMENTAL:NO /MANIFEST /MANIFESTFILE:"zabbix_agentd.exe.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /PDB:"zabbix_agentd.pdb" /SUBSYSTEM:CONSOLE /DYNAMICBASE:NO /MACHINE:X64
+
+all: $(PROGNAME)
+
+clean:
+	del $(OBJS) $(RESOURCE_H) $(MESSAGES_H) $(PROGNAME) messages.rc MSG00001.bin zabbix_agentd.exe.manifest
+
+$(PROGNAME): $(MESSAGES_H) $(OBJS) $(RESOURCE_H)
+	$(LINKER) $(OBJS) $(RESOURCE_H) /OUT:$(PROGNAME) $(LFLAGS) $(LIBS)
+	$(MT) /outputresource:"$(PROGNAME);#1" /manifest zabbix_agentd.exe.manifest /nologo
+
+$(MESSAGES_H): messages.mc
+	$(MC) -U -s -h ".\\" -r ".\\" messages.mc
+
+$(RESOURCE_H): resource.rc
+	$(RC) /d "NDEBUG" /d "_VC80_UPGRADE=0x0600" /l 0x419 /fo"$(RESOURCE_H)" resource.rc
+	
+..\..\..\src\libs\zbxcommon\alias.o: ..\..\..\src\libs\zbxcommon\alias.c
+	$(CC) ..\..\..\src\libs\zbxcommon\alias.c /Fo"..\..\..\src\libs\zbxcommon\alias.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\comms.o: ..\..\..\src\libs\zbxcommon\comms.c
+	$(CC) ..\..\..\src\libs\zbxcommon\comms.c /Fo"..\..\..\src\libs\zbxcommon\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\gnuregex.o: ..\..\..\src\libs\zbxcommon\gnuregex.c
+	$(CC) ..\..\..\src\libs\zbxcommon\gnuregex.c /Fo"..\..\..\src\libs\zbxcommon\gnuregex.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\misc.o: ..\..\..\src\libs\zbxcommon\misc.c
+	$(CC) ..\..\..\src\libs\zbxcommon\misc.c /Fo"..\..\..\src\libs\zbxcommon\misc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\regexp.o: ..\..\..\src\libs\zbxcommon\regexp.c
+	$(CC) ..\..\..\src\libs\zbxcommon\regexp.c /Fo"..\..\..\src\libs\zbxcommon\regexp.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\str.o: ..\..\..\src\libs\zbxcommon\str.c
+	$(CC) ..\..\..\src\libs\zbxcommon\str.c /Fo"..\..\..\src\libs\zbxcommon\str.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\xml.o: ..\..\..\src\libs\zbxcommon\xml.c
+	$(CC) ..\..\..\src\libs\zbxcommon\xml.c /Fo"..\..\..\src\libs\zbxcommon\xml.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\zbxgetopt.o: ..\..\..\src\libs\zbxcommon\zbxgetopt.c
+	$(CC) ..\..\..\src\libs\zbxcommon\zbxgetopt.c /Fo"..\..\..\src\libs\zbxcommon\zbxgetopt.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcomms\comms.o: ..\..\..\src\libs\zbxcomms\comms.c
+	$(CC) ..\..\..\src\libs\zbxcomms\comms.c /Fo"..\..\..\src\libs\zbxcomms\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxconf\cfg.o: ..\..\..\src\libs\zbxconf\cfg.c
+	$(CC) ..\..\..\src\libs\zbxconf\cfg.c /Fo"..\..\..\src\libs\zbxconf\cfg.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\base64.o: ..\..\..\src\libs\zbxcrypto\base64.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\base64.c /Fo"..\..\..\src\libs\zbxcrypto\base64.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\md5.o: ..\..\..\src\libs\zbxcrypto\md5.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\md5.c /Fo"..\..\..\src\libs\zbxcrypto\md5.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxjson\json.o: ..\..\..\src\libs\zbxjson\json.c
+	$(CC) ..\..\..\src\libs\zbxjson\json.c /Fo"..\..\..\src\libs\zbxjson\json.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxlog\log.o: ..\..\..\src\libs\zbxlog\log.c
+	$(CC) ..\..\..\src\libs\zbxlog\log.c /Fo"..\..\..\src\libs\zbxlog\log.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxplugin\zbxplugin.o: ..\..\..\src\libs\zbxplugin\zbxplugin.c
+	$(CC) ..\..\..\src\libs\zbxplugin\zbxplugin.c /Fo"..\..\..\src\libs\zbxplugin\zbxplugin.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\mutexs.o: ..\..\..\src\libs\zbxsys\mutexs.c
+	$(CC) ..\..\..\src\libs\zbxsys\mutexs.c /Fo"..\..\..\src\libs\zbxsys\mutexs.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\symbols.o: ..\..\..\src\libs\zbxsys\symbols.c
+	$(CC) ..\..\..\src\libs\zbxsys\symbols.c /Fo"..\..\..\src\libs\zbxsys\symbols.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\threads.o: ..\..\..\src\libs\zbxsys\threads.c
+	$(CC) ..\..\..\src\libs\zbxsys\threads.c /Fo"..\..\..\src\libs\zbxsys\threads.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\common.o: ..\..\..\src\libs\zbxsysinfo\common\common.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\common.c /Fo"..\..\..\src\libs\zbxsysinfo\common\common.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\file.o: ..\..\..\src\libs\zbxsysinfo\common\file.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\file.c /Fo"..\..\..\src\libs\zbxsysinfo\common\file.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\http.o: ..\..\..\src\libs\zbxsysinfo\common\http.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\http.c /Fo"..\..\..\src\libs\zbxsysinfo\common\http.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\net.o: ..\..\..\src\libs\zbxsysinfo\common\net.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\net.c /Fo"..\..\..\src\libs\zbxsysinfo\common\net.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\common\system.o: ..\..\..\src\libs\zbxsysinfo\common\system.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\common\system.c /Fo"..\..\..\src\libs\zbxsysinfo\common\system.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\simple\ntp.o: ..\..\..\src\libs\zbxsysinfo\simple\ntp.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\simple\ntp.c /Fo"..\..\..\src\libs\zbxsysinfo\simple\ntp.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\simple\simple.o: ..\..\..\src\libs\zbxsysinfo\simple\simple.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\simple\simple.c /Fo"..\..\..\src\libs\zbxsysinfo\simple\simple.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\cpu.o: ..\..\..\src\libs\zbxsysinfo\win32\cpu.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\cpu.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\cpu.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\diskio.o: ..\..\..\src\libs\zbxsysinfo\win32\diskio.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\diskio.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\diskio.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\diskspace.o: ..\..\..\src\libs\zbxsysinfo\win32\diskspace.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\diskspace.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\diskspace.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\inodes.o: ..\..\..\src\libs\zbxsysinfo\win32\inodes.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\inodes.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\inodes.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\kernel.o: ..\..\..\src\libs\zbxsysinfo\win32\kernel.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\kernel.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\kernel.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\memory.o: ..\..\..\src\libs\zbxsysinfo\win32\memory.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\memory.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\memory.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\net.o: ..\..\..\src\libs\zbxsysinfo\win32\net.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\net.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\net.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o: ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\pdhmon.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\pdhmon.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\proc.o: ..\..\..\src\libs\zbxsysinfo\win32\proc.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\proc.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\proc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\sensors.o: ..\..\..\src\libs\zbxsysinfo\win32\sensors.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\sensors.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\sensors.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\services.o: ..\..\..\src\libs\zbxsysinfo\win32\services.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\services.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\services.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\swap.o: ..\..\..\src\libs\zbxsysinfo\win32\swap.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\swap.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\swap.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\uptime.o: ..\..\..\src\libs\zbxsysinfo\win32\uptime.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\uptime.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\uptime.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\win32\win32.o: ..\..\..\src\libs\zbxsysinfo\win32\win32.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\win32\win32.c /Fo"..\..\..\src\libs\zbxsysinfo\win32\win32.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsysinfo\sysinfo.o: ..\..\..\src\libs\zbxsysinfo\sysinfo.c
+	$(CC) ..\..\..\src\libs\zbxsysinfo\sysinfo.c /Fo"..\..\..\src\libs\zbxsysinfo\sysinfo.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxwin32\perfmon.o: ..\..\..\src\libs\zbxwin32\perfmon.c
+	$(CC) ..\..\..\src\libs\zbxwin32\perfmon.c /Fo"..\..\..\src\libs\zbxwin32\perfmon.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxwin32\service.o: ..\..\..\src\libs\zbxwin32\service.c
+	$(CC) ..\..\..\src\libs\zbxwin32\service.c /Fo"..\..\..\src\libs\zbxwin32\service.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\active.o: ..\..\..\src\zabbix_agent\active.c
+	$(CC) ..\..\..\src\zabbix_agent\active.c /Fo"..\..\..\src\zabbix_agent\active.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\cpustat.o: ..\..\..\src\zabbix_agent\cpustat.c
+	$(CC) ..\..\..\src\zabbix_agent\cpustat.c /Fo"..\..\..\src\zabbix_agent\cpustat.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\diskdevices.o: ..\..\..\src\zabbix_agent\diskdevices.c
+	$(CC) ..\..\..\src\zabbix_agent\diskdevices.c /Fo"..\..\..\src\zabbix_agent\diskdevices.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\eventlog.o: ..\..\..\src\zabbix_agent\eventlog.c
+	$(CC) ..\..\..\src\zabbix_agent\eventlog.c /Fo"..\..\..\src\zabbix_agent\eventlog.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\interfaces.o: ..\..\..\src\zabbix_agent\interfaces.c
+	$(CC) ..\..\..\src\zabbix_agent\interfaces.c /Fo"..\..\..\src\zabbix_agent\interfaces.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\listener.o: ..\..\..\src\zabbix_agent\listener.c
+	$(CC) ..\..\..\src\zabbix_agent\listener.c /Fo"..\..\..\src\zabbix_agent\listener.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\logfiles.o: ..\..\..\src\zabbix_agent\logfiles.c
+	$(CC) ..\..\..\src\zabbix_agent\logfiles.c /Fo"..\..\..\src\zabbix_agent\logfiles.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\perfstat.o: ..\..\..\src\zabbix_agent\perfstat.c
+	$(CC) ..\..\..\src\zabbix_agent\perfstat.c /Fo"..\..\..\src\zabbix_agent\perfstat.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\stats.o: ..\..\..\src\zabbix_agent\stats.c
+	$(CC) ..\..\..\src\zabbix_agent\stats.c /Fo"..\..\..\src\zabbix_agent\stats.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\zabbix_agentd.o: ..\..\..\src\zabbix_agent\zabbix_agentd.c
+	$(CC) ..\..\..\src\zabbix_agent\zabbix_agentd.c /Fo"..\..\..\src\zabbix_agent\zabbix_agentd.o" $(CFLAGS)
+
+..\..\..\src\zabbix_agent\zbxconf.o: ..\..\..\src\zabbix_agent\zbxconf.c
+	$(CC) ..\..\..\src\zabbix_agent\zbxconf.c /Fo"..\..\..\src\zabbix_agent\zbxconf.o" $(CFLAGS)
+	
diff --git a/build/win32/project/Makefile_get b/build/win32/project/Makefile_get
new file mode 100644
index 0000000..e8a1f44
--- /dev/null
+++ b/build/win32/project/Makefile_get
@@ -0,0 +1,64 @@
+PROGNAME = ..\..\..\bin\win32\zabbix_get.exe
+CC = cl.exe /nologo
+LINKER = link.exe /NOLOGO
+RC = rc.exe
+MC = mc.exe
+MT = mt.exe
+MESSAGES_H = messages.h
+INCS = /I .\ /I ..\include /I ..\..\..\include /I ..\..\..\src\zabbix_get
+CFLAGS = $(INCS) /O2 /Ob1 /GF /FD /EHsc /MT /Gy /W3 /c /TC /D _WINDOWS /D _CONSOLE /D _MBCS /D NDEBUG /D WIN32 /D HAVE_WINLDAP_H /D HAVE_ASSERT_H /D ZABBIX_SERVICE /D WITH_COMMON_METRICS /D WITH_SPECIFIC_METRICS /D WITH_SIMPLE_METRICS /D "_VC80_UPGRADE=0x0600"
+RESOURCE_H  = resource.res
+OBJS  = ..\..\..\src\libs\zbxcommon\comms.o ..\..\..\src\libs\zbxcommon\misc.o ..\..\..\src\libs\zbxcommon\str.o ..\..\..\src\libs\zbxcommon\xml.o ..\..\..\src\libs\zbxcommon\zbxgetopt.o ..\..\..\src\libs\zbxcomms\comms.o ..\..\..\src\libs\zbxconf\cfg.o ..\..\..\src\libs\zbxcrypto\base64.o ..\..\..\src\libs\zbxlog\log.o ..\..\..\src\libs\zbxsys\mutexs.o ..\..\..\src\libs\zbxsys\symbols.o ..\..\..\src\libs\zbxsys\threads.o ..\..\..\src\zabbix_get\zabbix_get.o
+LIBS = ws2_32.lib psapi.lib pdh.lib Wldap32.lib advapi32.lib uuid.lib
+LFLAGS = /INCREMENTAL:NO /MANIFEST /MANIFESTFILE:"zabbix_get.exe.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /PDB:"zabbix_get.pdb" /SUBSYSTEM:CONSOLE /DYNAMICBASE:NO /MACHINE:X86
+
+all: $(PROGNAME)
+
+clean:
+	del $(OBJS) $(MESSAGES_H) $(PROGNAME) messages.rc MSG00001.bin zabbix_get.exe.manifest
+
+$(PROGNAME): $(MESSAGES_H) $(OBJS) $(RESOURCE_H)
+	$(LINKER) $(OBJS) /OUT:$(PROGNAME) $(LFLAGS) $(LIBS)
+	$(MT) /outputresource:"$(PROGNAME);#1" /manifest zabbix_get.exe.manifest /nologo
+
+$(MESSAGES_H): messages.mc
+	$(MC) -U -s -h ".\\" -r ".\\" messages.mc
+
+..\..\..\src\libs\zbxcommon\comms.o: ..\..\..\src\libs\zbxcommon\comms.c
+	$(CC) ..\..\..\src\libs\zbxcommon\comms.c /Fo"..\..\..\src\libs\zbxcommon\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\misc.o: ..\..\..\src\libs\zbxcommon\misc.c
+	$(CC) ..\..\..\src\libs\zbxcommon\misc.c /Fo"..\..\..\src\libs\zbxcommon\misc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\str.o: ..\..\..\src\libs\zbxcommon\str.c
+	$(CC) ..\..\..\src\libs\zbxcommon\str.c /Fo"..\..\..\src\libs\zbxcommon\str.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\xml.o: ..\..\..\src\libs\zbxcommon\xml.c
+	$(CC) ..\..\..\src\libs\zbxcommon\xml.c /Fo"..\..\..\src\libs\zbxcommon\xml.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\zbxgetopt.o: ..\..\..\src\libs\zbxcommon\zbxgetopt.c
+	$(CC) ..\..\..\src\libs\zbxcommon\zbxgetopt.c /Fo"..\..\..\src\libs\zbxcommon\zbxgetopt.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcomms\comms.o: ..\..\..\src\libs\zbxcomms\comms.c
+	$(CC) ..\..\..\src\libs\zbxcomms\comms.c /Fo"..\..\..\src\libs\zbxcomms\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxconf\cfg.o: ..\..\..\src\libs\zbxconf\cfg.c
+	$(CC) ..\..\..\src\libs\zbxconf\cfg.c /Fo"..\..\..\src\libs\zbxconf\cfg.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\base64.o: ..\..\..\src\libs\zbxcrypto\base64.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\base64.c /Fo"..\..\..\src\libs\zbxcrypto\base64.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxlog\log.o: ..\..\..\src\libs\zbxlog\log.c
+	$(CC) ..\..\..\src\libs\zbxlog\log.c /Fo"..\..\..\src\libs\zbxlog\log.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\mutexs.o: ..\..\..\src\libs\zbxsys\mutexs.c
+	$(CC) ..\..\..\src\libs\zbxsys\mutexs.c /Fo"..\..\..\src\libs\zbxsys\mutexs.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\symbols.o: ..\..\..\src\libs\zbxsys\symbols.c
+	$(CC) ..\..\..\src\libs\zbxsys\symbols.c /Fo"..\..\..\src\libs\zbxsys\symbols.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\threads.o: ..\..\..\src\libs\zbxsys\threads.c
+	$(CC) ..\..\..\src\libs\zbxsys\threads.c /Fo"..\..\..\src\libs\zbxsys\threads.o" $(CFLAGS)
+
+..\..\..\src\zabbix_get\zabbix_get.o: ..\..\..\src\zabbix_get\zabbix_get.c
+	$(CC) ..\..\..\src\zabbix_get\zabbix_get.c /Fo"..\..\..\src\zabbix_get\zabbix_get.o" $(CFLAGS)
diff --git a/build/win32/project/Makefile_sender b/build/win32/project/Makefile_sender
new file mode 100644
index 0000000..09456ae
--- /dev/null
+++ b/build/win32/project/Makefile_sender
@@ -0,0 +1,76 @@
+PROGNAME = ..\..\..\bin\win32\zabbix_sender.exe
+CC = cl.exe /nologo
+LINKER = link.exe /NOLOGO
+RC = rc.exe
+MC = mc.exe
+MT = mt.exe
+MESSAGES_H = messages.h
+INCS = /I .\ /I ..\include /I ..\..\..\include /I ..\..\..\src\zabbix_sender
+CFLAGS = $(INCS) /O2 /Ob1 /GF /FD /EHsc /MT /Gy /W3 /c /TC /D _WINDOWS /D _CONSOLE /D _MBCS /D NDEBUG /D WIN32 /D HAVE_WINLDAP_H /D HAVE_ASSERT_H /D ZABBIX_SERVICE /D WITH_COMMON_METRICS /D WITH_SPECIFIC_METRICS /D WITH_SIMPLE_METRICS /D "_VC80_UPGRADE=0x0600"
+RESOURCE_H  = resource.res
+OBJS  = ..\..\..\src\libs\zbxcommon\alias.o ..\..\..\src\libs\zbxcommon\comms.o ..\..\..\src\libs\zbxcommon\gnuregex.o ..\..\..\src\libs\zbxcommon\misc.o ..\..\..\src\libs\zbxcommon\regexp.o ..\..\..\src\libs\zbxcommon\str.o ..\..\..\src\libs\zbxcommon\xml.o ..\..\..\src\libs\zbxcommon\zbxgetopt.o ..\..\..\src\libs\zbxcomms\comms.o ..\..\..\src\libs\zbxconf\cfg.o ..\..\..\src\libs\zbxcrypto\base64.o ..\..\..\src\libs\zbxjson\json.o ..\..\..\src\libs\zbxlog\log.o ..\..\..\src\libs\zbxsys\mutexs.o ..\..\..\src\libs\zbxsys\symbols.o ..\..\..\src\libs\zbxsys\threads.o ..\..\..\src\zabbix_sender\zabbix_sender.o
+LIBS = ws2_32.lib psapi.lib pdh.lib Wldap32.lib advapi32.lib uuid.lib
+LFLAGS = /INCREMENTAL:NO /MANIFEST /MANIFESTFILE:"zabbix_sender.exe.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /PDB:"zabbix_sender.pdb" /SUBSYSTEM:CONSOLE /DYNAMICBASE:NO /MACHINE:X86
+
+all: $(PROGNAME)
+
+clean:
+	del $(OBJS) $(MESSAGES_H) $(PROGNAME) messages.rc MSG00001.bin zabbix_sender.exe.manifest
+
+$(PROGNAME): $(MESSAGES_H) $(OBJS) $(RESOURCE_H)
+	$(LINKER) $(OBJS) /OUT:$(PROGNAME) $(LFLAGS) $(LIBS)
+	$(MT) /outputresource:"$(PROGNAME);#1" /manifest zabbix_sender.exe.manifest /nologo
+
+$(MESSAGES_H): messages.mc
+	$(MC) -U -s -h ".\\" -r ".\\" messages.mc
+
+..\..\..\src\libs\zbxcommon\alias.o: ..\..\..\src\libs\zbxcommon\alias.c
+	$(CC) ..\..\..\src\libs\zbxcommon\alias.c /Fo"..\..\..\src\libs\zbxcommon\alias.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\comms.o: ..\..\..\src\libs\zbxcommon\comms.c
+	$(CC) ..\..\..\src\libs\zbxcommon\comms.c /Fo"..\..\..\src\libs\zbxcommon\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\gnuregex.o: ..\..\..\src\libs\zbxcommon\gnuregex.c
+	$(CC) ..\..\..\src\libs\zbxcommon\gnuregex.c /Fo"..\..\..\src\libs\zbxcommon\gnuregex.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\misc.o: ..\..\..\src\libs\zbxcommon\misc.c
+	$(CC) ..\..\..\src\libs\zbxcommon\misc.c /Fo"..\..\..\src\libs\zbxcommon\misc.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\str.o: ..\..\..\src\libs\zbxcommon\str.c
+	$(CC) ..\..\..\src\libs\zbxcommon\str.c /Fo"..\..\..\src\libs\zbxcommon\str.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\regexp.o: ..\..\..\src\libs\zbxcommon\regexp.c
+	$(CC) ..\..\..\src\libs\zbxcommon\regexp.c /Fo"..\..\..\src\libs\zbxcommon\regexp.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\xml.o: ..\..\..\src\libs\zbxcommon\xml.c
+	$(CC) ..\..\..\src\libs\zbxcommon\xml.c /Fo"..\..\..\src\libs\zbxcommon\xml.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcommon\zbxgetopt.o: ..\..\..\src\libs\zbxcommon\zbxgetopt.c
+	$(CC) ..\..\..\src\libs\zbxcommon\zbxgetopt.c /Fo"..\..\..\src\libs\zbxcommon\zbxgetopt.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcomms\comms.o: ..\..\..\src\libs\zbxcomms\comms.c
+	$(CC) ..\..\..\src\libs\zbxcomms\comms.c /Fo"..\..\..\src\libs\zbxcomms\comms.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxconf\cfg.o: ..\..\..\src\libs\zbxconf\cfg.c
+	$(CC) ..\..\..\src\libs\zbxconf\cfg.c /Fo"..\..\..\src\libs\zbxconf\cfg.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxcrypto\base64.o: ..\..\..\src\libs\zbxcrypto\base64.c
+	$(CC) ..\..\..\src\libs\zbxcrypto\base64.c /Fo"..\..\..\src\libs\zbxcrypto\base64.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxjson\json.o: ..\..\..\src\libs\zbxjson\json.c
+	$(CC) ..\..\..\src\libs\zbxjson\json.c /Fo"..\..\..\src\libs\zbxjson\json.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxlog\log.o: ..\..\..\src\libs\zbxlog\log.c
+	$(CC) ..\..\..\src\libs\zbxlog\log.c /Fo"..\..\..\src\libs\zbxlog\log.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\mutexs.o: ..\..\..\src\libs\zbxsys\mutexs.c
+	$(CC) ..\..\..\src\libs\zbxsys\mutexs.c /Fo"..\..\..\src\libs\zbxsys\mutexs.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\symbols.o: ..\..\..\src\libs\zbxsys\symbols.c
+	$(CC) ..\..\..\src\libs\zbxsys\symbols.c /Fo"..\..\..\src\libs\zbxsys\symbols.o" $(CFLAGS)
+
+..\..\..\src\libs\zbxsys\threads.o: ..\..\..\src\libs\zbxsys\threads.c
+	$(CC) ..\..\..\src\libs\zbxsys\threads.c /Fo"..\..\..\src\libs\zbxsys\threads.o" $(CFLAGS)
+
+..\..\..\src\zabbix_sender\zabbix_sender.o: ..\..\..\src\zabbix_sender\zabbix_sender.c
+	$(CC) ..\..\..\src\zabbix_sender\zabbix_sender.c /Fo"..\..\..\src\zabbix_sender\zabbix_sender.o" $(CFLAGS)
diff --git a/configure.in b/configure.in
index 0c9a621..5128f07 100644
--- a/configure.in
+++ b/configure.in
@@ -1064,7 +1064,7 @@ dnl Check for libLDAP [by default - skip]
 LIBLDAP_CHECK_CONFIG([no])
 if test "x$want_ldap" = "xyes"; then
 	if test "x$found_ldap" != "xyes"; then
-		AC_MSG_ERROR([Invalid LDAP directory - unable to find ldap.h "${found_ldap}"])
+		AC_MSG_ERROR([Invalid LDAP directory - unable to find ldap.h])
 	fi
 fi
 CFLAGS="${CFLAGS} ${LDAP_CPPFLAGS}"
@@ -1075,7 +1075,7 @@ dnl Check for libOpenIPMI [by default - skip]
 LIBOPENIPMI_CHECK_CONFIG([no])
 if test "x$want_openipmi" = "xyes"; then
 	if test "x$found_openipmi" != "xyes"; then
-		AC_MSG_ERROR([Invalid OPENIPMI directory - unable to find ipmiif.h "${found_openipmi}"])
+		AC_MSG_ERROR([Invalid OPENIPMI directory - unable to find ipmiif.h])
 	else
 		have_ipmi="openipmi"
 	fi
diff --git a/create/data/data.sql b/create/data/data.sql
index 38a6540..1727b3c 100644
--- a/create/data/data.sql
+++ b/create/data/data.sql
@@ -49,6 +49,7 @@ INSERT INTO usrgrp VALUES (5,'WEB administrators',0,0);
 INSERT INTO usrgrp VALUES (6,'Head of IT department',0,0);
 INSERT INTO usrgrp VALUES (7,'Zabbix administrators',0,0);
 INSERT INTO usrgrp VALUES (8,'Guests',0,0);
+INSERT INTO usrgrp VALUES (9,'Disabled',0,1);
 
 --
 -- Dumping data for table `users_groups`
@@ -297,20 +298,20 @@ INSERT INTO mappings VALUES (12,3,'255','No such service');
 -- Dumping data for table valuemaps
 --
 
+INSERT INTO valuemaps VALUES (1,'Service state');
+INSERT INTO valuemaps VALUES (2,'Host status');
+INSERT INTO valuemaps VALUES (3,'Windows service state');
 INSERT INTO valuemaps VALUES (4,'APC Battery Replacement Status');
 INSERT INTO valuemaps VALUES (5,'APC Battery Status');
-INSERT INTO valuemaps VALUES (7,'Dell Open Manage System Status');
-INSERT INTO valuemaps VALUES (2,'Host status');
 INSERT INTO valuemaps VALUES (6,'HP Insight System Status');
-INSERT INTO valuemaps VALUES (1,'Service state');
-INSERT INTO valuemaps VALUES (3,'Windows service state');
+INSERT INTO valuemaps VALUES (7,'Dell Open Manage System Status');
 
 --
 -- Dumping data for table `groups`
 --
 
-INSERT INTO groups VALUES (2,'Linux servers');
 INSERT INTO groups VALUES (1,'Templates');
+INSERT INTO groups VALUES (2,'Linux servers');
 INSERT INTO groups VALUES (3,'Windows servers');
 INSERT INTO groups VALUES (4,'ZABBIX Servers');
 
@@ -322,29 +323,45 @@ INSERT INTO hosts_groups VALUES (1,10001,1);
 INSERT INTO hosts_groups VALUES (2,10002,1);
 INSERT INTO hosts_groups VALUES (3,10003,1);
 INSERT INTO hosts_groups VALUES (4,10004,1);
-INSERT INTO hosts_groups VALUES (5,10007,1);
-INSERT INTO hosts_groups VALUES (6,10017,4);
-INSERT INTO hosts_groups VALUES (7,10018,1);
-INSERT INTO hosts_groups VALUES (8,10019,1);
-INSERT INTO hosts_groups VALUES (9,10020,1);
-INSERT INTO hosts_groups VALUES (10,10021,1);
-INSERT INTO hosts_groups VALUES (11,10022,1);
-INSERT INTO hosts_groups VALUES (12,10024,1);
-INSERT INTO hosts_groups VALUES (15,10027,1);
-INSERT INTO hosts_groups VALUES (16,10031,1);
-INSERT INTO hosts_groups VALUES (19,10032,1);
-INSERT INTO hosts_groups VALUES (22,10033,1);
-INSERT INTO hosts_groups VALUES (23,10034,1);
-INSERT INTO hosts_groups VALUES (24,10035,1);
-INSERT INTO hosts_groups VALUES (26,10036,1);
-INSERT INTO hosts_groups VALUES (28,10038,1);
-INSERT INTO hosts_groups VALUES (29,10039,1);
-INSERT INTO hosts_groups VALUES (41,10040,1);
-INSERT INTO hosts_groups VALUES (42,10041,1);
-INSERT INTO hosts_groups VALUES (37,10042,1);
-INSERT INTO hosts_groups VALUES (38,10043,1);
-INSERT INTO hosts_groups VALUES (43,10044,1);
+INSERT INTO hosts_groups VALUES (7,10007,1);
+INSERT INTO hosts_groups VALUES (8,10008,1);
+INSERT INTO hosts_groups VALUES (9,10009,1);
+INSERT INTO hosts_groups VALUES (10,10010,1);
+INSERT INTO hosts_groups VALUES (11,10011,1);
+INSERT INTO hosts_groups VALUES (12,10012,1);
+INSERT INTO hosts_groups VALUES (13,10013,1);
+INSERT INTO hosts_groups VALUES (14,10014,1);
+INSERT INTO hosts_groups VALUES (15,10015,1);
+INSERT INTO hosts_groups VALUES (16,10016,1);
+INSERT INTO hosts_groups VALUES (17,10017,4);
+INSERT INTO hosts_groups VALUES (18,10018,1);
+INSERT INTO hosts_groups VALUES (19,10019,1);
+INSERT INTO hosts_groups VALUES (20,10020,1);
+INSERT INTO hosts_groups VALUES (21,10021,1);
+INSERT INTO hosts_groups VALUES (22,10022,1);
+INSERT INTO hosts_groups VALUES (23,10023,1);
+INSERT INTO hosts_groups VALUES (24,10024,1);
+INSERT INTO hosts_groups VALUES (25,10025,1);
+INSERT INTO hosts_groups VALUES (26,10026,1);
+INSERT INTO hosts_groups VALUES (27,10027,1);
+INSERT INTO hosts_groups VALUES (28,10028,1);
+INSERT INTO hosts_groups VALUES (29,10029,1);
+INSERT INTO hosts_groups VALUES (30,10030,1);
+INSERT INTO hosts_groups VALUES (31,10031,1);
+INSERT INTO hosts_groups VALUES (32,10032,1);
+INSERT INTO hosts_groups VALUES (33,10033,1);
+INSERT INTO hosts_groups VALUES (34,10034,1);
+INSERT INTO hosts_groups VALUES (35,10035,1);
+INSERT INTO hosts_groups VALUES (36,10036,1);
+INSERT INTO hosts_groups VALUES (38,10038,1);
+INSERT INTO hosts_groups VALUES (39,10039,1);
+INSERT INTO hosts_groups VALUES (40,10040,1);
+INSERT INTO hosts_groups VALUES (41,10041,1);
+INSERT INTO hosts_groups VALUES (42,10042,1);
+INSERT INTO hosts_groups VALUES (43,10043,1);
+INSERT INTO hosts_groups VALUES (44,10044,1);
 INSERT INTO hosts_groups VALUES (45,10045,1);
+INSERT INTO hosts_groups VALUES (46,10046,1);
 
 --
 -- Dumping data for table `help_items`
@@ -392,7 +409,7 @@ insert into help_items values(0,'net.tcp.dns[ip, zone]','Checks if DNS service i
 insert into help_items values(0,'net.tcp.listen[port]','Checks if this port is in LISTEN state. 0 - it is not, 1 - it is in LISTEN state.');
 insert into help_items values(0,'net.tcp.port[&lt;ip&gt;, port]','Check, if it is possible to make TCP connection to the port number. 0 - cannot connect, 1 - can connect. IP address is optional. If ip is missing, 127.0.0.1 is used. Example: net.tcp.port[,80]');
 insert into help_items values(0,'net.tcp.service[service &lt;,ip&gt; &lt;,port&gt;]','Check if service server is running and accepting connections. 0 - service is down, 1 - service is running. If ip is missing 127.0.0.1 is used. If port number is missing, default service port is used. Example: net.tcp.service[ftp,,45].');
-insert into help_items values(0,'net.tcp.service.perf[service &lt;,ip&gt; &lt;,port&gt;]','Check performance of service server. 0 - service server is down, sec - number of seconds spent on connection to the service server. If ip is missing 127.0.0.1 is used.  If port number is missing, default service port is used.');
+insert into help_items values(0,'net.tcp.service.perf[service &lt;,ip&gt; &lt;,port&gt;]','Check performance of service &quot;service&quot;. 0 - service is down, sec - number of seconds spent on connection to the service. If ip is missing 127.0.0.1 is used.  If port number is missing, default service port is used.');
 insert into help_items values(0,'proc.mem[&lt;name&gt; &lt;,user&gt; &lt;,mode&gt;]','Memory used by process with name name running under user user. Memory used by processes. Process name, user and mode is optional. If name or user is missing all processes will be calculated. If mode is missing sum is used.  Examples: proc.mem[,root]');
 insert into help_items values(0,'proc.num[&lt;name&gt; &lt;,user&gt; &lt;,state&gt;]','Number of processes with name name running under user user having state state. Process name, user and state are optional. Example: proc.num[,root]');
 insert into help_items values(0,'system.cpu.intr','Device interrupts.');
@@ -744,38 +761,38 @@ INSERT INTO items VALUES (17205,4,'public','1.3.6.1.2.1.5.24.0',161,10007,'icmpO
 INSERT INTO items VALUES (17206,4,'public','1.3.6.1.2.1.5.25.0',161,10007,'icmpOutAddrMasks','icmpOutAddrMasks',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17207,4,'public','1.3.6.1.2.1.5.26.0',161,10007,'icmpOutAddrMaskReps','icmpOutAddrMaskReps',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17208,4,'public','1.3.6.1.2.1.5.20.0',161,10007,'icmpOutRedirects','icmpOutRedirects',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17318,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17320,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17322,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17324,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17326,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17328,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17330,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17332,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17334,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17336,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17338,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17340,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17342,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17344,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17346,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17348,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17350,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17352,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17354,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17356,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17358,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17360,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17362,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17318,0,'','',161,10001,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17320,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17322,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17324,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17326,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17328,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17330,0,'','',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17332,0,'','',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17334,0,'','',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17336,0,'','',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17338,0,'','',161,10001,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17340,0,'','',161,10001,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17342,0,'','',161,10001,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17344,0,'','',161,10001,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17346,0,'','',161,10001,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17348,0,'','',161,10001,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17350,0,'','',161,10001,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17352,0,'','',161,10001,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17354,0,'','',161,10001,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17356,0,'','',161,10001,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17358,0,'','',161,10001,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17360,0,'','',161,10001,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17362,0,'','',161,10001,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17371,3,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10004,'ICMP ping','icmpping',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,1,'','','');
-INSERT INTO items VALUES (17373,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10001,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17397,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'Service state of DHCP client ($1)','service_state[Dhcp]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (17399,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'Number of threads','perf_counter[\\System\\threads]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17401,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'File read bytes per second','perf_counter[\\System\\File Read Bytes/sec]',30,90,365,0,NULL,NULL,NULL,0,0,'','Bps',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17403,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'File write bytes per second','perf_counter[\\System\\File Write Bytes/sec]',30,90,365,0,NULL,NULL,NULL,0,0,'','Bps',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17405,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'Average disk read queue length','perf_counter[\\Physical Disk(_Total)\\Avg. Disk Read Queue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17409,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'Average disk read queue length','perf_counter[\\PhysicalDisk(_Total)\\Avg. Disk Read QUeue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17411,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10002,'Average disk write queue length','perf_counter[\\PhysicalDisk(_Total)\\Avg. Disk Write Queue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17373,0,'','',161,10001,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17397,0,'','',161,10002,'Service state of DHCP client ($1)','service_state[Dhcp]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (17399,0,'','',161,10002,'Number of threads','perf_counter[\\System\\threads]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17401,0,'','',161,10002,'File read bytes per second','perf_counter[\\System\\File Read Bytes/sec]',30,90,365,0,NULL,NULL,NULL,0,0,'','Bps',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17403,0,'','',161,10002,'File write bytes per second','perf_counter[\\System\\File Write Bytes/sec]',30,90,365,0,NULL,NULL,NULL,0,0,'','Bps',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17405,0,'','',161,10002,'Average disk read queue length','perf_counter[\\Physical Disk(_Total)\\Avg. Disk Read Queue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17409,0,'','',161,10002,'Average disk read queue length','perf_counter[\\PhysicalDisk(_Total)\\Avg. Disk Read QUeue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17411,0,'','',161,10002,'Average disk write queue length','perf_counter[\\PhysicalDisk(_Total)\\Avg. Disk Write Queue Length]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17412,0,'','',161,10008,'Ping to the server (TCP)','agent.ping',30,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,1,'','','');
 INSERT INTO items VALUES (17413,0,'','',161,10008,'Version of zabbix_agent(d) running','agent.version',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17414,0,'','',161,10008,'Size of $1','vfs.file.size[/var/log/syslog]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -807,19 +824,19 @@ INSERT INTO items VALUES (17439,0,'','',161,10008,'Temperature of mainboard','se
 INSERT INTO items VALUES (17440,0,'','',161,10008,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17441,0,'','',161,10008,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17442,0,'','',161,10008,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17443,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17443,0,'','',161,10008,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17444,0,'','',161,10008,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17445,0,'','',161,10008,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17446,0,'','',161,10008,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17447,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17448,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17449,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17450,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17451,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17447,0,'','',161,10008,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17448,0,'','',161,10008,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17449,0,'','',161,10008,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17450,0,'','',161,10008,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17451,0,'','',161,10008,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17452,0,'','',161,10008,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17453,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17453,0,'','',161,10008,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17454,0,'','',161,10008,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17455,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17455,0,'','',161,10008,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17456,0,'','',161,10008,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17457,0,'','',161,10008,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17458,0,'','',161,10008,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -831,47 +848,47 @@ INSERT INTO items VALUES (17463,0,'','',161,10008,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17464,0,'','',161,10008,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17465,0,'','',161,10008,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17466,0,'','',161,10008,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17467,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17467,0,'','',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17468,0,'','',161,10008,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17469,0,'','',161,10008,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17470,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17470,0,'','',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17471,0,'','',161,10008,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17472,0,'','',161,10008,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17473,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17473,0,'','',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17474,0,'','',161,10008,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17475,0,'','',161,10008,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17476,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17476,0,'','',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17477,0,'','',161,10008,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17478,0,'','',161,10008,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17479,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17479,0,'','',161,10008,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17480,0,'','',161,10008,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17481,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17482,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17483,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17482,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17483,0,'','',161,10008,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17484,0,'','',161,10008,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17485,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17486,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17487,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17487,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17488,0,'','',161,10008,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17489,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17490,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17491,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17492,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17491,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17492,0,'','',161,10008,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17493,0,'','',161,10008,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17494,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17495,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17496,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17497,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17496,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17497,0,'','',161,10008,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17498,0,'','',161,10008,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17499,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17500,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17501,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17502,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17501,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17502,0,'','',161,10008,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17503,0,'','',161,10008,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17504,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17505,0,'','',161,10008,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17506,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17507,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10008,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17506,0,'','',161,10008,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17507,0,'','',161,10008,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17508,0,'','',161,10008,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17509,0,'','',161,10008,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17510,0,'','',161,10008,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -909,19 +926,19 @@ INSERT INTO items VALUES (17541,0,'','',161,10009,'Temperature of mainboard','se
 INSERT INTO items VALUES (17542,0,'','',161,10009,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17543,0,'','',161,10009,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17544,0,'','',161,10009,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17545,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17545,0,'','',161,10009,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17546,0,'','',161,10009,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17547,0,'','',161,10009,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17548,0,'','',161,10009,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17549,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17550,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17551,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17552,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17553,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17549,0,'','',161,10009,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17550,0,'','',161,10009,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17551,0,'','',161,10009,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17552,0,'','',161,10009,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17553,0,'','',161,10009,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17554,0,'','',161,10009,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17555,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17555,0,'','',161,10009,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17556,0,'','',161,10009,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17557,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17557,0,'','',161,10009,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17558,0,'','',161,10009,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17559,0,'','',161,10009,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17560,0,'','',161,10009,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -933,47 +950,47 @@ INSERT INTO items VALUES (17565,0,'','',161,10009,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17566,0,'','',161,10009,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17567,0,'','',161,10009,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17568,0,'','',161,10009,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17569,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17569,0,'','',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17570,0,'','',161,10009,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17571,0,'','',161,10009,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17572,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17572,0,'','',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17573,0,'','',161,10009,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17574,0,'','',161,10009,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17575,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17575,0,'','',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17576,0,'','',161,10009,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17577,0,'','',161,10009,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17578,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17578,0,'','',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17579,0,'','',161,10009,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17580,0,'','',161,10009,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17581,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17581,0,'','',161,10009,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17582,0,'','',161,10009,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17583,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17584,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17585,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17584,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17585,0,'','',161,10009,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17586,0,'','',161,10009,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17587,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17588,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17589,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17589,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17590,0,'','',161,10009,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17591,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17592,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17593,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17594,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17593,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17594,0,'','',161,10009,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17595,0,'','',161,10009,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17596,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17597,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17598,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17599,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17598,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17599,0,'','',161,10009,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17600,0,'','',161,10009,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17601,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17602,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17603,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17604,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17603,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17604,0,'','',161,10009,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17605,0,'','',161,10009,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17606,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17607,0,'','',161,10009,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17608,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17609,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10009,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17608,0,'','',161,10009,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17609,0,'','',161,10009,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17610,0,'','',161,10009,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17611,0,'','',161,10009,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17612,0,'','',161,10009,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1011,19 +1028,19 @@ INSERT INTO items VALUES (17643,0,'','',161,10010,'Temperature of mainboard','se
 INSERT INTO items VALUES (17644,0,'','',161,10010,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17645,0,'','',161,10010,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17646,0,'','',161,10010,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17647,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17647,0,'','',161,10010,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17648,0,'','',161,10010,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17649,0,'','',161,10010,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17650,0,'','',161,10010,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17651,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17652,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17653,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17654,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17655,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17651,0,'','',161,10010,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17652,0,'','',161,10010,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17653,0,'','',161,10010,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17654,0,'','',161,10010,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17655,0,'','',161,10010,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17656,0,'','',161,10010,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17657,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17657,0,'','',161,10010,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17658,0,'','',161,10010,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17659,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17659,0,'','',161,10010,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17660,0,'','',161,10010,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17661,0,'','',161,10010,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17662,0,'','',161,10010,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1035,47 +1052,47 @@ INSERT INTO items VALUES (17667,0,'','',161,10010,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17668,0,'','',161,10010,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17669,0,'','',161,10010,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17670,0,'','',161,10010,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17671,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17671,0,'','',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17672,0,'','',161,10010,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17673,0,'','',161,10010,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17674,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17674,0,'','',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17675,0,'','',161,10010,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17676,0,'','',161,10010,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17677,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17677,0,'','',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17678,0,'','',161,10010,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17679,0,'','',161,10010,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17680,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17680,0,'','',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17681,0,'','',161,10010,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17682,0,'','',161,10010,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17683,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17683,0,'','',161,10010,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17684,0,'','',161,10010,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17685,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17686,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17687,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17686,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17687,0,'','',161,10010,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17688,0,'','',161,10010,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17689,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17690,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17691,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17691,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17692,0,'','',161,10010,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17693,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17694,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17695,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17696,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17695,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17696,0,'','',161,10010,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17697,0,'','',161,10010,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17698,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17699,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17700,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17701,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17700,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17701,0,'','',161,10010,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17702,0,'','',161,10010,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17703,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17704,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17705,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17706,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17705,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17706,0,'','',161,10010,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17707,0,'','',161,10010,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17708,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17709,0,'','',161,10010,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17710,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17711,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10010,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17710,0,'','',161,10010,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17711,0,'','',161,10010,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17712,0,'','',161,10010,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17713,0,'','',161,10010,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17714,0,'','',161,10010,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1113,19 +1130,19 @@ INSERT INTO items VALUES (17745,0,'','',161,10011,'Temperature of mainboard','se
 INSERT INTO items VALUES (17746,0,'','',161,10011,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17747,0,'','',161,10011,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17748,0,'','',161,10011,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17749,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17749,0,'','',161,10011,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17750,0,'','',161,10011,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17751,0,'','',161,10011,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17752,0,'','',161,10011,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17753,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17754,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17755,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17756,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17757,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17753,0,'','',161,10011,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17754,0,'','',161,10011,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17755,0,'','',161,10011,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17756,0,'','',161,10011,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17757,0,'','',161,10011,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17758,0,'','',161,10011,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17759,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17759,0,'','',161,10011,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17760,0,'','',161,10011,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17761,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17761,0,'','',161,10011,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17762,0,'','',161,10011,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17763,0,'','',161,10011,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17764,0,'','',161,10011,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1137,47 +1154,47 @@ INSERT INTO items VALUES (17769,0,'','',161,10011,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17770,0,'','',161,10011,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17771,0,'','',161,10011,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17772,0,'','',161,10011,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17773,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17773,0,'','',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17774,0,'','',161,10011,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17775,0,'','',161,10011,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17776,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17776,0,'','',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17777,0,'','',161,10011,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17778,0,'','',161,10011,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17779,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17779,0,'','',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17780,0,'','',161,10011,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17781,0,'','',161,10011,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17782,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17782,0,'','',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17783,0,'','',161,10011,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17784,0,'','',161,10011,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17785,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17785,0,'','',161,10011,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17786,0,'','',161,10011,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17787,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17788,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17789,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17788,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17789,0,'','',161,10011,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17790,0,'','',161,10011,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17791,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17792,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17793,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17793,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17794,0,'','',161,10011,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17795,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17796,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17797,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17798,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17797,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17798,0,'','',161,10011,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17799,0,'','',161,10011,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17800,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17801,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17802,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17803,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17802,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17803,0,'','',161,10011,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17804,0,'','',161,10011,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17805,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17806,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17807,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17808,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17807,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17808,0,'','',161,10011,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17809,0,'','',161,10011,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17810,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17811,0,'','',161,10011,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17812,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17813,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10011,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17812,0,'','',161,10011,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17813,0,'','',161,10011,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17814,0,'','',161,10011,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17815,0,'','',161,10011,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17816,0,'','',161,10011,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1215,19 +1232,19 @@ INSERT INTO items VALUES (17847,0,'','',161,10012,'Temperature of mainboard','se
 INSERT INTO items VALUES (17848,0,'','',161,10012,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17849,0,'','',161,10012,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17850,0,'','',161,10012,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17851,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17851,0,'','',161,10012,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17852,0,'','',161,10012,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17853,0,'','',161,10012,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17854,0,'','',161,10012,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17855,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17856,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17857,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17858,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17859,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17855,0,'','',161,10012,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17856,0,'','',161,10012,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17857,0,'','',161,10012,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17858,0,'','',161,10012,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17859,0,'','',161,10012,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17860,0,'','',161,10012,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17861,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17861,0,'','',161,10012,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17862,0,'','',161,10012,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17863,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17863,0,'','',161,10012,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17864,0,'','',161,10012,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17865,0,'','',161,10012,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17866,0,'','',161,10012,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1239,47 +1256,47 @@ INSERT INTO items VALUES (17871,0,'','',161,10012,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17872,0,'','',161,10012,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17873,0,'','',161,10012,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17874,0,'','',161,10012,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17875,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17875,0,'','',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17876,0,'','',161,10012,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17877,0,'','',161,10012,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17878,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17878,0,'','',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17879,0,'','',161,10012,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17880,0,'','',161,10012,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17881,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17881,0,'','',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17882,0,'','',161,10012,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17883,0,'','',161,10012,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17884,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17884,0,'','',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17885,0,'','',161,10012,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17886,0,'','',161,10012,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17887,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17887,0,'','',161,10012,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17888,0,'','',161,10012,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17889,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17890,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17891,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17890,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17891,0,'','',161,10012,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17892,0,'','',161,10012,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17893,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17894,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17895,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17895,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17896,0,'','',161,10012,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17897,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17898,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17899,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17900,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17899,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17900,0,'','',161,10012,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17901,0,'','',161,10012,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17902,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17903,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17904,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17905,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17904,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17905,0,'','',161,10012,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17906,0,'','',161,10012,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17907,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17908,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17909,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17910,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17909,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17910,0,'','',161,10012,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17911,0,'','',161,10012,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17912,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17913,0,'','',161,10012,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17914,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17915,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10012,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17914,0,'','',161,10012,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17915,0,'','',161,10012,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17916,0,'','',161,10012,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17917,0,'','',161,10012,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17918,0,'','',161,10012,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1317,19 +1334,19 @@ INSERT INTO items VALUES (17949,0,'','',161,10013,'Temperature of mainboard','se
 INSERT INTO items VALUES (17950,0,'','',161,10013,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17951,0,'','',161,10013,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17952,0,'','',161,10013,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (17953,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17953,0,'','',161,10013,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17954,0,'','',161,10013,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17955,0,'','',161,10013,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17956,0,'','',161,10013,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17957,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17958,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17959,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17960,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17961,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17957,0,'','',161,10013,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17958,0,'','',161,10013,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17959,0,'','',161,10013,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17960,0,'','',161,10013,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17961,0,'','',161,10013,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17962,0,'','',161,10013,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17963,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17963,0,'','',161,10013,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17964,0,'','',161,10013,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17965,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17965,0,'','',161,10013,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17966,0,'','',161,10013,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17967,0,'','',161,10013,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17968,0,'','',161,10013,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1341,47 +1358,47 @@ INSERT INTO items VALUES (17973,0,'','',161,10013,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (17974,0,'','',161,10013,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17975,0,'','',161,10013,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17976,0,'','',161,10013,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17977,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17977,0,'','',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17978,0,'','',161,10013,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17979,0,'','',161,10013,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17980,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17980,0,'','',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17981,0,'','',161,10013,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17982,0,'','',161,10013,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17983,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17983,0,'','',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17984,0,'','',161,10013,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17985,0,'','',161,10013,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17986,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17986,0,'','',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17987,0,'','',161,10013,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17988,0,'','',161,10013,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17989,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17989,0,'','',161,10013,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17990,0,'','',161,10013,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17991,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17992,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17993,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17992,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17993,0,'','',161,10013,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17994,0,'','',161,10013,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17995,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17996,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (17997,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (17997,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17998,0,'','',161,10013,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (17999,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18000,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18001,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18002,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18001,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18002,0,'','',161,10013,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18003,0,'','',161,10013,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18004,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18005,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18006,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18007,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18006,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18007,0,'','',161,10013,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18008,0,'','',161,10013,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18009,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18010,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18011,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18012,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18011,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18012,0,'','',161,10013,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18013,0,'','',161,10013,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18014,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18015,0,'','',161,10013,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18016,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18017,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10013,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18016,0,'','',161,10013,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18017,0,'','',161,10013,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18018,0,'','',161,10013,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18019,0,'','',161,10013,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18020,0,'','',161,10013,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1419,19 +1436,19 @@ INSERT INTO items VALUES (18051,0,'','',161,10014,'Temperature of mainboard','se
 INSERT INTO items VALUES (18052,0,'','',161,10014,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18053,0,'','',161,10014,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18054,0,'','',161,10014,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (18055,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18055,0,'','',161,10014,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18056,0,'','',161,10014,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18057,0,'','',161,10014,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18058,0,'','',161,10014,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18059,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18060,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18061,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18062,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18063,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18059,0,'','',161,10014,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18060,0,'','',161,10014,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18061,0,'','',161,10014,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18062,0,'','',161,10014,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18063,0,'','',161,10014,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18064,0,'','',161,10014,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18065,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18065,0,'','',161,10014,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18066,0,'','',161,10014,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18067,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18067,0,'','',161,10014,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18068,0,'','',161,10014,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18069,0,'','',161,10014,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18070,0,'','',161,10014,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1443,47 +1460,47 @@ INSERT INTO items VALUES (18075,0,'','',161,10014,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (18076,0,'','',161,10014,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18077,0,'','',161,10014,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18078,0,'','',161,10014,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18079,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18079,0,'','',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18080,0,'','',161,10014,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18081,0,'','',161,10014,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18082,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18082,0,'','',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18083,0,'','',161,10014,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18084,0,'','',161,10014,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18085,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18085,0,'','',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18086,0,'','',161,10014,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18087,0,'','',161,10014,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18088,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18088,0,'','',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18089,0,'','',161,10014,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18090,0,'','',161,10014,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18091,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18091,0,'','',161,10014,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18092,0,'','',161,10014,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18093,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18094,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18095,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18094,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18095,0,'','',161,10014,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18096,0,'','',161,10014,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18097,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18098,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18099,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18099,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18100,0,'','',161,10014,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18101,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18102,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18103,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18104,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18103,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18104,0,'','',161,10014,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18105,0,'','',161,10014,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18106,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18107,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18108,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18109,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18108,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18109,0,'','',161,10014,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18110,0,'','',161,10014,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18111,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18112,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18113,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18114,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18113,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18114,0,'','',161,10014,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18115,0,'','',161,10014,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18116,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18117,0,'','',161,10014,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18118,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18119,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10014,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18118,0,'','',161,10014,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18119,0,'','',161,10014,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18120,0,'','',161,10014,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18121,0,'','',161,10014,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18122,0,'','',161,10014,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1521,19 +1538,19 @@ INSERT INTO items VALUES (18153,0,'','',161,10015,'Temperature of mainboard','se
 INSERT INTO items VALUES (18154,0,'','',161,10015,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18155,0,'','',161,10015,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18156,0,'','',161,10015,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,2,'','','');
-INSERT INTO items VALUES (18157,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18157,0,'','',161,10015,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18158,0,'','',161,10015,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18159,0,'','',161,10015,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18160,0,'','',161,10015,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18161,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18162,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18163,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18164,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18165,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18161,0,'','',161,10015,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18162,0,'','',161,10015,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18163,0,'','',161,10015,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18164,0,'','',161,10015,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18165,0,'','',161,10015,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18166,0,'','',161,10015,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18167,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18167,0,'','',161,10015,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18168,0,'','',161,10015,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18169,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18169,0,'','',161,10015,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18170,0,'','',161,10015,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18171,0,'','',161,10015,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18172,0,'','',161,10015,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1545,47 +1562,47 @@ INSERT INTO items VALUES (18177,0,'','',161,10015,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (18178,0,'','',161,10015,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18179,0,'','',161,10015,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18180,0,'','',161,10015,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18181,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18181,0,'','',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18182,0,'','',161,10015,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18183,0,'','',161,10015,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18184,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18184,0,'','',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18185,0,'','',161,10015,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18186,0,'','',161,10015,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18187,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18187,0,'','',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18188,0,'','',161,10015,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18189,0,'','',161,10015,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18190,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18190,0,'','',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18191,0,'','',161,10015,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18192,0,'','',161,10015,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18193,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18193,0,'','',161,10015,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18194,0,'','',161,10015,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18195,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18196,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18197,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18196,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18197,0,'','',161,10015,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18198,0,'','',161,10015,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18199,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18200,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18201,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18201,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18202,0,'','',161,10015,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18203,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18204,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18205,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18206,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18205,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18206,0,'','',161,10015,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18207,0,'','',161,10015,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18208,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18209,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18210,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18211,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18210,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18211,0,'','',161,10015,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18212,0,'','',161,10015,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18213,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18214,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18215,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18216,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18215,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18216,0,'','',161,10015,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18217,0,'','',161,10015,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18218,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18219,0,'','',161,10015,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18220,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (18221,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10015,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18220,0,'','',161,10015,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (18221,0,'','',161,10015,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18222,0,'','',161,10015,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18223,0,'','',161,10015,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (18224,0,'','',161,10015,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
@@ -1830,19 +1847,19 @@ INSERT INTO items VALUES (18462,0,'','',161,10017,'Temperature of mainboard','se
 INSERT INTO items VALUES (18463,0,'','',161,10017,'Temperature of CPU 1of2','sensor[temp2]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','0','',0,'',10419,0,'','','');
 INSERT INTO items VALUES (18464,0,'','',161,10017,'Temperature of CPU 2of2','sensor[temp3]',30,7,365,0,NULL,NULL,NULL,0,0,'','C',0,0,NULL,'',0,'','','0','',0,'',10420,0,'','','');
 INSERT INTO items VALUES (18465,0,'','',161,10017,'Host status','status',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10061,2,'','','');
-INSERT INTO items VALUES (18466,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',17318,0,'','','');
+INSERT INTO items VALUES (18466,0,'','',161,10017,'Host boot time','system.boottime',300,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',17318,0,'','','');
 INSERT INTO items VALUES (18467,0,'','',161,10017,'Processor load15','system.cpu.load[,avg15]',20,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',10012,0,'','','');
 INSERT INTO items VALUES (18468,0,'','',161,10017,'Processor load','system.cpu.load[,avg1]',5,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',10010,0,'','','');
 INSERT INTO items VALUES (18469,0,'','',161,10017,'Processor load5','system.cpu.load[,avg5]',10,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','0','',0,'',10011,0,'','','');
-INSERT INTO items VALUES (18470,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17354,0,'','','');
-INSERT INTO items VALUES (18471,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17358,0,'','','');
-INSERT INTO items VALUES (18472,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17360,0,'','','');
-INSERT INTO items VALUES (18473,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17356,0,'','','');
-INSERT INTO items VALUES (18474,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17362,0,'','','');
+INSERT INTO items VALUES (18470,0,'','',161,10017,'CPU $2 time ($3)','system.cpu.util[,idle,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17354,0,'','','');
+INSERT INTO items VALUES (18471,0,'','',161,10017,'CPU $2 time ($3)','system.cpu.util[,nice,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17358,0,'','','');
+INSERT INTO items VALUES (18472,0,'','',161,10017,'CPU $2 time ($3)','system.cpu.util[,system,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17360,0,'','','');
+INSERT INTO items VALUES (18473,0,'','',161,10017,'CPU user time (avg1)','system.cpu.util[,user,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17356,0,'','','');
+INSERT INTO items VALUES (18474,0,'','',161,10017,'CPU $2 time ($3)','system.cpu.util[,wait,avg1]',10,90,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',17362,0,'','','');
 INSERT INTO items VALUES (18475,0,'','',161,10017,'Host name','system.hostname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','0','',0,'',10057,0,'','','');
-INSERT INTO items VALUES (18476,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',17352,0,'','','');
+INSERT INTO items VALUES (18476,0,'','',161,10017,'Host local time','system.localtime',30,90,365,0,NULL,NULL,NULL,0,3,'','unixtime',0,0,NULL,'',0,'','','1','',0,'',17352,0,'','','');
 INSERT INTO items VALUES (18477,0,'','',161,10017,'Free swap space','system.swap.size[,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','0','',0,'',10014,0,'','','');
-INSERT INTO items VALUES (18478,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17350,0,'','','');
+INSERT INTO items VALUES (18478,0,'','',161,10017,'Free swap space in %','system.swap.size[,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17350,0,'','','');
 INSERT INTO items VALUES (18479,0,'','',161,10017,'Total swap space','system.swap.size[,total]',1800,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','0','',0,'',10030,0,'','','');
 INSERT INTO items VALUES (18480,0,'','',161,10017,'Host information','system.uname',1800,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','0','',0,'',10058,0,'','','');
 INSERT INTO items VALUES (18481,0,'','',161,10017,'Host uptime (in sec)','system.uptime',300,7,365,0,NULL,NULL,NULL,0,3,'','uptime',0,0,NULL,'',0,'','','0','',0,'',10025,0,'','','');
@@ -1854,47 +1871,47 @@ INSERT INTO items VALUES (18486,0,'','',161,10017,'Checksum of $1','vfs.file.cks
 INSERT INTO items VALUES (18487,0,'','',161,10017,'Checksum of $1','vfs.file.cksum[/usr/sbin/sshd]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10038,0,'','','');
 INSERT INTO items VALUES (18488,0,'','',161,10017,'Checksum of $1','vfs.file.cksum[/vmlinuz]',600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10018,0,'','','');
 INSERT INTO items VALUES (18489,0,'','',161,10017,'Free number of inodes on $1','vfs.fs.inode[/,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10005,0,'','','');
-INSERT INTO items VALUES (18490,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17330,0,'','','');
+INSERT INTO items VALUES (18490,0,'','',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17330,0,'','','');
 INSERT INTO items VALUES (18491,0,'','',161,10017,'Total number of inodes on $1','vfs.fs.inode[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10062,0,'','','');
 INSERT INTO items VALUES (18492,0,'','',161,10017,'Free number of inodes on $1','vfs.fs.inode[/home,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10022,0,'','','');
-INSERT INTO items VALUES (18493,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17332,0,'','','');
+INSERT INTO items VALUES (18493,0,'','',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17332,0,'','','');
 INSERT INTO items VALUES (18494,0,'','',161,10017,'Total number of inodes on $1','vfs.fs.inode[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10066,0,'','','');
 INSERT INTO items VALUES (18495,0,'','',161,10017,'Free number of inodes on $1','vfs.fs.inode[/opt,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10006,0,'','','');
-INSERT INTO items VALUES (18496,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17334,0,'','','');
+INSERT INTO items VALUES (18496,0,'','',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17334,0,'','','');
 INSERT INTO items VALUES (18497,0,'','',161,10017,'Total number of inodes on $1','vfs.fs.inode[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10063,0,'','','');
 INSERT INTO items VALUES (18498,0,'','',161,10017,'Free number of inodes on $1','vfs.fs.inode[/tmp,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10007,0,'','','');
-INSERT INTO items VALUES (18499,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17336,0,'','','');
+INSERT INTO items VALUES (18499,0,'','',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17336,0,'','','');
 INSERT INTO items VALUES (18500,0,'','',161,10017,'Total number of inodes on $1','vfs.fs.inode[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10064,0,'','','');
 INSERT INTO items VALUES (18501,0,'','',161,10017,'Free number of inodes on $1','vfs.fs.inode[/usr,free]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10008,0,'','','');
-INSERT INTO items VALUES (18502,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17338,0,'','','');
+INSERT INTO items VALUES (18502,0,'','',161,10017,'Free number of inodes on $1 in %','vfs.fs.inode[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17338,0,'','','');
 INSERT INTO items VALUES (18503,0,'','',161,10017,'Total number of inodes on $1','vfs.fs.inode[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','0','',0,'',10065,0,'','','');
 INSERT INTO items VALUES (18504,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10002,0,'','','');
-INSERT INTO items VALUES (18505,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17322,0,'','','');
-INSERT INTO items VALUES (18506,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17340,0,'','','');
+INSERT INTO items VALUES (18505,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17322,0,'','','');
+INSERT INTO items VALUES (18506,0,'','',161,10017,'Used disk space on $1 in %','vfs.fs.size[/,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17340,0,'','','');
 INSERT INTO items VALUES (18507,0,'','',161,10017,'Total disk space on $1','vfs.fs.size[/,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10067,0,'','','');
 INSERT INTO items VALUES (18508,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10412,0,'','','');
 INSERT INTO items VALUES (18509,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/home,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10021,0,'','','');
-INSERT INTO items VALUES (18510,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17324,0,'','','');
+INSERT INTO items VALUES (18510,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/home,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17324,0,'','','');
 INSERT INTO items VALUES (18511,0,'','',161,10017,'Total disk space on $1','vfs.fs.size[/home,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10071,0,'','','');
 INSERT INTO items VALUES (18512,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/home,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10417,0,'','','');
 INSERT INTO items VALUES (18513,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/opt,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10024,0,'','','');
-INSERT INTO items VALUES (18514,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17326,0,'','','');
-INSERT INTO items VALUES (18515,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17342,0,'','','');
+INSERT INTO items VALUES (18514,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/opt,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17326,0,'','','');
+INSERT INTO items VALUES (18515,0,'','',161,10017,'Used disk space on $1 in %','vfs.fs.size[/opt,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17342,0,'','','');
 INSERT INTO items VALUES (18516,0,'','',161,10017,'Total disk space on $1','vfs.fs.size[/opt,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10068,0,'','','');
 INSERT INTO items VALUES (18517,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/opt,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10413,0,'','','');
 INSERT INTO items VALUES (18518,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/tmp,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10003,0,'','','');
-INSERT INTO items VALUES (18519,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17328,0,'','','');
-INSERT INTO items VALUES (18520,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17344,0,'','','');
+INSERT INTO items VALUES (18519,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/tmp,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17328,0,'','','');
+INSERT INTO items VALUES (18520,0,'','',161,10017,'Used disk space on $1 in %','vfs.fs.size[/tmp,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17344,0,'','','');
 INSERT INTO items VALUES (18521,0,'','',161,10017,'Total disk space on $1','vfs.fs.size[/tmp,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10069,0,'','','');
 INSERT INTO items VALUES (18522,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/tmp,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10415,0,'','','');
 INSERT INTO items VALUES (18523,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/usr,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10004,0,'','','');
-INSERT INTO items VALUES (18524,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17320,0,'','','');
-INSERT INTO items VALUES (18525,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17346,0,'','','');
+INSERT INTO items VALUES (18524,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/usr,pfree]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17320,0,'','','');
+INSERT INTO items VALUES (18525,0,'','',161,10017,'Used disk space on $1 in %','vfs.fs.size[/usr,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17346,0,'','','');
 INSERT INTO items VALUES (18526,0,'','',161,10017,'Total disk space on $1','vfs.fs.size[/usr,total]',3600,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10070,0,'','','');
 INSERT INTO items VALUES (18527,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/usr,used]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10416,0,'','','');
 INSERT INTO items VALUES (18528,0,'','',161,10017,'Free disk space on $1','vfs.fs.size[/var,free]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',1,0,NULL,'',0,'','','1024','',0,'',10023,0,'','','');
-INSERT INTO items VALUES (18529,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17373,0,'','','');
-INSERT INTO items VALUES (18530,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10017,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17348,0,'','','');
+INSERT INTO items VALUES (18529,0,'','',161,10017,'Free disk space on $1 in %','vfs.fs.size[/var,pfree]',30,90,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17373,0,'','','');
+INSERT INTO items VALUES (18530,0,'','',161,10017,'Used disk space on $1 in %','vfs.fs.size[/var,pused]',30,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',17348,0,'','','');
 INSERT INTO items VALUES (18531,0,'','',161,10017,'Used disk space on $1','vfs.fs.size[/var,used]',30,7,365,0,NULL,NULL,NULL,0,0,'','B',1,0,NULL,'',0,'','','1024','',0,'',10414,0,'','','');
 INSERT INTO items VALUES (18532,0,'','',161,10017,'Buffers memory','vm.memory.size[buffers]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','0','',0,'',10028,0,'','','');
 INSERT INTO items VALUES (18533,0,'','',161,10017,'Cached memory','vm.memory.size[cached]',30,7,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','0','',0,'',10029,0,'','','');
@@ -4593,13 +4610,13 @@ INSERT INTO items VALUES (21225,4,'public','.1.3.6.1.2.1.1.6.0',161,10034,'sysLo
 INSERT INTO items VALUES (21226,4,'public','.1.3.6.1.2.1.1.5.0',161,10034,'sysName.0','sysName.0',60,30,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21227,4,'public','.1.3.6.1.2.1.47.1.1.1.1.2.68420352',161,10034,'systemType','systemType',1800,30,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21228,4,'public','.1.3.6.1.2.1.1.3.0',161,10034,'sysUpTime','sysUpTime',60,30,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21229,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'transactions failed per second','jmx[org.hibernate:type=statistics][OptimisticFailureCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21230,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'peak execution sql','jmx[org.hibernate:type=statistics][QueryExecutionMaxTimeQueryString]',30,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21231,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'peak execution time','jmx[org.hibernate:type=statistics][QueryExecutionMaxTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21232,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'session close count','jmx[org.hibernate:type=statistics][SessionCloseCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21233,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'session open count','jmx[org.hibernate:type=statistics][SessionOpenCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21234,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'transactions successful per second','jmx[org.hibernate:type=statistics][SuccessfulTransactionCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21235,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10035,'transactions per second','jmx[org.hibernate:type=statistics][TransactionCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21229,0,'','',161,10035,'transactions failed per second','jmx[org.hibernate:type=statistics][OptimisticFailureCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21230,0,'','',161,10035,'peak execution sql','jmx[org.hibernate:type=statistics][QueryExecutionMaxTimeQueryString]',30,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21231,0,'','',161,10035,'peak execution time','jmx[org.hibernate:type=statistics][QueryExecutionMaxTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21232,0,'','',161,10035,'session close count','jmx[org.hibernate:type=statistics][SessionCloseCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21233,0,'','',161,10035,'session open count','jmx[org.hibernate:type=statistics][SessionOpenCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21234,0,'','',161,10035,'transactions successful per second','jmx[org.hibernate:type=statistics][SuccessfulTransactionCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21235,0,'','',161,10035,'transactions per second','jmx[org.hibernate:type=statistics][TransactionCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21236,4,'public','.1.3.6.1.2.1.43.10.2.1.4.1.1',161,10036,'prtMarkerLifeCount.1.1','prtMarkerLifeCount.1.1',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21237,4,'public','.1.3.6.1.2.1.43.10.2.1.5.1.1',161,10036,'prtMarkerPowerOnCount.1.1','prtMarkerPowerOnCount.1.1',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21238,4,'public','.1.3.6.1.2.1.43.11.1.1.6.1.1',161,10036,'prtMarkerSuppliesDescription.1.1','prtMarkerSuppliesDescription.1.1',86400,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
@@ -5060,109 +5077,109 @@ INSERT INTO items VALUES (21704,4,'public','1.3.6.1.4.1.9.2.1.47.0',161,10038,'l
 INSERT INTO items VALUES (21705,4,'public','1.3.6.1.4.1.9.2.1.8.0',161,10038,'lmemFreeMem','lmemFreeMem',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21706,4,'public','1.3.6.1.4.1.9.2.1.1.0',161,10038,'lmemRomID','lmemRomID',60,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21707,4,'public','1.3.6.1.2.1.1.5.0',161,10038,'sysName','sysName',300,7,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21708,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'zapcat version','agent.version',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21709,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'classes loaded','jmx[java.lang:type=ClassLoading][LoadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21710,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'classes total loaded','jmx[java.lang:type=ClassLoading][TotalLoadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21711,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'classes unloaded','jmx[java.lang:type=ClassLoading][UnloadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21712,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'jit name','jmx[java.lang:type=Compilation][Name]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21713,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'jit time','jmx[java.lang:type=Compilation][TotalCompilationTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.0001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21714,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'objects pending finalization','jmx[java.lang:type=Memory][ObjectPendingFinalizationCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21715,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'filedescriptors max','jmx[java.lang:type=OperatingSystem][MaxFileDescriptorCount]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21716,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'filedescriptors open','jmx[java.lang:type=OperatingSystem][OpenFileDescriptorCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21717,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'vm uptime','jmx[java.lang:type=Runtime][Uptime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21718,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'vm version','jmx[java.lang:type=Runtime][VmVersion]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21719,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'threads daemon count','jmx[java.lang:type=Threading][DaemonThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21720,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'threads peak','jmx[java.lang:type=Threading][PeakThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21721,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'threads count','jmx[java.lang:type=Threading][ThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21722,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'threads started count','jmx[java.lang:type=Threading][TotalStartedThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21723,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'display environment variable','system.env[DISPLAY]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21724,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc concurrentmarksweep cycles per second','jmx[java.lang:type=GarbageCollector,name=ConcurrentMarkSweep][CollectionCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21725,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc concurrentmarksweep time','jmx[java.lang:type=GarbageCollector,name=ConcurrentMarkSweep][CollectionTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21726,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc copy cycles per second','jmx[java.lang:type=GarbageCollector,name=Copy][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21727,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc copy time','jmx[java.lang:type=GarbageCollector,name=Copy][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21728,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc marksweepcompact cycles per second','jmx[java.lang:type=GarbageCollector,name=MarkSweepCompact][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21729,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc marksweepcompact time','jmx[java.lang:type=GarbageCollector,name=MarkSweepCompact][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21730,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc parnew cycles per second','jmx[java.lang:type=GarbageCollector,name=ParNew][CollectionCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21731,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc parnew time','jmx[java.lang:type=GarbageCollector,name=ParNew][CollectionTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21732,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gs ps marksweep cycles per second','jmx[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21733,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc ps marksweep time','jmx[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21734,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc ps scavenge cycles per second','jmx[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21735,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'gc ps scavenge time','jmx[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21736,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool perm gen committed','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21737,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool perm gen max','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21738,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool perm gen used','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21739,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool code cache committed','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21740,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool code cache max','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21741,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool code cache used','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21742,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool tenured gen committed','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21743,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool tenured gen max','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21744,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool tenured gen used','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21745,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps old gen committed','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21746,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps old gen max','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21747,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps old gen used','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21748,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps perm gen committed','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21749,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps perm gen max','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21750,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool ps perm gen used','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21751,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms old gen committed','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21752,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms old gen max','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21753,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms old gen used','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21754,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms perm gen committed','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21755,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms perm gen max','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21756,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10039,'memorypool cms perm gen used','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21757,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Memory Available Bytes','perf_counter[\\Memory\\Available Bytes]',60,7,365,0,NULL,NULL,NULL,0,0,'','b',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21758,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Memory Pages\\sec','perf_counter[\\Memory\\Pages/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21759,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: MSExchangeMTA Submits','perf_counter[\\MSExchangeTransport Store Driver(_Total)\\Store/MSExchangeMTA Submits]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21760,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Page File Usage','perf_counter[\\Paging File(_Total)\\% Usage]',60,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21761,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Inbound Connections Current','perf_counter[\\SMTP Server(_Total)\\Inbound Connections Current]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21762,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Local Queue Length','perf_counter[\\SMTP Server(_Total)\\Local Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21763,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Local Retry Queue Length','perf_counter[\\SMTP Server(_Total)\\Local Retry Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21764,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Messages Received/sec','perf_counter[\\SMTP Server(_Total)\\Messages Received/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21765,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Pickup Directory Messages Retrieved/sec','perf_counter[\\SMTP Server(_Total)\\Pickup Directory Messages Retrieved/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21766,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Remote Queue Length','perf_counter[\\SMTP Server(_Total)\\Remote Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21767,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Remote Retry Queue Length','perf_counter[\\SMTP Server(_Total)\\Remote Retry Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21768,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - IMAP4','service_state[IMAP4Svc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21769,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Event','service_state[MSExchangeES]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21770,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Information Store','service_state[MSExchangeIS]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21771,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Management','service_state[MSExchangeMGMT]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21772,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - MTA Stacks','service_state[MSExchangeMTA]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21773,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - System Attendant','service_state[MSExchangeSA]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21774,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Site Replication Service','service_state[MSExchangeSRS]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21775,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Network News Transfer Protocol (NNTP)','service_state[NntpSvc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21776,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - POP3','service_state[POP3Svc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21777,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Routing Engine','service_state[RESvc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21778,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10040,'EXNG: Service State - Simple Mail Transfer Protocol (SMTP)','service_state[SMTPSVC]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21779,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Database Cache Size','perf_counter[\"\\Database(Information Store)\\Database Cache Size\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','Bytes',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21780,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Database Page Fault Stalls','perf_counter[\"\\Database(Information Store)\\Database Page Fault Stalls/sec\"]',30,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21781,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange OWA: Current Users','perf_counter[\"\\MSExchange OWA\\Current Users\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21782,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Mailbox Active Client logons','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Active Client Logons\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21783,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Messages Delivered Locally','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Local Deliveries\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21784,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Messages Sent','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Messages Sent\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21785,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Active Connections','perf_counter[\"\\MSExchangeIS\\Active Connection Count\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21786,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange IS: Active User Count','perf_counter[\"\\MSExchangeIS\\Active User Count\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21787,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Remote Queue Length','perf_counter[\"\\MSExchangeTransport Queues(_total)\\Active Remote Delivery Queue Length\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21788,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Average recipients per incoming message','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Average recipients/message\"]',20,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21789,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Connections Received','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Connections Total\"]',30,31,365,0,NULL,NULL,NULL,0,0,'','',1,2,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21790,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Messages Received','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Messages Received Total\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',1,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21791,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Average recipients per outgoing message','perf_counter[\"\\MSExchangeTransport SmtpSend(_total)\\Average Recipients/message\"]',20,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21792,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Exchange Transport: Messages Sent','perf_counter[\"\\MSExchangeTransport SmtpSend(_total)\\Messages Sent Total\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21793,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Memory: Information store','perf_counter[\"\\Process(store)\\Private Bytes\"]',60,31,365,0,NULL,NULL,NULL,0,3,'','Bytes',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21794,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: ASP.NET State','service_state[aspnet_state]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21795,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: HTTP SSL','service_state[HTTPFilter]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21796,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: IIS Admin','service_state[IISADMIN]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21797,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Active Directory Topology','service_state[MSExchangeADTopology]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21798,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Anti-spam Update','service_state[MSExchangeAntispamUpdate]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21799,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange EdgeSync','service_state[MSExchangeEdgeSync]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21800,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange File Distribution','service_state[MSExchangeFDS]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21801,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Information Store','service_state[MSExchangeIS]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21802,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Mailbox Assistants','service_state[MSExchangeMailboxAssistants]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21803,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Mail Submission','service_state[MSExchangeMailSubmission]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21804,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange POP3','service_state[MSExchangePop3]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21805,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Replication Service','service_state[MSExchangeRepl]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21806,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange System Attendant','service_state[MSExchangeSA]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21807,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Service Host','service_state[MSExchangeServiceHost]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21808,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Transport Log Search','service_state[MSExchangeTransportLogSearch]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21809,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: Exchange Transport','service_state[MSExchangeTransport]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21810,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10041,'Service State: World Wide Web Publishing','service_state[W3SVC]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21708,0,'','',161,10039,'zapcat version','agent.version',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21709,0,'','',161,10039,'classes loaded','jmx[java.lang:type=ClassLoading][LoadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21710,0,'','',161,10039,'classes total loaded','jmx[java.lang:type=ClassLoading][TotalLoadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21711,0,'','',161,10039,'classes unloaded','jmx[java.lang:type=ClassLoading][UnloadedClassCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21712,0,'','',161,10039,'jit name','jmx[java.lang:type=Compilation][Name]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21713,0,'','',161,10039,'jit time','jmx[java.lang:type=Compilation][TotalCompilationTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.0001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21714,0,'','',161,10039,'objects pending finalization','jmx[java.lang:type=Memory][ObjectPendingFinalizationCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21715,0,'','',161,10039,'filedescriptors max','jmx[java.lang:type=OperatingSystem][MaxFileDescriptorCount]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21716,0,'','',161,10039,'filedescriptors open','jmx[java.lang:type=OperatingSystem][OpenFileDescriptorCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21717,0,'','',161,10039,'vm uptime','jmx[java.lang:type=Runtime][Uptime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21718,0,'','',161,10039,'vm version','jmx[java.lang:type=Runtime][VmVersion]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21719,0,'','',161,10039,'threads daemon count','jmx[java.lang:type=Threading][DaemonThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21720,0,'','',161,10039,'threads peak','jmx[java.lang:type=Threading][PeakThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21721,0,'','',161,10039,'threads count','jmx[java.lang:type=Threading][ThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21722,0,'','',161,10039,'threads started count','jmx[java.lang:type=Threading][TotalStartedThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21723,0,'','',161,10039,'display environment variable','system.env[DISPLAY]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21724,0,'','',161,10039,'gc concurrentmarksweep cycles per second','jmx[java.lang:type=GarbageCollector,name=ConcurrentMarkSweep][CollectionCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21725,0,'','',161,10039,'gc concurrentmarksweep time','jmx[java.lang:type=GarbageCollector,name=ConcurrentMarkSweep][CollectionTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21726,0,'','',161,10039,'gc copy cycles per second','jmx[java.lang:type=GarbageCollector,name=Copy][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21727,0,'','',161,10039,'gc copy time','jmx[java.lang:type=GarbageCollector,name=Copy][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21728,0,'','',161,10039,'gc marksweepcompact cycles per second','jmx[java.lang:type=GarbageCollector,name=MarkSweepCompact][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21729,0,'','',161,10039,'gc marksweepcompact time','jmx[java.lang:type=GarbageCollector,name=MarkSweepCompact][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21730,0,'','',161,10039,'gc parnew cycles per second','jmx[java.lang:type=GarbageCollector,name=ParNew][CollectionCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21731,0,'','',161,10039,'gc parnew time','jmx[java.lang:type=GarbageCollector,name=ParNew][CollectionTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21732,0,'','',161,10039,'gs ps marksweep cycles per second','jmx[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21733,0,'','',161,10039,'gc ps marksweep time','jmx[java.lang:type=GarbageCollector,name=PS MarkSweep][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21734,0,'','',161,10039,'gc ps scavenge cycles per second','jmx[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionCount]',30,90,365,0,NULL,NULL,NULL,3,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21735,0,'','',161,10039,'gc ps scavenge time','jmx[java.lang:type=GarbageCollector,name=PS Scavenge][CollectionTime]',30,90,365,0,NULL,NULL,NULL,3,0,'','s',1,0,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21736,0,'','',161,10039,'memorypool perm gen committed','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21737,0,'','',161,10039,'memorypool perm gen max','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21738,0,'','',161,10039,'memorypool perm gen used','jmx[java.lang:type=MemoryPool,name=Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21739,0,'','',161,10039,'memorypool code cache committed','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21740,0,'','',161,10039,'memorypool code cache max','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21741,0,'','',161,10039,'memorypool code cache used','jmx[java.lang:type=MemoryPool,name=Code Cache][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21742,0,'','',161,10039,'memorypool tenured gen committed','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21743,0,'','',161,10039,'memorypool tenured gen max','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21744,0,'','',161,10039,'memorypool tenured gen used','jmx[java.lang:type=MemoryPool,name=Tenured Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21745,0,'','',161,10039,'memorypool ps old gen committed','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21746,0,'','',161,10039,'memorypool ps old gen max','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21747,0,'','',161,10039,'memorypool ps old gen used','jmx[java.lang:type=MemoryPool,name=PS Old Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21748,0,'','',161,10039,'memorypool ps perm gen committed','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21749,0,'','',161,10039,'memorypool ps perm gen max','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21750,0,'','',161,10039,'memorypool ps perm gen used','jmx[java.lang:type=MemoryPool,name=PS Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21751,0,'','',161,10039,'memorypool cms old gen committed','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21752,0,'','',161,10039,'memorypool cms old gen max','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21753,0,'','',161,10039,'memorypool cms old gen used','jmx[java.lang:type=MemoryPool,name=CMS Old Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21754,0,'','',161,10039,'memorypool cms perm gen committed','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.committed]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21755,0,'','',161,10039,'memorypool cms perm gen max','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.max]',3600,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21756,0,'','',161,10039,'memorypool cms perm gen used','jmx[java.lang:type=MemoryPool,name=CMS Perm Gen][Usage.used]',30,90,365,0,NULL,NULL,NULL,0,3,'','B',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21757,0,'','',161,10040,'EXNG: Memory Available Bytes','perf_counter[\\Memory\\Available Bytes]',60,7,365,0,NULL,NULL,NULL,0,0,'','b',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21758,0,'','',161,10040,'EXNG: Memory Pages\\sec','perf_counter[\\Memory\\Pages/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21759,0,'','',161,10040,'EXNG: MSExchangeMTA Submits','perf_counter[\\MSExchangeTransport Store Driver(_Total)\\Store/MSExchangeMTA Submits]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21760,0,'','',161,10040,'EXNG: Page File Usage','perf_counter[\\Paging File(_Total)\\% Usage]',60,7,365,0,NULL,NULL,NULL,0,0,'','%',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21761,0,'','',161,10040,'EXNG: Inbound Connections Current','perf_counter[\\SMTP Server(_Total)\\Inbound Connections Current]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21762,0,'','',161,10040,'EXNG: Local Queue Length','perf_counter[\\SMTP Server(_Total)\\Local Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21763,0,'','',161,10040,'EXNG: Local Retry Queue Length','perf_counter[\\SMTP Server(_Total)\\Local Retry Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21764,0,'','',161,10040,'EXNG: Messages Received/sec','perf_counter[\\SMTP Server(_Total)\\Messages Received/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21765,0,'','',161,10040,'EXNG: Pickup Directory Messages Retrieved/sec','perf_counter[\\SMTP Server(_Total)\\Pickup Directory Messages Retrieved/sec]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21766,0,'','',161,10040,'EXNG: Remote Queue Length','perf_counter[\\SMTP Server(_Total)\\Remote Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21767,0,'','',161,10040,'EXNG: Remote Retry Queue Length','perf_counter[\\SMTP Server(_Total)\\Remote Retry Queue Length]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21768,0,'','',161,10040,'EXNG: Service State - IMAP4','service_state[IMAP4Svc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21769,0,'','',161,10040,'EXNG: Service State - Event','service_state[MSExchangeES]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21770,0,'','',161,10040,'EXNG: Service State - Information Store','service_state[MSExchangeIS]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21771,0,'','',161,10040,'EXNG: Service State - Management','service_state[MSExchangeMGMT]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21772,0,'','',161,10040,'EXNG: Service State - MTA Stacks','service_state[MSExchangeMTA]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21773,0,'','',161,10040,'EXNG: Service State - System Attendant','service_state[MSExchangeSA]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21774,0,'','',161,10040,'EXNG: Service State - Site Replication Service','service_state[MSExchangeSRS]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21775,0,'','',161,10040,'EXNG: Service State - Network News Transfer Protocol (NNTP)','service_state[NntpSvc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21776,0,'','',161,10040,'EXNG: Service State - POP3','service_state[POP3Svc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21777,0,'','',161,10040,'EXNG: Service State - Routing Engine','service_state[RESvc]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21778,0,'','',161,10040,'EXNG: Service State - Simple Mail Transfer Protocol (SMTP)','service_state[SMTPSVC]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21779,0,'','',161,10041,'Exchange IS: Database Cache Size','perf_counter[\"\\Database(Information Store)\\Database Cache Size\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','Bytes',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21780,0,'','',161,10041,'Exchange IS: Database Page Fault Stalls','perf_counter[\"\\Database(Information Store)\\Database Page Fault Stalls/sec\"]',30,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21781,0,'','',161,10041,'Exchange OWA: Current Users','perf_counter[\"\\MSExchange OWA\\Current Users\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21782,0,'','',161,10041,'Exchange IS: Mailbox Active Client logons','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Active Client Logons\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21783,0,'','',161,10041,'Exchange IS: Messages Delivered Locally','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Local Deliveries\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21784,0,'','',161,10041,'Exchange IS: Messages Sent','perf_counter[\"\\MSExchangeIS Mailbox(_Total)\\Messages Sent\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21785,0,'','',161,10041,'Exchange IS: Active Connections','perf_counter[\"\\MSExchangeIS\\Active Connection Count\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21786,0,'','',161,10041,'Exchange IS: Active User Count','perf_counter[\"\\MSExchangeIS\\Active User Count\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21787,0,'','',161,10041,'Exchange Transport: Remote Queue Length','perf_counter[\"\\MSExchangeTransport Queues(_total)\\Active Remote Delivery Queue Length\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21788,0,'','',161,10041,'Exchange Transport: Average recipients per incoming message','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Average recipients/message\"]',20,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21789,0,'','',161,10041,'Exchange Transport: Connections Received','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Connections Total\"]',30,31,365,0,NULL,NULL,NULL,0,0,'','',1,2,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21790,0,'','',161,10041,'Exchange Transport: Messages Received','perf_counter[\"\\MSExchangeTransport SmtpReceive(_total)\\Messages Received Total\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',1,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21791,0,'','',161,10041,'Exchange Transport: Average recipients per outgoing message','perf_counter[\"\\MSExchangeTransport SmtpSend(_total)\\Average Recipients/message\"]',20,31,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21792,0,'','',161,10041,'Exchange Transport: Messages Sent','perf_counter[\"\\MSExchangeTransport SmtpSend(_total)\\Messages Sent Total\"]',60,31,365,0,NULL,NULL,NULL,0,0,'','',0,2,NULL,'',0,'','','100','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21793,0,'','',161,10041,'Memory: Information store','perf_counter[\"\\Process(store)\\Private Bytes\"]',60,31,365,0,NULL,NULL,NULL,0,3,'','Bytes',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21794,0,'','',161,10041,'Service State: ASP.NET State','service_state[aspnet_state]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21795,0,'','',161,10041,'Service State: HTTP SSL','service_state[HTTPFilter]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21796,0,'','',161,10041,'Service State: IIS Admin','service_state[IISADMIN]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21797,0,'','',161,10041,'Service State: Exchange Active Directory Topology','service_state[MSExchangeADTopology]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21798,0,'','',161,10041,'Service State: Exchange Anti-spam Update','service_state[MSExchangeAntispamUpdate]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21799,0,'','',161,10041,'Service State: Exchange EdgeSync','service_state[MSExchangeEdgeSync]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21800,0,'','',161,10041,'Service State: Exchange File Distribution','service_state[MSExchangeFDS]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21801,0,'','',161,10041,'Service State: Exchange Information Store','service_state[MSExchangeIS]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21802,0,'','',161,10041,'Service State: Exchange Mailbox Assistants','service_state[MSExchangeMailboxAssistants]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21803,0,'','',161,10041,'Service State: Exchange Mail Submission','service_state[MSExchangeMailSubmission]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21804,0,'','',161,10041,'Service State: Exchange POP3','service_state[MSExchangePop3]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21805,0,'','',161,10041,'Service State: Exchange Replication Service','service_state[MSExchangeRepl]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21806,0,'','',161,10041,'Service State: Exchange System Attendant','service_state[MSExchangeSA]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21807,0,'','',161,10041,'Service State: Exchange Service Host','service_state[MSExchangeServiceHost]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21808,0,'','',161,10041,'Service State: Exchange Transport Log Search','service_state[MSExchangeTransportLogSearch]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21809,0,'','',161,10041,'Service State: Exchange Transport','service_state[MSExchangeTransport]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21810,0,'','',161,10041,'Service State: World Wide Web Publishing','service_state[W3SVC]',120,31,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
 INSERT INTO items VALUES (21811,12,'','',161,10042,'Drive backplane temperature','drive_backplane.temperature',30,7,365,0,NULL,NULL,NULL,0,0,'','°C',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','io.t_amb');
 INSERT INTO items VALUES (21812,12,'','',161,10042,'Fan speed $1','fan_cooling[ft0.fm0.f0]',30,7,365,0,NULL,NULL,NULL,0,0,'','RPM',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','ft0.fm0.f0.speed');
 INSERT INTO items VALUES (21813,12,'','',161,10042,'Fan speed $1','fan_cooling[ft0.fm0.f1]',30,7,365,0,NULL,NULL,NULL,0,0,'','RPM',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','ft0.fm0.f1.speed');
@@ -5197,52 +5214,52 @@ INSERT INTO items VALUES (21841,12,'','',161,10042,'System board +3.3v standby',
 INSERT INTO items VALUES (21842,12,'','',161,10042,'System board +5v','system_board.5v',30,7,365,0,NULL,NULL,NULL,0,0,'','v',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','mb.v_+5v');
 INSERT INTO items VALUES (21843,12,'','',161,10042,'System board temperature','system_board.temperature',30,7,365,0,NULL,NULL,NULL,0,0,'','°C',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','mb.t_amb');
 INSERT INTO items VALUES (21844,12,'','',161,10042,'System board battery','system_board.v_bat',30,7,365,0,NULL,NULL,NULL,0,0,'','v',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','mb.v_bat');
-INSERT INTO items VALUES (21845,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'tomcat version','jmx[Catalina:type=Server][serverInfo]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21846,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21847,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21848,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21849,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21850,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21851,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 threads max','jmx[Catalina:type=ThreadPool,name=jk-8009][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21852,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 threads allocated','jmx[Catalina:type=ThreadPool,name=jk-8009][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21853,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'jk-8009 threads busy','jmx[Catalina:type=ThreadPool,name=jk-8009][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21854,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21855,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21856,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21857,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21858,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21859,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 threads max','jmx[Catalina:type=ThreadPool,name=http-8080][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21860,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 threads allocated','jmx[Catalina:type=ThreadPool,name=http-8080][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21861,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 threads busy','jmx[Catalina:type=ThreadPool,name=http-8080][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21862,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8080 gzip compression','jmx[Catalina:type=ProtocolHandler,port=8080][compression]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21863,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21864,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21865,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21866,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21867,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21868,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 threads max','jmx[Catalina:type=ThreadPool,name=http-8443][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21869,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 threads allocated','jmx[Catalina:type=ThreadPool,name=http-8443][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21870,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 threads busy','jmx[Catalina:type=ThreadPool,name=http-8443][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21871,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'http-8443 gzip compression','jmx[Catalina:type=ProtocolHandler,port=8443][compression]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21872,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'sessions / active','jmx[Catalina:type=Manager,path=/,host=localhost][activeSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21873,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'sessions / peak','jmx[Catalina:type=Manager,path=/,host=localhost][maxActiveSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21874,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10043,'sessions / rejected','jmx[Catalina:type=Manager,path=/,host=localhost][rejectedSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21875,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Database Pages','perf_counter[\"\\SQLServer:Buffer Manager\\Database pages\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21876,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Data File Size','perf_counter[\"\\SQLServer:Databases(_Total)\\Data File(s) Size (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21877,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Log File Size','perf_counter[\"\\SQLServer:Databases(_Total)\\Log File(s) Size (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21878,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Transactions per second','perf_counter[\"\\SQLServer:Databases(_Total)\\Transactions/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21879,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Number Users Connected','perf_counter[\"\\SQLServer:General Statistics\\User Connections\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21880,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Lock Waits per second','perf_counter[\"\\SQLServer:Locks(_Total)\\Lock Waits/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21881,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Number of Deadlocks per second','perf_counter[\"\\SQLServer:Locks(_Total)\\Number of Deadlocks/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21882,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Total Server Memory','perf_counter[\"\\SQLServer:Memory Manager\\Total Server Memory (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21883,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: % Processor Time','perf_counter[\"\\Process(sqlservr#1)\\% Processor Time\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21884,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Number Failed Jobs','perf_counter[\"\\SQLAgent:Jobs(_Total)\\Failed jobs\"]',3600,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
-INSERT INTO items VALUES (21885,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - Integration Services','service_state[MSDtsServer]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21886,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - Analysis Services','service_state[MSSQLServerOLAPService]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21887,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - SQL Server','service_state[MSSQLSERVER]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21888,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - Reporting Services','service_state[ReportServer]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21889,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - SQL Agent','service_state[SQLServerAgent]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
-INSERT INTO items VALUES (21890,0,'public','interfaces.ifTable.ifEntry.ifInOctets.1',161,10044,'SQL: Service State - SQL Browser','service_state[SQLBrowser]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21845,0,'','',161,10043,'tomcat version','jmx[Catalina:type=Server][serverInfo]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21846,0,'','',161,10043,'jk-8009 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21847,0,'','',161,10043,'jk-8009 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21848,0,'','',161,10043,'jk-8009 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21849,0,'','',161,10043,'jk-8009 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21850,0,'','',161,10043,'jk-8009 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=jk-8009][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21851,0,'','',161,10043,'jk-8009 threads max','jmx[Catalina:type=ThreadPool,name=jk-8009][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21852,0,'','',161,10043,'jk-8009 threads allocated','jmx[Catalina:type=ThreadPool,name=jk-8009][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21853,0,'','',161,10043,'jk-8009 threads busy','jmx[Catalina:type=ThreadPool,name=jk-8009][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21854,0,'','',161,10043,'http-8080 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21855,0,'','',161,10043,'http-8080 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21856,0,'','',161,10043,'http-8080 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21857,0,'','',161,10043,'http-8080 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21858,0,'','',161,10043,'http-8080 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8080][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21859,0,'','',161,10043,'http-8080 threads max','jmx[Catalina:type=ThreadPool,name=http-8080][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21860,0,'','',161,10043,'http-8080 threads allocated','jmx[Catalina:type=ThreadPool,name=http-8080][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21861,0,'','',161,10043,'http-8080 threads busy','jmx[Catalina:type=ThreadPool,name=http-8080][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21862,0,'','',161,10043,'http-8080 gzip compression','jmx[Catalina:type=ProtocolHandler,port=8080][compression]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21863,0,'','',161,10043,'http-8443 bytes received per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][bytesReceived]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21864,0,'','',161,10043,'http-8443 bytes sent per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][bytesSent]',30,90,365,0,NULL,NULL,NULL,0,0,'','B',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21865,0,'','',161,10043,'http-8443 requests per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][requestCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21866,0,'','',161,10043,'http-8443 errors per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][errorCount]',30,90,365,0,NULL,NULL,NULL,0,0,'','',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21867,0,'','',161,10043,'http-8443 processing time per second','jmx[Catalina:type=GlobalRequestProcessor,name=http-8443][processingTime]',30,90,365,0,NULL,NULL,NULL,0,0,'','s',1,1,NULL,'',0,'','','0.001','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21868,0,'','',161,10043,'http-8443 threads max','jmx[Catalina:type=ThreadPool,name=http-8443][maxThreads]',3600,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21869,0,'','',161,10043,'http-8443 threads allocated','jmx[Catalina:type=ThreadPool,name=http-8443][currentThreadCount]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21870,0,'','',161,10043,'http-8443 threads busy','jmx[Catalina:type=ThreadPool,name=http-8443][currentThreadsBusy]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21871,0,'','',161,10043,'http-8443 gzip compression','jmx[Catalina:type=ProtocolHandler,port=8443][compression]',3600,90,365,0,NULL,NULL,NULL,0,1,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21872,0,'','',161,10043,'sessions / active','jmx[Catalina:type=Manager,path=/,host=localhost][activeSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21873,0,'','',161,10043,'sessions / peak','jmx[Catalina:type=Manager,path=/,host=localhost][maxActiveSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21874,0,'','',161,10043,'sessions / rejected','jmx[Catalina:type=Manager,path=/,host=localhost][rejectedSessions]',30,90,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21875,0,'','',161,10044,'SQL: Database Pages','perf_counter[\"\\SQLServer:Buffer Manager\\Database pages\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21876,0,'','',161,10044,'SQL: Data File Size','perf_counter[\"\\SQLServer:Databases(_Total)\\Data File(s) Size (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21877,0,'','',161,10044,'SQL: Log File Size','perf_counter[\"\\SQLServer:Databases(_Total)\\Log File(s) Size (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21878,0,'','',161,10044,'SQL: Transactions per second','perf_counter[\"\\SQLServer:Databases(_Total)\\Transactions/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21879,0,'','',161,10044,'SQL: Number Users Connected','perf_counter[\"\\SQLServer:General Statistics\\User Connections\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21880,0,'','',161,10044,'SQL: Lock Waits per second','perf_counter[\"\\SQLServer:Locks(_Total)\\Lock Waits/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21881,0,'','',161,10044,'SQL: Number of Deadlocks per second','perf_counter[\"\\SQLServer:Locks(_Total)\\Number of Deadlocks/sec\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21882,0,'','',161,10044,'SQL: Total Server Memory','perf_counter[\"\\SQLServer:Memory Manager\\Total Server Memory (KB)\"]',300,7,365,0,NULL,NULL,NULL,0,0,'','b',1,0,NULL,'',0,'','','1024','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21883,0,'','',161,10044,'SQL: % Processor Time','perf_counter[\"\\Process(sqlservr#1)\\% Processor Time\"]',60,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21884,0,'','',161,10044,'SQL: Number Failed Jobs','perf_counter[\"\\SQLAgent:Jobs(_Total)\\Failed jobs\"]',3600,7,365,0,NULL,NULL,NULL,0,0,'','',0,0,NULL,'',0,'','','1','',0,'',0,0,'','','');
+INSERT INTO items VALUES (21885,0,'','',161,10044,'SQL: Service State - Integration Services','service_state[MSDtsServer]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21886,0,'','',161,10044,'SQL: Service State - Analysis Services','service_state[MSSQLServerOLAPService]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21887,0,'','',161,10044,'SQL: Service State - SQL Server','service_state[MSSQLSERVER]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21888,0,'','',161,10044,'SQL: Service State - Reporting Services','service_state[ReportServer]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21889,0,'','',161,10044,'SQL: Service State - SQL Agent','service_state[SQLServerAgent]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
+INSERT INTO items VALUES (21890,0,'','',161,10044,'SQL: Service State - SQL Browser','service_state[SQLBrowser]',60,7,365,0,NULL,NULL,NULL,0,3,'','',0,0,NULL,'',0,'','','1','',0,'',0,3,'','','');
 INSERT INTO items VALUES (21891,4,'public','1.3.6.1.4.1.12325.1.200.1.2.2.0',161,10045,'BadOffset','pfCounterBadOffset',500,7,30,0,NULL,NULL,NULL,0,3,'','packets',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21892,4,'public','1.3.6.1.4.1.12325.1.200.1.2.3.0',161,10045,'Fragment','pfCounterFragment',500,7,30,0,NULL,NULL,NULL,0,3,'','packets',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
 INSERT INTO items VALUES (21893,4,'public','1.3.6.1.4.1.12325.1.200.1.2.1.0',161,10045,'Match','pfCounterMatch',500,7,30,0,NULL,NULL,NULL,0,3,'','packets',0,1,NULL,'',0,'','','1','',0,'',0,0,'','','');
diff --git a/frontends/php/acknow.php b/frontends/php/acknow.php
index ce347fc..888bb6c 100644
--- a/frontends/php/acknow.php
+++ b/frontends/php/acknow.php
@@ -62,7 +62,7 @@ include_once "include/page_header.php";
 //$bulk = (count($events) > 1);
 ?>
 <?php
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY, get_current_nodeid());
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY, get_current_nodeid());
 		
 	$db_data = DBfetch(DBselect('SELECT COUNT(DISTINCT  e.eventid) as cnt'.
 			' FROM events e'.
diff --git a/frontends/php/actionconf.php b/frontends/php/actionconf.php
index 4a462c0..b81abe5 100644
--- a/frontends/php/actionconf.php
+++ b/frontends/php/actionconf.php
@@ -488,7 +488,15 @@ include_once 'include/page_header.php';
 		$cmbSource->AddItem(EVENT_SOURCE_DISCOVERY,S_DISCOVERY);
 		$form->AddItem(array(S_EVENT_SOURCE, SPACE, $cmbSource));
 
-		show_table_header(S_ACTIONS_BIG, $form);
+		$row_count = 0;
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_ACTIONS_BIG,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header, $form);
+
 		unset($form, $cmbSource);
 /* table */
 		$form = new CForm();
@@ -556,6 +564,7 @@ include_once 'include/page_header.php';
 				$operations,
 				$status
 				));	
+			$row_count++;
 		}
 
 		$tblActions->SetFooter(new CCol(array(
@@ -569,6 +578,9 @@ include_once 'include/page_header.php';
 		$form->AddItem($tblActions);
 		$form->Show();
 	}
+	if(isset($row_count))
+		zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 ?>
 <?php
 	include_once "include/page_footer.php";
diff --git a/frontends/php/audit.php b/frontends/php/audit.php
index e846cae..7508df7 100644
--- a/frontends/php/audit.php
+++ b/frontends/php/audit.php
@@ -138,7 +138,7 @@ include_once "include/page_header.php";
 	
 //	show_table_header(S_AUDIT_BIG, $frmForm);
 
-
+	$row_count = 0;
 	if(0 == $config){
 		$table = new CTableInfo();
 		$table->setHeader(array(
@@ -193,14 +193,28 @@ include_once "include/page_header.php";
 				$action,
 				$row["details"]
 			));
+			$row_count++;
 		}
-			
-		show_table_header(S_AUDIT_LOGS, $frmForm);
+		
+		
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_AUDIT_LOGS,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header, $frmForm);
 	}
 	else if(1 == $config){
 		$table = get_history_of_actions($_REQUEST["start"], PAGE_SIZE, $sql_cond);
-				
-		show_table_header(S_AUDIT_ACTIONS, $frmForm);
+		$row_count = $table->GetNumRows();		
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_AUDIT_ACTIONS,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header, $frmForm);
 	}
 
 /************************* FILTER **************************/
@@ -230,6 +244,7 @@ include_once "include/page_header.php";
 	
 	$filterForm->AddVar('filter_timesince',($_REQUEST['filter_timesince']>0)?$_REQUEST['filter_timesince']:'');
 	$filterForm->AddVar('filter_timetill',($_REQUEST['filter_timetill']>0)?$_REQUEST['filter_timetill']:'');
+	$filterForm->AddVar('config',$_REQUEST['config']);
 //*	
 	$clndr_icon = new CImg('images/general/bar/cal.gif','calendar', 16, 12, 'pointer');
 	$clndr_icon->AddAction('onclick',"javascript: var pos = getPosition(this); pos.top+=10; pos.left+=16; CLNDR['audit_since'].clndr.clndrshow(pos.top,pos.left);");
@@ -291,6 +306,7 @@ include_once "include/page_header.php";
 						));
 						
 	$filterForm->AddRow($row);
+	$row_count++;
 
 	$reset = new CButton("filter_rst",S_RESET);
 	$reset->SetType('button');
@@ -311,6 +327,8 @@ include_once "include/page_header.php";
 	$table->show();
 	
 	show_thin_table_header(SPACE,$navigation);
+	zbx_add_post_js('insert_in_element("numrows","'.--$row_count.'");');
+
 ?>
 
 <?php
diff --git a/frontends/php/chart.php b/frontends/php/chart.php
index 16a9547..74b39eb 100644
--- a/frontends/php/chart.php
+++ b/frontends/php/chart.php
@@ -59,23 +59,28 @@ include_once "include/page_header.php";
 	}
 
 	$graph = new Chart();
-	
-	$effectiveperiod = navigation_bar_calc();
 
+//	$_REQUEST['stime'] = get_request('stime',get_profile('web.item.graph.stime', null, PROFILE_TYPE_STR, $_REQUEST['itemid']));
 	$_REQUEST['period'] = get_request('period',get_profile('web.item.graph.period', ZBX_PERIOD_DEFAULT, PROFILE_TYPE_INT, $_REQUEST['itemid']));
-	if($_REQUEST['period'] >= ZBX_MIN_PERIOD){
-		update_profile('web.item.graph.period',$_REQUEST['period'], PROFILE_TYPE_INT, $_REQUEST['itemid']);
-	}
+	
+	if($_REQUEST['itemid']>0){
+		if(isset($_REQUEST['stime'])) 
+			update_profile('web.item.graph.stime',$_REQUEST['stime'], PROFILE_TYPE_STR, $_REQUEST['itemid']);
 
+		if($_REQUEST['period'] >= ZBX_MIN_PERIOD)
+			update_profile('web.item.graph.period',$_REQUEST['period'], PROFILE_TYPE_INT, $_REQUEST['itemid']);			
+	}
+	
+	$_REQUEST['period'] = navigation_bar_calc();
 	
-	if(isset($_REQUEST["period"]))		$graph->SetPeriod($_REQUEST["period"]);
-	if(isset($_REQUEST["from"]))		$graph->SetFrom($_REQUEST["from"]);
-	if(isset($_REQUEST["width"]))		$graph->SetWidth($_REQUEST["width"]);
-	if(isset($_REQUEST["height"]))		$graph->SetHeight($_REQUEST["height"]);
-	if(isset($_REQUEST["border"]))		$graph->SetBorder(0);
-	if(isset($_REQUEST["stime"]))		$graph->setSTime($_REQUEST["stime"]);
+	if(isset($_REQUEST['period']))		$graph->SetPeriod($_REQUEST['period']);
+	if(isset($_REQUEST['from']))		$graph->SetFrom($_REQUEST['from']);
+	if(isset($_REQUEST['width']))		$graph->SetWidth($_REQUEST['width']);
+	if(isset($_REQUEST['height']))		$graph->SetHeight($_REQUEST['height']);
+	if(isset($_REQUEST['border']))		$graph->SetBorder(0);
+	if(isset($_REQUEST['stime']))		$graph->setSTime($_REQUEST['stime']);
 	
-	$graph->AddItem($_REQUEST["itemid"], GRAPH_YAXIS_SIDE_RIGHT, CALC_FNC_ALL);
+	$graph->AddItem($_REQUEST['itemid'], GRAPH_YAXIS_SIDE_RIGHT, CALC_FNC_ALL);
 
 	$graph->Draw();
 ?>
diff --git a/frontends/php/chart3.php b/frontends/php/chart3.php
index fc51331..1c6e1ae 100644
--- a/frontends/php/chart3.php
+++ b/frontends/php/chart3.php
@@ -63,7 +63,7 @@ include_once 'include/page_header.php';
 		if(!$host = DBfetch(DBselect('select h.* from hosts h,items i where h.hostid=i.hostid and i.itemid='.$gitem['itemid']))){
 			fatal_error(S_NO_ITEM_DEFINED);
 		}
-		if(!uint_in_array($host['hostid'], $available_hosts)){
+		if(!isset($available_hosts[$host['hostid']])){
 			access_deny();
 		}
 	}
diff --git a/frontends/php/chart4.php b/frontends/php/chart4.php
index 29b9eca..2dc9de3 100644
--- a/frontends/php/chart4.php
+++ b/frontends/php/chart4.php
@@ -32,18 +32,22 @@ include_once "include/page_header.php";
 <?php
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$fields=array(
-		"triggerid"=>		array(T_ZBX_INT, O_MAND,P_SYS,	DB_ID,		NULL)
+		'triggerid'=>		array(T_ZBX_INT, O_MAND,P_SYS,	DB_ID,		NULL)
 	);
 
 	check_fields($fields);
 ?>
 <?php
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY);
-
-	if(!DBfetch(DBselect('SELECT DISTINCT t.triggerid FROM triggers t WHERE t.triggerid='.$_REQUEST['triggerid']))){
+	$sql = 'SELECT DISTINCT i.hostid '.
+			' FROM functions f, items i '.
+			' WHERE f.triggerid='.$_REQUEST['triggerid'].
+				' AND i.itemid=f.itemid';
+	if(!$host = DBfetch(DBselect($sql))){
 		fatal_error(S_NO_TRIGGER_DEFINED);
 	}
-					
+	
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array($host['hostid']));
+				
 	$sql = 'SELECT DISTINCT t.triggerid,t.description,t.expression, h.host,h.hostid '.
 			' FROM hosts h, items i, functions f, triggers t'.
 			' WHERE h.hostid=i.hostid '.
diff --git a/frontends/php/chart5.php b/frontends/php/chart5.php
index 2d5cb65..773d14a 100644
--- a/frontends/php/chart5.php
+++ b/frontends/php/chart5.php
@@ -42,7 +42,7 @@ include_once 'include/page_header.php';
 		fatal_error(S_NO_IT_SERVICE_DEFINED);
 	}
 
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 	
 	$sql = 'SELECT s.serviceid '.
 				' FROM services s '.
diff --git a/frontends/php/chart7.php b/frontends/php/chart7.php
index 01bcd56..23f8314 100644
--- a/frontends/php/chart7.php
+++ b/frontends/php/chart7.php
@@ -58,7 +58,7 @@ include_once "include/page_header.php";
 		if(!$host=DBfetch(DBselect('SELECT h.* FROM hosts h,items i WHERE h.hostid=i.hostid AND i.itemid='.$gitem['itemid']))){
 			fatal_error(S_NO_ITEM_DEFINED);
 		}
-		if(!uint_in_array($host['hostid'], $available_hosts)){
+		if(!isset($available_hosts[$host['hostid']])){
 			access_deny();
 		}
 	}
diff --git a/frontends/php/chart_sla.php b/frontends/php/chart_sla.php
index 652dc41..35f8917 100644
--- a/frontends/php/chart_sla.php
+++ b/frontends/php/chart_sla.php
@@ -42,7 +42,7 @@ include_once "include/page_header.php";
 		fatal_error(S_NO_IT_SERVICE_DEFINED);
 	}
 
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 	
 	$sql = 'SELECT s.* '.
 			' FROM services s '.
diff --git a/frontends/php/charts.php b/frontends/php/charts.php
index 26bbf84..d07f2aa 100644
--- a/frontends/php/charts.php
+++ b/frontends/php/charts.php
@@ -88,56 +88,76 @@ include_once 'include/page_header.php';
 		exit();
 	}
 	
-
-	if(isset($_REQUEST["graphid"]) && !isset($_REQUEST["hostid"])){
-		$_REQUEST["groupid"] = $_REQUEST["hostid"] = 0;
-	}
-
 	$_REQUEST['graphid'] = get_request('graphid', get_profile('web.charts.graphid', 0, PROFILE_TYPE_ID));
 	if(!in_node($_REQUEST['graphid'])) $_REQUEST['graphid'] = 0;
 
-	$_REQUEST["keep"] 	=	get_request('keep', 1); // possible excessed REQUEST variable !!!
-	$_REQUEST["period"] =	get_request('period',get_profile('web.graph.period', ZBX_PERIOD_DEFAULT, PROFILE_TYPE_INT, $_REQUEST['graphid']));
+//	$_REQUEST['stime'] =	get_request('stime',get_profile('web.graph.stime', null, PROFILE_TYPE_STR, $_REQUEST['graphid']));
+	$_REQUEST['period'] =	get_request('period',get_profile('web.graph.period', ZBX_PERIOD_DEFAULT, PROFILE_TYPE_INT, $_REQUEST['graphid']));
 	
 	$effectiveperiod = navigation_bar_calc();
-	
-	$options = array('allow_all_hosts','monitored_hosts','with_items','always_select_first_host');
-	if(!$ZBX_WITH_SUBNODES)	array_push($options,"only_current_node");
-	
-	validate_group_with_host(PERM_READ_ONLY,$options);
-	
+		
 	if($_REQUEST['graphid']>0){
 		$sql_from = '';
 		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=i.hostid AND hg.groupid='.$_REQUEST['groupid'];
+		if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
+			$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'];
 		}
 		
-		$sql = 'SELECT g.graphid '.
-				' FROM graphs g, graphs_items gi, items i'.$sql_from.
+		if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid'] > 0)){
+			$sql_where.= ' AND hg.hostid='.$_REQUEST['hostid'];
+		}
+		
+		$sql = 'SELECT DISTINCT hg.groupid, hg.hostid '.
+				' FROM hosts_groups hg, hosts h, graphs g, graphs_items gi, items i '.
 				' WHERE g.graphid='.$_REQUEST['graphid'].
 					' AND gi.graphid=g.graphid '.
 					' AND i.itemid=gi.itemid '.
+					' AND hg.hostid=i.hostid '.
 					$sql_where.
-					($_REQUEST['hostid']?' AND i.hostid='.$_REQUEST['hostid']:'');
+					' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.')';
 
-		$result=DBselect($sql);
-		if(!DBfetch($result)) $_REQUEST['graphid'] = 0;
+		if($host_group = DBfetch(DBselect($sql,1))){
+			if(!isset($_REQUEST['groupid']) || !isset($_REQUEST['hostid'])){
+				$_REQUEST['groupid'] = $host_group['groupid'];
+				$_REQUEST['hostid'] = $host_group['hostid'];
+			}
+			else if((($_REQUEST['groupid']!=$host_group['groupid']) && ($_REQUEST['groupid'] > 0)) || 
+					(($_REQUEST['hostid']!=$host_group['hostid']) && ($_REQUEST['hostid'] > 0)))
+			{
+				$_REQUEST['graphid'] = 0;
+			}
+		}
+		else{
+			$_REQUEST['graphid'] = 0;
+		}
 	}
 
-	if(($_REQUEST['graphid']>0) && ($_REQUEST['period'] >= ZBX_MIN_PERIOD)){
-		update_profile('web.graph.period',$_REQUEST['period'],PROFILE_TYPE_INT,$_REQUEST['graphid']);
+	if($_REQUEST['graphid']>0){
+		if(isset($_REQUEST['stime'])) 
+			update_profile('web.graph.stime',$_REQUEST['stime'], PROFILE_TYPE_STR, $_REQUEST['graphid']);
+
+		if($_REQUEST['period'] >= ZBX_MIN_PERIOD)
+			update_profile('web.graph.period',$_REQUEST['period'],PROFILE_TYPE_INT,$_REQUEST['graphid']);			
 	}
 
 	update_profile('web.charts.graphid',$_REQUEST['graphid']);
 
 	$h1 = array();
 	
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST);
+	$options = array('allow_all_hosts','monitored_hosts','wih_graphs');
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
+		
+	$params = array();
+	foreach($options as $option) $params[$option] = 1;
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);		
+
+	$available_groups= $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
 	
-	$available_graphs = get_accessible_graphs(PERM_READ_LIST, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
+	$available_graphs = get_accessible_graphs(PERM_READ_LIST, $available_hosts, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
 
 	if(($_REQUEST['graphid']>0) && ($row=DBfetch(DBselect('SELECT DISTINCT graphid, name FROM graphs WHERE graphid='.$_REQUEST['graphid'])))){
 		if(!graph_accessible($_REQUEST['graphid'])){
@@ -154,114 +174,26 @@ include_once 'include/page_header.php';
 	$p_elements = array();
 
 	$r_form = new CForm();
-	$r_form->SetMethod('get');
+	$r_form->setMethod('get');
 	
-	$r_form->AddVar('fullscreen', $_REQUEST['fullscreen']);
-
-	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-	$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
-	$cmbGraph = new CComboBox('graphid',$_REQUEST['graphid'],'submit()');
+	$r_form->addVar('fullscreen', $_REQUEST['fullscreen']);
 
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-	$cmbHosts->AddItem(0,S_ALL_SMALL);
-	$cmbGraph->AddItem(0,S_SELECT_GRAPH_DOT_DOT_DOT);
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 	
-// Selecting first group,host,graph if it's one of a kind ;)
-	if($_REQUEST['groupid'] == 0){
-		$sql = 'SELECT COUNT(DISTINCT g.groupid) as grpcount, MAX(g.groupid) as groupid'.
-				' FROM groups g, hosts_groups hg, hosts h '.
-				' WHERE '.DBcondition('g.groupid',$available_groups).
-					' AND hg.groupid=g.groupid '.
-					' AND h.hostid=hg.hostid '.
-					' AND h.status='.HOST_STATUS_MONITORED.
-					' AND EXISTS(SELECT DISTINCT i.itemid FROM items i, graphs_items gi WHERE i.hostid=h.hostid AND i.itemid=gi.itemid) ';
-
-		if($cnt_row = DBfetch(DBselect($sql))){
-			if($cnt_row['grpcount'] == 1){
-				$_REQUEST['groupid'] = $cnt_row['groupid'];
-				$cmbGroup->SetValue($_REQUEST['groupid']);
-			}
-		}
-	}
-	
-	if($_REQUEST['hostid'] == 0){
-		
-		$sql_from = '';
-		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
-		}
-		
-		$sql = 'SELECT COUNT(DISTINCT h.hostid) as hstcount, MAX(h.hostid) as hostid '.
-			' FROM hosts h '.$sql_from.
-			' WHERE h.status='.HOST_STATUS_MONITORED.
-				' AND '.DBcondition('h.hostid',$available_hosts).
-				$sql_where.
-				' AND EXISTS(SELECT DISTINCT i.itemid '.
-							' FROM items i, graphs_items gi '.
-							' WHERE i.hostid=h.hostid '.
-								' AND i.status='.ITEM_STATUS_ACTIVE.
-								' AND i.itemid=gi.itemid ) ';
-
-		if($cnt_row = DBfetch(DBselect($sql))){
-			if($cnt_row['hstcount'] == 1){
-				$_REQUEST['hostid'] = $cnt_row['hostid'];
-				$cmbHosts->SetValue($_REQUEST['hostid']);
-			}
-		}
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	
-	if($_REQUEST['graphid'] == 0){
-
-		$sql_from = '';
-		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
-		}
-		if($_REQUEST['hostid'] > 0){
-			$sql_where.= ' AND h.hostid='.$_REQUEST['hostid'];
-		}
-
-		$sql = 'SELECT COUNT(DISTINCT g.graphid) as grphcount, MAX(g.graphid) as graphid '.
-			' FROM graphs g,graphs_items gi,items i,hosts h'.$sql_from.
-			' WHERE h.status='.HOST_STATUS_MONITORED.
-				$sql_where.
-				' AND i.hostid=h.hostid '.
-				' AND i.itemid=gi.itemid '.
-				' AND g.graphid=gi.graphid '.
-				' AND '.DBcondition('g.graphid',$available_graphs);
-
-		if($cnt_row = DBfetch(DBselect($sql))){
-			if($cnt_row['grphcount'] == 1){
-				$_REQUEST['graphid'] = $cnt_row['graphid'];
-				$cmbGraph->SetValue($_REQUEST['graphid']);
-			}
-		}
+	foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+		$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 	}
-	
-//----------------------------------------------
 
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g, hosts_groups hg, hosts h '.
-			' WHERE '.DBcondition('g.groupid',$available_groups).
-				' AND hg.groupid=g.groupid '.
-				' AND h.hostid=hg.hostid '.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT DISTINCT i.itemid FROM items i, graphs_items gi WHERE i.hostid=h.hostid AND i.itemid=gi.itemid) '.
-			' ORDER BY g.name';	
-			
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbGroup->AddItem(
-				$row['groupid'],
-				get_node_name_by_elid($row['groupid']).$row["name"]
-				);
-	}
-	
-	$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
-	
+	$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+	$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));	
+		
+//---------------------------------------------_
+	$cmbGraphs = new CComboBox('graphid',$_REQUEST['graphid'],'submit()');
+	$cmbGraphs->addItem(0,S_SELECT_GRAPH_DOT_DOT_DOT);
 	
 	$sql_from = '';
 	$sql_where = '';
@@ -269,27 +201,9 @@ include_once 'include/page_header.php';
 		$sql_from .= ',hosts_groups hg ';
 		$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
 	}
-	
-	$sql='SELECT DISTINCT h.hostid,h.host '.
-		' FROM hosts h '.$sql_from.
-		' WHERE h.status='.HOST_STATUS_MONITORED.
-			' AND '.DBcondition('h.hostid',$available_hosts).
-			$sql_where.
-			' AND EXISTS(SELECT DISTINCT i.itemid '.
-						' FROM items i, graphs_items gi '.
-						' WHERE i.hostid=h.hostid '.
-							' AND i.status='.ITEM_STATUS_ACTIVE.
-							' AND gi.itemid=i.itemid) '.
-		' ORDER BY h.host';	
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbHosts->AddItem(
-			$row['hostid'],
-			get_node_name_by_elid($row['hostid']).$row['host']
-		);
+	if($_REQUEST['hostid'] > 0){
+		$sql_where.= ' AND h.hostid='.$_REQUEST['hostid'];
 	}
-
-	$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
 	
 	$sql = 'SELECT DISTINCT g.graphid,g.name '.
 		' FROM graphs g,graphs_items gi,items i,hosts h'.$sql_from.
@@ -298,20 +212,20 @@ include_once 'include/page_header.php';
 			' AND h.hostid=i.hostid '.
 			' AND h.status='.HOST_STATUS_MONITORED.
 			$sql_where.
-			($_REQUEST['hostid']?' AND h.hostid='.$_REQUEST['hostid']:'').
+			
 			' AND '.DBin_node('g.graphid').
 			' AND '.DBcondition('g.graphid',$available_graphs).
 		' ORDER BY g.name';
 
 	$result = DBselect($sql);
 	while($row=DBfetch($result)){
-		$cmbGraph->AddItem(
+		$cmbGraphs->addItem(
 				$row['graphid'],
 				get_node_name_by_elid($row['graphid']).$row['name']
 				);
 	}
 	
-	$r_form->AddItem(array(SPACE.S_GRAPH.SPACE,$cmbGraph));
+	$r_form->addItem(array(SPACE.S_GRAPH.SPACE,$cmbGraphs));
 	
 	$p_elements[] = get_table_header($h1, $r_form);
 ?>
@@ -378,7 +292,7 @@ include_once 'include/page_header.php';
 				</script>'."\n";
 		}
 		
-		$table->AddRow(new CScript($row));
+		$table->addRow(new CScript($row));
 	}
 	
 	$p_elements[] = $table;
@@ -390,25 +304,25 @@ include_once 'include/page_header.php';
 	if($_REQUEST['graphid'] > 0){
 		if(infavorites('web.favorite.graphids',$_REQUEST['graphid'],'graphid')){
 			$icon = new CDiv(SPACE,'iconminus');
-			$icon->AddOption('title',S_REMOVE_FROM.' '.S_FAVORITES);
-			$icon->AddAction('onclick',new CScript("javascript: rm4favorites('graphid','".$_REQUEST['graphid']."',0);"));
+			$icon->addOption('title',S_REMOVE_FROM.' '.S_FAVORITES);
+			$icon->addAction('onclick',new CScript("javascript: rm4favorites('graphid','".$_REQUEST['graphid']."',0);"));
 		}
 		else{
 			$icon = new CDiv(SPACE,'iconplus');
-			$icon->AddOption('title',S_ADD_TO.' '.S_FAVORITES);
-			$icon->AddAction('onclick',new CScript("javascript: add2favorites('graphid','".$_REQUEST['graphid']."');"));
+			$icon->addOption('title',S_ADD_TO.' '.S_FAVORITES);
+			$icon->addAction('onclick',new CScript("javascript: add2favorites('graphid','".$_REQUEST['graphid']."');"));
 		}
-		$icon->AddOption('id','addrm_fav');
+		$icon->addOption('id','addrm_fav');
 		
 		$url = '?graphid='.$_REQUEST['graphid'].($_REQUEST['fullscreen']?'':'&fullscreen=1');
 
 		$fs_icon = new CDiv(SPACE,'fullscreen');
-		$fs_icon->AddOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
-		$fs_icon->AddAction('onclick',new CScript("javascript: document.location = '".$url."';"));
+		$fs_icon->addOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
+		$fs_icon->addAction('onclick',new CScript("javascript: document.location = '".$url."';"));
 		
 		$rst_icon = new CDiv(SPACE,'iconreset');
-		$rst_icon->AddOption('title',S_RESET);
-		$rst_icon->AddAction('onclick',new CScript("javascript: graphload(SCROLL_BAR.dom_graphs, ".(time()+100000000).", 3600, false);"));
+		$rst_icon->addOption('title',S_RESET);
+		$rst_icon->addAction('onclick',new CScript("javascript: graphload(SCROLL_BAR.dom_graphs, ".(time()+100000000).", 3600, false);"));
 		
 	}
 	
diff --git a/frontends/php/create/data.sql b/frontends/php/create/data.sql
index 2bfcfdc..6e6ca4a 100644
--- a/frontends/php/create/data.sql
+++ b/frontends/php/create/data.sql
@@ -128,8 +128,8 @@ insert into help_items values(0,'net.tcp.dns[ip, zone]','Checks if DNS service i
 insert into help_items values(0,'net.tcp.listen[port]','Checks if this port is in LISTEN state. 0 - it is not, 1 - it is in LISTEN state.');
 insert into help_items values(0,'net.tcp.port[&lt;ip&gt;, port]','Check, if it is possible to make TCP connection to the port number. 0 - cannot connect, 1 - can connect. IP address is optional. If ip is missing, 127.0.0.1 is used. Example: net.tcp.port[,80]');
 insert into help_items values(0,'net.tcp.service[service &lt;,ip&gt; &lt;,port&gt;]','Check if service server is running and accepting connections. 0 - service is down, 1 - service is running. If ip is missing 127.0.0.1 is used. If port number is missing, default service port is used. Example: net.tcp.service[ftp,,45].');
-insert into help_items values(0,'net.tcp.service.perf[service &lt;,ip&gt; &lt;,port&gt;]','Check performance of service server. 0 - service server is down, sec - number of seconds spent on connection to the service server. If ip is missing 127.0.0.1 is used.  If port number is missing, default service port is used.');
-insert into help_items values(0,'proc.mem[&lt;name&gt; &lt;,user&gt; &lt;,mode&gt;]','Memory used of process with name name running under user user. Memory used by processes. Process name, user and mode is optional. If name or user is missing all processes will be calculated. If mode is missing sum is used.  Examples: proc.mem[,root]');
+insert into help_items values(0,'net.tcp.service.perf[service &lt;,ip&gt; &lt;,port&gt;]','Check performance of service. 0 - service server is down, sec - number of seconds spent on connection to the service server. If ip is missing 127.0.0.1 is used.  If port number is missing, default service port is used.');
+insert into help_items values(0,'proc.mem[&lt;name&gt; &lt;,user&gt; &lt;,mode&gt;]','Memory used by process with name name running under user user. Memory used by processes. Process name, user and mode is optional. If name or user is missing all processes will be calculated. If mode is missing sum is used.  Examples: proc.mem[,root]');
 insert into help_items values(0,'proc.num[&lt;name&gt; &lt;,user&gt; &lt;,state&gt;]','Number of processes with name name running under user user having state state. Process name, user and state are optional. Example: proc.num[,root]');
 insert into help_items values(0,'system.cpu.intr','Device interrupts.');
 insert into help_items values(0,'system.cpu.load[&lt;cpu&gt; &lt;,mode&gt;]','CPU(s) load. Processor load. The cpu and mode are optional. If cpu is missing all is used. If mode is missing avg1 is used. Note that this is not percentage.');
diff --git a/frontends/php/css.css b/frontends/php/css.css
index 08e985b..38ab60b 100644
--- a/frontends/php/css.css
+++ b/frontends/php/css.css
@@ -7,7 +7,5 @@
 @import "styles/ul.css";
 @import "styles/p.css";
 @import "styles/popupmenu.css";
-@import "styles/bar.css";
-@import "styles/gmenu.css";
-@import "styles/sbox.css";
+@import "styles/blocks.css";
 @import "styles/calendar.css";
diff --git a/frontends/php/dashboard.php b/frontends/php/dashboard.php
index b703c54..630306d 100644
--- a/frontends/php/dashboard.php
+++ b/frontends/php/dashboard.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -42,8 +42,8 @@ include_once "include/page_header.php";
 		'view_style'=>	array(T_ZBX_INT, O_OPT,	P_SYS,	IN('0,1'),		NULL),
 		'type'=>		array(T_ZBX_INT, O_OPT,	P_SYS,	IN('0,1'),		NULL),
 		
-		'output'=>		array(T_ZBX_STR, O_OPT, P_ACT,	NULL,			NULL),
-		'jsscriptid'=>	array(T_ZBX_STR, O_OPT, P_ACT,	NULL,			NULL),
+		'output'=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,			NULL),
+		'jsscriptid'=>	array(T_ZBX_STR, O_OPT, P_SYS,	NULL,			NULL),
 		'fullscreen'=>	array(T_ZBX_INT, O_OPT,	P_SYS,	IN('0,1'),		NULL),
 		
 //ajax
@@ -54,9 +54,9 @@ include_once "include/page_header.php";
 		'action'=>		array(T_ZBX_STR, O_OPT, P_ACT, 	IN("'add','remove'"),NULL),
 		'state'=>		array(T_ZBX_INT, O_OPT, P_ACT,  NOT_EMPTY,		'isset({favobj}) && ("hat"=={favobj})'),
 	);
-
-	check_fields($fields);
 	
+	check_fields($fields);
+
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
 // ACTION /////////////////////////////////////////////////////////////////////////////
 	if(isset($_REQUEST['favobj'])){
@@ -172,18 +172,17 @@ include_once "include/page_header.php";
 		exit();
 	}
 
-//	validate_group(PERM_READ_ONLY,array("allow_all_hosts","monitored_hosts","with_monitored_items"));
 //	$time = new CSpan(date("[H:i:s]",time()));
 //	$time->AddOption('id','refreshed');
 
 	$p_elements = array();
 // Header	
 
-	$url = '?fullscreen='.($_REQUEST['fullscreen']?'0':'1');
+	$url = new Curl('?fullscreen='.($_REQUEST['fullscreen']?'0':'1'));
 
 	$fs_icon = new CDiv(SPACE,'fullscreen');
 	$fs_icon->AddOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
-	$fs_icon->AddAction('onclick',new CScript("javascript: document.location = '".$url."';"));
+	$fs_icon->AddAction('onclick',new CScript("javascript: document.location = '".$url->getUrl()."';"));
 //-------------
 
 	$left_tab = new CTable();
diff --git a/frontends/php/events.php b/frontends/php/events.php
index 0a7a1bd..73a82fa 100644
--- a/frontends/php/events.php
+++ b/frontends/php/events.php
@@ -123,95 +123,61 @@
 	$source = get_request('source', EVENT_SOURCE_TRIGGERS);
 
 	$r_form = new CForm();
-	$r_form->SetMethod('get');	
-	$r_form->AddOption('name','events_menu');
+	$r_form->setMethod('get');	
+	$r_form->addOption('name','events_menu');
 	
-	$r_form->AddVar('fullscreen',$_REQUEST['fullscreen']);
-	$r_form->AddVar('nav_time',$_REQUEST['nav_time']);
-
-	if(EVENT_SOURCE_TRIGGERS == $source){
-	
-	    $available_groups= get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, PERM_READ_ONLY);
-		
-		$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_DATA_ARRAY, get_current_nodeid());
+	$r_form->addVar('fullscreen',$_REQUEST['fullscreen']);
+	$r_form->addVar('nav_time',$_REQUEST['nav_time']);
 
+	if(EVENT_SOURCE_TRIGGERS == $source){	
 		if(isset($_REQUEST['triggerid']) && ($_REQUEST['triggerid']>0)){
-			$sql = 'SELECT DISTINCT h.hostid '.
-					' FROM hosts h, functions f, items i'.
+			$sql = 'SELECT DISTINCT hg.groupid, hg.hostid '.
+					' FROM hosts_groups hg, functions f, items i'.
 					' WHERE i.itemid=f.itemid '.
-						' AND h.hostid=i.hostid '.
-						' AND '.DBcondition('f.triggerid', $available_triggers).
+						' AND hg.hostid=i.hostid '.
 						' AND f.triggerid='.$_REQUEST['triggerid'];
-						
-			if($host = DBfetch(DBselect($sql,1))){
-				$_REQUEST['hostid'] = $host['hostid'];
-				
-				$sql = 'SELECT DISTINCT hg.groupid '.
-						' FROM hosts_groups hg '.
-						' WHERE hg.hostid='.$_REQUEST['hostid'].
-							' AND '.DBcondition('hg.hostid',$available_hosts);
-							
-				if($group = DBfetch(DBselect($sql))){
-					$_REQUEST['groupid'] = $group['groupid'];
-				}
+			if($host_group = DBfetch(DBselect($sql,1))){
+				$_REQUEST['groupid'] = $host_group['groupid'];
+				$_REQUEST['hostid'] = $host_group['hostid'];
 			}
 			else{
 				unset($_REQUEST['triggerid']);
 			}
 		}
-		
-//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
-		validate_group_with_host(PERM_READ_ONLY, array('allow_all_hosts','monitored_hosts','with_items','always_select_first_host'));
-
-		$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
 
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
+		$options = array('allow_all_hosts','monitored_hosts','with_items');
+		if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
 		
-		$sql = 'SELECT DISTINCT g.groupid,g.name '.
-				' FROM groups g, hosts_groups hg, hosts h '.
-				' WHERE '.DBcondition('g.groupid',$available_groups).
-					' AND hg.groupid=g.groupid '.
-					' AND h.hostid=hg.hostid '.
-					' AND h.status='.HOST_STATUS_MONITORED.
-					' AND EXISTS(SELECT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-				' ORDER BY g.name';	
-        $result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem(
-					$row['groupid'],
-					get_node_name_by_elid($row['groupid']).$row['name']
-					);
-		}
-		$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+		$params = array();
+		foreach($options as $option) $params[$option] = 1;
+		$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+		$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+		validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);		
+	
+	    $available_groups= $PAGE_GROUPS['groupids'];
+		$available_hosts = $PAGE_HOSTS['hostids'];
 		
-		$cmbHosts->AddItem(0,S_ALL_SMALL);
+		$available_triggers = get_accessible_triggers(PERM_READ_ONLY, $PAGE_HOSTS['hostids'], PERM_RES_DATA_ARRAY, get_current_nodeid());
 
-		$sql_from = '';
-		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+		if(isset($_REQUEST['triggerid']) && ($_REQUEST['triggerid']>0) && !isset($available_triggers[$_REQUEST['triggerid']])){
+			unset($_REQUEST['triggerid']);
 		}
 		
-		$sql='SELECT DISTINCT h.hostid,h.host '.
-			' FROM hosts h '.$sql_from.
-			' WHERE '.DBcondition('h.hostid',$available_hosts).
-				$sql_where.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT i.itemid FROM items i WHERE i.hostid=h.hostid ) '.
-			' ORDER BY h.host';
-			
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem(
-					$row['hostid'],
-					get_node_name_by_elid($row['hostid']).$row['host']
-					);
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
+	
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
+		}	
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
-
-		$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+	
+		$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+		$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));	
 	}
 	
 	if($allow_discovery){
diff --git a/frontends/php/exp_imp.php b/frontends/php/exp_imp.php
index 8101360..f74ab20 100644
--- a/frontends/php/exp_imp.php
+++ b/frontends/php/exp_imp.php
@@ -18,8 +18,8 @@
 ** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 **/
 
-	require_once "include/config.inc.php";
-	require_once "include/forms.inc.php";
+	require_once('include/config.inc.php');
+	require_once('include/forms.inc.php');
 ?>
 <?php
 	if(isset($_REQUEST['export']) && isset($_REQUEST['hosts'])){
@@ -79,9 +79,16 @@ include_once "include/page_header.php";
 
 	}
 	else{
-		validate_group(PERM_READ_ONLY);
-	
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY,get_current_nodeid());
+		$params=array();
+		$options = array('only_current_node');
+		foreach($options as $option) $params[$option] = 1;
+		
+		$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+		$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+
+		validate_group($PAGE_GROUPS,$PAGE_HOSTS, false);
+
+		$available_hosts = $PAGE_HOSTS['hostids'];
 
 		$hosts		= get_request('hosts', array());
 		$templates	= get_request('templates', array());
@@ -127,12 +134,12 @@ include_once "include/page_header.php";
 	}
 
 	$form = new CForm();
-	$form->SetMethod('get');
+	$form->setMethod('get');
 	
 	$cmbConfig = new CComboBox('config', $config, 'submit()');
-	$cmbConfig->AddItem(0, S_EXPORT);
-	$cmbConfig->AddItem(1, S_IMPORT);
-	$form->AddItem($cmbConfig);
+	$cmbConfig->addItem(0, S_EXPORT);
+	$cmbConfig->addItem(1, S_IMPORT);
+	$form->addItem($cmbConfig);
 
 	show_table_header($title, $form);
 	if($config == 1){
@@ -142,7 +149,7 @@ include_once "include/page_header.php";
 			DBstart();
 			
 			$importer = new CZabbixXMLImport();
-			$importer->SetRules($rules['host'],$rules['template'],$rules['item'],$rules['trigger'],$rules['graph']);
+			$importer->setRules($rules['host'],$rules['template'],$rules['item'],$rules['trigger'],$rules['graph']);
 			$result = $importer->Parse($_FILES['import_file']['tmp_name']);
 
 			unset($importer);
@@ -185,8 +192,8 @@ include_once "include/page_header.php";
 		echo SBR;
 		if($preview){
 			$table = new CTableInfo(S_NO_DATA_FOR_EXPORT);
-			$table->SetHeader(array(S_HOST, S_ELEMENTS));
-			$table->ShowStart();
+			$table->setHeader(array(S_HOST, S_ELEMENTS));
+			$table->showStart();
 
 			$hostids = array_keys($hosts);
 			$sql = 'SELECT * '.
@@ -235,56 +242,43 @@ include_once "include/page_header.php";
 			}
 			
 			$form = new CForm(null,'post');
-			$form->SetName('hosts');
-			$form->AddVar("config",		$config);
-			$form->AddVar('update',		true);
-			$form->AddVar('hosts',		$hosts);
-			$form->AddVar('templates',	$templates);
-			$form->AddVar('items', 		$items);
-			$form->AddVar('graphs', 	$graphs);
-			$form->AddVar('triggers',	$triggers);
-
-			$form->AddItem(array(
+			$form->setName('hosts');
+			$form->addVar("config",		$config);
+			$form->addVar('update',		true);
+			$form->addVar('hosts',		$hosts);
+			$form->addVar('templates',	$templates);
+			$form->addVar('items', 		$items);
+			$form->addVar('graphs', 	$graphs);
+			$form->addVar('triggers',	$triggers);
+
+			$form->addItem(array(
 				new CButton('back', S_BACK),
 				new CButton('preview', S_REFRESH),
 				new CButton('export', S_EXPORT)
 				));
 			
-			$table->SetFooter(new CCol($form));
+			$table->setFooter(new CCol($form));
 			
-			$table->ShowEnd();
+			$table->showEnd();
 		}
 		else{
 	/* table HOSTS */
 			$form = new CForm(null,'post');
 			$form->SetName('hosts');
-			$form->AddVar("config",$config);
+			$form->AddVar('config',$config);
 			$form->AddVar('update', true);
 			
-			$cmbGroups = new CComboBox("groupid",get_request("groupid",0),"submit()");
-			$cmbGroups->AddItem(0,S_ALL_SMALL);
-			$result=DBselect('SELECT DISTINCT g.groupid,g.name '.
-					' FROM groups g,hosts_groups hg,hosts h '.
-					' WHERE '.DBcondition('h.hostid',$available_hosts).
-						' AND g.groupid=hg.groupid '.
-						' AND h.hostid=hg.hostid '.
-					' ORDER BY g.name');
-			while($row=DBfetch($result)){
-				$cmbGroups->AddItem($row["groupid"],$row["name"]);
-				if((bccomp($row["groupid"] , $_REQUEST["groupid"])==0)) $correct_host = 1;
-			}
-			
-			if(!isset($correct_host)){
-				unset($_REQUEST["groupid"]);
-				$cmbGroups->SetValue(0);
+			$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');		
+			foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+				$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 			}
 			
 			$header = get_table_header(S_HOSTS_BIG, array(S_GROUP.SPACE, $cmbGroups));
 
-			$form->AddItem($header);
+			$form->addItem($header);
 
 			$table = new CTableInfo(S_NO_HOSTS_DEFINED);
-			$table->SetHeader(array(
+			$table->setHeader(array(
 				array(	new CCheckBox("all_hosts",true, "CheckAll('".$form->GetName()."','all_hosts','hosts');"),
 					make_sorting_link(S_NAME,'h.host')),
 				make_sorting_link(S_DNS,'h.dns'),
@@ -308,7 +302,7 @@ include_once "include/page_header.php";
 		
 			$sql_from = '';
 			$sql_where = '';
-			if(isset($_REQUEST["groupid"])){
+			if($_REQUEST['groupid']>0){
 				$sql_from.= ' ,hosts_groups hg ';
 				$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'].
 							' AND hg.hostid=h.hostid ';
diff --git a/frontends/php/graphs.php b/frontends/php/graphs.php
index b00da56..c203f39 100644
--- a/frontends/php/graphs.php
+++ b/frontends/php/graphs.php
@@ -1,7 +1,7 @@
 <?php
-/* 
+/*
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -25,7 +25,7 @@
 	require_once('include/forms.inc.php');
 	require_once('include/classes/chart.inc.php');
 	require_once('include/classes/pie.inc.php');
-	
+
 
 	$page['title'] = "S_CONFIGURATION_OF_GRAPHS";
 	$page['file'] = 'graphs.php';
@@ -50,22 +50,22 @@ include_once 'include/page_header.php';
 		'height'=>	array(T_ZBX_INT, O_OPT,	 NULL,	BETWEEN(0,65535),	'isset({save})'),
 		'yaxistype'=>	array(T_ZBX_INT, O_OPT,	 NULL,	IN('0,1,2'),		'isset({save})&&(({graphtype} == 0) || ({graphtype} == 1))'),
 		'graphtype'=>	array(T_ZBX_INT, O_OPT,	 NULL,	IN('0,1,2,3'),		'isset({save})'),
-		
+
 		'yaxismin'=>	array(T_ZBX_DBL, O_OPT,	 NULL,	null,	'isset({save})&&(({graphtype} == 0) || ({graphtype} == 1))'),
 		'yaxismax'=>	array(T_ZBX_DBL, O_OPT,	 NULL,	null,	'isset({save})&&(({graphtype} == 0) || ({graphtype} == 1))'),
 		'graph3d'=>	array(T_ZBX_INT, O_OPT,	P_NZERO,	IN('0,1'),		null),
 		'legend'=>	array(T_ZBX_INT, O_OPT,	P_NZERO,	IN('0,1'),		null),
-		
+
 		'percent_left'=>	array(T_ZBX_DBL, O_OPT,	 NULL,	BETWEEN(0,100),	null),
 		'percent_right'=>	array(T_ZBX_DBL, O_OPT,	 NULL,	BETWEEN(0,100),	null),
 		'visible'=>			array(T_ZBX_INT, O_OPT,	 NULL,	BETWEEN(0,1),	null),
-		
+
 		'items'=>		array(T_ZBX_STR, O_OPT,  NULL,	null,		null),
 		'new_graph_item'=>	array(T_ZBX_STR, O_OPT,  NULL,	null,		null),
 		'group_gid'=>		array(T_ZBX_STR, O_OPT,  NULL,	null,		null),
 		'move_up'=>		array(T_ZBX_INT, O_OPT,  NULL,	null,		null),
 		'move_down'=>		array(T_ZBX_INT, O_OPT,  NULL,	null,		null),
-		
+
 		'showworkperiod'=>	array(T_ZBX_INT, O_OPT,	 NULL,	IN('1'),	NULL),
 		'showtriggers'=>	array(T_ZBX_INT, O_OPT,	 NULL,	IN('1'),	NULL),
 
@@ -75,7 +75,7 @@ include_once 'include/page_header.php';
 /* actions */
 		'add_item'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
 		'delete_item'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		
+
 		'save'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
 		'clone'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
 		'copy'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
@@ -90,8 +90,6 @@ include_once 'include/page_header.php';
 	check_fields($fields);
 	validate_sort_and_sortorder('g.name',ZBX_SORT_UP);
 
-	$options = array('allow_all_hosts','only_current_node','always_select_first_host');//'with_monitored_items',
-	validate_group_with_host(PERM_READ_WRITE,$options,'web.last.conf.groupid', 'web.last.conf.hostid');	
 ?>
 <?php
 
@@ -99,10 +97,10 @@ include_once 'include/page_header.php';
 	$_REQUEST['group_gid'] = get_request('group_gid', array());
 	$_REQUEST['graph3d'] = get_request('graph3d', 0);
 	$_REQUEST['legend'] = get_request('legend', 0);
-	
+
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE);
 	$available_hosts_all_nodes = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,null,get_current_nodeid(true));
-	$available_graphs = get_accessible_graphs(PERM_READ_WRITE,null,get_current_nodeid(true));
+	$available_graphs = get_accessible_graphs(PERM_READ_WRITE,array(),null,get_current_nodeid(true));	// OPTIMAZE
 
 // ---- <ACTIONS> ----
 	if(isset($_REQUEST['clone']) && isset($_REQUEST['graphid'])){
@@ -110,19 +108,24 @@ include_once 'include/page_header.php';
 		$_REQUEST['form'] = 'clone';
 	}
 	else if(isset($_REQUEST['save'])){
-		
+
 		$items = get_request('items', array());
+		$itemids = array();
 		foreach($items as $gitem){
+			$itemids[$gitem['itemid']] = $gitem['itemid'];
+		}
+
+		if(!empty($itemids)){
 			$sql = 'SELECT h.hostid '.
 					' FROM hosts h,items i '.
 					' WHERE h.hostid=i.hostid '.
-						' AND i.itemid='.$gitem['itemid'].
+						' AND '.DBcondition('i.itemid', $itemids).
 						' AND '.DBcondition('h.hostid',$available_hosts_all_nodes,true);
 			if(DBfetch(DBselect($sql,1))){
 				access_deny();
 			}
 		}
-		
+
 		if(count($items) <= 0){
 			info(S_REQUIRED_ITEMS_FOR_GRAPH);
 		}
@@ -130,19 +133,19 @@ include_once 'include/page_header.php';
 			isset($_REQUEST['yaxistype'])?(''):($_REQUEST['yaxistype']=0);
 			isset($_REQUEST['yaxismin'])?(''):($_REQUEST['yaxismin']=0);
 			isset($_REQUEST['yaxismax'])?(''):($_REQUEST['yaxismax']=0);
-			
+
 			$showworkperiod	= isset($_REQUEST['showworkperiod']) ? 1 : 0;
 			$showtriggers	= isset($_REQUEST['showtriggers']) ? 1 : 0;
-			
+
 			$visible = get_request('visible');
 			$percent_left  = 0;
 			$percent_right = 0;
-			
+
 			if(isset($visible['percent_left'])) 	$percent_left  = get_request('percent_left', 0);
 			if(isset($visible['percent_right']))	$percent_right = get_request('percent_right', 0);
 
 			if(isset($_REQUEST['graphid'])){
-				
+
 				DBstart();
 				update_graph_with_items($_REQUEST['graphid'],
 					$_REQUEST['name'],$_REQUEST['width'],$_REQUEST['height'],
@@ -150,9 +153,9 @@ include_once 'include/page_header.php';
 					$showworkperiod,$showtriggers,$_REQUEST['graphtype'],$_REQUEST['legend'],
 					$_REQUEST['graph3d'],$percent_left,$percent_right,$items);
 				$result = DBend();
-				
+
 				if($result){
-					add_audit(AUDIT_ACTION_ADD,AUDIT_RESOURCE_GRAPH,'Graph ID ['.$_REQUEST['graphid'].'] Graph ['.$_REQUEST['name'].']');
+					add_audit(AUDIT_ACTION_UPDATE,AUDIT_RESOURCE_GRAPH,'Graph ID ['.$_REQUEST['graphid'].'] Graph ['.$_REQUEST['name'].']');
 				}
 				show_messages($result, S_GRAPH_UPDATED, S_CANNOT_UPDATE_GRAPH);
 			}
@@ -163,7 +166,7 @@ include_once 'include/page_header.php';
 					$showworkperiod,$showtriggers,$_REQUEST['graphtype'],$_REQUEST['legend'],
 					$_REQUEST['graph3d'],$percent_left,$percent_right,$items);
 				$result = DBend();
-				
+
 				if($result){
 					add_audit(AUDIT_ACTION_ADD,AUDIT_RESOURCE_GRAPH,'Graph ['.$_REQUEST['name'].']');
 				}
@@ -176,14 +179,15 @@ include_once 'include/page_header.php';
 	}
 	else if(isset($_REQUEST['delete']) && isset($_REQUEST['graphid'])){
 		$graph=get_graph_by_graphid($_REQUEST['graphid']);
-		if(!uint_in_array($_REQUEST['graphid'],$available_graphs)){
+
+		if(!isset($available_graphs[$_REQUEST['graphid']])){
 			access_deny();
 		}
 
 		DBstart();
 			$result = delete_graph($_REQUEST['graphid']);
 		$result = DBend($result);
-		
+
 		if($result){
 			add_audit(AUDIT_ACTION_DELETE,AUDIT_RESOURCE_GRAPH,'Graph ['.$graph['name'].']');
 			unset($_REQUEST['form']);
@@ -194,7 +198,7 @@ include_once 'include/page_header.php';
 		$group_graphid = $_REQUEST['group_graphid'];
 		$group_graphid = array_intersect($group_graphid,$available_graphs);
 		$result = false;
-		
+
 		DBstart();
 		foreach($group_graphid as $id => $graphid){
 			$graph=get_graph_by_graphid($graphid);
@@ -204,9 +208,9 @@ include_once 'include/page_header.php';
 		if(!empty($group_graphid)){
 			$result = delete_graph($group_graphid);
 		}
-		
+
 		$result = DBend($result);
-		
+
 		show_messages($result, S_ITEMS_DELETED, S_CANNOT_DELETE_ITEMS);
 	}
 	else if(isset($_REQUEST['copy'])&&isset($_REQUEST['group_graphid'])&&isset($_REQUEST['form_copy_to'])){
@@ -216,8 +220,8 @@ include_once 'include/page_header.php';
 			}
 			else{ /* groups */
 				$hosts_ids = array();
-				
-				$sql = 'SELECT distinct h.hostid '.
+
+				$sql = 'SELECT DISTINCT h.hostid '.
 						' FROM hosts h, hosts_groups hg'.
 						' WHERE h.hostid=hg.hostid '.
 							' AND '.DBcondition('hg.groupid',$_REQUEST['copy_targetid']).
@@ -241,7 +245,7 @@ include_once 'include/page_header.php';
 		show_messages();
 	}
 	else if(isset($_REQUEST['delete_item']) && isset($_REQUEST['group_gid'])){
-	
+
 		foreach($_REQUEST['items'] as $gid => $data){
 			if(!isset($_REQUEST['group_gid'][$gid])) continue;
 			unset($_REQUEST['items'][$gid]);
@@ -250,19 +254,19 @@ include_once 'include/page_header.php';
 	}
 	else if(isset($_REQUEST['new_graph_item'])){
 		$new_gitem = get_request('new_graph_item', array());
-		
+
 		foreach($_REQUEST['items'] as $gid => $data){
 			if(	(bccomp($new_gitem['itemid'] , $data['itemid'])==0) &&
 				$new_gitem['yaxisside'] == $data['yaxisside'] &&
 				$new_gitem['calc_fnc'] == $data['calc_fnc'] &&
 				$new_gitem['type'] == $data['type'] &&
-				$new_gitem['periods_cnt'] == $data['periods_cnt']) 
+				$new_gitem['periods_cnt'] == $data['periods_cnt'])
 			{
 				$already_exist = true;
 				break;
 			}
 		}
-		
+
 		if(!isset($already_exist)){
 			array_push($_REQUEST['items'], $new_gitem);
 		}
@@ -270,7 +274,7 @@ include_once 'include/page_header.php';
 	else if(isset($_REQUEST['move_up']) && isset($_REQUEST['items'])){
 		if(isset($_REQUEST['items'][$_REQUEST['move_up']])){
 			if($_REQUEST['items'][$_REQUEST['move_up']]['sortorder'] > 0){
-			
+
 				$_REQUEST['items'][$_REQUEST['move_up']]['sortorder'] = ''.($_REQUEST['items'][$_REQUEST['move_up']]['sortorder'] - 1);
 			}
 		}
@@ -278,20 +282,74 @@ include_once 'include/page_header.php';
 	else if(isset($_REQUEST['move_down']) && isset($_REQUEST['items'])){
 		if(isset($_REQUEST['items'][$_REQUEST['move_down']])){
 			if($_REQUEST['items'][$_REQUEST['move_down']]['sortorder'] < 1000){
-			
+
 				$_REQUEST['items'][$_REQUEST['move_down']]['sortorder']++;
 			}
 		}
 	}
 // ----</ACTIONS>----
-	$available_graphs = get_accessible_graphs(PERM_READ_WRITE,null,get_current_nodeid(true),null,0);
 ?>
 <?php
-	$form = new CForm();
-	$form->SetMethod('get');
+	if(isset($_REQUEST['hostid']) && !isset($_REQUEST['groupid']) && !isset($_REQUEST['graphid'])){
+		$sql = 'SELECT DISTINCT hg.groupid '.
+				' FROM hosts_groups hg '.
+				' WHERE hg.hostid='.$_REQUEST['hostid'];
+		if($group=DBfetch(DBselect($sql, 1))){
+			$_REQUEST['groupid'] = $group['groupid'];
+		}
+	}
 	
+	if(isset($_REQUEST['graphid']) && ($_REQUEST['graphid']>0)){
+		$sql_from = '';
+		$sql_where = '';
+		if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
+			$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'];
+		}
+
+		if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid'] > 0)){
+			$sql_where.= ' AND hg.hostid='.$_REQUEST['hostid'];
+		}
+		$sql = 'SELECT DISTINCT hg.groupid, hg.hostid '.
+				' FROM hosts_groups hg '.
+				' WHERE EXISTS( SELECT DISTINCT i.itemid '.
+									' FROM items i, graphs_items gi '.
+									' WHERE i.hostid=hg.hostid '.
+										' AND i.itemid=gi.itemid '.
+										' AND gi.graphid='.$_REQUEST['graphid'].')'.
+						$sql_where;
+		if($host_group = DBfetch(DBselect($sql,1))){
+			if(!isset($_REQUEST['groupid']) || !isset($_REQUEST['hostid'])){
+				$_REQUEST['groupid'] = $host_group['groupid'];
+				$_REQUEST['hostid'] = $host_group['hostid'];
+			}
+			else if(($_REQUEST['groupid']!=$host_group['groupid']) || ($_REQUEST['hostid']!=$host_group['hostid'])){
+				$_REQUEST['graphid'] = 0;
+			}
+		}
+		else{
+//			$_REQUEST['graphid'] = 0;
+		}
+	}
+
+	$params=array();
+	$options = array('only_current_node','not_proxy_hosts');
+	foreach($options as $option) $params[$option] = 1;
+
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+	$available_graphs = get_accessible_graphs(PERM_READ_WRITE,$available_hosts,null,get_current_nodeid(true),null,0);
+?>
+<?php
+	$form = new CForm();
+	$form->setMethod('get');
+
 	if(!isset($_REQUEST['form']))
-		$form->AddItem(new CButton('form',S_CREATE_GRAPH));
+		$form->addItem(new CButton('form',S_CREATE_GRAPH));
 
 	show_table_header(S_CONFIGURATION_OF_GRAPHS_BIG,$form);
 	echo SBR;
@@ -304,77 +362,56 @@ include_once 'include/page_header.php';
 		echo SBR;
 		$table = new CTable(NULL,'graph');
 		if(($_REQUEST['graphtype'] == GRAPH_TYPE_PIE) || ($_REQUEST['graphtype'] == GRAPH_TYPE_EXPLODED)){
-			$table->AddRow(new CImg('chart7.php?period=3600'.url_param('items').
+			$table->addRow(new CImg('chart7.php?period=3600'.url_param('items').
 				url_param('name').url_param('legend').url_param('graph3d').url_param('width').url_param('height').url_param('graphtype')));
 			$table->Show();
 		}
 		else{
-			$table->AddRow(new CImg('chart3.php?period=3600'.url_param('items').
+			$table->addRow(new CImg('chart3.php?period=3600'.url_param('items').
 				url_param('name').url_param('width').url_param('height').url_param('yaxistype').
 				url_param('yaxismin').url_param('yaxismax').url_param('show_work_period').
 				url_param('show_triggers').url_param('graphtype').url_param('percent_left').url_param('percent_right')));
 			$table->Show();
 		}
-	} 
+	}
 	else {
 /* Table HEADER */
-		if(isset($_REQUEST['graphid'])&&($_REQUEST['graphid']==0)){
+		if(isset($_REQUEST['graphid']) && ($_REQUEST['graphid']==0)){
 			unset($_REQUEST['graphid']);
 		}
 
 		$r_form = new CForm();
-		$r_form->SetMethod('get');
-		
-		$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
-
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
-
-		$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g, hosts_groups hg '.
-			' WHERE hg.groupid = g.groupid '.
-				' AND '.DBcondition('hg.hostid',$available_hosts).
-			' ORDER BY g.name';
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem($row['groupid'],$row['name']);
-		}
-		$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
-
-		if($_REQUEST['groupid'] > 0){
-			$sql='SELECT DISTINCT h.hostid,h.host '.
-				' FROM hosts h, hosts_groups hg '.
-				' WHERE hg.groupid='.$_REQUEST['groupid'].
-					' AND hg.hostid=h.hostid '.
-					' AND '.DBcondition('h.hostid',$available_hosts).
-					' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-				' ORDER BY h.host';
-		}
-		else{
-			$cmbHosts->AddItem(0,S_ALL_SMALL);
-			$sql='SELECT DISTINCT h.hostid,h.host '.
-				' FROM hosts h '.
-				' WHERE '.DBcondition('h.hostid',$available_hosts).
-					' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-				' ORDER BY h.host';
+		$r_form->setMethod('get');
+
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
+
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 		}
-		
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem($row['hostid'],$row['host']);
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
 
-		$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
-		
-		show_table_header(S_GRAPHS_BIG, $r_form);
+		$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+		$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+
+		$row_count = 0;
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');
+		$header = get_table_header(array(S_GRAPHS_BIG,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);							
+		show_table_header($header, $r_form);
 
 /* TABLE */
 		$form = new CForm();
-		$form->SetName('graphs');
-		$form->AddVar('hostid',$_REQUEST['hostid']);
+		$form->setName('graphs');
+		$form->addVar('hostid',$_REQUEST['hostid']);
 
 		$table = new CTableInfo(S_NO_GRAPHS_DEFINED);
-		$table->SetHeader(array(
+		$table->setHeader(array(
 			$_REQUEST['hostid'] != 0 ? NULL : S_HOSTS,
 			array(	new CCheckBox('all_graphs',NULL,"CheckAll('".$form->GetName()."','all_graphs');"),
 				make_sorting_link(S_NAME,'g.name')),
@@ -382,24 +419,19 @@ include_once 'include/page_header.php';
 			make_sorting_link(S_HEIGHT,'g.height'),
 			make_sorting_link(S_GRAPH_TYPE,'g.graphtype')));
 
-		if($_REQUEST['hostid'] > 0){
-			$sql = 'SELECT DISTINCT g.* '.
-					' FROM graphs g, graphs_items gi,items i '.
-					' WHERE '.DBcondition('g.graphid',$available_graphs).
-						' AND gi.graphid=g.graphid '.
-						' AND i.itemid=gi.itemid '.
-						' AND i.hostid='.$_REQUEST['hostid'].
-					order_by('g.name,g.width,g.height,g.graphtype','g.graphid');
+		$sql_from = '';
+		$sql_where = '';
+		if($PAGE_HOSTS['selected'] > 0)
+			$sql_where.= ' AND i.hostid='.$PAGE_HOSTS['selected'];
 
-			$result = DBselect($sql);
-		}
-		else{
-			$result = DBselect('SELECT DISTINCT g.* '.
-						' FROM graphs g '.
-						' WHERE '.DBcondition('g.graphid',$available_graphs).
-						order_by('g.name,g.width,g.height,g.graphtype','g.graphid'));
-		}
-		
+		$sql = 'SELECT DISTINCT g.* '.
+				' FROM graphs g, graphs_items gi,items i '.$sql_from.
+				' WHERE '.DBcondition('g.graphid',$available_graphs).
+					' AND gi.graphid=g.graphid '.
+					' AND i.itemid=gi.itemid '.
+					$sql_where.
+				order_by('g.name,g.width,g.height,g.graphtype','g.graphid');
+		$result = DBselect($sql);
 		while($row=DBfetch($result)){
 			if($_REQUEST['hostid'] != 0){
 				$host_list = NULL;
@@ -412,12 +444,11 @@ include_once 'include/page_header.php';
 				}
 				$host_list = implode(',',$host_list);
 			}
-	
+
 			if($row['templateid']==0){
 				$name = new CLink($row['name'],
-					'graphs.php?graphid='.$row['graphid'].'&form=update'.
-					url_param('groupid').url_param('hostid'),'action');
-			} 
+					'graphs.php?graphid='.$row['graphid'].'&form=update','action');
+			}
 			else {
 				$real_hosts = get_realhosts_by_graphid($row['templateid']);
 				$real_host = DBfetch($real_hosts);
@@ -457,13 +488,14 @@ include_once 'include/page_header.php';
 					break;
 			}
 
-			$table->AddRow(array(
+			$table->addRow(array(
 				$host_list,
 				array($chkBox, $name),
 				$row['width'],
 				$row['height'],
 				$graphtype
 				));
+			$row_count++;
 		}
 
 		$table->SetFooter(new CCol(array(
@@ -475,7 +507,9 @@ include_once 'include/page_header.php';
 		$form->AddItem($table);
 		$form->Show();
 	}
-
+	
+	if(isset($row_count))
+		zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
 ?>
 <?php
 
diff --git a/frontends/php/history.php b/frontends/php/history.php
index 6b39b27..26e030a 100644
--- a/frontends/php/history.php
+++ b/frontends/php/history.php
@@ -1,5 +1,5 @@
 <?php
-/* 
+/*
 ** ZABBIX
 ** Copyright (C) 2000-2005 SIA Zabbix
 **
@@ -25,11 +25,11 @@
 
 	$page["file"]	= "history.php";
 	$page["title"]	= "S_HISTORY";
-	$page['hist_arg'] = array('hostid','grouid','graphid','period','dec','inc','left','right','stime');
+	$page['hist_arg'] = array('itemid', 'hostid','grouid','graphid','period','dec','inc','left','right','stime');
 	$page['scripts'] = array('gmenu.js','scrollbar.js','sbox.js','sbinit.js');
-	
+
 	$page['type'] = detect_page_type(PAGE_TYPE_HTML);
-		
+
 	if(isset($_REQUEST['plaintext'])){
 		define('ZBX_PAGE_NO_MENU', 1);
 	}
@@ -38,13 +38,13 @@
 	}
 
 include_once "include/page_header.php";
-	
+
 ?>
 <?php
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$fields=array(
 		"itemid"=>	array(T_ZBX_INT, O_OPT, P_SYS,	DB_ID,	'!isset({favobj})'),
-		
+
 		"from"=>	array(T_ZBX_INT, O_OPT,	 null,	'{}>=0', null),
 		"period"=>	array(T_ZBX_INT, O_OPT,	 null,	null, null),
 		"dec"=>		array(T_ZBX_INT, O_OPT,	 null,	null, null),
@@ -53,11 +53,11 @@ include_once "include/page_header.php";
 		"right"=>	array(T_ZBX_INT, O_OPT,	 null,	null, null),
 		"stime"=>	array(T_ZBX_STR, O_OPT,	 null,	null, null),
 
-		"filter_task"=>	array(T_ZBX_STR, O_OPT,	 null,	
+		"filter_task"=>	array(T_ZBX_STR, O_OPT,	 null,
 			IN(FILTER_TAST_SHOW.','.FILTER_TAST_HIDE.','.FILTER_TAST_MARK.','.FILTER_TAST_INVERT_MARK), null),
 		"filter"=>	array(T_ZBX_STR, O_OPT,	 null,	null, null),
 		"mark_color"=>	array(T_ZBX_STR, O_OPT,	 null,	IN(MARK_COLOR_RED.','.MARK_COLOR_GREEN.','.MARK_COLOR_BLUE), null),
-		
+
 		"cmbloglist"=>	array(T_ZBX_INT, O_OPT,	 null,	DB_ID, null),
 
 		"plaintext"=>	array(T_ZBX_STR, O_OPT,	 null,	null, null),
@@ -92,7 +92,7 @@ include_once "include/page_header.php";
 			}
 			else if('remove' == $_REQUEST['action']){
 				$result = rm4favorites('web.favorite.graphids',$_REQUEST['favid'],ZBX_FAVORITES_ALL,$_REQUEST['favobj']);
-				
+
 				if($result){
 					print('$("addrm_fav").title = "'.S_ADD_TO.' '.S_FAVORITES.'";'."\n");
 					print('$("addrm_fav").onclick = function(){ add2favorites("itemid","'.$_REQUEST['favid'].'");}'."\n");
@@ -103,8 +103,8 @@ include_once "include/page_header.php";
 				print('switchElementsClass("addrm_fav","iconminus","iconplus");');
 			}
 		}
-	}	
-	
+	}
+
 	if((PAGE_TYPE_JS == $page['type']) || (PAGE_TYPE_HTML_BLOCK == $page['type'])){
 		exit();
 	}
@@ -131,17 +131,17 @@ include_once "include/page_header.php";
 	}
 
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-	
+
 	$sql = 'SELECT h.host,i.hostid,i.description,i.key_ '.
 			' FROM items i,hosts h '.
 			' WHERE i.itemid IN ('.(is_array($_REQUEST['itemid']) ? implode(',', $_REQUEST['itemid']) : $_REQUEST['itemid']).') '.
 				' AND h.hostid=i.hostid '.
 				' AND '.DBcondition('h.hostid',$available_hosts, true);
-				
+
 	if(DBfetch(DBselect($sql))){
 		access_deny();
 	}
-	
+
 	$sql = 'SELECT h.host,i.hostid,i.* '.
 			' FROM items i,hosts h '.
 			' WHERE i.itemid in ('.(is_array($_REQUEST['itemid']) ? implode(',', $_REQUEST['itemid']) : $_REQUEST['itemid']).') '.
@@ -153,10 +153,10 @@ include_once "include/page_header.php";
 
 	if(!is_array($_REQUEST['itemid'])){
 		$main_header = $item_data['host'].': '.item_description($item_data);
-		
+
 		if(isset($_REQUEST['plaintext']))
 			echo $main_header.SBR;
-	
+
 		$_REQUEST['period'] = get_request('period',get_profile('web.item.graph.period', ZBX_PERIOD_DEFAULT, PROFILE_TYPE_INT, $_REQUEST['itemid']));
 		if($_REQUEST['period'] >= ZBX_MIN_PERIOD){
 			update_profile('web.item.graph.period',$_REQUEST['period'], PROFILE_TYPE_INT, $_REQUEST['itemid']);
@@ -164,7 +164,7 @@ include_once "include/page_header.php";
 
 		$l_header = array(new CLink($item_data['host'],'latest.php?hostid='.$item_data['hostid']),': ',
 			item_description($item_data));
-			
+
 		if('showgraph' == $_REQUEST['action']){
 			if(infavorites('web.favorite.graphids',$_REQUEST['itemid'],'itemid')){
 				$icon = new CDiv(SPACE,'iconminus');
@@ -177,10 +177,10 @@ include_once "include/page_header.php";
 				$icon->addAction('onclick',new CScript("javascript: add2favorites('itemid','".$_REQUEST['itemid']."');"));
 			}
 			$icon->addOption('id','addrm_fav');
-	
+
 			$icon_tab = new CTable();
 			$icon_tab->addRow(array($icon,SPACE,$l_header));
-			
+
 			$l_header = $icon_tab;
 		}
 	}
@@ -211,7 +211,7 @@ include_once "include/page_header.php";
 					if(!($item = get_item_by_itemid($itemid)) || $item['value_type'] != ITEM_VALUE_TYPE_LOG){
 						invalid_url();
 					}
-					
+
 					$host = get_host_by_hostid($item['hostid']);
 					$cmbLogList->addItem($itemid,$host['host'].': '.item_description($item));
 				}
@@ -231,13 +231,13 @@ include_once "include/page_header.php";
 
 		$form = new CForm();
 		$form->setMethod('get');
-		
+
 		$form->addVar('itemid',$_REQUEST['itemid']);
 
 		if(isset($_REQUEST['filter_task']))	$form->addVar('filter_task',$_REQUEST['filter_task']);
 		if(isset($_REQUEST['filter']))		$form->addVar('filter',$_REQUEST['filter']);
 		if(isset($_REQUEST['mark_color']))	$form->addVar('mark_color',$_REQUEST['mark_color']);
-		
+
 		$cmbAction = new CComboBox('action',$_REQUEST['action'],'submit()');
 
 		if(str_in_array($item_type,array(ITEM_VALUE_TYPE_FLOAT,ITEM_VALUE_TYPE_UINT64))){
@@ -249,7 +249,7 @@ include_once "include/page_header.php";
 
 		$form->addItem($cmbAction);
 
-		if($_REQUEST['action']!='showgraph') 
+		if($_REQUEST['action']!='showgraph')
 			$form->addItem(array(SPACE,new CButton('plaintext',S_AS_PLAIN_TEXT)));
 
 		show_table_header($l_header, $form);
@@ -259,16 +259,22 @@ include_once "include/page_header.php";
 	if($_REQUEST['action']=='showgraph' && $item_type != ITEM_VALUE_TYPE_LOG){
 		$dom_graph_id = 'graph';
 
-		$bstime = isset($_REQUEST['stime'])?$_REQUEST['stime']:date('YmdHi',(time()-$_REQUEST['period']));
+		$bstime = $_REQUEST['stime'] = get_request('stime',
+										get_profile('web.item.graph.stime',date('YmdHi',(time()-$_REQUEST['period'])),
+										PROFILE_TYPE_STR,
+										$_REQUEST['itemid']));
 		show_history($_REQUEST['itemid'],$_REQUEST['from'],$bstime,$effectiveperiod);
 	}
 	else if($_REQUEST['action']=='showvalues' || $_REQUEST['action']=='showlatest'){
 		if($_REQUEST['action']=='showvalues'){
-			
-			$bstime = isset($_REQUEST['stime'])?$_REQUEST['stime']:date('YmdHi',(time()-$_REQUEST['period']));
+
+			$bstime = $_REQUEST['stime'] = get_request('stime',
+											get_profile('web.item.graph.stime',date('YmdHi',(time()-$_REQUEST['period'])),
+											PROFILE_TYPE_STR,
+											$_REQUEST['itemid']));
 			$time = mktime(substr($bstime,8,2),substr($bstime,10,2),0,substr($bstime,4,2),substr($bstime,6,2),substr($bstime,0,4));
 			$till = $time + $effectiveperiod;
-			
+
 			$l_header = array(S_SHOWING_HISTORY_OF.SPACE.zbx_date2age(0,$effectiveperiod),'['.S_FROM_SMALL.': '.date('Y.M.d H:i:s',$time).']');
 		}
 		else{
@@ -285,7 +291,7 @@ include_once "include/page_header.php";
 
 				$r_header = new CForm();
 				$r_header->setMethod('get');
-				
+
 				$r_header->addVar('action',$_REQUEST['action']);
 				$r_header->addVar('from',$_REQUEST['from']);
 				$r_header->addVar('period',$_REQUEST['period']);
@@ -328,14 +334,14 @@ include_once "include/page_header.php";
 		$limit = 'NO';
 		if($_REQUEST['action']=='showlatest'){
 			$limit = 500;
-		} 
+		}
 		else if($_REQUEST['action']=='showvalues'){
 			$cond_clock = " and h.clock>$time and h.clock<$till";
 		}
 
 		if($item_type==ITEM_VALUE_TYPE_LOG){
 			$itemid_lst = '';
-			
+
 			if(is_array($_REQUEST['itemid'])){
 				$itemid_lst = implode(',',$_REQUEST['itemid']);
 				$item_cout = count($_REQUEST['itemid']);
@@ -360,7 +366,7 @@ include_once "include/page_header.php";
 						' AND i.itemid in ('.$itemid_lst.')'.$cond_clock.
 					' ORDER BY h.clock desc, h.id DESC';
 			$result=DBselect($sql,$limit);
-			
+
 			if(!isset($_REQUEST['plaintext'])){
 				$table = new CTableInfo('...','log_history_table');
 				$table->addOption('id','graph');
@@ -417,7 +423,7 @@ include_once "include/page_header.php";
 					array_push($new_row,$row['source']);
 				}
 
-				array_push($new_row, 
+				array_push($new_row,
 						new CCol(
 							get_severity_description($row['severity']),
 							get_severity_style($row['severity'])
@@ -431,7 +437,7 @@ include_once "include/page_header.php";
 
 				if(!isset($_REQUEST['plaintext'])){
 
-					$crow = new CRow($new_row); 
+					$crow = new CRow($new_row);
 
 					if(is_null($color_style) && is_array($_REQUEST['itemid'])){
 						$min_color = 0x98;
@@ -440,7 +446,7 @@ include_once "include/page_header.php";
 						$int_color *= array_search($row['itemid'],$_REQUEST['itemid']);
 						$int_color += $min_color;
 						$crow->addOption('style','background-color: '.sprintf("#%X%X%X",$int_color,$int_color,$int_color));
-					} 
+					}
 					else {
 						$crow->setClass($color_style);
 					}
@@ -452,7 +458,7 @@ include_once "include/page_header.php";
 					echo "\t".$row['clock']."\t".htmlspecialchars($row['value'])."\n";
 				}
 			}
-			
+
 			if(!isset($_REQUEST['plaintext']))
 				$table->ShowEnd();	// to solve memory leak we call 'Show' method by steps
 			else
@@ -486,7 +492,7 @@ include_once "include/page_header.php";
 
 COpt::profiling_start('history');
 			while($row=DBfetch($result)){
-				
+
 				if($DB['TYPE'] == 'ORACLE' && $item_type == ITEM_VALUE_TYPE_TEXT){
 					if(isset($row['value']))
 						$row['value'] = $row['value']->load();
@@ -497,7 +503,7 @@ COpt::profiling_start('history');
 				if($row['valuemapid'] > 0)
 					$value = replace_value_by_map($row['value'], $row['valuemapid']);
 				else
-					$value = $row['value']; 
+					$value = $row['value'];
 
 				$new_row = array(date('Y.M.d H:i:s',$row['clock']));
 				if(str_in_array($item_type,array(ITEM_VALUE_TYPE_FLOAT,ITEM_VALUE_TYPE_UINT64))){
@@ -506,10 +512,10 @@ COpt::profiling_start('history');
 				else{
 					$pre = new CTag('pre','yes');
 					$pre->addItem($value);
-					
+
 					array_push($new_row,$pre);
 				}
-				
+
 				if(!isset($_REQUEST['plaintext'])){
 					$table->ShowRow($new_row);
 				}
@@ -518,7 +524,7 @@ COpt::profiling_start('history');
 					echo "\t".$row['clock']."\t".htmlspecialchars($row['value'])."\n";
 				}
 			}
-			
+
 			if(!isset($_REQUEST['plaintext'])){
 				$table->ShowEnd();	// to solve memory leak we call 'Show' method by steps
 				echo SBR;
@@ -531,24 +537,24 @@ COpt::profiling_stop('history');
 	}
 
 	if(!isset($_REQUEST['plaintext'])){
-	
+
 		if(str_in_array($_REQUEST['action'],array('showvalues','showgraph'))){
-			
+
 			$stime = get_min_itemclock_by_itemid($_REQUEST['itemid']);
 			$stime = (is_null($stime))?0:$stime;
 			$bstime = time()-$effectiveperiod;
-			
+
 			if(isset($_REQUEST['stime'])){
 				$bstime = $_REQUEST['stime'];
 				$bstime = mktime(substr($bstime,8,2),substr($bstime,10,2),0,substr($bstime,4,2),substr($bstime,6,2),substr($bstime,0,4));
 			}
-			
+
  			$script = 	'scrollinit(0,'.$effectiveperiod.','.$stime.',0,'.$bstime.');
 						showgraphmenu("graph");';
 			if(isset($dom_graph_id))
 						$script.='graph_zoom_init("'.$dom_graph_id.'",'.$bstime.','.$effectiveperiod.',ZBX_G_WIDTH, 200, true);';
-							
-			zbx_add_post_js($script); 
+
+			zbx_add_post_js($script);
 
 //		navigation_bar("history.php",$to_save_request);
 		}
diff --git a/frontends/php/hostprofiles.php b/frontends/php/hostprofiles.php
index 6353281..712462f 100644
--- a/frontends/php/hostprofiles.php
+++ b/frontends/php/hostprofiles.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -40,47 +40,41 @@ include_once "include/page_header.php";
 
 	check_fields($fields);
 	validate_sort_and_sortorder('h.host',ZBX_SORT_UP);
-	validate_group(PERM_READ_ONLY, array("allow_all_hosts","always_select_first_host","monitored_hosts","with_items"));
+
+	$params = array();
+	$options = array('allow_all_hosts','monitored_hosts','with_items');
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');	
+	foreach($options as $option) $params[$option] = 1;
 	
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+	validate_group($PAGE_GROUPS, $PAGE_HOSTS, false);
+
 	$prof_type = get_request('prof_type',0);
 ?>
 <?php
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST,PERM_RES_IDS_ARRAY);
+	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
 	
 	$r_form = new CForm();
-	$r_form->SetMethod('get');
+	$r_form->setMethod('get');
 
-	$cmbGroup = new CComboBox("groupid",$_REQUEST["groupid"],"submit()");
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-		
-	$result=DBselect('SELECT DISTINCT g.groupid,g.name '.
-		' FROM groups g, hosts_groups hg, hosts h '.
-		' WHERE '.DBcondition('h.hostid',$available_hosts).
-			' AND hg.groupid=g.groupid '.
-			' AND h.status='.HOST_STATUS_MONITORED.
-			' AND hg.hostid=h.hostid '.
-			' AND EXISTS (SELECT i.hostid FROM items i WHERE i.hostid=h.hostid) '.
-		' ORDER BY g.name');
-	while($row=DBfetch($result)){
-		$cmbGroup->AddItem(
-				$row['groupid'],
-				get_node_name_by_elid($row['groupid']).$row['name']
-				);
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	
-	$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
+	$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
 	
 	$cmbProf = new CComboBox('prof_type',$prof_type,'javascript: submit();');
-	$cmbProf->Additem(0, S_NORMAL);
-	$cmbProf->Additem(1, S_EXTENDED);
+	$cmbProf->additem(0, S_NORMAL);
+	$cmbProf->additem(1, S_EXTENDED);
 	
-	$r_form->AddItem(array(SPACE.S_HOST_PROFILES.SPACE,$cmbProf));
+	$r_form->addItem(array(SPACE.S_HOST_PROFILES.SPACE,$cmbProf));
 	
 	show_table_header(S_HOST_PROFILES_BIG, $r_form);
 ?>
 
 <?php
-	if(isset($_REQUEST["hostid"])){
+	if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid']>0)){
 		echo SBR;
 
 		if($prof_type){
@@ -96,14 +90,14 @@ include_once "include/page_header.php";
 			$table->setHeader(array(
 				is_show_subnodes() ? make_sorting_link(S_NODE,'h.hostid') : null,
 				make_sorting_link(S_HOST,'h.host'),
-			   ($_REQUEST["groupid"] > 0)?null:make_sorting_link(S_GROUP,'g.name'),
+			   ($_REQUEST['groupid'] > 0)?null:make_sorting_link(S_GROUP,'g.name'),
 				make_sorting_link(S_DEVICE_OS_SHORT,'hpe.device_os_short'),
 				make_sorting_link(S_DEVICE_HW_ARCH,'hpe.device_hw_arch'),
 				make_sorting_link(S_DEVICE_TYPE,'hpe.device_type'),
 				make_sorting_link(S_DEVICE_STATUS,'hpe.device_status'))
 			);
 			
-			if($_REQUEST["groupid"] > 0){
+			if($_REQUEST['groupid'] > 0){
 				$sql='SELECT DISTINCT h.hostid,h.host,hpe.device_os_short,hpe.device_hw_arch,hpe.device_type,hpe.device_status'.
 					' FROM hosts h,hosts_profiles_ext hpe,hosts_groups hg,groups g '.
 					' WHERE h.hostid=hpe.hostid '.
diff --git a/frontends/php/hosts.php b/frontends/php/hosts.php
index f5d8f87..81524d3 100644
--- a/frontends/php/hosts.php
+++ b/frontends/php/hosts.php
@@ -32,19 +32,19 @@ include_once('include/page_header.php');
 
 	$_REQUEST['config'] = get_request('config',get_profile('web.hosts.config',0));
 	
+	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE);
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE);
-	if(isset($_REQUEST['hostid']) && $_REQUEST['hostid'] > 0 && !uint_in_array($_REQUEST['hostid'], $available_hosts)) {
+	
+	if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid']>0) && !isset($available_groups[$_REQUEST['groupid']])){
 		access_deny();
 	}
-	if(isset($_REQUEST['apphostid']) && $_REQUEST['apphostid'] > 0 && !uint_in_array($_REQUEST['apphostid'], $available_hosts)) {
+	if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid']>0) && !isset($available_hosts[$_REQUEST['hostid']])) {
 		access_deny();
 	}
-
-	if(isset($_REQUEST['groupid']) && $_REQUEST['groupid'] > 0){
-		if(!uint_in_array($_REQUEST['groupid'], get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY))){
-			access_deny();
-		}
+	if(isset($_REQUEST['apphostid']) && ($_REQUEST['apphostid']>0) && !isset($available_hosts[$_REQUEST['apphostid']])) {
+		access_deny();
 	}
+
 ?>
 <?php
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
@@ -135,13 +135,6 @@ include_once('include/page_header.php');
 
 	check_fields($fields);
 	validate_sort_and_sortorder('h.host',ZBX_SORT_UP);
-	
-	if($_REQUEST['config']==4)
-		validate_group_with_host(PERM_READ_WRITE,array('always_select_first_host','only_current_node'),'web.last.conf.groupid', 'web.last.conf.hostid');
-	else if($_REQUEST['config']==0)
-		validate_group(PERM_READ_WRITE,array('real_hosts'),'web.last.conf.groupid');
-	else if($_REQUEST['config']==3)
-		validate_group(PERM_READ_WRITE,array('templated_hosts'),'web.last.conf.groupid');
 
 	update_profile('web.hosts.config',$_REQUEST['config'], PROFILE_TYPE_INT);
 ?>
@@ -434,9 +427,10 @@ include_once('include/page_header.php');
 			$audit_action 	= AUDIT_ACTION_ADD;
 		}
 
-		if(!zbx_empty($hostid) && $clone_hostid && ($_REQUEST['form'] == 'full_clone')){
+		if(!zbx_empty($hostid) && $hostid && $clone_hostid && ($_REQUEST['form'] == 'full_clone')){
 // Host applications
-			$res = get_applications_by_hostid($clone_hostid);
+			$sql = 'SELECT * FROM applications WHERE hostid='.$clone_hostid.' AND templateid=0';
+			$res = DBselect($sql);
 			while($db_app = DBfetch($res)){
 				add_application($db_app['name'], $hostid, 0);
 			}
@@ -454,7 +448,7 @@ include_once('include/page_header.php');
 			}
 						
 // Host triggers
-			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array($clone_hostid), PERM_RES_IDS_ARRAY);
 			
 			$sql = 'SELECT DISTINCT t.triggerid, t.description '.
 					' FROM triggers t, items i, functions f'.
@@ -469,9 +463,9 @@ include_once('include/page_header.php');
 			while($db_trig = DBfetch($res)){
 				$result &= copy_trigger_to_host($db_trig['triggerid'], $hostid, true);
 			}
-		
+
 // Host graphs
-			$available_graphs = get_accessible_graphs(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+			$available_graphs = get_accessible_graphs(PERM_READ_ONLY, array($clone_hostid), PERM_RES_IDS_ARRAY);
 			
 			$sql = 'SELECT DISTINCT g.graphid, g.name '.
 						' FROM graphs g, graphs_items gi,items i '.
@@ -588,9 +582,8 @@ include_once('include/page_header.php');
 	}
 /* ADD / REMOVE HOSTS FROM GROUP*/
 	else if(($_REQUEST['config']==0 || $_REQUEST['config']==3) && (inarr_isset(array('add_to_group','hostid')))){
-		global $USER_DETAILS;
-
-		if(!uint_in_array($_REQUEST['add_to_group'], get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY))){
+//		if(!uint_in_array($_REQUEST['add_to_group'], get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY))){
+		if(!isset($available_groups[$_REQUEST['add_to_group']])){
 			access_deny();
 		}
 
@@ -601,9 +594,8 @@ include_once('include/page_header.php');
 		show_messages($result,S_HOST_UPDATED,S_CANNOT_UPDATE_HOST);
 	}
 	else if(($_REQUEST['config']==0 || $_REQUEST['config']==3) && (inarr_isset(array('delete_from_group','hostid')))){
-		global $USER_DETAILS;
-
-		if(!uint_in_array($_REQUEST['delete_from_group'], get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY))){
+//		if(!uint_in_array($_REQUEST['delete_from_group'], get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY))){
+		if(!isset($available_groups[$_REQUEST['delete_from_group']])){
 			access_deny();
 		}
 
@@ -968,29 +960,103 @@ include_once('include/page_header.php');
 			unset($_REQUEST['disable']);
 	}
 
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY,null,AVAILABLE_NOCACHE); /* update available_hosts after ACTIONS */
+//	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY,null,AVAILABLE_NOCACHE); /* update available_hosts after ACTIONS */
 ?>
 <?php
+	$params = array();	
+	switch($_REQUEST['config']){
+		case 0:
+			$options = array('only_current_node','allow_all','real_hosts');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+			
+			validate_group($PAGE_GROUPS, $PAGE_HOSTS, false);
+			break;
+		case 1:
+			$options = array('only_current_node');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['groupids'], $params);
+
+			validate_group($PAGE_GROUPS, $PAGE_HOSTS, $PAGE_HOSTS, false);
+			break;
+		case 2:
+			$options = array('only_current_node','templated_hosts');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+
+//			$params = array();	
+//			$options = array('only_current_node','not_proxy_hosts');
+//			foreach($options as $option) $params[$option] = 1;
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $available_groups, $params);	// more hosts
+
+			validate_group($PAGE_GROUPS, $PAGE_HOSTS, false);
+
+			break;
+		case 3:
+			$options = array('only_current_node','allow_all','templated_hosts');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+	
+			validate_group($PAGE_GROUPS, $PAGE_HOSTS, false);
+			break;
+		case 5:
+			$options = array('only_current_node');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+	
+			validate_group($PAGE_GROUPS, $PAGE_HOSTS, false);
+			break;
+		default:
+			$options = array('only_current_node');
+			if(isset($_REQUEST['form']) || isset($_REQUEST['massupdate'])) array_push($options,'do_not_select_if_empty');
+			
+			foreach($options as $option) $params[$option] = 1;
+			$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+			$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+			
+			validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+	}
+
+//	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,null,null,AVAILABLE_NOCACHE); /* update available_hosts after ACTIONS */
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+?>
+<?php
+
 	$frmForm = new CForm();
-	$frmForm->SetMethod('get');
+	$frmForm->setMethod('get');
 	
 	$cmbConf = new CComboBox('config',$_REQUEST['config'],'submit()');
-	$cmbConf->AddItem(0,S_HOSTS);
-	$cmbConf->AddItem(3,S_TEMPLATES);
-	$cmbConf->AddItem(5,S_PROXIES);
-	$cmbConf->AddItem(1,S_HOST_GROUPS);
-	$cmbConf->AddItem(2,S_TEMPLATE_LINKAGE);
-	$cmbConf->AddItem(4,S_APPLICATIONS);
-//	$cmbConf->AddItem(6,S_MASS_UPDATE);
+	$cmbConf->addItem(0,S_HOSTS);
+	$cmbConf->addItem(3,S_TEMPLATES);
+	$cmbConf->addItem(5,S_PROXIES);
+	$cmbConf->addItem(1,S_HOST_GROUPS);
+	$cmbConf->addItem(2,S_TEMPLATE_LINKAGE);
+	$cmbConf->addItem(4,S_APPLICATIONS);
+//	$cmbConf->addItem(6,S_MASS_UPDATE);
 
 	switch($_REQUEST['config']){
 		case 0:
 			$btn = new CButton('form',S_CREATE_HOST);
-			$frmForm->AddVar('groupid',get_request('groupid',0));
+			$frmForm->addVar('groupid',get_request('groupid',0));
 			break;
 		case 3:
 			$btn = new CButton('form',S_CREATE_TEMPLATE);
-			$frmForm->AddVar('groupid',get_request('groupid',0));
+			$frmForm->addVar('groupid',get_request('groupid',0));
 			break;
 		case 5:
 			$btn = new CButton('form',S_CREATE_PROXY);
@@ -1000,23 +1066,24 @@ include_once('include/page_header.php');
 			break;
 		case 4: 
 			$btn = new CButton('form',S_CREATE_APPLICATION);
-			$frmForm->AddVar('hostid',get_request('hostid',0));
+			$frmForm->addVar('hostid',get_request('hostid',0));
 			break;
 		case 2: 
 			break;
 	}
 
-	$frmForm->AddItem($cmbConf);
+	$frmForm->addItem($cmbConf);
 	if(isset($btn) && !isset($_REQUEST['form'])){
-		$frmForm->AddItem(SPACE);
-		$frmForm->AddItem($btn);
+		$frmForm->addItem(SPACE);
+		$frmForm->addItem($btn);
 	}
 	show_table_header(S_CONFIGURATION_OF_HOSTS_GROUPS_AND_TEMPLATES, $frmForm);
 	echo SBR;
 ?>
 <?php
+	$row_count = 0;
+	
 	if($_REQUEST['config']==0 || $_REQUEST['config']==3){
-
 		$show_only_tmp=($_REQUEST['config'] == 3)?1:0;
 
 		if(isset($_REQUEST['massupdate']) && isset($_REQUEST['hosts'])){
@@ -1025,46 +1092,31 @@ include_once('include/page_header.php');
 		else if(isset($_REQUEST['form'])){
 			insert_host_form($show_only_tmp);
 		}
-		else {
-			if($show_only_tmp==1)
-				$status_filter = ' AND h.status IN ('.HOST_STATUS_TEMPLATE.') ';
-			else
-				$status_filter = ' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.') ';
-
-			$cmbGroups = new CComboBox('groupid',get_request('groupid',0),'submit()');
-			$cmbGroups->AddItem(0,S_ALL_SMALL);
-
-			$sql = 'SELECT DISTINCT g.groupid,g.name '.
-					' FROM groups g,hosts_groups hg,hosts h '.
-					' WHERE '.DBcondition('h.hostid',$available_hosts).
-						' AND g.groupid=hg.groupid '.
-						' AND h.hostid=hg.hostid'.
-						$status_filter.
-					' ORDER BY g.name';
-
-			$result=DBselect($sql);
-			while($row=DBfetch($result)){
-				$cmbGroups->addItem($row['groupid'],$row['name']);
-				if(bccomp($row['groupid'], $_REQUEST['groupid']) == 0) $correct_host = 1;
-			}
-			
-			if(!isset($correct_host)){
-				$_REQUEST['groupid'] = 0;
-				$cmbGroups->setValue($_REQUEST['groupid']);
-			}
-
+		else{
+		
 			$frmForm = new CForm();
 			$frmForm->setMethod('get');
 
 			$frmForm->addVar('config',$_REQUEST['config']);
-			$frmForm->addItem(S_GROUP.SPACE);
-			$frmForm->addItem($cmbGroups);
-			show_table_header($show_only_tmp ? S_TEMPLATES_BIG : S_HOSTS_BIG, $frmForm);
 
-	/* table HOSTS */
+			$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+			foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+				$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
+			}
+			
+			$frmForm->addItem(array(S_GROUP.SPACE,$cmbGroups));
 			
-			if(isset($_REQUEST['groupid']) && $_REQUEST['groupid']==0) unset($_REQUEST['groupid']);
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');
+			$header_name = ($show_only_tmp) ? S_TEMPLATES_BIG : S_HOSTS_BIG;
+	
+			$header = get_table_header(array($header_name,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);							
+			show_table_header($header, $frmForm);
 
+/* table HOSTS */			
 			$form = new CForm();
 			
 			$form->setName('hosts');
@@ -1084,37 +1136,35 @@ include_once('include/page_header.php');
 				S_ACTIONS
 				));
 		
-			$sql='SELECT DISTINCT h.* FROM ';
+
 				
-			if(isset($_REQUEST["groupid"])){
-				$sql.= ' hosts h,hosts_groups hg ';
-				$sql.= ' WHERE hg.groupid='.$_REQUEST['groupid'].
-							' AND hg.hostid=h.hostid '.
-							' AND';
+			$sql_from = '';
+			$sql_where = '';
+			if($_REQUEST['groupid'] > 0){
+				$sql_from.= ',hosts_groups hg ';
+				$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'].' AND hg.hostid=h.hostid ';
 			} 
-			else{  
-				$sql.= ' hosts h WHERE ';
-			}
 			
-			$sql.= DBcondition('h.hostid',$available_hosts).
-				$status_filter.
+			$sql='SELECT DISTINCT h.* '.
+				' FROM hosts h '.$sql_from.
+				' WHERE '.DBcondition('h.hostid',$available_hosts).
+					$sql_where.
 				order_by('h.host,h.port,h.ip,h.status,h.available,h.dns');
-
 			$result=DBselect($sql);
 			while($row=DBfetch($result)){
 				$description = array();
 
-				if($row["proxy_hostid"]){
-					$proxy = get_host_by_hostid($row["proxy_hostid"]);
-					array_push($description,$proxy["host"],":");
+				if($row['proxy_hostid']){
+					$proxy = get_host_by_hostid($row['proxy_hostid']);
+					array_push($description,$proxy['host'],':');
 				}
 			
-				array_push($description, new CLink($row["host"], "hosts.php?form=update&hostid=".$row["hostid"].url_param("groupid").url_param("config"), 'action'));
+				array_push($description, new CLink($row['host'], 'hosts.php?form=update&hostid='.$row['hostid'].url_param('groupid').url_param('config'), 'action'));
 
 				$templates = get_templates_by_hostid($row['hostid']);
 				
 				$host=new CCol(array(
-					new CCheckBox('hosts['.$row["hostid"].']',NULL,NULL,$row["hostid"]),
+					new CCheckBox('hosts['.$row['hostid'].']',NULL,NULL,$row['hostid']),
 					SPACE,
 					$description));
 		
@@ -1130,7 +1180,7 @@ include_once('include/page_header.php');
 				else{
 					$dns = empty($row['dns'])?'-':$row['dns'];
 					$ip = empty($row['ip'])?'-':$row['ip'];
-					$port = empty($row['port'])?'-':$row["port"];
+					$port = empty($row['port'])?'-':$row['port'];
 
 					if(1 == $row['useip']){
 						$ip = bold($ip);
@@ -1168,11 +1218,11 @@ include_once('include/page_header.php');
 					if($row['error'] == '')	$error = new CCol(SPACE,'off');
 					else			$error = new CCol($row['error'],'on');
 
-					$row["error"] = trim($row["error"]);
-					if(empty($row["error"]))
-						$error = new CCol('-',"off");
+					$row['error'] = trim($row['error']);
+					if(empty($row['error']))
+						$error = new CCol('-','off');
 					else 
-						$error = new CCol($row["error"],"on");
+						$error = new CCol($row['error'],'on');
 				}
 
 
@@ -1193,6 +1243,8 @@ include_once('include/page_header.php');
 					$available,
 					$error,
 					$show));
+					
+				$row_count++;
 
 				$jsmenu = new CPUMenu(null,270);
 				$jsmenu->InsertJavaScript();
@@ -1219,68 +1271,69 @@ include_once('include/page_header.php');
 
 		}
 	}
-	else if($_REQUEST["config"]==1){
+	else if($_REQUEST['config']==1){
 	
-		if(isset($_REQUEST["form"])){
-			insert_hostgroups_form(get_request("groupid",NULL));
+		if(isset($_REQUEST['form'])){
+			insert_hostgroups_form($_REQUEST['groupid']);
 		} 
 		else {
-			show_table_header(S_HOST_GROUPS_BIG);
+		
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');	
+			$header = get_table_header(array(S_HOST_GROUPS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);						
+			show_table_header($header );
 
 			$form = new CForm('hosts.php');
 			
-			$form->SetName('groups');
-			$form->AddVar("config",get_request("config",0));
+			$form->setName('groups');
+			$form->addVar('config',get_request('config',0));
 
 			$table = new CTableInfo(S_NO_HOST_GROUPS_DEFINED);
 
 			$table->setHeader(array(
-				array(	new CCheckBox("all_groups",NULL,
-						"CheckAll('".$form->GetName()."','all_groups');"),
-					SPACE,
-					make_sorting_link(S_NAME,'g.name')),
-				' # ',
-				S_MEMBERS));
-
-			$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_WRITE);
-
-			$db_groups=DBselect('SELECT g.groupid,g.name '.
-							' FROM groups g'.
-							' WHERE '.DBcondition('g.groupid',$available_groups).
-							order_by('g.name'));
+				array(new CCheckBox('all_groups',NULL,"CheckAll('".$form->GetName()."','all_groups');"),SPACE,make_sorting_link(S_NAME,'g.name')),
+					' # ',
+					S_MEMBERS));
+
+			$sql = 'SELECT g.groupid,g.name '.
+					' FROM groups g'.
+					' WHERE '.DBcondition('g.groupid',$available_groups).
+					order_by('g.name');
+			$db_groups=DBselect($sql);
 			while($db_group=DBfetch($db_groups)){
-				$db_hosts = DBselect('SELECT DISTINCT h.host, h.status'.
+				$count = 0;
+				$hosts = array();
+
+				$sql = 'SELECT DISTINCT h.host, h.status'.
 						' FROM hosts h, hosts_groups hg'.
 						' WHERE h.hostid=hg.hostid '.
 							' AND hg.groupid='.$db_group['groupid'].
 							' AND '.DBcondition('h.hostid',$available_hosts).
-							' AND h.status in ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-						' order by host'
-						);
-
-				$hosts = array();
-				$count = 0;
+						' ORDER BY host';
+				$db_hosts = DBselect($sql);
 				while($db_host=DBfetch($db_hosts)){
-					$style = $db_host["status"]==HOST_STATUS_MONITORED ? NULL: ( 
-						$db_host["status"]==HOST_STATUS_TEMPLATE ? "unknown" :
-						"on");
+					$style = ($db_host['status']==HOST_STATUS_MONITORED)?NULL:(($db_host['status']==HOST_STATUS_TEMPLATE)?'unknown':'on');
 
-					array_push($hosts, empty($hosts) ? '' : ', ', new CSpan($db_host["host"], $style));
+					array_push($hosts, empty($hosts)?'':', ', new CSpan($db_host['host'], $style));
 					$count++;
 				}
 
-				$table->AddRow(array(
+				$table->addRow(array(
 					array(
-						new CCheckBox('groups['.$db_group["groupid"].']',NULL,NULL,$db_group["groupid"]),
+						new CCheckBox('groups['.$db_group['groupid'].']',NULL,NULL,$db_group['groupid']),
 						SPACE,
 						new CLink(
-							$db_group["name"],
-							"hosts.php?form=update&groupid=".$db_group["groupid"].
-							url_param("config"),'action')
+							$db_group['name'],
+							'hosts.php?form=update&groupid='.$db_group['groupid'].
+							url_param('config'),'action')
 					),
 					$count,
 					new CCol((empty($hosts)?'-':$hosts),'wraptext')
 					));
+					$row_count++;
 			}
 			$table->SetFooter(new CCol(array(
 				new CButtonQMessage('activate',S_ACTIVATE_SELECTED,S_ACTIVATE_SELECTED_HOSTS_Q),
@@ -1297,103 +1350,130 @@ include_once('include/page_header.php');
 // Original mod by scricca@vipsnet.net
 // Modified by Aly
 /* this code adds links to Template Names in Template_Linkage page and link them to the form in forms.inc.php */
-	else if($_REQUEST["config"]==2){
+	else if($_REQUEST['config']==2){
 	
-		if(isset($_REQUEST["form"])){
-			insert_template_form(get_request("hostid",NULL));
+		if(isset($_REQUEST['form'])){
+			insert_template_form($PAGE_HOSTS['hostids']);
 		} 
 		else{
-	
-			show_table_header(S_TEMPLATE_LINKAGE_BIG);
+			$frmForm = new CForm();
+			$frmForm->setMethod('get');
+
+			$frmForm->addVar('config',$_REQUEST['config']);
+
+			$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+			foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+				$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
+			}
+			
+			$frmForm->addItem(array(S_GROUP.SPACE,$cmbGroups));
+			
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');
+			$header = get_table_header(array(S_TEMPLATE_LINKAGE_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);							
+			show_table_header($header, $frmForm);
 		
 			$table = new CTableInfo(S_NO_LINKAGES);
-			$table->SetHeader(array(S_TEMPLATES,S_HOSTS));
-		
-			$templates = DBSelect('SELECT h.* FROM hosts h'.
-					' WHERE h.status='.HOST_STATUS_TEMPLATE.
-						' AND '.DBcondition('h.hostid',$available_hosts).
-					' ORDER BY h.host');
-			while($template = DBfetch($templates)){
+			$table->setHeader(array(S_TEMPLATES,S_HOSTS));
+					
+			$sql_from = '';
+			$sql_where = '';
+			if($_REQUEST['groupid'] > 0){
+				$sql_from.= ',hosts_groups hg ';
+				$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'].' AND hg.hostid=h.hostid ';
+			} 
+
+			$templates = array();
+			$templateids = array();
+			$sql = 'SELECT h.hostid, h.host '.
+					' FROM hosts h '.$sql_from.
+					' WHERE '.DBcondition('h.hostid',$available_hosts).
+						$sql_where.
+					' ORDER BY h.host';
+			$result = DBSelect($sql);
+			while($template = DBfetch($result)) {
+				$templateids[$template['hostid']] = $template['hostid'];
+				$templates[$template['hostid']] = $template; 
+			}
+			
+			$allowed_hosts = get_accessible_hosts_by_user($USER_DETAILS, PERM_READ_ONLY);
 			
-				$hosts = DBSelect('SELECT h.* '.
+			$sql = 'SELECT h.host, h.hostid, h.status, ht.templateid '.
 					' FROM hosts h, hosts_templates ht '.
-					' WHERE ht.templateid='.$template['hostid'].
-						' AND ht.hostid=h.hostid '.
-						' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.') '.
-						' AND '.DBcondition('h.hostid',$available_hosts).
-					' ORDER BY host');
+					' WHERE ht.hostid=h.hostid '.
+						' AND '.DBcondition('h.hostid', $allowed_hosts).
+						' AND '.DBcondition('ht.templateid', $templateids).
+					' ORDER BY host';
+			$result = DBSelect($sql);
+			while($host = DBfetch($result)){
+				if(!isset($templates[$host['templateid']]['hosts'])) $templates[$host['templateid']]['hosts'] = array(); 
+				$templates[$host['templateid']]['hosts'][] = $host;
+			}
+			
+			foreach($templates as $templateid => $template) {
 				$host_list = array();
-				while($host = DBfetch($hosts)){
-					$style = ($host["status"] == HOST_STATUS_MONITORED)?NULL:'on';
-					array_push($host_list, empty($host_list)?'':', ', new CSpan($host["host"], $style));
+				
+				if(isset($template['hosts'])) {
+					foreach($template['hosts'] as $host) {
+						switch($host['status']) {
+							case HOST_STATUS_NOT_MONITORED:
+								$style = 'on';
+								break;
+							case HOST_STATUS_TEMPLATE:
+								$style = 'unknown';
+								break;
+							default:
+								$style = null;
+						}										
+						array_push($host_list, empty($host_list)?'':', ', new CSpan($host['host'], $style));
+					}
 				}
-				$table->AddRow(array(		
+				
+				$table->addRow(array(		
 					new CCol(array(
 						new CLink($template['host'],'hosts.php?form=update&hostid='.
-							$template['hostid'].url_param('hostid').url_param('config'), 'action')
-						),'unknown'),
+							$template['hostid'].url_param('groupid').url_param('config'), 'action')
+						), 'unknown'),
 					empty($host_list)?'-':new CCol($host_list,'wraptext')
 				));
-			}
-			
-			$table->Show();
-		}
+			}	
+			$table->show();
+			$row_count = $table->getNumRows();
+		}		
 //----- END MODE -----
 	}
-	else if($_REQUEST["config"]==4){
-		if(isset($_REQUEST["form"])){
+	else if($_REQUEST['config']==4){
+		if(isset($_REQUEST['form'])){
 			insert_application_form();
 		} 
 		else {
 	// Table HEADER
 			$form = new CForm();
-			$form->SetMethod('get');
+			$form->setMethod('get');
 			
-			$cmbGroup = new CComboBox("groupid",$_REQUEST["groupid"],"submit();");
-			$cmbGroup->AddItem(0,S_ALL_SMALL);
-
-			$result=DBselect('SELECT DISTINCT g.groupid,g.name '.
-						' FROM groups g,hosts_groups hg '.
-						' WHERE g.groupid=hg.groupid '.
-							' AND '.DBcondition('hg.hostid',$available_hosts).
-							' ORDER BY name');
-							
-			while($row=DBfetch($result)){
-				$cmbGroup->AddItem($row["groupid"],$row["name"]);
-			}
-			
-			$form->AddItem(S_GROUP.SPACE);
-			$form->AddItem($cmbGroup);
-
-			if(isset($_REQUEST["groupid"]) && $_REQUEST["groupid"]>0){
-				$sql='SELECT DISTINCT h.hostid,h.host '.
-					' FROM hosts h,hosts_groups hg '.
-					' WHERE hg.groupid='.$_REQUEST['groupid'].
-						' AND hg.hostid=h.hostid '.
-						' AND '.DBcondition('h.hostid',$available_hosts).
-						' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.')'.
-					' GROUP BY h.hostid,h.host '.
-					' ORDER BY h.host';
+			$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+			$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
+		
+			foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+				$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 			}
-			else{
-				$sql='SELECT DISTINCT h.hostid,h.host '.
-					' FROM hosts h '.
-					' WHERE '.DBcondition('h.hostid',$available_hosts).
-						' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-						' GROUP BY h.hostid,h.host '.
-						' ORDER BY h.host';
+			foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+				$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 			}
-			$cmbHosts = new CComboBox("hostid",$_REQUEST["hostid"],"submit();");
-
-			$result=DBselect($sql);
-			while($row=DBfetch($result)){
-				$cmbHosts->AddItem($row["hostid"],$row["host"]);
-			}
-
-			$form->AddItem(SPACE.S_HOST.SPACE);
-			$form->AddItem($cmbHosts);
 			
-			show_table_header(S_APPLICATIONS_BIG, $form);
+			$form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+			$form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+			
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');
+			$header = get_table_header(array(S_APPLICATIONS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);							
+			show_table_header($header, $form);
 
 /* TABLE */
 
@@ -1402,7 +1482,7 @@ include_once('include/page_header.php');
 
 			$table = new CTableInfo();
 			$table->SetHeader(array(
-				array(new CCheckBox("all_applications",NULL,"CheckAll('".$form->GetName()."','all_applications');"),
+				array(new CCheckBox('all_applications',NULL,"CheckAll('".$form->GetName()."','all_applications');"),
 				SPACE,
 				make_sorting_link(S_APPLICATION,'a.name')),
 				S_SHOW
@@ -1413,63 +1493,68 @@ include_once('include/page_header.php');
 									' WHERE a.hostid='.$_REQUEST['hostid'].
 									order_by('a.name'));
 									
-			while($db_app = DBfetch($db_applications))
-			{
-				if($db_app["templateid"]==0)
-				{
+			while($db_app = DBfetch($db_applications)){
+				if($db_app['templateid']==0){
 					$name = new CLink(
-						$db_app["name"],
-						"hosts.php?form=update&applicationid=".$db_app["applicationid"].
-						url_param("config"),'action');
-				} else {
-					$template_host = get_realhost_by_applicationid($db_app["templateid"]);
+						$db_app['name'],
+						'hosts.php?form=update&applicationid='.$db_app['applicationid'].
+						url_param('config'),'action');
+				}
+				else {
+					$template_host = get_realhost_by_applicationid($db_app['templateid']);
 					$name = array(		
-						new CLink($template_host["host"],
-							"hosts.php?hostid=".$template_host["hostid"].url_param("config"),
+						new CLink($template_host['host'],
+							'hosts.php?hostid='.$template_host['hostid'].url_param('config'),
 							'action'),
-						":",
-						$db_app["name"]
+						':',
+						$db_app['name']
 						);
 				}
-				$items=get_items_by_applicationid($db_app["applicationid"]);
+				$items=get_items_by_applicationid($db_app['applicationid']);
 				$rows=0;
 				while(DBfetch($items))	$rows++;
 
-
-				$table->AddRow(array(
-					array(new CCheckBox('applications['.$db_app["applicationid"].']',NULL,NULL,$db_app["applicationid"]),SPACE,$name),
-					array(new CLink(S_ITEMS,"items.php?hostid=".$db_app["hostid"],"action"),
-					SPACE."($rows)")
+				$table->addRow(array(
+					array(new CCheckBox('applications['.$db_app['applicationid'].']',NULL,NULL,$db_app['applicationid']),SPACE,$name),
+					array(new CLink(S_ITEMS,'items.php?hostid='.$db_app['hostid'],'action'),
+					SPACE.'('.$rows.')')
 					));
+				$row_count++;
 			}
-			$table->SetFooter(new CCol(array(
+			$table->setFooter(new CCol(array(
 				new CButtonQMessage('activate',S_ACTIVATE_ITEMS,S_ACTIVATE_ITEMS_FROM_SELECTED_APPLICATIONS_Q),
 				SPACE,
 				new CButtonQMessage('disable',S_DISABLE_ITEMS,S_DISABLE_ITEMS_FROM_SELECTED_APPLICATIONS_Q),
 				SPACE,
 				new CButtonQMessage('delete',S_DELETE_SELECTED,S_DELETE_SELECTED_APPLICATIONS_Q)
 			)));
-			$form->AddItem($table);
-			$form->Show();
+			$form->addItem($table);
+			$form->show();
 		}
 	}
-	else if($_REQUEST["config"]==5){ /* Proxies */
-		if(isset($_REQUEST["form"])){
-			insert_proxies_form(get_request("hostid",NULL));
+	else if($_REQUEST['config']==5){ /* Proxies */
+		if(isset($_REQUEST['form'])){
+			insert_proxies_form(get_request('hostid',NULL));
 		} 
-		else {
-			show_table_header(S_PROXIES_BIG);
-
+		else {		
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');
+			$header = get_table_header(array(S_PROXIES_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);							
+			show_table_header($header);
+			
 			$form = new CForm('hosts.php');
-			$form->SetMethod('get');
+			$form->setMethod('get');
 			
-			$form->SetName('hosts');
-			$form->AddVar("config",get_request("config",0));
+			$form->setName('hosts');
+			$form->addVar('config',get_request('config',0));
 
 			$table = new CTableInfo(S_NO_PROXIES_DEFINED);
 
 			$table->setHeader(array(
-					array(new CCheckBox("all_hosts",NULL,"CheckAll('".$form->GetName()."','all_hosts');"),
+					array(new CCheckBox('all_hosts',NULL,"CheckAll('".$form->GetName()."','all_hosts');"),
 						SPACE,
 						make_sorting_link(S_NAME,'g.name')),
 						S_LASTSEEN_AGE,
@@ -1484,21 +1569,19 @@ include_once('include/page_header.php');
 								order_by('host'));
 					
 			while($db_proxy=DBfetch($db_proxies)){
-				$db_hosts = DBselect('SELECT DISTINCT host,status'.
+				$count = 0;
+				$hosts = array();
+				
+				$sql = 'SELECT DISTINCT host,status '.
 						' FROM hosts'.
 						' WHERE proxy_hostid='.$db_proxy['hostid'].
 							' AND '.DBcondition('hostid',$available_hosts).
 							' AND status in ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.')'.
-						' ORDER BY host'
-						);
-
-				$hosts = array();
-				$count = 0;
+						' ORDER BY host';
+				$db_hosts = DBselect($sql);
 				while($db_host=DBfetch($db_hosts)){
-					$style = $db_host["status"]==HOST_STATUS_MONITORED ? NULL: ( 
-						$db_host["status"]==HOST_STATUS_TEMPLATE ? "unknown" :
-						"on");
-					array_push($hosts, empty($hosts) ? '' : ', ', new CSpan($db_host["host"], $style));
+					$style = ($db_host['status']==HOST_STATUS_MONITORED)?NULL:(($db_host['status']==HOST_STATUS_TEMPLATE)?'unknown' :'on');
+					array_push($hosts, empty($hosts) ? '' : ', ', new CSpan($db_host['host'], $style));
 					$count++;
 				}
 
@@ -1507,20 +1590,22 @@ include_once('include/page_header.php');
 				else
 					$lastclock = '-';
 
-				$table->AddRow(array(
+				$table->addRow(array(
 					array(
-						new CCheckBox('hosts['.$db_proxy["hostid"].']', NULL, NULL, $db_proxy["hostid"]),
+						new CCheckBox('hosts['.$db_proxy['hostid'].']', NULL, NULL, $db_proxy['hostid']),
 						SPACE,
-						new CLink($db_proxy["host"],
-								"hosts.php?form=update&hostid=".$db_proxy["hostid"].url_param("config"),
+						new CLink($db_proxy['host'],
+								'hosts.php?form=update&hostid='.$db_proxy['hostid'].url_param('config'),
 								'action')
 					),
 					$lastclock,
 					$count,
-					new CCol((empty($hosts) ? '-' : $hosts), 'wraptext')
+					new CCol((empty($hosts)?'-':$hosts), 'wraptext')
 					));
+				$row_count++;
 			}
-			$table->SetFooter(new CCol(array(
+			
+			$table->setFooter(new CCol(array(
 				new CButtonQMessage('activate',S_ACTIVATE_SELECTED,S_ACTIVATE_SELECTED_HOSTS_Q),
 				SPACE,
 				new CButtonQMessage('disable',S_DISABLE_SELECTED,S_DISABLE_SELECTED_HOSTS_Q),
@@ -1528,14 +1613,16 @@ include_once('include/page_header.php');
 				new CButtonQMessage('delete',S_DELETE_SELECTED,S_DELETE_SELECTED_GROUPS_Q)
 			)));
 
-			$form->AddItem($table);
-			$form->Show();
+			$form->addItem($table);
+			$form->show();
 		}
 	}
+	
+zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
 
 ?>
 <?php
 
-include_once "include/page_footer.php";
+include_once 'include/page_footer.php';
 
 ?>
diff --git a/frontends/php/httpconf.php b/frontends/php/httpconf.php
index 527630a..2b5ff93 100644
--- a/frontends/php/httpconf.php
+++ b/frontends/php/httpconf.php
@@ -19,105 +19,109 @@
 **/
 ?>
 <?php
-	require_once "include/config.inc.php";
-	require_once "include/hosts.inc.php";
-	require_once "include/httptest.inc.php";
-	require_once "include/forms.inc.php";
+	require_once('include/config.inc.php');
+	require_once('include/hosts.inc.php');
+	require_once('include/httptest.inc.php');
+	require_once('include/forms.inc.php');
 
-	$page["title"] = "S_CONFIGURATION_OF_WEB_MONITORING";
-	$page["file"] = "httpconf.php";
+	$page['title'] = "S_CONFIGURATION_OF_WEB_MONITORING";
+	$page['file'] = 'httpconf.php';
 	$page['hist_arg'] = array('groupid','hostid');
 
-include_once "include/page_header.php";
+include_once 'include/page_header.php';
 
 ?>
 <?php
 
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$fields=array(
-		"applications"=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID,		null),
-		"applicationid"=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID,		null),
-		"close"=>		array(T_ZBX_INT, O_OPT,	null,	IN("1"),	null),
-		"open"=>		array(T_ZBX_INT, O_OPT,	null,	IN("1"),	null),
-
-		"groupid"=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,null),
-		"hostid"=>	array(T_ZBX_INT, O_OPT,  P_SYS,	DB_ID,'isset({form})||isset({save})'),
-
-		"httptestid"=>	array(T_ZBX_INT, O_NO,	 P_SYS,	DB_ID,'(isset({form})&&({form}=="update"))'),
-		"application"=>	array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY,'isset({save})'),
-		"name"=>	array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY.KEY_PARAM(),'isset({save})'),
-		"delay"=>	array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,86400),'isset({save})'),
-		"status"=>	array(T_ZBX_INT, O_OPT,  null,  IN('0,1'),'isset({save})'),
-		"agent"=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
-		"macros"=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
-		"steps"=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
+		'applications'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID,		null),
+		'applicationid'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID,		null),
+		'close'=>		array(T_ZBX_INT, O_OPT,	null,	IN('1'),	null),
+		'open'=>		array(T_ZBX_INT, O_OPT,	null,	IN('1'),	null),
+
+		'groupid'=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,null),
+		'hostid'=>	array(T_ZBX_INT, O_OPT,  P_SYS,	DB_ID,'isset({form})||isset({save})'),
+
+		'httptestid'=>	array(T_ZBX_INT, O_NO,	 P_SYS,	DB_ID,'(isset({form})&&({form}=="update"))'),
+		'application'=>	array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY,'isset({save})'),
+		'name'=>	array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY.KEY_PARAM(),'isset({save})'),
+		'delay'=>	array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,86400),'isset({save})'),
+		'status'=>	array(T_ZBX_INT, O_OPT,  null,  IN('0,1'),'isset({save})'),
+		'agent'=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
+		'macros'=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
+		'steps'=>	array(T_ZBX_STR, O_OPT,  null,	null,'isset({save})'),
 		
-		"new_httpstep"=>	array(T_ZBX_STR, O_OPT,  null,	null,null),
+		'new_httpstep'=>	array(T_ZBX_STR, O_OPT,  null,	null,null),
 
-		"move_up"=>		array(T_ZBX_INT, O_OPT,  P_ACT,  BETWEEN(0,65534), null),
-		"move_down"=>		array(T_ZBX_INT, O_OPT,  P_ACT,  BETWEEN(0,65534), null),
+		'move_up'=>		array(T_ZBX_INT, O_OPT,  P_ACT,  BETWEEN(0,65534), null),
+		'move_down'=>		array(T_ZBX_INT, O_OPT,  P_ACT,  BETWEEN(0,65534), null),
 		
-		"sel_step"=>		array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,65534), null),
+		'sel_step'=>		array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,65534), null),
 
-		"group_httptestid"=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID, null),
+		'group_httptestid'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID, null),
 		
-		"showdisabled"=>	array(T_ZBX_INT, O_OPT,	P_SYS,	IN("0,1"),	null),
-
-		"group_task"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
-		"clone"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
-		"save"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
-		"delete"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
-		"del_sel_step"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
-		"cancel"=>		array(T_ZBX_STR, O_OPT, P_SYS,	null,	null),
-		"form"=>		array(T_ZBX_STR, O_OPT, P_SYS,	null,	null),
-		"form_refresh"=>	array(T_ZBX_INT, O_OPT,	null,	null,	null)
+		'showdisabled'=>	array(T_ZBX_INT, O_OPT,	P_SYS,	IN('0,1'),	null),
+
+		'group_task'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
+		'clone'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
+		'save'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
+		'delete'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
+		'del_sel_step'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
+		'cancel'=>		array(T_ZBX_STR, O_OPT, P_SYS,	null,	null),
+		'form'=>		array(T_ZBX_STR, O_OPT, P_SYS,	null,	null),
+		'form_refresh'=>	array(T_ZBX_INT, O_OPT,	null,	null,	null)
 	);
 
-	$_REQUEST["showdisabled"] = get_request("showdisabled", get_profile("web.httpconf.showdisabled", 0));
+	$_REQUEST['showdisabled'] = get_request('showdisabled', get_profile('web.httpconf.showdisabled', 0));
 	
 	check_fields($fields);
 	validate_sort_and_sortorder('wt.name',ZBX_SORT_UP);
 	
-	$showdisabled = get_request("showdisabled", 0);
+	$showdisabled = get_request('showdisabled', 0);
 	
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY);
+	$params = array();
+	$options = array('only_current_node','not_proxy_hosts');
+	foreach($options as $option) $params[$option] = 1;
+	
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
 
-	if(isset($_REQUEST['hostid']) && !uint_in_array($_REQUEST['hostid'], $available_hosts)){
-		unset($_REQUEST['hostid']);
-	}
-		
-	validate_group_with_host(PERM_READ_WRITE,array("always_select_first_host","only_current_node"),'web.last.conf.groupid', 'web.last.conf.hostid');
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
 
-	update_profile("web.httpconf.showdisabled",$showdisabled, PROFILE_TYPE_STR);
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+
+	update_profile('web.httpconf.showdisabled',$showdisabled, PROFILE_TYPE_STR);
 ?>
 <?php
-	$_REQUEST["applications"] = get_request("applications",get_profile("web.httpconf.applications",array(),PROFILE_TYPE_ARRAY_ID));
+	$_REQUEST['applications'] = get_request('applications',get_profile('web.httpconf.applications',array(),PROFILE_TYPE_ARRAY_ID));
 
-	if(isset($_REQUEST["open"])){
-		if(!isset($_REQUEST["applicationid"])){
-			$_REQUEST["applications"] = array();
+	if(isset($_REQUEST['open'])){
+		if(!isset($_REQUEST['applicationid'])){
+			$_REQUEST['applications'] = array();
 			$show_all_apps = 1;
 		}
-		else if(!uint_in_array($_REQUEST["applicationid"],$_REQUEST["applications"])){
-			array_push($_REQUEST["applications"],$_REQUEST["applicationid"]);
+		else if(!uint_in_array($_REQUEST['applicationid'],$_REQUEST['applications'])){
+			array_push($_REQUEST['applications'],$_REQUEST['applicationid']);
 		}
-		
 	} 
-	else if(isset($_REQUEST["close"])){
-		if(!isset($_REQUEST["applicationid"])){
-			$_REQUEST["applications"] = array();
+	else if(isset($_REQUEST['close'])){
+		if(!isset($_REQUEST['applicationid'])){
+			$_REQUEST['applications'] = array();
 		}
-		else if(($i=array_search($_REQUEST["applicationid"], $_REQUEST["applications"])) !== FALSE){
-			unset($_REQUEST["applications"][$i]);
+		else if(($i=array_search($_REQUEST['applicationid'], $_REQUEST['applications'])) !== FALSE){
+			unset($_REQUEST['applications'][$i]);
 		}
 	}
 
-	/* limit opened application count */
-	while(count($_REQUEST["applications"]) > 25){
-		array_shift($_REQUEST["applications"]);
+/* limit opened application count */
+	while(count($_REQUEST['applications']) > 25){
+		array_shift($_REQUEST['applications']);
 	}
 
-	update_profile("web.httpconf.applications",$_REQUEST["applications"],PROFILE_TYPE_ARRAY_ID);
+	update_profile('web.httpconf.applications',$_REQUEST['applications'],PROFILE_TYPE_ARRAY_ID);
 
 	if(isset($_REQUEST['del_sel_step'])&&isset($_REQUEST['sel_step'])&&is_array($_REQUEST['sel_step'])){
 		foreach($_REQUEST['sel_step'] as $sid)
@@ -146,137 +150,137 @@ include_once "include/page_header.php";
 			$_REQUEST['steps'][$_REQUEST['move_down']] = $tmp;
 		}
 	}
-	else if(isset($_REQUEST["delete"])&&isset($_REQUEST["httptestid"])){
+	else if(isset($_REQUEST['delete'])&&isset($_REQUEST['httptestid'])){
 		$result = false;
-		if($httptest_data = get_httptest_by_httptestid($_REQUEST["httptestid"])){
-			$result = delete_httptest($_REQUEST["httptestid"]);
+		if($httptest_data = get_httptest_by_httptestid($_REQUEST['httptestid'])){
+			$result = delete_httptest($_REQUEST['httptestid']);
 		}
 		show_messages($result, S_SCENARIO_DELETED, S_CANNOT_DELETE_SCENARIO);
 		if($result){
-			$host = get_host_by_applicationid($httptest_data["applicationid"]);
+			$host = get_host_by_applicationid($httptest_data['applicationid']);
 
 			add_audit(AUDIT_ACTION_DELETE, AUDIT_RESOURCE_SCENARIO,
-				S_SCENARIO." [".$httptest_data["name"]."] [".$_REQUEST["httptestid"]."] ".S_HOST." [".$host['host']."]");
+				S_SCENARIO.' ['.$httptest_data['name'].'] ['.$_REQUEST['httptestid'].'] '.S_HOST.' ['.$host['host'].']');
 		}
-		unset($_REQUEST["httptestid"]);
-		unset($_REQUEST["form"]);
+		unset($_REQUEST['httptestid']);
+		unset($_REQUEST['form']);
 	}
-	else if(isset($_REQUEST["clone"]) && isset($_REQUEST["httptestid"])){
-		unset($_REQUEST["httptestid"]);
-		$_REQUEST["form"] = "clone";
+	else if(isset($_REQUEST['clone']) && isset($_REQUEST['httptestid'])){
+		unset($_REQUEST['httptestid']);
+		$_REQUEST['form'] = 'clone';
 	}
-	else if(isset($_REQUEST["save"])){
+	else if(isset($_REQUEST['save'])){
 		/*
 		$delay_flex = get_request('delay_flex',array());
-		$db_delay_flex = "";
+		$db_delay_flex = '';
 		foreach($delay_flex as $val)
 			$db_delay_flex .= $val['delay'].'/'.$val['period'].';';
-		$db_delay_flex = trim($db_delay_flex,";");
+		$db_delay_flex = trim($db_delay_flex,';');
 		// for future use */
 
-		if(isset($_REQUEST["httptestid"])){
-			$result = update_httptest($_REQUEST["httptestid"], $_REQUEST['hostid'], $_REQUEST["application"],
-				$_REQUEST["name"],$_REQUEST["delay"],$_REQUEST["status"],$_REQUEST["agent"],
-				$_REQUEST["macros"],$_REQUEST["steps"]);
+		if(isset($_REQUEST['httptestid'])){
+			$result = update_httptest($_REQUEST['httptestid'], $_REQUEST['hostid'], $_REQUEST['application'],
+				$_REQUEST['name'],$_REQUEST['delay'],$_REQUEST['status'],$_REQUEST['agent'],
+				$_REQUEST['macros'],$_REQUEST['steps']);
 
-			$httptestid = $_REQUEST["httptestid"];
+			$httptestid = $_REQUEST['httptestid'];
 			$action = AUDIT_ACTION_UPDATE;
 			
 			show_messages($result, S_SCENARIO_UPDATED, S_CANNOT_UPDATE_SCENARIO);
 		}
 		else{
-			$httptestid = add_httptest($_REQUEST['hostid'],$_REQUEST["application"],
-				$_REQUEST["name"],$_REQUEST["delay"],$_REQUEST["status"],$_REQUEST["agent"],
-				$_REQUEST["macros"],$_REQUEST["steps"]);
+			$httptestid = add_httptest($_REQUEST['hostid'],$_REQUEST['application'],
+				$_REQUEST['name'],$_REQUEST['delay'],$_REQUEST['status'],$_REQUEST['agent'],
+				$_REQUEST['macros'],$_REQUEST['steps']);
 
 			$result = $httptestid;
 			$action = AUDIT_ACTION_ADD;
 			show_messages($result, S_SCENARIO_ADDED, S_CANNOT_ADD_SCENARIO);
 		}
 		if($result){	
-			$host = get_host_by_hostid($_REQUEST["hostid"]);
+			$host = get_host_by_hostid($_REQUEST['hostid']);
 
 			add_audit($action, AUDIT_RESOURCE_SCENARIO,
-				S_SCENARIO." [".$_REQUEST["name"]."] [".$httptestid."] ".S_HOST." [".$host['host']."]");
+				S_SCENARIO.' ['.$_REQUEST['name'].'] ['.$httptestid.'] '.S_HOST.' ['.$host['host'].']');
 
-			unset($_REQUEST["httptestid"]);
-			unset($_REQUEST["form"]);
+			unset($_REQUEST['httptestid']);
+			unset($_REQUEST['form']);
 		}
 	}
-	else if(isset($_REQUEST["group_task"])&&isset($_REQUEST["group_httptestid"])){
-		if($_REQUEST["group_task"]=="Delete selected"){
+	else if(isset($_REQUEST['group_task'])&&isset($_REQUEST['group_httptestid'])){
+		if($_REQUEST['group_task']=='Delete selected'){
 			$result = false;
 
-			$group_httptestid = $_REQUEST["group_httptestid"];
+			$group_httptestid = $_REQUEST['group_httptestid'];
 			foreach($group_httptestid as $id){
 				if(!($httptest_data = get_httptest_by_httptestid($id)))	continue;
-				/* if($httptest_data["templateid"]<>0)	continue; // for future use */
+				/* if($httptest_data['templateid']<>0)	continue; // for future use */
 				if(delete_httptest($id)){
 					$result = true;
 					
-					$host = get_host_by_applicationid($httptest_data["applicationid"]);
+					$host = get_host_by_applicationid($httptest_data['applicationid']);
 
 					add_audit(AUDIT_ACTION_DELETE, AUDIT_RESOURCE_SCENARIO,
-						S_SCENARIO." [".$httptest_data["name"]."] [".$id."] ".S_HOST." [".$host['host']."]");
+						S_SCENARIO.' ['.$httptest_data['name'].'] ['.$id.'] '.S_HOST.' ['.$host['host'].']');
 				}
 			}
 			show_messages($result, S_SCENARIO_DELETED, null);
 		}
-		else if($_REQUEST["group_task"] == S_ACTIVATE_SELECTED){
+		else if($_REQUEST['group_task'] == S_ACTIVATE_SELECTED){
 			$result = false;
 			
-			$group_httptestid = $_REQUEST["group_httptestid"];
+			$group_httptestid = $_REQUEST['group_httptestid'];
 			foreach($group_httptestid as $id){
 				if(!($httptest_data = get_httptest_by_httptestid($id)))	continue;
 				
 				if(activate_httptest($id)){
 					$result = true;
 					
-					$host = get_host_by_applicationid($httptest_data["applicationid"]);
+					$host = get_host_by_applicationid($httptest_data['applicationid']);
 
 					add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_SCENARIO,
-						S_SCENARIO." [".$httptest_data["name"]."] [".$id."] ".S_HOST." [".$host['host']."]".
+						S_SCENARIO.' ['.$httptest_data['name'].'] ['.$id.'] '.S_HOST.' ['.$host['host'].']'.
 						S_SCENARIO_ACTIVATED);
 				}
 			}
 			show_messages($result, S_SCENARIO_ACTIVATED, null);
 		}
-		else if($_REQUEST["group_task"]== S_DISABLE_SELECTED){
+		else if($_REQUEST['group_task']== S_DISABLE_SELECTED){
 			$result = false;
 			
-			$group_httptestid = $_REQUEST["group_httptestid"];
+			$group_httptestid = $_REQUEST['group_httptestid'];
 			foreach($group_httptestid as $id){
 				if(!($httptest_data = get_httptest_by_httptestid($id)))	continue;
 
 				if(disable_httptest($id)){
 					$result = true;				
 				
-					$host = get_host_by_applicationid($httptest_data["applicationid"]);
+					$host = get_host_by_applicationid($httptest_data['applicationid']);
 
 					add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_SCENARIO,
-						S_SCENARIO." [".$httptest_data["name"]."] [".$id."] ".S_HOST." [".$host['host']."]".
+						S_SCENARIO.' ['.$httptest_data['name'].'] ['.$id.'] '.S_HOST.' ['.$host['host'].']'.
 						S_SCENARIO_DISABLED);
 				}
 			}
 			show_messages($result, S_SCENARIO_DISABLED, null);
 		}
-		else if($_REQUEST["group_task"]== S_CLEAN_HISTORY_SELECTED_SCENARIOS){
+		else if($_REQUEST['group_task']== S_CLEAN_HISTORY_SELECTED_SCENARIOS){
 			$result = false;
 			
-			$group_httptestid = $_REQUEST["group_httptestid"];
+			$group_httptestid = $_REQUEST['group_httptestid'];
 			foreach($group_httptestid as $id){
 				if(!($httptest_data = get_httptest_by_httptestid($id)))	continue;
 
 				if(delete_history_by_httptestid($id)){
 					$result = true;
-					DBexecute("update httptest set nextcheck=0".
-						/* ",lastvalue=null,lastclock=null,prevvalue=null". // for future use */
-						" where httptestid=$id");
+					DBexecute('update httptest set nextcheck=0'.
+						/* ',lastvalue=null,lastclock=null,prevvalue=null'. // for future use */
+						' where httptestid='.$id);
 					
-					$host = get_host_by_applicationid($httptest_data["applicationid"]);
+					$host = get_host_by_applicationid($httptest_data['applicationid']);
 					
 					add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_SCENARIO,
-						S_SCENARIO." [".$httptest_data["name"]."] [".$id."] ".S_HOST." [".$host['host']."]".
+						S_SCENARIO.' ['.$httptest_data['name'].'] ['.$id.'] '.S_HOST.' ['.$host['host'].']'.
 						S_HISTORY_CLEANED);
 				}
 			}
@@ -298,193 +302,149 @@ include_once "include/page_header.php";
 	$_REQUEST['steps'] = array_merge(get_request('steps',array())); /* reinitialize keys */
 
 	$form = new CForm();
-	$form->SetMethod('get');
+	$form->setMethod('get');
 	
-	$form->AddVar("hostid",$_REQUEST["hostid"]);
+	$form->addVar('hostid',$_REQUEST['hostid']);
 
 	if(!isset($_REQUEST['form']))
-		$form->AddItem(new CButton("form",S_CREATE_SCENARIO));
+		$form->addItem(new CButton('form',S_CREATE_SCENARIO));
 
 	show_table_header(S_CONFIGURATION_OF_WEB_MONITORING_BIG, $form);
 	echo SBR;
 
 	$db_hosts=DBselect('select hostid from hosts where '.DBin_node('hostid'));
-	if(isset($_REQUEST["form"])&&isset($_REQUEST["hostid"])&&DBfetch($db_hosts)){
+	if(isset($_REQUEST['form'])&&isset($_REQUEST['hostid']) && DBfetch($db_hosts)){
 // FORM
 		insert_httptest_form();
 	} 
-	else {
-
+	else {		
 // Table HEADER
 		$form = new CForm();
-		$form->SetMethod('get');
+		$form->setMethod('get');
 		
-		$form->AddItem(array('[', 
+		$form->addItem(array('[', 
 			new CLink($showdisabled ? S_HIDE_DISABLED_SCENARIOS: S_SHOW_DISABLED_SCENARIOS,
 				'?showdisabled='.($showdisabled ? 0 : 1),NULL),
 			']', SPACE));
 		
-		$cmbGroup = new CComboBox("groupid",$_REQUEST["groupid"],"submit();");
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
-
-		$result=DBselect('select distinct g.groupid,g.name '.
-						' from groups g,hosts_groups hg '.
-						' where g.groupid=hg.groupid '.
-							' and '.DBcondition('hg.hostid',$available_hosts).
-						' order by name');
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem($row["groupid"],$row["name"]);
-		}
-		$form->AddItem(S_GROUP.SPACE);
-		$form->AddItem($cmbGroup);
-
-		if(isset($_REQUEST["groupid"]) && $_REQUEST["groupid"]>0){
-			$sql='select distinct h.hostid,h.host '.
-				' from hosts h,hosts_groups hg '.
-				' where hg.groupid='.$_REQUEST["groupid"].
-					' and hg.hostid=h.hostid '.
-					' and h.status in ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-					' and '.DBcondition('h.hostid',$available_hosts).
-				' group by h.hostid,h.host '.
-				' order by h.host';
-		}
-		else{
-			$sql='select distinct h.hostid,h.host '.
-				' from hosts h '.
-				' where h.status in ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
-					' and '.DBcondition('h.hostid',$available_hosts).
-				' group by h.hostid,h.host '.
-				' order by h.host';
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
+	
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 		}
-
-		$result=DBselect($sql);
-
-		$_REQUEST["hostid"] = get_request("hostid",0);
-		$cmbHosts = new CComboBox("hostid",$_REQUEST["hostid"],"submit();");
-
-		unset($correct_hostid);
-		$first_hostid = -1;
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem($row["hostid"],$row["host"]);
-
-			if($_REQUEST["hostid"]!=0){
-				if((bccomp($_REQUEST["hostid"], $row["hostid"])==0))
-					$correct_hostid = 'ok';
-			}
-			if($first_hostid <= 0)
-				$first_hostid = $row["hostid"];
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
-		if(!isset($correct_hostid))
-			$_REQUEST["hostid"] = $first_hostid;
-
-		$form->AddItem(SPACE.S_HOST.SPACE);
-		$form->AddItem($cmbHosts);
+		
+		$form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+		$form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
 		
 		show_table_header(S_SCENARIOS_BIG, $form);
 
 // TABLE
 		$form = new CForm();
-		$form->SetName('scenarios');
-		$form->AddVar('hostid',$_REQUEST["hostid"]);
+		$form->setName('scenarios');
+		$form->addVar('hostid',$_REQUEST['hostid']);
 
 		if(isset($show_all_apps))
-			$link = new CLink(new CImg("images/general/opened.gif"),'?close=1'.url_param("groupid").url_param("hostid"));
+			$link = new CLink(new CImg('images/general/opened.gif'),'?close=1'.url_param('groupid').url_param('hostid'));
 		else
-			$link = new CLink(new CImg("images/general/closed.gif"),'?open=1'.url_param("groupid").url_param("hostid"));
+			$link = new CLink(new CImg('images/general/closed.gif'),'?open=1'.url_param('groupid').url_param('hostid'));
 
 		$table  = new CTableInfo();
 		$table->setHeader(array(
-			array(	$link, SPACE, new CCheckBox("all_httptests",null,
+			array(	$link, SPACE, new CCheckBox('all_httptests',null,
 					"CheckAll('".$form->GetName()."','all_httptests');"),
 				make_sorting_link(S_NAME,'wt.name')),
 			S_NUMBER_OF_STEPS,
 			S_UPDATE_INTERVAL,
 			make_sorting_link(S_STATUS,'wt.status')));
 
-	$any_app_exist = false;
-
-	$db_applications = DBselect('SELECT DISTINCT h.host,h.hostid,a.* '.
-					' FROM applications a,hosts h '.
-					' WHERE a.hostid=h.hostid '.
-						' AND h.hostid='.$_REQUEST['hostid'].
-					' ORDER BY a.name,a.applicationid,h.host');
-					
-	while($db_app = DBfetch($db_applications)){
-		$db_httptests = DBselect('SELECT wt.*,a.name as application,h.host,h.hostid '.
+		$any_app_exist = false;
+	
+		$sql = 'SELECT DISTINCT h.host,h.hostid,a.* '.
+				' FROM applications a,hosts h '.
+				' WHERE a.hostid=h.hostid '.
+					' AND h.hostid='.$_REQUEST['hostid'].
+				' ORDER BY a.name,a.applicationid,h.host';
+		$db_applications = DBselect($sql);
+		while($db_app = DBfetch($db_applications)){
+			$sql = 'SELECT wt.*,a.name as application,h.host,h.hostid '.
 					' FROM httptest wt '.
 						' LEFT JOIN applications a ON wt.applicationid=a.applicationid '.
 						' LEFT JOIN hosts h ON h.hostid=a.hostid'.
-					' WHERE a.applicationid='.$db_app["applicationid"].
-						($showdisabled == 0 ? " and wt.status <> 1" : "").
-					order_by('wt.status,wt.name'));
-
-		$app_rows = array();
-		$httptest_cnt = 0;
-		while($httptest_data = DBfetch($db_httptests)){
-			++$httptest_cnt;
-			if(!uint_in_array($db_app["applicationid"],$_REQUEST["applications"]) && !isset($show_all_apps)) continue;
-
-			$name = array();
-
-			/*
-			if($httptest_data["templateid"])
-			{
-				$template_host = get_realhost_by_httptestid($httptest_data["templateid"]);
-				array_push($name,		
-					new CLink($template_host["host"],"?".
-						"hostid=".$template_host["hostid"],
-						'unknown'),
-					":");
-			} // for future use */
-			
-			array_push($name, new CLink($httptest_data["name"],"?form=update&httptestid=".
-				$httptest_data["httptestid"].url_param("hostid").url_param("groupid"),
-				NULL));
-
-			$status=new CCol(new CLink(httptest_status2str($httptest_data["status"]),
-					"?group_httptestid%5B%5D=".$httptest_data["httptestid"].
-					"&hostid=".$_REQUEST["hostid"].
-					"&group_task=".($httptest_data["status"] ? "Activate+selected" : "Disable+selected"),
-					httptest_status2style($httptest_data["status"])));
+					' WHERE a.applicationid='.$db_app['applicationid'].
+						($showdisabled == 0 ? ' and wt.status <> 1' : '').
+					order_by('wt.status,wt.name');
+			$db_httptests = DBselect($sql);
+			$app_rows = array();
+			$httptest_cnt = 0;
+			while($httptest_data = DBfetch($db_httptests)){
+				++$httptest_cnt;
+				if(!uint_in_array($db_app['applicationid'],$_REQUEST['applications']) && !isset($show_all_apps)) continue;
 	
-
-			$chkBox = new CCheckBox('group_httptestid['.$httptest_data["httptestid"].']',null,null,$httptest_data["httptestid"]);
-			
-			$step_cout = DBfetch(DBselect('select count(*) as cnt from httpstep where httptestid='.$httptest_data["httptestid"]));
-			$step_cout = $step_cout['cnt'];
-
-			/* if($httptest_data["templateid"] > 0) $chkBox->SetEnabled(false); // for future use */
-			
-			array_push($app_rows, new CRow(array(
-				array(str_repeat(SPACE,4),$chkBox, $name),
-				$step_cout,
-				$httptest_data["delay"],
-				$status
-				)));
-		}
-		if($httptest_cnt > 0){
-			if(uint_in_array($db_app["applicationid"],$_REQUEST["applications"]) || isset($show_all_apps))
-				$link = new CLink(new CImg("images/general/opened.gif"),
-					"?close=1&applicationid=".$db_app["applicationid"].
-					url_param("groupid").url_param("hostid").url_param("applications").
-					url_param("select"));
-			else
-				$link = new CLink(new CImg("images/general/closed.gif"),
-					"?open=1&applicationid=".$db_app["applicationid"].
-					url_param("groupid").url_param("hostid").url_param("applications").
-					url_param("select"));
-
-			$col = new CCol(array($link,SPACE,bold($db_app["name"]),
-				SPACE."(".$httptest_cnt.SPACE.S_SCENARIOS.")"));
-
-			$table->AddRow($col);
-
-			$any_app_exist = true;
+				$name = array();
+	
+				/*
+				if($httptest_data['templateid'])
+				{
+					$template_host = get_realhost_by_httptestid($httptest_data['templateid']);
+					array_push($name,		
+						new CLink($template_host['host'],'?'.
+							'hostid='.$template_host['hostid'],
+							'unknown'),
+						':');
+				} // for future use */
+				
+				array_push($name, new CLink($httptest_data['name'],'?form=update&httptestid='.
+					$httptest_data['httptestid'].url_param('hostid').url_param('groupid'),
+					NULL));
+	
+				$status=new CCol(new CLink(httptest_status2str($httptest_data['status']),
+						'?group_httptestid%5B%5D='.$httptest_data['httptestid'].
+						'&hostid='.$_REQUEST['hostid'].
+						'&group_task='.($httptest_data['status'] ? 'Activate+selected' : 'Disable+selected'),
+						httptest_status2style($httptest_data['status'])));
 		
-			foreach($app_rows as $row)
-				$table->AddRow($row);
+	
+				$chkBox = new CCheckBox('group_httptestid['.$httptest_data['httptestid'].']',null,null,$httptest_data['httptestid']);
+				
+				$step_cout = DBfetch(DBselect('select count(*) as cnt from httpstep where httptestid='.$httptest_data['httptestid']));
+				$step_cout = $step_cout['cnt'];
+	
+				/* if($httptest_data['templateid'] > 0) $chkBox->setEnabled(false); // for future use */
+				
+				array_push($app_rows, new CRow(array(
+					array(str_repeat(SPACE,4),$chkBox, $name),
+					$step_cout,
+					$httptest_data['delay'],
+					$status
+					)));
+			}
+			if($httptest_cnt > 0){
+				if(uint_in_array($db_app['applicationid'],$_REQUEST['applications']) || isset($show_all_apps))
+					$link = new CLink(new CImg('images/general/opened.gif'),
+						'?close=1&applicationid='.$db_app['applicationid'].
+						url_param('groupid').url_param('hostid').url_param('applications').
+						url_param('select'));
+				else
+					$link = new CLink(new CImg('images/general/closed.gif'),
+						'?open=1&applicationid='.$db_app['applicationid'].
+						url_param('groupid').url_param('hostid').url_param('applications').
+						url_param('select'));
+	
+				$col = new CCol(array($link,SPACE,bold($db_app['name']),
+					SPACE.'('.$httptest_cnt.SPACE.S_SCENARIOS.')'));
+	
+				$table->addRow($col);
+	
+				$any_app_exist = true;
+			
+				foreach($app_rows as $row)
+					$table->addRow($row);
+			}
 		}
-	}
 
 		$footerButtons = array();
 		array_push($footerButtons, new CButtonQMessage('group_task',S_ACTIVATE_SELECTED,S_ACTIVATE_SELECTED_SCENARIOS_Q));
@@ -494,15 +454,15 @@ include_once "include/page_header.php";
 		array_push($footerButtons, new CButtonQMessage('group_task',S_CLEAN_HISTORY_SELECTED_SCENARIOS,S_HISTORY_CLEANING_CAN_TAKE_A_LONG_TIME_CONTINUE_Q));
 		array_push($footerButtons, SPACE);
 		array_push($footerButtons, new CButtonQMessage('group_task',S_DELETE_SELECTED,S_DELETE_SELECTED_SCENARIOS_Q));
-		$table->SetFooter(new CCol($footerButtons));
+		$table->setFooter(new CCol($footerButtons));
 
-		$form->AddItem($table);
+		$form->addItem($table);
 		$form->Show();
 
 	}
 ?>
 <?php
 
-include_once "include/page_footer.php"
+include_once 'include/page_footer.php'
 
 ?>
diff --git a/frontends/php/httpdetails.php b/frontends/php/httpdetails.php
index f62be04..ef7028a 100644
--- a/frontends/php/httpdetails.php
+++ b/frontends/php/httpdetails.php
@@ -215,18 +215,23 @@ include_once "include/page_header.php";
 	$table->Show();
 
 	echo SBR;
-
+	
+	if( isset($_REQUEST['period']) && $_REQUEST['period'] != ZBX_MIN_PERIOD ) {
+		update_profile('web.httptest.period', $_REQUEST['period'], PROFILE_TYPE_INT, $_REQUEST['httptestid']);
+	}
+	$_REQUEST['period'] = get_profile('web.httptest.period', ZBX_PERIOD_DEFAULT, PROFILE_TYPE_INT, $_REQUEST['httptestid']);
+				
 	show_table_header(array(S_HISTORY.' "',
 						bold($httptest_data['name']),
 						'"')
 					);
 	$form = new CTableInfo();
 	$form->AddOption('id','graph');
-	
 	$form->AddRow(array(bold(S_SPEED) , new CCol(
 		get_dynamic_chart('graph_1','chart3.php?'.url_param('period').url_param('from').
 			url_param($httptest_data['name'], false,'name').
 			url_param(150, false,'height').
+			url_param(get_request('stime',0), false,'stime').
 			url_param($items[HTTPSTEP_ITEM_TYPE_IN], false, 'items').
 			url_param(GRAPH_TYPE_STACKED, false, 'graphtype'),'-128')
 		, 'center')));
@@ -235,6 +240,7 @@ include_once "include/page_header.php";
 		get_dynamic_chart('graph_2','chart3.php?'.url_param('period').url_param('from').
 			url_param($httptest_data['name'], false,'name').
 			url_param(150, false,'height').
+			url_param(get_request('stime',0), false,'stime').
 			url_param($items[HTTPSTEP_ITEM_TYPE_TIME], false, 'items').
 			url_param(GRAPH_TYPE_STACKED, false, 'graphtype'),'-128')
 		,'center')));
@@ -253,7 +259,6 @@ include_once "include/page_header.php";
 		$bstime = $_REQUEST['stime'];
 		$bstime = mktime(substr($bstime,8,2),substr($bstime,10,2),0,substr($bstime,4,2),substr($bstime,6,2),substr($bstime,0,4));
 	}
-	
 	$script = 	'scrollinit(0,'.$period.','.$stime.',0,'.$bstime.');
 				showgraphmenu("graph");
 				graph_zoom_init("graph_1",'.$bstime.','.$period.',ZBX_G_WIDTH, 150, false);
diff --git a/frontends/php/httpmon.php b/frontends/php/httpmon.php
index 067b6bb..ba2f9b9 100644
--- a/frontends/php/httpmon.php
+++ b/frontends/php/httpmon.php
@@ -64,15 +64,19 @@ include_once "include/page_header.php";
 		exit();
 	}
 //--------
-
 	validate_sort_and_sortorder('wt.name',ZBX_SORT_DOWN);
 
-	$options = array('allow_all_hosts','monitored_hosts');
-
-	$_REQUEST['groupid'] = get_request('groupid',get_profile('web.latest.groupid',-1));
-	if($_REQUEST['groupid'] == -1) array_push($options,'always_select_first_host');
+	$options = array('allow_all_hosts','monitored_hosts','with_monitored_httptests');
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
 	
-//	validate_group_with_host(PERM_READ_ONLY,array('allow_all_hosts','always_select_first_host','monitored_hosts'));
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+	$params = array();
+	foreach($options as  $option) $params[$option] = 1;
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
 ?>
 <?php
 	$_REQUEST['applications'] = get_request('applications',get_profile('web.httpmon.applications',array(),PROFILE_TYPE_ARRAY_ID));
@@ -109,92 +113,24 @@ include_once "include/page_header.php";
 	
 // Table HEADER
 	$form = new CForm();
-	$form->SetMethod('get');
-	
-	$cmbGroup = new CComboBox('groupid',null,'submit();');
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST);
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-
-	$correct_group = false;
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-		' FROM groups g, hosts_groups hg, hosts h '.
-		' WHERE '.DBcondition('g.groupid',$available_groups).
-			' AND hg.groupid=g.groupid '.
-			' AND h.hostid=hg.hostid'.
-			' AND h.status='.HOST_STATUS_MONITORED.
-			' AND EXISTS( SELECT a.applicationid '.
-							' FROM applications a, httptest ht '.
-							' WHERE a.hostid=h.hostid '.
-								' AND ht.applicationid=a.applicationid '.
-								' AND ht.status='.HTTPTEST_STATUS_ACTIVE.')'.
-		' ORDER BY g.name';
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		if($_REQUEST['groupid'] == $row['groupid']) $correct_group = true;
-		else if(!isset($first_group)) $first_group = $row['groupid'];
-		
-		$cmbGroup->AddItem(
-					$row['groupid'],
-					get_node_name_by_elid($row['groupid']).$row['name'],
-					(bccomp($_REQUEST['groupid'],$row['groupid'])==0)?1:0
-				);
-	}
-	if(!$correct_group && isset($first_group)) $_REQUEST['groupid'] = $first_group;
-	
-//	Supposed to be here
-	validate_group_with_host(PERM_READ_ONLY,$options);
+	$form->setMethod('get');
 
-	$form->AddItem(S_GROUP.SPACE);
-	$form->AddItem($cmbGroup);
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
 
-	if($_REQUEST['hostid'] > 0){
-	
-		$httptests_by_host = get_httptests_by_hostid($_REQUEST['hostid']);
-		if(!DBfetch($httptests_by_host)){
-			$_REQUEST['hostid'] = -1;
-		}
-	}
-//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 
-	$cmbHosts = new CComboBox('hostid',null,'submit();');
-	$cmbHosts->AddItem(0,S_ALL_SMALL);
-	
-	$sql_from = '';
-	$sql_where = '';
-	if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
-		$sql_from .= ',hosts_groups hg ';
-		$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	
-	$sql='SElECT DISTINCT h.hostid,h.host '.
-		' FROM hosts h '.$sql_from.
-		' WHERE h.status='.HOST_STATUS_MONITORED.
-			' AND '.DBcondition('h.hostid',$available_hosts).
-			$sql_where.
-			' AND EXISTS( SELECT a.applicationid '.
-							' FROM applications a, httptest ht '.
-							' WHERE a.hostid=h.hostid '.
-								' AND ht.applicationid=a.applicationid '.
-								' AND ht.status='.HTTPTEST_STATUS_ACTIVE.')'.
-
-		' GROUP BY h.hostid,h.host'.
-		' ORDER BY h.host';
-
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		if($_REQUEST['hostid'] == -1) $_REQUEST['hostid'] = $row['hostid'];
-		$cmbHosts->AddItem(
-					$row['hostid'],
-					get_node_name_by_elid($row['hostid']).$row['host'],
-					(bccomp($_REQUEST['hostid'],$row['hostid'])==0)?1:0
-				);
+	foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+		$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 	}
-
-	$form->AddItem(SPACE.S_HOST.SPACE);
-	$form->AddItem($cmbHosts);
 	
+	$form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+	$form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+			
 	$p_elements[] = get_table_header(SPACE, $form);
 
 // TABLE
diff --git a/frontends/php/images/flash/zbxclock.swf b/frontends/php/images/flash/zbxclock.swf
index 3bd482b..776f3ae 100644
Binary files a/frontends/php/images/flash/zbxclock.swf and b/frontends/php/images/flash/zbxclock.swf differ
diff --git a/frontends/php/include/actions.inc.php b/frontends/php/include/actions.inc.php
index 33316fe..1088d00 100644
--- a/frontends/php/include/actions.inc.php
+++ b/frontends/php/include/actions.inc.php
@@ -30,8 +30,8 @@ function action_accessible($actionid,$perm){
 	if (DBselect('select actionid from actions where actionid='.$actionid.' and '.DBin_node('actionid'))){
 		$result = true;
 		
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-		$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
+		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,$perm,null,get_current_nodeid(true));
+		$available_groups = get_accessible_groups_by_user($USER_DETAILS,$perm,null,get_current_nodeid(true));
 		
 		$db_result = DBselect('SELECT * FROM conditions WHERE actionid='.$actionid);
 		while(($ac_data = DBfetch($db_result)) && $result){
@@ -39,13 +39,13 @@ function action_accessible($actionid,$perm){
 
 			switch($ac_data['conditiontype']){
 				case CONDITION_TYPE_HOST_GROUP:
-					if(!uint_in_array($ac_data['value'],$available_groups)){
+					if(!isset($available_groups[$ac_data['value']])){
 						$result = false;
 					}
 					break;
 				case CONDITION_TYPE_HOST:
 				case CONDITION_TYPE_HOST_TEMPLATE:
-					if(!uint_in_array($ac_data['value'],$available_hosts)){
+					if(!isset($available_hosts[$ac_data['value']])){
 						$result = false;
 					}
 					break;
@@ -80,14 +80,14 @@ function check_permission_for_action_conditions($conditions){
 
 		switch($ac_data['type']){
 			case CONDITION_TYPE_HOST_GROUP:
-				if(!uint_in_array($ac_data['value'],$available_groups)){
+				if(!isset($available_groups[$ac_data['value']])){
 					error(S_INCORRECT_GROUP);
 					$result = false;
 				}
 				break;
 			case CONDITION_TYPE_HOST:
 			case CONDITION_TYPE_HOST_TEMPLATE:
-				if(!uint_in_array($ac_data['value'],$available_hosts)){
+				if(!isset($available_hosts[$ac_data['value']])){
 					error(S_INCORRECT_HOST);
 					$result = false;
 				}
@@ -703,14 +703,14 @@ function validate_condition($conditiontype, $value){
 	switch($conditiontype){
 		case CONDITION_TYPE_HOST_GROUP:
 			$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-			if(!uint_in_array($value, $available_groups)){
+			if(!isset($available_groups[$value])){
 				error(S_INCORRECT_GROUP);
 				return false;
 			}
 			break;
 		case CONDITION_TYPE_HOST_TEMPLATE:
 			$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-			if(!uint_in_array($value,$available_hosts)){
+			if(!isset($available_hosts[$value])){
 				error(S_INCORRECT_HOST);
 				return false;
 			}
@@ -725,7 +725,7 @@ function validate_condition($conditiontype, $value){
 			break;
 		case CONDITION_TYPE_HOST:
 			$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-			if(!uint_in_array($value,$available_hosts)){
+			if(!isset($available_hosts[$value])){
 				error(S_INCORRECT_HOST);
 				return false;
 			}
@@ -885,7 +885,7 @@ return $delays;
 }
 
 function get_history_of_actions($start,$num,$sql_cond=''){
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 
 	$table = new CTableInfo(S_NO_ACTIONS_FOUND);
 	$table->SetHeader(array(
@@ -907,7 +907,6 @@ function get_history_of_actions($start,$num,$sql_cond=''){
 				' AND '.DBcondition('e.objectid',$available_triggers).
 				' AND '.DBin_node('a.alertid').
 			order_by('a.clock,a.alertid,mt.description,a.sendto,a.status,a.retries');
-
 	$result=DBselect($sql,10*$start+$num);
 		
 	$col=0;
@@ -958,7 +957,17 @@ function get_history_of_actions($start,$num,$sql_cond=''){
 	
 // Author: Aly
 function get_action_msgs_for_event($eventid){
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$hostids = array();
+	$sql = 'SELECT DISTINCT i.hostid '.
+			' FROM events e, functions f, items i '.
+			' WHERE e.eventid='.$eventid.
+				' AND e.objectid='.EVENT_SOURCE_TRIGGERS.
+				' AND f.triggerid='.$_REQUEST['triggerid'].
+				' AND i.itemid=f.itemid';
+	if($host = DBfetch(DBselect($sql,1))){
+		$hostids[$host['hostid']] = $host['hostid'];
+	}
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, $hostids);
 
 	$table = new CTableInfo(S_NO_ACTIONS_FOUND);
 	$table->SetHeader(array(
@@ -1033,7 +1042,17 @@ return $table;
 
 // Author: Aly
 function get_action_cmds_for_event($eventid){
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$hostids = array();
+	$sql = 'SELECT DISTINCT i.hostid '.
+			' FROM events e, functions f, items i '.
+			' WHERE e.eventid='.$eventid.
+				' AND e.objectid='.EVENT_SOURCE_TRIGGERS.
+				' AND f.triggerid='.$_REQUEST['triggerid'].
+				' AND i.itemid=f.itemid';
+	if($host = DBfetch(DBselect($sql,1))){
+		$hostids[$host['hostid']] = $host['hostid'];
+	}
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, $hostids);
 
 	$table = new CTableInfo(S_NO_ACTIONS_FOUND);
 	$table->SetHeader(array(
@@ -1096,7 +1115,17 @@ return $table;
 
 // Author: Aly
 function get_actions_hint_by_eventid($eventid,$status=NULL){
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$hostids = array();
+	$sql = 'SELECT DISTINCT i.hostid '.
+			' FROM events e, functions f, items i '.
+			' WHERE e.eventid='.$eventid.
+				' AND e.objectid='.EVENT_SOURCE_TRIGGERS.
+				' AND f.triggerid='.$_REQUEST['triggerid'].
+				' AND i.itemid=f.itemid';
+	if($host = DBfetch(DBselect($sql,1))){
+		$hostids[$host['hostid']] = $host['hostid'];
+	}
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, $hostids);
 	
 	$tab_hint = new CTableInfo(S_NO_ACTIONS_FOUND);
 	$tab_hint->AddOption('style', 'width: 300px;');
diff --git a/frontends/php/include/audit.inc.php b/frontends/php/include/audit.inc.php
index 662c0ea..da6c8a8 100644
--- a/frontends/php/include/audit.inc.php
+++ b/frontends/php/include/audit.inc.php
@@ -19,8 +19,7 @@
 **/
 ?>
 <?php
-	function	audit_resource2str($resource_type)
-	{
+	function audit_resource2str($resource_type){
 		$str_resource[AUDIT_RESOURCE_USER] 		= S_USER;
 		$str_resource[AUDIT_RESOURCE_ZABBIX_CONFIG] 	= S_CONFIGURATION_OF_ZABBIX;
 		$str_resource[AUDIT_RESOURCE_MEDIA_TYPE] 	= S_MEDIA_TYPE;
diff --git a/frontends/php/include/blocks.inc.php b/frontends/php/include/blocks.inc.php
index 9c983dc..7bfdf90 100644
--- a/frontends/php/include/blocks.inc.php
+++ b/frontends/php/include/blocks.inc.php
@@ -178,7 +178,7 @@ function make_system_summary(){
 	
 	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,array(),PERM_RES_IDS_ARRAY);
 		
 	$table = new CTableInfo();
 	$table->SetHeader(array(
@@ -352,21 +352,27 @@ function make_status_of_zbx(){
 
 	$table->AddRow(array(S_ZABBIX_SERVER_IS_RUNNING,new CSpan($status['zabbix_server'], ($status['zabbix_server'] == S_YES ? 'off' : 'on')),' - '));
 //	$table->AddRow(array(S_VALUES_STORED,$status['history_count']));$table->AddRow(array(S_TRENDS_STORED,$status['trends_count']));
-	$table->AddRow(array(S_NUMBER_OF_HOSTS,$status['hosts_count'],
+	$title = new CSpan(S_NUMBER_OF_HOSTS);
+	$title->addOption('title', 'asdad');
+	$table->AddRow(array(S_NUMBER_OF_HOSTS ,$status['hosts_count'],
 		array(
 			new CSpan($status['hosts_count_monitored'],'off'),' / ',
 			new CSpan($status['hosts_count_not_monitored'],'on'),' / ',
 			new CSpan($status['hosts_count_template'],'unknown')
 		)
 	));
-	$table->AddRow(array(S_NUMBER_OF_ITEMS,$status['items_count'],
+	$title = new CSpan(S_NUMBER_OF_ITEMS);
+	$title->addOption('title', S_NUMBER_OF_ITEMS_TOOLTIP);
+	$table->AddRow(array($title, $status['items_count'],
 		array(
 			new CSpan($status['items_count_monitored'],'off'),' / ',
 			new CSpan($status['items_count_disabled'],'on'),' / ',
 			new CSpan($status['items_count_not_supported'],'unknown')
 		)
 	));
-	$table->AddRow(array(S_NUMBER_OF_TRIGGERS,$status['triggers_count'],
+	$title = new CSpan(S_NUMBER_OF_TRIGGERS);
+	$title->addOption('title', S_NUMBER_OF_TRIGGERS_TOOLTIP);
+	$table->AddRow(array($title,$status['triggers_count'],
 		array(
 			$status['triggers_count_enabled'],' / ',
 			$status['triggers_count_disabled'].SPACE.SPACE.'[',
@@ -453,7 +459,7 @@ function make_latest_issues(){
 	global $USER_DETAILS;
 	
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array());
 
 	$scripts_by_hosts = get_accessible_scripts_by_hosts($available_hosts);
 	$config=select_config();
@@ -508,7 +514,7 @@ function make_latest_issues(){
 		$host->AddOption('onclick','javascript: '.$menus);
 		$host->AddOption('onmouseover',"javascript: this.style.cursor = 'pointer';");
 
-		$event_sql = 'SELECT e.eventid, e.value, e.clock, e.objectid as triggerid, e.acknowledged, t.type '.
+		$event_sql = 'SELECT e.eventid, e.value, e.clock, e.objectid as triggerid, e.acknowledged, t.type, t.url '.
 					' FROM events e, triggers t '.
 					' WHERE e.object='.EVENT_SOURCE_TRIGGERS.
 						' AND e.objectid='.$row['triggerid'].
@@ -541,6 +547,9 @@ function make_latest_issues(){
 //--------			
 			$clock = new CLink(zbx_date2str(S_DATE_FORMAT_YMDHMS,$row_event['clock']),'events.php?triggerid='.$row['triggerid'].'&source=0&nav_time='.$row['lastchange'],'action');
 			
+			
+			$description = ($row_event['url']) ? new CLink($description, $row_event['url'], 'action') : $description;
+			
 			$table->AddRow(array(
 				get_node_name_by_elid($row['triggerid']),
 				$host,
diff --git a/frontends/php/include/classes/cbutton.inc.php b/frontends/php/include/classes/cbutton.inc.php
index 7747435..ddd58a6 100644
--- a/frontends/php/include/classes/cbutton.inc.php
+++ b/frontends/php/include/classes/cbutton.inc.php
@@ -21,35 +21,35 @@
 <?php
 	class CButton extends CTag{
 /* public */
-		function CButton($name="button", $caption="", $action=NULL, $accesskey=NULL){
+		function CButton($name='button', $caption='', $action=NULL, $accesskey=NULL){
 			parent::CTag('input','no');
 			$this->tag_body_start = '';
 			$this->options['type'] = 'submit';
-			$this->AddOption('value', $caption);
+			$this->addOption('value', $caption);
 			$this->options['class'] = 'button';
-			$this->SetName($name);
-			$this->SetAction($action);
-			$this->SetAccessKey($accesskey);
+			$this->setName($name);
+			$this->setAction($action);
+			$this->setAccessKey($accesskey);
 		}
 		
-		function SetAction($value=null){
-			$this->AddAction('onclick', $value);
+		function setAction($value=null){
+			$this->addAction('onclick', $value);
 		}
 		
-		function SetTitle($value='button title'){
-			$this->AddOption('title', $value);
+		function setTitle($value='button title'){
+			$this->addOption('title', $value);
 		}
 		
-		function SetAccessKey($value='B'){
+		function setAccessKey($value='B'){
 			if(isset($value))
 				if(!isset($this->options['title']))
-					$this->SetTitle($this->options['value'].' [Alt+'.$value.']');
+					$this->setTitle($this->options['value'].' [Alt+'.$value.']');
 
-			return $this->AddOption('accessKey', $value);
+			return $this->addOption('accessKey', $value);
 		}
 		
-		function SetType($type="button"){
-			$this->AddOption('type',$type);
+		function setType($type='button'){
+			$this->addOption('type',$type);
 		}
 	}
 
@@ -57,23 +57,23 @@
 		function CButtonCancel($vars=NULL,$action=NULL){
 			parent::CButton('cancel',S_CANCEL);
 			$this->options['type'] = 'button';
-			$this->SetVars($vars);
-			$this->SetAction($action);
+			$this->setVars($vars);
+			$this->setAction($action);
 		}
-		function SetVars($value=NULL){
+		function setVars($value=NULL){
 			global $page;
 
-			$url = "?cancel=1";
+			$url = '?cancel=1';
+			if(!is_null($value)) $url.= $value;
 
-			if(!is_null($value))
-				$url = $url.$value;
-
-			return parent::SetAction("return redirect('$url')");
+			$uri = new Curl($url);
+			$url = $uri->getUrl();
+			
+			return parent::setAction("javascript: return redirect('".$url."');");
 		}
 	}
 
-	class CButtonQMessage extends CButton
-	{
+	class CButtonQMessage extends CButton{
 		/*
 		var $vars;
 		var $msg;
@@ -86,52 +86,55 @@
 			
 			parent::CButton($name,$caption);
 
-			$this->SetMessage($msg);
-			$this->SetVars($vars);
-			$this->SetAction(NULL);
+			$this->setMessage($msg);
+			$this->setVars($vars);
+			$this->setAction(NULL);
 		}
-		function SetVars($value=NULL){
+		
+		function setVars($value=NULL){
 			if(!is_string($value) && !is_null($value)){
-				return $this->error("Incorrect value for SetVars [$value]");
+				return $this->error('Incorrect value for setVars ['.$value.']');
 			}
 			$this->vars = $value;
-			$this->SetAction(NULL);
+			$this->setAction(NULL);
 		}
-		function SetMessage($value=NULL){
+		
+		function setMessage($value=NULL){
 			if(is_null($value))
-				$value = "Are You Sure?";
+				$value = 'Are You Sure?';
 
 			if(!is_string($value)){
-				return $this->error("Incorrect value for SetMessage [$value]");
+				return $this->error('Incorrect value for setMessage ['.$value.']');
 			}
 			$this->msg = $value;
-			$this->SetAction(NULL);
+			$this->setAction(NULL);
 		}
-		function SetAction($value=null){
+		
+		function setAction($value=null){
 			if(!is_null($value))
-				return parent::SetAction($value);
+				return parent::setAction($value);
 
 			global $page;
 
 			$confirmation = "Confirm('".$this->msg."')";
 			
-			if(isset($this->vars))
-			{
-				$action = "redirect('".$page["file"]."?".$this->name."=1".$this->vars."')";
+			if(isset($this->vars)){
+				$link = $page['file'].'?'.$this->name.'=1'.$this->vars;
+				$url = new Curl($link);
+				
+				$action = "redirect('".$url->getUrl()."')";
 			}
-			else
-			{
+			else{
 				$action = 'true';
 			}
 			
-			return parent::SetAction("if(".$confirmation.") return ".$action."; else return false;");
+			return parent::setAction('if('.$confirmation.') return '.$action.'; else return false;');
 		}
 	}
 
-	class CButtonDelete extends CButtonQMessage
-	{
+	class CButtonDelete extends CButtonQMessage{
 		function CButtonDelete($msg=NULL, $vars=NULL){
-			parent::CButtonQMessage("delete",S_DELETE,$msg,$vars);
+			parent::CButtonQMessage('delete',S_DELETE,$msg,$vars);
 		}
 	}
 ?>
diff --git a/frontends/php/include/classes/ccolor.inc.php b/frontends/php/include/classes/ccolor.inc.php
index dad01cc..91a412a 100644
--- a/frontends/php/include/classes/ccolor.inc.php
+++ b/frontends/php/include/classes/ccolor.inc.php
@@ -22,8 +22,7 @@
 ?>
 <?php
 
-	function insert_show_color_picker_javascript()
-	{
+	function insert_show_color_picker_javascript(){
 		global $SHOW_COLOR_PICKER_SCRIPT_ISERTTED;
 
 		if($SHOW_COLOR_PICKER_SCRIPT_ISERTTED) return;
@@ -38,8 +37,7 @@ var color_table = <?php
 	$table .= '<table cellspacing="0" cellpadding="1">';
 	$table .= '<tr>';
 	/* gray colors */
-	foreach(array('0','3','6','8','9','A','C','E','F') as $c)
-	{
+	foreach(array('0','1','2','3','4','5','6','7','8','9','A','b','C','D','E','F') as $c){
 		$color = $c.$c.$c.$c.$c.$c;
 		$table .= '<td>'.unpack_object(new CColorCell(null, $color, 'set_color(\\\''.$color.'\\\')')).'</td>';
 	}
@@ -57,21 +55,26 @@ var color_table = <?php
 	
 	$brigs  = array(
 		array(0 => '0', 1 => '3'),
+		array(0 => '0', 1 => '4'),
+		array(0 => '0', 1 => '5'),
 		array(0 => '0', 1 => '6'),
+		array(0 => '0', 1 => '7'),
+		array(0 => '0', 1 => '8'),
 		array(0 => '0', 1 => '9'),
+		array(0 => '0', 1 => 'A'),
+		array(0 => '0', 1 => 'B'),
 		array(0 => '0', 1 => 'C'),
-		array(0 => '0', 1 => 'F'),
+		array(0 => '0', 1 => 'D'),
+		array(0 => '0', 1 => 'E'),
 		array(0 => '3', 1 => 'F'),
 		array(0 => '6', 1 => 'F'),
 		array(0 => '9', 1 => 'F'),
 		array(0 => 'C', 1 => 'F')
 		);
 
-	foreach($colors as $c)
-	{
+	foreach($colors as $c){
 		$table .= '<tr>';
-		foreach($brigs as $br)
-		{
+		foreach($brigs as $br){
 			$r = $br[$c['r']];
 			$g = $br[$c['g']];
 			$b = $br[$c['b']];
@@ -83,17 +86,16 @@ var color_table = <?php
 		$table .= '</tr>';
 	}
 	$table .= '</table>';
-	$cancel = '<a href="javascript:hide_color_picker()">'.S_CANCEL.'</a>';
-	echo '\''.$table.$cancel.'\'';
+	$cancel = '<a onclick="javascript:hide_color_picker();">'.S_CANCEL.'</a>';
+	echo "'".$table.$cancel."'";
 	unset($table);
 ?>
 
-function GetPos(obj)
-{
+function GetPos(obj){
 	var left = obj.offsetLeft;
-	var top  = obj.offsetTop;;
-	while (obj = obj.offsetParent)
-	{
+	var top  = obj.offsetTop;
+	
+	while (obj = obj.offsetParent){
 		left	+= obj.offsetLeft
 		top	+= obj.offsetTop
 	}
@@ -104,8 +106,7 @@ var color_picker = null;
 var curr_lbl = null;
 var curr_txt = null;
 
-function hide_color_picker()
-{
+function hide_color_picker(){
 	if(!color_picker) return;
 
 	color_picker.style.visibility="hidden"
@@ -115,8 +116,7 @@ function hide_color_picker()
 	curr_txt = null;
 }
 
-function show_color_picker(name)
-{
+function show_color_picker(name){
 	if(!color_picker) return;
 
 	curr_lbl = document.getElementById('lbl_' + name);
@@ -133,8 +133,7 @@ function show_color_picker(name)
 	color_picker.style.visibility = "visible";
 }
 
-function create_color_picker()
-{
+function create_color_picker(){
 	if(color_picker) return;
 
 	color_picker = document.createElement("div");
@@ -145,74 +144,59 @@ function create_color_picker()
 	hide_color_picker();
 }
 
-function set_color(color)
-{
+function set_color(color){
 	if(curr_lbl)	curr_lbl.style.background = curr_lbl.style.color = '#' + color;
 	if(curr_txt)	curr_txt.value = color;
 
 	hide_color_picker();
 }
 
-function set_color_by_name(name, color)
-{
+function set_color_by_name(name, color){
 	curr_lbl = document.getElementById('lbl_' + name);
 	curr_txt = document.getElementById(name);
 	
 	set_color(color);
 }
 
-if (window.addEventListener)
-{
-	window.addEventListener("load", create_color_picker, false);
-}
-else if (window.attachEvent)
-{
-	window.attachEvent("onload", create_color_picker);
-}
-else if (document.getElementById)
-{
-	window.onload	= create_color_picker;
-}
+addListener(window, "load", create_color_picker, false);
 
 //-->
 </script>
 <?php
 	}
 
-	class CColorCell extends CLink
-	{
-		function	CColorCell($name, $value, $action=null)
-		{
-			parent::CLink(SPACE.SPACE.SPACE, null);
-			$this->SetName($name);
-			$this->AddOption('id', $name);
-			$this->AddOption('title', '#'.$value);
-			$this->AddOption('style', 'text-decoration: none; outline: 1px solid black; background-color: #'.$value);
-			$this->SetAction($action);
+	class CColorCell extends CDiv{
+		function CColorCell($name, $value, $action=null){
+			parent::CDiv(SPACE.SPACE.SPACE, null);
+			$this->setName($name);
+			$this->addOption('id', $name);
+			$this->addOption('title', '#'.$value);
+			$this->addOption('class', 'pointer');
+			$this->addOption('style', 'display: inline; width: 10px; height: 10px; text-decoration: none; outline: 1px solid black; background-color: #'.$value);
+			
+			$this->setAction($action);
 		}
-		function	SetAction($action=null)
-		{
+		
+		function setAction($action=null){
 			if(!isset($action)) return false;
 			
-			return $this->SetUrl('javascript:'.$action);
+			return $this->addAction('onclick', 'javascript:'.$action);
 		}
 	}
 
-	class CColor extends CObject
-	{
+	class CColor extends CObject{
 /* public */
-		function CColor($name,$value)
-		{
+		function CColor($name,$value){
 			parent::CObject();
 
 			$lbl = new CColorCell('lbl_'.$name, $value, 'show_color_picker(\''.$name.'\')');
 
 			$txt = new CTextBox($name,$value,7);
-			$txt->AddOption('maxlength', 6);
-			$txt->AddOption('id', $name);
-			$txt->AddAction('onchange', 'set_color_by_name(\''.$name.'\',this.value)');
-			$txt->AddOption('style', 'margin-top: 0px; margin-bottom: 0px');
-			$this->AddItem(array($txt, $lbl));
+			$txt->addOption('maxlength', 6);
+			$txt->addOption('id', $name);
+			$txt->addAction('onchange', 'set_color_by_name(\''.$name.'\',this.value)');
+			$txt->addOption('style', 'margin-top: 0px; margin-bottom: 0px');
+			$this->addItem(array($txt, $lbl));
 			
 			insert_show_color_picker_javascript();
 		}
diff --git a/frontends/php/include/classes/cflashclock.mod.php b/frontends/php/include/classes/cflashclock.mod.php
index 8f359fd..5ab5ed5 100644
--- a/frontends/php/include/classes/cflashclock.mod.php
+++ b/frontends/php/include/classes/cflashclock.mod.php
@@ -47,7 +47,7 @@
 		function BodyToString()
 		{
 			if($this->timetype == TIME_TYPE_SERVER)
-				$this->SetSrc($this->src."&timestamp=".time());
+				$this->setSrc($this->src.'&timestamp='.(time() + date('Z')));
 
 			return parent::BodyToString();	
 		}
diff --git a/frontends/php/include/classes/cform.inc.php b/frontends/php/include/classes/cform.inc.php
index 4f87073..5678b90 100644
--- a/frontends/php/include/classes/cform.inc.php
+++ b/frontends/php/include/classes/cform.inc.php
@@ -22,46 +22,44 @@
 	class CForm extends CTag{
 /* public */
 		function CForm($action=NULL, $method='post', $enctype=NULL){
-			parent::CTag("form","yes");
-			$this->SetMethod($method);
-			$this->SetAction($action);
-			$this->SetEnctype($enctype);
+			parent::CTag('form','yes');
+			$this->setMethod($method);
+			$this->setAction($action);
+			$this->setEnctype($enctype);
+			
+			if(isset($_COOKIE['zbx_sessionid']))
+				$this->addVar('sid', substr($_COOKIE['zbx_sessionid'],16,16));
 		}
 		
-		function SetMethod($value='post'){
+		function setMethod($value='post'){
 			return $this->options['method'] = $value;
 		}
 		
-		function SetAction($value){
+		function setAction($value){
 			global $page;
 
 			if(is_null($value)){
-				if(isset($page['file'])){
-					$value = $page['file'];
-				}
-				else{
-					$value = "#";
-				}
+				$value = isset($page['file'])?$page['file']:'#';
 			}
 			
 		return $this->options['action'] = $value;
 		}
 		
-		function SetEnctype($value=NULL){
+		function setEnctype($value=NULL){
 			if(is_null($value)){
-				return $this->DelOption("enctype");
+				return $this->DelOption('enctype');
 			}
 			else if(!is_string($value)){
 				return $this->error("Incorrect value for SetEnctype [$value]");
 			}
 			
-		return $this->AddOption("enctype",$value);
+		return $this->addOption('enctype',$value);
 		}
 
-		function AddVar($name, $value){
+		function addVar($name, $value){
 			if(empty($value) && $value != 0)	return $value;
 
-		return $this->AddItem(new CVar($name, $value));
+		return $this->addItem(new CVar($name, $value));
 		}
 	}
 ?>
diff --git a/frontends/php/include/classes/cformtable.inc.php b/frontends/php/include/classes/cformtable.inc.php
index 28b36dc..cdcb17e 100644
--- a/frontends/php/include/classes/cformtable.inc.php
+++ b/frontends/php/include/classes/cformtable.inc.php
@@ -46,48 +46,48 @@
 			}
 
 			parent::CForm($action,$method,$enctype);
-			$this->SetTitle($title);
-			$this->SetAlign('center');
-			$this->SetHelp();
+			$this->setTitle($title);
+			$this->setAlign('center');
+			$this->setHelp();
 
 //			$frm_link = new CLink();
-//			$frm_link->SetName("formtable");
-//			$this->AddItemToTopRow($frm_link);
+//			$frm_link->setName("formtable");
+//			$this->addItemToTopRow($frm_link);
 			
-			$this->AddVar($form_variable, get_request($form_variable, 1));
-			$this->AddVar('form_refresh',get_request('form_refresh',0)+1);
+			$this->addVar($form_variable, get_request($form_variable, 1));
+			$this->addVar('form_refresh',get_request('form_refresh',0)+1);
 
 			$this->bottom_items = new CCol(SPACE,'form_row_last');
-		        $this->bottom_items->SetColSpan(2);
+		        $this->bottom_items->setColSpan(2);
 		}
 		
-		function SetAction($value){
+		function setAction($value){
 			
 			if(is_string($value))
-				return parent::SetAction($value);
+				return parent::setAction($value);
 			elseif(is_null($value))
-				return parent::SetAction($value);
+				return parent::setAction($value);
 			else
 				return $this->error("Incorrect value for SetAction [$value]");
 		}
 		
-		function SetName($value){
+		function setName($value){
 			if(!is_string($value)){
 				return $this->error("Incorrect value for SetAlign [$value]");
 			}
-			$this->AddOption('name',$value);
-			$this->AddOption('id',$value);
+			$this->addOption('name',$value);
+			$this->addOption('id',$value);
 		return true;
 		}
 		
-		function SetAlign($value){
+		function setAlign($value){
 			if(!is_string($value)){
 				return $this->error("Incorrect value for SetAlign [$value]");
 			}
 			return $this->align = $value;
 		}
 
-		function SetTitle($value=NULL){
+		function setTitle($value=NULL){
 			if(is_null($value)){
 				unset($this->title);
 				return 0;
@@ -101,7 +101,7 @@
 			$this->title = unpack_object($value);
 		}
 		
-		function SetHelp($value=NULL){
+		function setHelp($value=NULL){
 			if(is_null($value)) {
 				$this->help = new CHelp();
 			} 
@@ -110,8 +110,8 @@
 			} 
 			else if(is_string($value)) {
 				$this->help = new CHelp($value);
-				if($this->GetName()==NULL)
-					$this->SetName($value);
+				if($this->getName()==NULL)
+					$this->setName($value);
 			} 
 			else {
 				return $this->error("Incorrect value for SetHelp [$value]");
@@ -119,21 +119,21 @@
 			return 0;
 		}
 		
-		function AddVar($name, $value){
-			$this->AddItemToTopRow(new CVar($name, $value));
+		function addVar($name, $value){
+			$this->addItemToTopRow(new CVar($name, $value));
 		}
 		
-		function AddItemToTopRow($value){
+		function addItemToTopRow($value){
 			array_push($this->top_items, $value);
 		}
 		
-		function AddRow($item1, $item2=NULL, $class=NULL){
+		function addRow($item1, $item2=NULL, $class=NULL){
 			if(strtolower(get_class($item1)) == 'crow'){
 			
 			} 
 			else if(strtolower(get_class($item1)) == 'ctable'){
 				$td = new CCol($item1,'form_row_c');
-				$td->SetColSpan(2);
+				$td->setColSpan(2);
 				
 				$item1 = new CRow($td);
 			} 
@@ -157,7 +157,7 @@
 			array_push($this->center_items, $item1);
 		}
 		
-		function AddSpanRow($value, $class=NULL){
+		function addSpanRow($value, $class=NULL){
 			if(is_string($value))
 				$item1=nbsp($value);
 
@@ -165,16 +165,16 @@
 			if(is_null($class)) $class = 'form_row_c';
 
 			$col = new CCol($value,$class);
-		        $col->SetColSpan(2);
+		        $col->setColSpan(2);
 			array_push($this->center_items,new CRow($col));
 		}
 		
 		
-		function AddItemToBottomRow($value){
-			$this->bottom_items->AddItem($value);
+		function addItemToBottomRow($value){
+			$this->bottom_items->addItem($value);
 		}
 
-		function SetTableClass($class){
+		function setTableClass($class){
 			if(is_string($class)){
 				$this->tableclass = $class;
 			}
@@ -186,25 +186,25 @@
 
 			$tbl = new CTable(NULL,$this->tableclass);
 
-			$tbl->SetOddRowClass('form_odd_row');
-			$tbl->SetEvenRowClass('form_even_row');
-			$tbl->SetCellSpacing(0);
-			$tbl->SetCellPadding(1);
-			$tbl->SetAlign($this->align);
+			$tbl->setOddRowClass('form_odd_row');
+			$tbl->setEvenRowClass('form_even_row');
+			$tbl->setCellSpacing(0);
+			$tbl->setCellPadding(1);
+			$tbl->setAlign($this->align);
 # add first row
 			$col = new CCol(NULL,'form_row_first');
-			$col->SetColSpan(2);
+			$col->setColSpan(2);
 			
-			if(isset($this->help))			$col->AddItem($this->help);
-			if(isset($this->title))		 	$col->AddItem($this->title);
-			foreach($this->top_items as $item)	$col->AddItem($item);
+			if(isset($this->help))			$col->addItem($this->help);
+			if(isset($this->title))		 	$col->addItem($this->title);
+			foreach($this->top_items as $item)	$col->addItem($item);
 			
-			$tbl->SetHeader($col);
+			$tbl->setHeader($col);
 # add last row
-			$tbl->SetFooter($this->bottom_items);
+			$tbl->setFooter($this->bottom_items);
 # add center rows
 			foreach($this->center_items as $item){
-				$tbl->AddRow($item);
+				$tbl->addRow($item);
 			}
 		return $tbl->ToString();
 		}
diff --git a/frontends/php/include/classes/chart.inc.php b/frontends/php/include/classes/chart.inc.php
index bca55e4..c7ac4ac 100644
--- a/frontends/php/include/classes/chart.inc.php
+++ b/frontends/php/include/classes/chart.inc.php
@@ -984,7 +984,7 @@ class Chart extends Graph{
 			
 			$sql_arr = array();
 	
-			if((($real_item['history']*86400) > (time()-($from_time+$this->period/2))) &&				// should pick data from history or trends
+			if((($real_item['history']*86400) > (time()-($this->from_time+$this->period/2))) &&				// should pick data from history or trends
 				(($this->period / $this->sizeX) <= (ZBX_MAX_TREND_DIFF / ZBX_GRAPH_MAX_SKIP_CELL)))		// is reasonable to take data from history?
 			{
 				array_push($sql_arr,
diff --git a/frontends/php/include/classes/clink.inc.php b/frontends/php/include/classes/clink.inc.php
index bea460e..81f971d 100644
--- a/frontends/php/include/classes/clink.inc.php
+++ b/frontends/php/include/classes/clink.inc.php
@@ -19,32 +19,34 @@
 **/
 ?>
 <?php
-	class CLink extends CTag
-	{
+	class CLink extends CTag{
 /* public */
 		function CLink($item=NULL,$url=NULL,$class=NULL,$action=NULL){
 			parent::CTag('a','yes');
-
+			
 			$this->tag_start= '';
 			$this->tag_end = '';
 			$this->tag_body_start = '';
 			$this->tag_body_end = '';
 
-			if(!is_null($class))	$this->SetClass($class);
-			if(!is_null($item))	$this->AddItem($item);
-			if(!is_null($url))	$this->SetUrl($url);
-			if(!is_null($action))	$this->SetAction($action);
+			if(!is_null($class))	$this->setClass($class);
+			if(!is_null($item))		$this->addItem($item);
+			if(!is_null($url))		$this->setUrl($url);
+			if(!is_null($action))	$this->setAction($action);
 		}
 		
-		function SetAction($value=NULL){
+		function setAction($value=NULL){
 			if(is_null($value))
 				return $this->options['action'] = $page['file'];
 
-			return parent::AddAction('onclick', $value);
+			return parent::addAction('onclick', $value);
 		}
 		
-		function SetUrl($value){
-			$this->AddOption('href', $value);
+		function setUrl($value){
+			$uri = new Curl($value);
+			$url = $uri->getUrl();
+
+			$this->addOption('href', $url);
 		}
 		
 		function getUrl(){
@@ -54,7 +56,7 @@
 				return null;
 		}
 		
-		function SetTarget($value=NULL){
+		function setTarget($value=NULL){
 			if(is_null($value)){
 				unset($this->options['target']);
 			}
diff --git a/frontends/php/include/classes/cmap.inc.php b/frontends/php/include/classes/cmap.inc.php
index e479e92..4ecc847 100644
--- a/frontends/php/include/classes/cmap.inc.php
+++ b/frontends/php/include/classes/cmap.inc.php
@@ -19,78 +19,75 @@
 **/
 ?>
 <?php
-	class CMap extends CTag
-	{
+class CMap extends CTag{
 /* public */
-		function CMap($name="")
-		{
-			parent::CTag("map","yes");
-			$this->SetName($name);
-		}
-		function AddRectArea($x1,$y1,$x2,$y2,$href,$alt)
-		{ 
-			return $this->AddArea(array($x1,$y1,$x2,$y2),$href,$alt,'rect'); 
-		}
-		function AddArea($coords,$href,$alt,$shape)
-		{
-			return $this->AddItem(new CArea($coords,$href,$alt,$shape));
-		}
-		function AddItem($value)
-		{
-			if(strtolower(get_class($value)) != 'carea')
-				return $this->error("Incorrect value for AddItem [$value]");
+	function CMap($name=''){
+		parent::CTag('map','yes');
+		$this->setName($name);
+	}
+	
+	function addRectArea($x1,$y1,$x2,$y2,$href,$alt){ 
+		return $this->addArea(array($x1,$y1,$x2,$y2),$href,$alt,'rect'); 
+	}
+	
+	function addArea($coords,$href,$alt,$shape){
+		return $this->addItem(new CArea($coords,$href,$alt,$shape));
+	}
+	
+	function addItem($value){
+		if(strtolower(get_class($value)) != 'carea')
+			return $this->error('Incorrect value for addItem ['.$value.']');
 
-			return parent::AddItem($value);
-		}
+		return parent::addItem($value);
 	}
+}
 
-	class CArea extends CTag
-	{
-		function CArea($coords,$href,$alt,$shape)
-		{
-			parent::CTag("area","no");
-			$this->SetCoords($coords);
-			$this->SetShape($shape);
-			$this->SetHref($href);
-			$this->SetAlt($alt);
-		}
-		function SetCoords($value)
-		{
-			if(!is_array($value))
-				return $this->error("Incorrect value for SetCoords [$value]");
-			if(count($value)<3)
-				return $this->error("Incorrect values count for SetCoords [".count($value)."]");
+class CArea extends CTag{
+	function CArea($coords,$href,$alt,$shape){
+		parent::CTag('area','no');
+		$this->setCoords($coords);
+		$this->setShape($shape);
+		$this->setHref($href);
+		$this->setAlt($alt);
+	}
+	
+	function setCoords($value){
+		if(!is_array($value))
+			return $this->error('Incorrect value for setCoords ['.$value.']');
+		if(count($value)<3)
+			return $this->error('Incorrect values count for setCoords ['.count($value).']');
 
-			$str_val = "";
-			foreach($value as $val)
-			{
-				if(!is_numeric($val))
-					return $this->error("Incorrect value for SetCoords [$val]");
+		$str_val = '';
+		foreach($value as $val){
+			if(!is_numeric($val))
+				return $this->error('Incorrect value for setCoords ['.$val.']');
 
-				$str_val .= $val.",";
-			}
-			$this->AddOption("coords",trim($str_val,','));
+			$str_val .= $val.',';
 		}
-		function SetShape($value)
-		{
-			if(!is_string($value))
-				return $this->error("Incorrect value for SetShape [$value]");
+		$this->addOption('coords',trim($str_val,','));
+	}
 
-			$this->AddOption("shape",$value);
-		}
-		function SetHref($value)
-		{
-			if(!is_string($value))
-				return $this->error("Incorrect value for SetHref [$value]");
+	function setShape($value){
+		if(!is_string($value))
+			return $this->error('Incorrect value for setShape ['.$value.']');
 
-			$this->AddOption("href",$value);
-		}
-		function SetAlt($value)
-		{
-			if(!is_string($value))
-				return $this->error("Incorrect value for SetAlt [$value]");
+		$this->addOption('shape',$value);
+	}
 
-			$this->AddOption("alt",$value);
-		}
+	function setHref($value){
+		if(!is_string($value))
+			return $this->error('Incorrect value for setHref ['.$value.']');
+		$url = new Curl($value);
+		$value = $url->getUrl();
+		
+		$this->addOption('href',$value);
 	}
-?>
+	
+	function setAlt($value){
+		if(!is_string($value))
+			return $this->error('Incorrect value for setAlt ['.$value.']');
+
+		$this->addOption('alt',$value);
+	}
+}
+?>
\ No newline at end of file
diff --git a/frontends/php/include/classes/cscript.inc.php b/frontends/php/include/classes/cscript.inc.php
index 6ace5ca..0c40767 100644
--- a/frontends/php/include/classes/cscript.inc.php
+++ b/frontends/php/include/classes/cscript.inc.php
@@ -24,10 +24,10 @@ class CScript extends CObject{
 
 		function CScript($item=NULL){
 			$this->items = array();
-			$this->AddItem($item);
+			$this->addItem($item);
 		}
 		
-		function AddItem($value){
+		function addItem($value){
 			if(is_array($value)){
 				foreach($value as $item){
 					array_push($this->items,unpack_object($item));
diff --git a/frontends/php/include/classes/ctable.inc.php b/frontends/php/include/classes/ctable.inc.php
index 53c6076..d8830c8 100644
--- a/frontends/php/include/classes/ctable.inc.php
+++ b/frontends/php/include/classes/ctable.inc.php
@@ -97,7 +97,7 @@
 		function CTable($message=NULL,$class=NULL){
 			parent::CTag("table","yes");
 			$this->SetClass($class);
-				
+			
 			$this->rownum = 0;
 			$this->oddRowClass = NULL;
 			$this->evenRowClass = NULL;
@@ -211,6 +211,6 @@
 			$ret .= $this->footer;
 			$ret .= parent::EndToString();
 			return $ret;
-		}
+		}		
 	}
 ?>
diff --git a/frontends/php/include/classes/ctag.inc.php b/frontends/php/include/classes/ctag.inc.php
index 3ddea0d..a8de43a 100644
--- a/frontends/php/include/classes/ctag.inc.php
+++ b/frontends/php/include/classes/ctag.inc.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -19,272 +19,258 @@
 **/
 ?>
 <?php
-	function destroy_objects()
-	{
-		global $GLOBALS;
-
-		if(isset($GLOBALS)) foreach($GLOBALS as $name => $value)
-		{
-			if(!is_object($GLOBALS[$name])) continue;
-			unset($GLOBALS[$name]);
-		}
+function destroy_objects(){
+	if(isset($GLOBALS)) foreach($GLOBALS as $name => $value){
+		if(!is_object($GLOBALS[$name])) continue;
+		unset($GLOBALS[$name]);
 	}
-	
-	function unpack_object(&$item)
-	{
-		$res = "";
+}
 
-		if(is_object($item))
-		{
-			$res = $item->ToString(false);
-		}
-		elseif(is_array($item))
-		{
-			foreach($item as $id => $dat)	
-				$res .= unpack_object($item[$id]); // Attention, recursion !!!
-		}
-		elseif(!is_null($item))
-		{
-			$res = strval($item);
-			unset($item);
-		}
-		return $res;
+function unpack_object(&$item){
+	$res = '';
+
+	if(is_object($item)){
+		$res = $item->toString(false);
+	}
+	else if(is_array($item)){
+		foreach($item as $id => $dat)	
+			$res .= unpack_object($item[$id]); // Attention, recursion !!!
+	}
+	else if(!is_null($item)){
+		$res = strval($item);
+		unset($item);
 	}
+return $res;
+}
 
-	function implode_objects($glue, &$pieces)
-	{
-		if( !is_array($pieces) )	return unpack_object($pieces);
+function implode_objects($glue, &$pieces){
+	if( !is_array($pieces) )	return unpack_object($pieces);
 
-		foreach($pieces as $id => $piece)
-			$pieces[$id] = unpack_object($piece);
+	foreach($pieces as $id => $piece)
+		$pieces[$id] = unpack_object($piece);
 
-		return implode($glue, $pieces);
-	}
+return implode($glue, $pieces);
+}
 
-	class CObject
-	{
-		function CObject($items=null)
-		{
-			$this->items = array();
-			if(isset($items))
-			{
-				$this->AddItem($items);
-			}
-		}
-		
-		function ToString($destroy=true)
-		{
-			$res = implode('',$this->items);
-			if($destroy) $this->Destroy();
-			return $res;
+class CObject{
+	function CObject($items=null){
+		$this->items = array();
+		if(isset($items)){
+			$this->addItem($items);
 		}
+	}
+	
+	function toString($destroy=true){
+		$res = implode('',$this->items);
+		if($destroy) $this->destroy();
+		return $res;
+	}
 
-		function Show($destroy=true){
-			echo $this->ToString($destroy);			
-		}
+	function show($destroy=true){
+		echo $this->toString($destroy);			
+	}
 
-		function Destroy()
-		{
+	function destroy(){
 // TODO Problem under PHP 5.0  "Fatal error: Cannot re-assign $this in ..."
 //			$this = null;
-			$this->CleanItems();
-		}
+		$this->cleanItems();
+	}
 
-		function CleanItems(){	
-			$this->items = array();	
-		}
-		
-		function ItemsCount(){	
-			return count($this->items);	
+	function cleanItems(){	
+		$this->items = array();	
+	}
+	
+	function itemsCount(){	
+		return count($this->items);	
+	}
+	
+	function addItem($value){
+	
+		if(is_object($value)){
+			array_push($this->items,unpack_object($value));
 		}
-		
-		function AddItem($value){
-		
-			if(is_object($value)){
-				array_push($this->items,unpack_object($value));
-			}
-			else if(is_string($value)){
-				array_push($this->items,str_replace(array('<','>','"'),array('&lt;','&gt;','&quot;'),$value));
+		else if(is_string($value)){
+			array_push($this->items,str_replace(array('<','>','"'),array('&lt;','&gt;','&quot;'),$value));
 //				array_push($this->items,htmlspecialchars($value));
+		}
+		else if(is_array($value)){
+			foreach($value as $item){
+				$this->addItem($item);			 // Attention, recursion !!!
 			}
-			else if(is_array($value)){
-				foreach($value as $item){
-					$this->AddItem($item);			 // Attention, recursion !!!
-				}
-			}
-			else if(!is_null($value)){
-				array_push($this->items,unpack_object($value));
-			}
+		}
+		else if(!is_null($value)){
+			array_push($this->items,unpack_object($value));
 		}
 	}
+}
 
-	class CTag extends CObject{
+class CTag extends CObject{
 /* private *//*
-		var $tagname;
-		var $options = array();
-		var $paired;*/
+	var $tagname;
+	var $options = array();
+	var $paired;*/
 /* protected *//*
-		var $items = array();
+	var $items = array();
 
-		var $tag_body_start;
-		var $tag_body_end;
-		var $tag_start;
-		var $tag_end;*/
+	var $tag_body_start;
+	var $tag_body_end;
+	var $tag_start;
+	var $tag_end;*/
 
 /* public */
-		function CTag($tagname=NULL, $paired='no', $body=NULL, $class=null){
-			parent::CObject();
+	function CTag($tagname=NULL, $paired='no', $body=NULL, $class=null){
+		parent::CObject();
 
-			$this->options = array();
-
-			if(!is_string($tagname)){
-				return $this->error('Incorrect tagname for CTag ['.$tagname.']');
-			}
-			
-			$this->tagname = $tagname;
-			$this->paired = $paired;
+		$this->options = array();
 
-			$this->tag_start = $this->tag_end = $this->tag_body_start = $this->tag_body_end = '';
-
-			if(is_null($body)){
-				$this->tag_end = $this->tag_body_start = "\n";
-			}
-			else{
-				CTag::AddItem($body);
-			}
-
-			$this->SetClass($class);
+		if(!is_string($tagname)){
+			return $this->error('Incorrect tagname for CTag ['.$tagname.']');
 		}
 		
-		function ShowStart()	{	echo $this->StartToString();	}
-		function ShowBody()	{	echo $this->BodyToString();	}
-		function ShowEnd()	{	echo $this->EndToString();	}
+		$this->tagname = $tagname;
+		$this->paired = $paired;
 
-		function StartToString(){
-			$res = $this->tag_start.'<'.$this->tagname;
-			foreach($this->options as $key => $value){
-				$res .= ' '.$key.'="'.$value.'"';
-			}
-			$res .= ($this->paired=='yes')?'>':' />';
-		return $res;
-		}
+		$this->tag_start = $this->tag_end = $this->tag_body_start = $this->tag_body_end = '';
 
-		function BodyToString(){
-			$res = $this->tag_body_start;
-		return $res.parent::ToString(false);
-			
-			/*foreach($this->items as $item)
-				$res .= $item;
-			return $res;*/
+		if(is_null($body)){
+			$this->tag_end = $this->tag_body_start = "\n";
 		}
-		
-		function EndToString(){
-			$res = ($this->paired=='yes') ? $this->tag_body_end.'</'.$this->tagname.'>' : '';
-			$res .= $this->tag_end;
-		return $res;
+		else{
+			CTag::addItem($body);
 		}
-		
-		function ToString($destroy=true){
-			$res  = $this->StartToString();
-			$res .= $this->BodyToString();
-			$res .= $this->EndToString();
 
-			if($destroy) $this->Destroy();
+		$this->setClass($class);
+	}
+	
+	function showStart()	{	echo $this->startToString();	}
+	function showBody()	{	echo $this->bodyToString();	}
+	function showEnd()	{	echo $this->endToString();	}
 
-		return $res;
+	function startToString(){
+		$res = $this->tag_start.'<'.$this->tagname;
+		foreach($this->options as $key => $value){
+			$res .= ' '.$key.'="'.$value.'"';
 		}
-		
-		function SetName($value){
-			if(is_null($value)) return $value;
+		$res .= ($this->paired=='yes')?'>':' />';
+	return $res;
+	}
 
-			if(!is_string($value)){
-				return $this->error("Incorrect value for SetName [$value]");
-			}
-		return $this->AddOption("name",$value);
-		}
-		
-		function GetName(){
-			if(isset($this->options['name']))
-				return $this->options['name'];
-		return NULL;
-		}
+	function bodyToString(){
+		$res = $this->tag_body_start;
+	return $res.parent::ToString(false);
 		
-		function SetClass($value){
-			if(isset($value))
-				$this->options['class'] = $value;
-			else
-				unset($this->options['class']);
+		/*foreach($this->items as $item)
+			$res .= $item;
+		return $res;*/
+	}
+	
+	function endToString(){
+		$res = ($this->paired=='yes') ? $this->tag_body_end.'</'.$this->tagname.'>' : '';
+		$res .= $this->tag_end;
+	return $res;
+	}
+	
+	function toString($destroy=true){
+		$res  = $this->startToString();
+		$res .= $this->bodyToString();
+		$res .= $this->endToString();
 
-		return $value;
-		}
-		
-		function DelOption($name){
-			unset($this->options[$name]);
-		}
-		
-		function GetOption($name){
-			$ret = NULL;
-			if(isset($this->options[$name]))
-				$ret =& $this->options[$name];
-		return $ret;
+		if($destroy) $this->Destroy();
+
+	return $res;
+	}
+	
+	function setName($value){
+		if(is_null($value)) return $value;
+
+		if(!is_string($value)){
+			return $this->error("Incorrect value for setName [$value]");
 		}
+	return $this->addOption("name",$value);
+	}
+	
+	function getName(){
+		if(isset($this->options['name']))
+			return $this->options['name'];
+	return NULL;
+	}
+	
+	function setClass($value){
+		if(isset($value))
+			$this->options['class'] = $value;
+		else
+			unset($this->options['class']);
 
-		function SetHint($text, $width='', $class=''){
-			if(empty($text)) return false;
+	return $value;
+	}
+	
+	function DelOption($name){
+		unset($this->options[$name]);
+	}
+	
+	function getOption($name){
+		$ret = NULL;
+		if(isset($this->options[$name]))
+			$ret =& $this->options[$name];
+	return $ret;
+	}
 
-			insert_showhint_javascript();
+	function setHint($text, $width='', $class=''){
+		if(empty($text)) return false;
 
-			$text = unpack_object($text);
-			if($width != '' || $class != ''){
-				$code = "show_hint_ext(this,event,'".$text."','".$width."','".$class."');";
-			}
-			else{
-				$code = "show_hint(this,event,'".$text."');";
-			}
+		insert_showhint_javascript();
 
-			$this->AddAction('onMouseOver',	$code);
-			$this->AddAction('onMouseMove',	'update_hint(this,event);');
+		$text = unpack_object($text);
+		if($width != '' || $class != ''){
+			$code = "show_hint_ext(this,event,'".$text."','".$width."','".$class."');";
 		}
-
-		function OnClick($handle_code){
-			$this->AddAction('onclick', $handle_code);
+		else{
+			$code = "show_hint(this,event,'".$text."');";
 		}
 
-		function AddAction($name, $value){
-			if(is_object($value)){
-				$this->options[$name] = unpack_object($value);
-			}
-			else if(!empty($value)){
-				$this->options[$name] = htmlentities(str_replace(array("\r", "\n"), '', strval($value)),ENT_COMPAT,S_HTML_CHARSET);
-			}
+		$this->addAction('onMouseOver',	$code);
+		$this->addAction('onMouseMove',	'update_hint(this,event);');
+	}
+
+	function onClick($handle_code){
+		$this->addAction('onclick', $handle_code);
+	}
+
+	function addAction($name, $value){
+		if(is_object($value)){
+			$this->options[$name] = unpack_object($value);
 		}
+		else if(!empty($value)){
+			$this->options[$name] = htmlentities(str_replace(array("\r", "\n"), '', strval($value)),ENT_COMPAT,S_HTML_CHARSET);
+		}
+	}
 
-		function AddOption($name, $value){
-			if(is_object($value)){
-				$this->options[$name] = unpack_object($value);
-			}
-			else if(isset($value))
-				$this->options[$name] = htmlspecialchars(strval($value)); 
-			else
-				unset($this->options[$name]);
+	function addOption($name, $value){
+		if(is_object($value)){
+			$this->options[$name] = unpack_object($value);
 		}
+		else if(isset($value))
+			$this->options[$name] = htmlspecialchars(strval($value)); 
+		else
+			unset($this->options[$name]);
+	}
 
-		function SetEnabled($value='yes'){
-			if((is_string($value) && ($value == 'yes' || $value == 'enabled' || $value=='on') || $value=='1')
-				|| (is_int($value) && $value<>0))
-			{
-				unset($this->options['disabled']);
-			}
-			else if((is_string($value) && ($value == 'no' || $value == 'disabled' || $value=='off') || $value=='0')
-				|| (is_int($value) && $value==0))
-			{
-				$this->options['disabled'] = 'disabled';
-			}
+	function setEnabled($value='yes'){
+		if((is_string($value) && ($value == 'yes' || $value == 'enabled' || $value=='on') || $value=='1')
+			|| (is_int($value) && $value<>0))
+		{
+			unset($this->options['disabled']);
 		}
-		
-		function error($value){
-			error('class('.get_class($this).') - '.$value);
-			return 1;
+		else if((is_string($value) && ($value == 'no' || $value == 'disabled' || $value=='off') || $value=='0')
+			|| (is_int($value) && $value==0))
+		{
+			$this->options['disabled'] = 'disabled';
 		}
 	}
-?>
+	
+	function error($value){
+		error('class('.get_class($this).') - '.$value);
+		return 1;
+	}
+}
+?>
\ No newline at end of file
diff --git a/frontends/php/include/classes/ctree.inc.php b/frontends/php/include/classes/ctree.inc.php
index cb6ac19..9cb13dc 100644
--- a/frontends/php/include/classes/ctree.inc.php
+++ b/frontends/php/include/classes/ctree.inc.php
@@ -214,7 +214,6 @@ var $maxlevel=0;
 	global $page;
 		$js = '
 		<script src="js/tree.js" type="text/javascript"></script>
-		<script src="js/cookies.js" type="text/javascript"></script>	
 		<script type="text/javascript"> 
 				var treenode = new Array(0);
 				var tree_name = "tree_'.$this->getUserAlias().'_'.$page["file"].'";
diff --git a/frontends/php/include/classes/ctriggerinfo.mod.php b/frontends/php/include/classes/ctriggerinfo.mod.php
index 3b45705..fcb7f6c 100644
--- a/frontends/php/include/classes/ctriggerinfo.mod.php
+++ b/frontends/php/include/classes/ctriggerinfo.mod.php
@@ -52,7 +52,7 @@
 		}
 
 		function BodyToString(){
-			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
+			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY, get_current_nodeid(true));
 			
 			foreach($available_triggers as $id => $triggerid){
 				if(trigger_dependent($triggerid))	unset($available_triggers[$id]);
diff --git a/frontends/php/include/classes/curl.inc.php b/frontends/php/include/classes/curl.inc.php
new file mode 100644
index 0000000..150718f
--- /dev/null
+++ b/frontends/php/include/classes/curl.inc.php
@@ -0,0 +1,211 @@
+<?php
+/* 
+** ZABBIX
+** Copyright (C) 2000-2005 SIA Zabbix
+**
+** $this program is free software; you can redistribute it and/or modify
+** it under the terms of the GNU General Public License as published by
+** the Free Software Foundation; either version 2 of the License, or
+** (at your option) any later version.
+**
+** $this program is distributed in the hope that it will be useful,
+** but WITHOUT ANY WARRANTY; without even the implied warranty of
+** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+** GNU General Public License for more details.
+**
+** You should have received a copy of the GNU General Public License
+** along with $this program; if not, write to the Free Software
+** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+**/
+?>
+<?php
+// Title: url manipulation class
+// Author: Aly
+
+class Curl{
+/*
+private $url = 			'';		//	actually, it's depricated/private variable 
+private $port =			false;
+private $host = 		'';
+private $protocol = 	'';
+private $username =		'';
+private $password =		'';
+private $filr =			'';
+private $reference =	'';
+private $path =			'';
+private $query =		'';
+private $arguments = 	array();
+//*/
+
+function curl($url=null){
+	global $USER_DETAILS;
+	
+	$this->url = 		null;		//	actually, it's depricated/private variable 
+	$this->port =		null;
+	$this->host = 		null;
+	$this->protocol = 	null;
+	$this->username =	null;
+	$this->password =	null;
+	$this->file =		null;
+	$this->reference =	null;
+	$this->path =		null;
+	$this->query =		null;
+	$this->arguments = 	array();
+
+	if(empty($url)){
+		$this->formatArguments();
+		$this->url = $url = 'http://'.$_SERVER['SERVER_NAME'].$_SERVER['SCRIPT_NAME'].'?'.$this->getQuery();
+	}
+	else{
+		$this->url=urldecode($url);
+
+		$url = parse_url($this->url);
+		
+		$this->protocol = isset($url['scheme']) ? $url['scheme'] : null;
+		$this->host = isset($url['host']) ? $url['host'] : null;
+		$this->port = isset($url['port']) ? $url['port'] : null;
+		$this->username = isset($url['user']) ? $url['user'] : null;
+		$this->password = isset($url['pass']) ? $url['pass'] : null;
+		$this->path = isset($url['path']) ? $url['path'] : null;
+		$this->query = isset($url['query']) ? $url['query'] : '';
+		$this->reference = isset($url['fragment']) ? $url['fragment'] : null;
+		
+		$this->formatArguments($this->query);
+	
+	}
+		if(isset($_COOKIE['zbx_sessionid']))
+			$this->setArgument('sid', substr($_COOKIE['zbx_sessionid'],16,16));
+	
+}
+
+function formatQuery(){
+	$query = '';
+	foreach($this->arguments as $key => $value){
+		$query.= $key.'='.$value.'&';
+	}
+	$this->query = rtrim($query,'&');
+}
+
+function formatArguments($query=null){
+	if(is_null($query)){
+		$this->arguments = $_REQUEST;
+	}
+	else{
+		//$query=ltrim($query,'?');
+		$args = explode('&',$query);
+		foreach($args as $id => $arg){
+			if(empty($arg)) continue;
+			$tmp = explode('=',$arg);
+			$this->arguments[$tmp[0]] = isset($tmp[1])?$tmp[1]:'';
+		}
+	}
+	$this->formatQuery();
+}
+
+function getUrl(){
+		$url = $this->protocol ? $this->protocol.'://' : '';
+		$url .= $this->username ? $this->username : '';
+		$url .= $this->password ? ':'.$this->password : '';
+		$url .= $this->host ? $this->host : '';
+		$url .= $this->port ? ':'.$this->port : '';
+		$url .= $this->path ? $this->path : '';
+		$url .= $this->query ? '?'.$this->query : '';
+		$url .= $this->reference ? '#'.urlencode($this->reference) : '';
+//SDI($this->getProtocol().' : '.$this->getHost().' : '.$this->getPort().' : '.$this->getPath().' : '.$this->getQuery());
+return $url;
+}
+
+function setPort($port){
+	$this->port = $port;
+}
+
+function getPort(){ 
+	return $this->port;
+}
+
+function setArgument($key,$value=''){
+	$this->arguments[$key] = $value;
+	$this->formatQuery();
+}
+
+function getArgument($key){
+	if(isset($this->arguments[$key])) return $this->arguments[$key];
+	else return NULL;
+}
+
+function setQuery($query){ 
+	$this->query = $query;
+	$this->formatArguments();
+	$this->formatQuery();
+}
+
+function getQuery(){ 
+	return $this->query;
+}
+
+function setProtocol($protocol){
+	$this->protocol = $protocol;
+}
+
+/* Returns the protocol of $this URL, i.e. 'http' in the url 'http://server/' */
+function getProtocol(){
+	return $this->protocol;
+}
+
+function setHost($host){
+	$this->host = $host;
+}
+
+/* Returns the host name of $this URL, i.e. 'server.com' in the url 'http://server.com/' */
+function getHost(){
+	return $this->host;
+}
+
+function setUserName($username){
+	$this->username = $username;
+}
+
+/* Returns the user name part of $this URL, i.e. 'joe' in the url 'http://joe@server.com/' */
+function getUserName(){
+	return $this->username;
+}
+
+function setPassword($password){
+	$this->password = $password;
+}
+
+/* Returns the password part of $this url, i.e. 'secret' in the url 'http://joe:secret@server.com/' */
+function getPassword(){
+	return $this->password;
+}
+
+/* Returns the file part of $this url, i.e. everything after the host name. */
+function getFile(){
+	$url .= $this->path ? $this->path : '';
+	$url .= $this->query ? '?'.$this->query : '';
+	$url .= $this->reference ? '#'.urlencode($this->reference) : '';
+	return $url;	
+}
+
+function setReference($reference){
+	$this->reference = $reference;
+}
+
+/* Returns the reference of $this url, i.e. 'bookmark' in the url 'http://server/file.html#bookmark' */
+function getReference(){
+	return $this->reference;
+}
+
+function setPath($path){
+	$this->path = $path;
+}
+
+/* Returns the file path of $this url, i.e. '/dir/file.html' in the url 'http://server/dir/file.html' */
+function getPath(){
+	return $this->path;
+}
+
+function toString(){
+	return $this->getUrl();
+}
+}
\ No newline at end of file
diff --git a/frontends/php/include/config.inc.php b/frontends/php/include/config.inc.php
index 1e11d0b..b001b4a 100644
--- a/frontends/php/include/config.inc.php
+++ b/frontends/php/include/config.inc.php
@@ -30,7 +30,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	require_once('include/copt.lib.php');
 	require_once('include/profiles.inc.php');
 	require_once('conf/maintenance.inc.php');
-	
+
 // GLOBALS
 	global $USER_DETAILS, $USER_RIGHTS;
 
@@ -65,6 +65,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	require_once('include/classes/cpumenu.inc.php');
 	require_once('include/classes/graph.inc.php');
 	require_once('include/classes/cscript.inc.php');
+	require_once('include/classes/curl.inc.php');
 
 // Include Tactical Overview modules
 
@@ -88,7 +89,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 //		show_messages();
 //		die();
 	}
-	
+
 	/********** START INITIALIZATION *********/
 
 	set_error_handler('zbx_err_handler');
@@ -104,11 +105,11 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	$ZBX_CONFIGURATION_FILE = realpath(dirname($ZBX_CONFIGURATION_FILE)).'/'.basename($ZBX_CONFIGURATION_FILE);
 
 	unset($show_setup);
-	
-	
+
+
 	if(defined('ZBX_DENY_GUI_ACCESS')){
 		if(isset($ZBX_GUI_ACCESS_IP_RANGE) && is_array($ZBX_GUI_ACCESS_IP_RANGE)){
-			$user_ip = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) && !empty($_SERVER['HTTP_X_FORWARDED_FOR']))?($_SERVER['HTTP_X_FORWARDED_FOR']):($_SERVER['REMOTE_ADDR']);	
+			$user_ip = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) && !empty($_SERVER['HTTP_X_FORWARDED_FOR']))?($_SERVER['HTTP_X_FORWARDED_FOR']):($_SERVER['REMOTE_ADDR']);
 			if(!str_in_array($user_ip,$ZBX_GUI_ACCESS_IP_RANGE)) $DENY_GUI = TRUE;
 		}
 		else{
@@ -119,14 +120,14 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	if(file_exists($ZBX_CONFIGURATION_FILE) && !isset($_COOKIE['ZBX_CONFIG']) && !isset($DENY_GUI)){
 		include $ZBX_CONFIGURATION_FILE;
 		require_once('include/db.inc.php');
-		
+
 		$error = '';
 		if(!DBconnect($error)){
 			$_REQUEST['message'] = $error;
 
 			define('ZBX_DISTRIBUTED', false);
 			define('ZBX_PAGE_NO_AUTHERIZATION', true);
-			
+
 			$show_warning = true;
 		}
 		else{
@@ -150,9 +151,9 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		if(file_exists($ZBX_CONFIGURATION_FILE)){
 			include $ZBX_CONFIGURATION_FILE;
 		}
-		
+
 		require_once('include/db.inc.php');
-		
+
 		define('ZBX_PAGE_NO_AUTHERIZATION', true);
 		define('ZBX_DISTRIBUTED', false);
 		$show_setup = true;
@@ -192,7 +193,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		exit();
 	}
 //---
-	
+
 	if(isset($DENY_GUI)){
 		unset($show_warning);
 		include_once('warning.php');
@@ -240,16 +241,26 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 			if($node_data = DBfetch(DBselect('SELECT * FROM nodes WHERE nodeid='.$ZBX_CURRENT_NODEID))){
 				$ZBX_CURMASTERID = $node_data['masterid'];
 			}
-			
-			$sql = 'SELECT nodeid,name,masterid FROM nodes';
-			$db_nodes = DBselect($sql);
 
+			if($USER_DETAILS['type'] == USER_TYPE_SUPER_ADMIN){
+				$sql = 'SELECT DISTINCT n.nodeid,n.name,n.masterid FROM nodes n';
+			}
+			else{
+				$sql = 'SELECT DISTINCT n.nodeid,n.name,n.masterid '.
+					' FROM nodes n, groups hg,rights r, users_groups g '.
+					' WHERE r.id=hg.groupid '.
+					 	' AND r.groupid=g.usrgrpid '.
+					 	' AND g.userid='.$USER_DETAILS['userid'].
+					 	' AND (hg.groupid div 100000000000000)=n.nodeid;';
+			}
+
+			$db_nodes = DBselect($sql);
 			while($node = DBfetch($db_nodes)){
 				$ZBX_NODES_IDS[$node['nodeid']] = $node['nodeid'];
 				$ZBX_NODES[$node['nodeid']] = $node;
 			}
 
-			if ( !isset($ZBX_NODES[$ZBX_CURRENT_NODEID]) ){
+			if( !isset($ZBX_NODES[$ZBX_CURRENT_NODEID])){
 				$denyed_page_requested = true;
 				$ZBX_CURRENT_NODEID = $ZBX_LOCALNODEID;
 				$ZBX_CURMASTERID = $ZBX_LOCMASTERID;
@@ -258,7 +269,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 			foreach($ZBX_NODES as $nodeid => $node_data ){
 				$curr_node = &$node_data;
 
-				while(($curr_node['masterid']!=0) && (bccomp($curr_node['masterid'],$ZBX_CURRENT_NODEID)!=0)){
+				if(($curr_node['masterid']!=0) && (bccomp($curr_node['masterid'],$ZBX_CURRENT_NODEID)!=0)){
 					$curr_node = &$ZBX_NODES[$curr_node['masterid']];
 				}
 
@@ -278,10 +289,12 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 
 		$ZBX_CURRENT_SUBNODES[$ZBX_CURRENT_NODEID] = $ZBX_CURRENT_NODEID;
 
-		if((count($ZBX_CURRENT_SUBNODES) < 2) && !defined('ZBX_DISABLE_SUBNODES'))
+		if((count($ZBX_CURRENT_SUBNODES) < 2) && !defined('ZBX_DISABLE_SUBNODES')){
 			define('ZBX_DISABLE_SUBNODES', 1);
-		else		
+		}
+		else{
 			$ZBX_CURRENT_SUBNODES = get_accessible_nodes_by_user($USER_DETAILS, PERM_READ_LIST, PERM_RES_IDS_ARRAY, $ZBX_CURRENT_SUBNODES);
+		}
 	}
 
 	function get_current_nodeid($forse_with_subnodes = null, $perm = null){
@@ -325,12 +338,12 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	}
 
 	function access_deny(){
-	
+
 		include_once('include/page_header.php');
 		show_error_message(S_NO_PERMISSIONS);
 		include_once('include/page_footer.php');
 	}
-	
+
 	function detect_page_type($default=PAGE_TYPE_HTML){
 		if(isset($_REQUEST['output'])){
 			switch($_REQUEST['output']){
@@ -347,7 +360,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		}
 	return $default;
 	}
-	
+
 	function show_messages($bool=TRUE,$okmsg=NULL,$errmsg=NULL){
 		global	$page, $ZBX_MESSAGES;
 
@@ -364,7 +377,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		else if($bool && !is_null($okmsg))	$msg=$okmsg;
 
 		if(isset($msg)){
-			switch($page["type"]){
+			switch($page['type']){
 				case PAGE_TYPE_IMAGE:
 					array_push($message, array(
 						'text'	=> $msg,
@@ -372,29 +385,29 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 						'font'	=> 2));
 					$width = max($width, ImageFontWidth(2) * strlen($msg) + 1);
 					$height += imagefontheight(2) + 1;
-					break;			
+					break;
 				case PAGE_TYPE_XML:
 					echo htmlspecialchars($msg)."\n";
-					break;			
+					break;
 				case PAGE_TYPE_HTML:
 				default:
 					$msg_tab = new CTable($msg,($bool?'msgok':'msgerr'));
 					$msg_tab->setCellPadding(0);
 					$msg_tab->setCellSpacing(0);
-					
-					$msg_col = new CCol(bold($msg),'msg');
+
+					$msg_col = new CCol(bold($msg),'msg_main msg');
 					$msg_col->addOption('id','page_msg');
-					
+
 					$msg_details = SPACE;
 					if(isset($ZBX_MESSAGES) && !empty($ZBX_MESSAGES)){
 						$msg_details = new CDiv(array(S_DETAILS),'pointer');
 						$msg_details->addAction('onclick',new CScript("javascript: ShowHide('msg_messages', IE?'block':'table');"));
 						$msg_details->addOption('title',S_MAXIMIZE.'/'.S_MINIMIZE);
 					}
-					
+
 					$msg_tab->addRow(array(new CCol($msg_details,'clr'),$msg_col));
 					$msg_tab->Show();
-					
+
 					$img_space = new CImg('images/general/tree/zero.gif','space','100','2');
 					break;
 			}
@@ -434,36 +447,37 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 				}
 //message scroll if needed
 				$msg_show = 6;
-				$msg_font_size = 6;
-				$msg_count = count($ZBX_MESSAGES) + 1;
-				
-				if($msg_count > $msg_show) $msg_count = $msg_show;
+				$msg_count = count($ZBX_MESSAGES);
+
+				if($msg_count > $msg_show){
+					$msg_count = $msg_show;
+
+					$msg_count = ($msg_count * 16);
+					$lst_error->addOption('style','height: '.$msg_count.'px;');
+				}
 
-				$msg_count = ($msg_count * $msg_font_size * 4);
-				$lst_error->AddOption('style','font-size: '.$msg_font_size.'pt; height: '.$msg_count.'px;');
-				
 
 				$tab = new CTable(null,($bool?'msgok':'msgerr'));
-				
+
 				$tab->setCellPadding(0);
 				$tab->setCellSpacing(0);
 
 				$tab->addOption('id','msg_messages');
 				$tab->addOption('style','width: 100%;');
-				
-				if(isset($msg_tab)){
+
+				if(isset($msg_tab) && is_null($errmsg)){					
 					$tab->addOption('style','display: none;');
 				}
-				
+
 				$tab->addRow(new CCol($lst_error,'msg'));
 				$tab->Show();
 //---
 			}
 			$ZBX_MESSAGES = null;
 		}
-		
+
 		if(!is_null($img_space)) print(unpack_object($img_space));
-		
+
 		if($page['type'] == PAGE_TYPE_IMAGE && count($message) > 0){
 			$width += 2;
 			$height += 2;
@@ -471,10 +485,10 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 			imagefilledrectangle($canvas,0,0,$width,$height, imagecolorallocate($canvas, 255, 255, 255));
 
 			foreach($message as $id => $msg){
-			
+
 				$message[$id]['y'] = 1 + (isset($previd) ? $message[$previd]['y'] + $message[$previd]['h'] : 0 );
 				$message[$id]['h'] = imagefontheight($msg['font']);
-				
+
 				imagestring(
 					$canvas,
 					$msg['font'],
@@ -483,7 +497,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 					$msg['text'],
 					imagecolorallocate($canvas, $msg['color']['R'], $msg['color']['G'], $msg['color']['B'])
 					);
-				
+
 				$previd = $id;
 			}
 			imageOut($canvas);
@@ -528,7 +542,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		show_error_message($msg);
 		include_once "include/page_footer.php";
 	}
-	
+
 //	The hash has form <md5sum of triggerid>,<sum of priorities>
 	function calc_trigger_hash(){
 
@@ -727,16 +741,15 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	}
 
 	function get_status(){
-//		global $DB;
+		global $ZBX_SERVER, $ZBX_SERVER_PORT;
+
 		$status = array();
 // server
-		if( (exec('ps -ef|grep zabbix_server|grep -v grep|wc -l')>0) || (exec('ps -ax|grep zabbix_server|grep -v grep|wc -l')>0) ){
-			$status["zabbix_server"] = S_YES;
-		}
-		else{
-			$status["zabbix_server"] = S_NO;
-		}
-// history & trends
+		$checkport = fsockopen($ZBX_SERVER, $ZBX_SERVER_PORT, $errnum, $errstr, 2);
+		
+		$status["zabbix_server"] = ($checkport) ? S_YES : S_NO;
+
+		// history & trends
 /*		if ($DB['DB_TYPE'] == "MYSQL"){
 			$row=DBfetch(DBselect('show table status like "history"'));
 			$status["history_count"]  = $row["Rows"];
@@ -770,7 +783,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 // alerts
 /*		$row=DBfetch(DBselect('SELECT COUNT(alertid) as cnt from alerts"));
 		$status["alerts_count"]=$row["cnt"];*/
-		
+
 // triggers
 		$sql = 'SELECT COUNT(DISTINCT t.triggerid) as cnt '.
 				' FROM triggers t, functions f, items i, hosts h'.
@@ -779,7 +792,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 					' AND i.status='.ITEM_STATUS_ACTIVE.
 					' AND i.hostid=h.hostid '.
 					' AND h.status='.HOST_STATUS_MONITORED;
-					
+
 		$row=DBfetch(DBselect($sql));
 		$status['triggers_count']=$row['cnt'];
 
@@ -797,13 +810,13 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 
 		$row=DBfetch(DBselect($sql.' and t.status=0 and t.value=2'));
 		$status['triggers_count_unknown']=$row['cnt'];
-		
-// items 
+
+// items
 		$sql = 'SELECT COUNT(DISTINCT i.itemid) as cnt '.
 				' FROM items i, hosts h '.
 				' WHERE i.hostid=h.hostid '.
 					' AND h.status='.HOST_STATUS_MONITORED;
-					
+
 		$row=DBfetch(DBselect($sql));
 		$status['items_count']=$row['cnt'];
 
@@ -818,7 +831,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 
 		$row=DBfetch(DBselect($sql.' and i.type=2'));
 		$status['items_count_trapper']=$row['cnt'];
-		
+
 // hosts
 		$sql = 'SELECT COUNT(hostid) as cnt '.
 				' FROM hosts '.
@@ -837,20 +850,20 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 
 		$row=DBfetch(DBselect('SELECT COUNT(hostid) as cnt FROM hosts WHERE status='.HOST_STATUS_DELETED));
 		$status['hosts_count_deleted']=$row['cnt'];
-		
+
 // users
 		$row=DBfetch(DBselect('SELECT COUNT(userid) as cnt FROM users'));
 		$status['users_count']=$row['cnt'];
-		
+
 		$status['users_online']=0;
 		$sql = 'SELECT DISTINCT s.userid '.
 				' FROM sessions s, users u '.
 				' WHERE u.userid=s.userid '.
 					' AND u.autologout>0 '.
 					' AND (s.lastaccess+u.autologout)>'.time();
-		$result=DBselect($sql);	
+		$result=DBselect($sql);
 		while(DBfetch($result))		$status['users_online']++;
-		
+
 		$result=DBselect('SELECT DISTINCT s.userid '.
 						' FROM sessions s, users u '.
 						' WHERE u.userid=s.userid '.
@@ -985,19 +998,19 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		global $IMAGE_FORMAT_DEFAULT;
 
 		if(is_null($format)) $format = $IMAGE_FORMAT_DEFAULT;
-		
-		if(IMAGE_FORMAT_JPEG == $format)	Header( "Content-type:  image/jpeg"); 
-		if(IMAGE_FORMAT_TEXT == $format)	Header( "Content-type:  text/html"); 
-		else								Header( "Content-type:  image/png"); 
-		
-		Header( "Expires:  Mon, 17 Aug 1998 12:51:50 GMT"); 
+
+		if(IMAGE_FORMAT_JPEG == $format)	Header( "Content-type:  image/jpeg");
+		if(IMAGE_FORMAT_TEXT == $format)	Header( "Content-type:  text/html");
+		else								Header( "Content-type:  image/png");
+
+		Header( "Expires:  Mon, 17 Aug 1998 12:51:50 GMT");
 	}
-	
+
 	function ImageOut($image,$format=NULL){
 		global $IMAGE_FORMAT_DEFAULT;
 
 		if(is_null($format)) $format = $IMAGE_FORMAT_DEFAULT;
-		
+
 		if(IMAGE_FORMAT_JPEG == $format)
 			ImageJPEG($image);
 		else
@@ -1037,7 +1050,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		if(!is_array($mappings))	return FALSE;
 
 		$valuemapid = get_dbid("valuemaps","valuemapid");
-		
+
 		$result = DBexecute("insert into valuemaps (valuemapid,name) values ($valuemapid,".zbx_dbstr($name).")");
 		if(!$result)
 			return $result;
@@ -1094,18 +1107,18 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	function zbx_stripslashes($value){
 		if(is_array($value)){
 			foreach($value as $id => $data)
-				$value[$id] = zbx_stripslashes($data); 
+				$value[$id] = zbx_stripslashes($data);
 				// $value = array_map('zbx_stripslashes',$value); /* don't use 'array_map' it buggy with indexes */
 		} elseif (is_string($value)){
 			$value = stripslashes($value);
 		}
 		return $value;
 	}
-	
+
 	function empty2null($var){
 		return ($var == "") ? null : $var;
 	}
-	
+
 	function str2mem($val){
 		$val = trim($val);
 		$last = strtolower($val{strlen($val)-1});
@@ -1121,7 +1134,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 
 		return $val;
 	}
-	
+
 	function mem2str($size){
 		$prefix = 'B';
 		if($size > 1048576) {	$size = $size/1048576;	$prefix = 'M'; }
@@ -1129,7 +1142,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		return round($size, 6).$prefix;
 	}
 
-	/* Do not forget to sync it with add_value_suffix in evalfunc.c! */ 
+	/* Do not forget to sync it with add_value_suffix in evalfunc.c! */
 	function convert_units($value,$units){
 // Special processing for unix timestamps
 		if($units=="unixtime"){
@@ -1161,7 +1174,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		}
 // Special processing for seconds
 		if($units=="s"){
-			return zbx_date2age(0,$value,true);	
+			return zbx_date2age(0,$value,true);
 		}
 
 		$u="";
@@ -1185,7 +1198,7 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 				$u="G";
 				$value=$value/(1000*1000*1000);
 			}
-	
+
 			if(round($value) == round($value,2)){
 				$s=sprintf("%.0f",$value);
 			}
@@ -1250,10 +1263,10 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	 */
 	function validate_sort_and_sortorder($sort=NULL,$sortorder=ZBX_SORT_UP){
 		global $page;
-		
+
 		$_REQUEST['sort'] = get_request('sort',get_profile('web.'.$page["file"].'.sort',$sort));
 		$_REQUEST['sortorder'] = get_request('sortorder',get_profile('web.'.$page["file"].'.sortorder',$sortorder));
-		
+
 		if(!is_null($_REQUEST['sort'])){
 			$_REQUEST['sort'] = eregi_replace('[^a-z\.\_]','',$_REQUEST['sort']);
 			update_profile('web.'.$page["file"].'.sort',		$_REQUEST['sort']);
@@ -1275,15 +1288,15 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 	 */
 	function make_sorting_link($obj,$tabfield,$url=''){
 		global $page;
-		
+
 		$sortorder = (isset($_REQUEST['sortorder']) && ($_REQUEST['sortorder'] == ZBX_SORT_UP))?ZBX_SORT_DOWN:ZBX_SORT_UP;
-		
+
 		if(empty($url)){
 			$url='?';
 			$url_params = explode('&',$_SERVER['QUERY_STRING']);
 			foreach($url_params as $id => $param){
 				if(zbx_empty($param)) continue;
-				
+
 				list($name,$value) = explode('=',$param);
 				if(zbx_empty($name) || ($name == 'sort') || (($name == 'sortorder'))) continue;
 				$url.=$param.'&';
@@ -1292,16 +1305,16 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 		else{
 			$url.='&';
 		}
-		
+
 		$url.='sort='.$tabfield.'&sortorder='.$sortorder;
-		
+
 		if(($page['type'] != PAGE_TYPE_HTML) && defined('ZBX_PAGE_MAIN_HAT')){
 			$link = new CLink($obj,$url,null,"javascript: return updater.onetime_update('".ZBX_PAGE_MAIN_HAT."','".$url."');");
 		}
 		else{
 			$link = new CLink($obj,$url);
 		}
-		
+
 		if(isset($_REQUEST['sort']) && ($tabfield == $_REQUEST['sort'])){
 			if($sortorder == ZBX_SORT_UP){
 				$img = new CImg('images/general/sort_downw.gif','down',10,10);
@@ -1309,22 +1322,22 @@ function TODO($msg) { echo "TODO: ".$msg.SBR; }  // DEBUG INFO!!!
 			else{
 				$img = new CImg('images/general/sort_upw.gif','up',10,10);
 			}
-			
+
 			$img->AddOption('style','line-height: 18px; vertical-align: middle;');
 			$link = array($link,SPACE,$img);
-		}		
-		
+		}
+
 	return $link;
 	}
-	
+
 	function order_by($def,$allways=''){
 		global $page;
-	
+
 		if(!empty($allways)) $allways = ','.$allways;
 		$sortable = explode(',',$def);
-		
+
 		$tabfield = get_request('sort',get_profile('web.'.$page["file"].'.sort',null));
-		
+
 		if(is_null($tabfield)) return ' ORDER BY '.$def.$allways;
 		if(!str_in_array($tabfield,$sortable)) return ' ORDER BY '.$def.$allways;
 
diff --git a/frontends/php/include/db.inc.php b/frontends/php/include/db.inc.php
index 553efb5..112b49b 100644
--- a/frontends/php/include/db.inc.php
+++ b/frontends/php/include/db.inc.php
@@ -754,9 +754,9 @@ else {
 				$items = array_chunk($array, 950);
 				foreach($items as $id => $values){
 					$condition.=!empty($condition)?')'.$concat.$fieldname.$in.'(':'';
-					$condition.= implode($glue,$values);
 					
-					if($string) $condition= "'".$condition."'";
+					if($string)	$condition.= "'".implode($glue,$values)."'";
+					else		$condition.= implode($glue,$values);
 				}
 				break;
 		}
@@ -766,4 +766,4 @@ else {
 	return ' ('.$fieldname.$in.'('.$condition.')) ';
 	}
 	
-?>
+?>
\ No newline at end of file
diff --git a/frontends/php/include/defines.inc.php b/frontends/php/include/defines.inc.php
index 171e66e..caeab8e 100644
--- a/frontends/php/include/defines.inc.php
+++ b/frontends/php/include/defines.inc.php
@@ -19,8 +19,39 @@
 **/
 ?>
 <?php
-	define('ZABBIX_VERSION','1.6.2');
+	define('ZABBIX_VERSION','1.6.3');
+
+/* USER DEFINES */	
+
+	define('ZBX_LOGIN_ATTEMPTS', 	5);
+	define('ZBX_LOGIN_BLOCK', 		30); // sec
+	
+	define('TRIGGERS_OPTION_DISABLED',		0);		// reserved
+	define('TRIGGERS_OPTION_ONLYTRUE',		1);		// use 0 to disable
+	define('TRIGGERS_OPTION_ALL',			2);		// use 0 to disable
+	define('TRIGGERS_OPTION_NOFALSEFORB',	0);		// use 0 to disable
+	
+	define('TRIGGER_FALSE_PERIOD', 			1800);	// 30min,  0 - disable
+	define('TRIGGER_BLINK_PERIOD',			1800);	// 30min,  0 - disable
+
+	define('EVENTS_OPTION_DISABLED',		0);		//	reserved
+	define('EVENTS_OPTION_NOEVENT',			1);		//	use 0 to disable
+	define('EVENTS_OPTION_ALL',				2);		//	use 0 to disable
+	define('EVENTS_OPTION_NOT_ACK',			3);		//	use 0 to disable
+	define('EVENTS_OPTION_ONLYTRUE_NOTACK',	4);		//	use 0 to disable
+	define('EVENTS_OPTION_NOFALSEFORB',		5);		//  reserved for TRIGGERS_OPTION_NOFALSEFORB, to disable set TRIGGERS_OPTION_NOFALSEFORB to 0
+
+	define('ZBX_MIN_PERIOD', 3600);					// ~1 hour
+	define('ZBX_MAX_PERIOD', 12*31*24*3600);		// ~1 year
+	define('ZBX_PERIOD_DEFAULT', ZBX_MIN_PERIOD);
+
+	define('ZBX_DROPDOWN_FIRST_ENTRY',		1);		// 0 - NONE, 1 - ALL
+	define('ZBX_DROPDOWN_FIRST_REMEMBER',	1);		// 0 - do NOT remember, 1 - do remember
+
+	define('ZBX_DISABLE_MENU_CACHE',		0);		// set 1 to disable
 	
+/* END OF USERS DEFINES */
+
 	define('ZBX_AUTH_INTERNAL',	0);
 	define('ZBX_AUTH_LDAP',		1);
 	define('ZBX_AUTH_HTTP',		2);
@@ -31,11 +62,11 @@
 	define('PAGE_TYPE_JS',			3);	//javascript
 	define('PAGE_TYPE_HTML_BLOCK',	4);	//simple block of html (as text)
 	
-	define('ZBX_LOGIN_ATTEMPTS', 	5);
-	define('ZBX_LOGIN_BLOCK', 		30); // sec
-	
 	define('ZBX_SESSION_ACTIVE', 0);
 	define('ZBX_SESSION_PASSIVE', 1);
+	
+	define('ZBX_DROPDOWN_FIRST_NONE',		0);
+	define('ZBX_DROPDOWN_FIRST_ALL',		1);
 
 	define('T_ZBX_STR',			0);
 	define('T_ZBX_INT',			1);
@@ -217,18 +248,10 @@
 	define('TRIGGER_STATUS_DISABLED',1);
 	define('TRIGGER_STATUS_UNKNOWN',2);
 	
-	define('TRIGGERS_OPTION_DISABLED',		0);	// reserved
-	define('TRIGGERS_OPTION_ONLYTRUE',		1);	// use 0 to disable
-	define('TRIGGERS_OPTION_ALL',			2);	// use 0 to disable
-	define('TRIGGERS_OPTION_NOFALSEFORB',	0);	// use 0 to disable
-
 	define('TRIGGER_VALUE_FALSE',0);
 	define('TRIGGER_VALUE_TRUE',1);
 	define('TRIGGER_VALUE_UNKNOWN',2);
 
-	define('TRIGGER_FALSE_PERIOD', 			1800);	
-	define('TRIGGER_BLINK_PERIOD',			1800);
-
 	define('TRIGGER_SEVERITY_NOT_CLASSIFIED',	0);
 	define('TRIGGER_SEVERITY_INFORMATION',		1);
 	define('TRIGGER_SEVERITY_WARNING',		2);
@@ -372,13 +395,6 @@
 	define('PERM_RES_IDS_ARRAY',	1); /* return array of nodes id - array(1,2,3,4) */
 	define('PERM_RES_DATA_ARRAY',	2); 
 
-	define('PERM_MODE_NE',	5);
-	define('PERM_MODE_EQ',	4);
-	define('PERM_MODE_GT',	3);
-	define('PERM_MODE_LT',	2);
-	define('PERM_MODE_LE',	1);
-	define('PERM_MODE_GE',	0);
-
 	define('RESOURCE_TYPE_NODE',		0);
 	define('RESOURCE_TYPE_GROUP',		1);
 
@@ -414,13 +430,6 @@
 	define('EVENT_OBJECT_DHOST',		1);
 	define('EVENT_OBJECT_DSERVICE',		2);
 	
-	define('EVENTS_OPTION_DISABLED',		0);		//	reserved
-	define('EVENTS_OPTION_NOEVENT',			1);		//	use 0 to disable
-	define('EVENTS_OPTION_ALL',				2);		//	use 0 to disable
-	define('EVENTS_OPTION_NOT_ACK',			3);		//	use 0 to disable
-	define('EVENTS_OPTION_ONLYTRUE_NOTACK',	4);		//	use 0 to disable
-	define('EVENTS_OPTION_NOFALSEFORB',		5);		//  reserved for TRIGGERS_OPTION_NOFALSEFORB, to disable set TRIGGERS_OPTION_NOFALSEFORB to 0
-
 	define('DOBJECT_STATUS_UP',		0);
 	define('DOBJECT_STATUS_DOWN',		1);
 	define('DOBJECT_STATUS_DISCOVER',	2); /* only for events,           */
@@ -503,10 +512,6 @@ else{
 	define('ZBX_EXPRESSION_SIMPLE_EXPRESSION_ID', 2);
 	define('ZBX_EXPRESSION_MACRO_ID', 13);
 	define('ZBX_EXPRESSION_RIGHT_ID', 14);
-
-	define('ZBX_MIN_PERIOD', 3600);				// ~1 hour
-	define('ZBX_MAX_PERIOD', 12*31*24*3600);	// ~1 year
-	define('ZBX_PERIOD_DEFAULT', ZBX_MIN_PERIOD);
 	
 	define('ZBX_HISTORY_COUNT',5);
 	
@@ -584,4 +589,4 @@ else{
 /* init $_REQUEST */
 	ini_set('variables_order', 'GP');
 	$_REQUEST = $_POST + $_GET;
-?>
+?>
\ No newline at end of file
diff --git a/frontends/php/include/events.inc.php b/frontends/php/include/events.inc.php
index f8e2383..0c6c254 100644
--- a/frontends/php/include/events.inc.php
+++ b/frontends/php/include/events.inc.php
@@ -347,7 +347,7 @@ function get_history_of_triggers_events($start,$num, $groupid=0, $hostid=0){
 	$sql_from = $sql_cond = '';
 
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_DATA_ARRAY, get_current_nodeid());
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_DATA_ARRAY, get_current_nodeid());
 	
 	if($hostid > 0){
 		$sql_cond = ' AND h.hostid='.$hostid;
diff --git a/frontends/php/include/export.inc.php b/frontends/php/include/export.inc.php
index 2077106..a7e153b 100644
--- a/frontends/php/include/export.inc.php
+++ b/frontends/php/include/export.inc.php
@@ -312,7 +312,7 @@
 			$data = DBfetch(DBselect($sql));
 			if(!$data) return false;
 
-			$data['item'] = '{HOSTNAME}:'.$data['key_'];
+			$data['item'] = $data['host'].':'.$data['key_'];
 			
 			zbx_xmlwriter_start_element ($memory,XML_TAG_GRAPH_ELEMENT);
 			
diff --git a/frontends/php/include/forms.inc.php b/frontends/php/include/forms.inc.php
index 366e6c1..84a46d1 100644
--- a/frontends/php/include/forms.inc.php
+++ b/frontends/php/include/forms.inc.php
@@ -26,9 +26,9 @@
 	function insert_slideshow_form(){
 		$form = new CFormTable(S_SLIDESHOW, null, 'post');
 		$form->SetHelp('config_advanced.php');
-		
+
 		$form->AddVar('config', 1);
-			
+
 		if(isset($_REQUEST['slideshowid'])){
 			$form->AddVar('slideshowid', $_REQUEST['slideshowid']);
 		}
@@ -38,15 +38,15 @@
 		$steps		= get_request('steps', array());
 
 		$new_step	= get_request('new_step', null);
-		
+
 		if((isset($_REQUEST['slideshowid']) && !isset($_REQUEST['form_refresh']))){
 			$slideshow_data = DBfetch(DBselect('SELECT * FROM slideshows WHERE slideshowid='.$_REQUEST['slideshowid']));
-		
+
 			$name		= $slideshow_data['name'];
 			$delay		= $slideshow_data['delay'];
 			$steps		= array();
 			$db_steps = DBselect('SELECT * FROM slides WHERE slideshowid='.$_REQUEST['slideshowid'].' order by step');
-			
+
 			while($step_data = DBfetch($db_steps)){
 				$steps[$step_data['step']] = array(
 						'screenid' => $step_data['screenid'],
@@ -54,11 +54,11 @@
 					);
 			}
 		}
-		
+
 		$form->AddRow(S_NAME, new CTextBox('name', $name, 40));
-		
+
 		$form->AddRow(S_UPDATE_INTERVAL_IN_SEC, new CNumericBox("delay",$delay,5));
-		
+
 		$tblSteps = new CTableInfo(S_NO_SLIDES_DEFINED);
 		$tblSteps->SetHeader(array(S_SCREEN, S_DELAY, SPACE));
 		if(count($steps) > 0){
@@ -66,31 +66,31 @@
 			$first = min(array_keys($steps));
 			$last = max(array_keys($steps));
 		}
-		
+
 		foreach($steps as $sid => $s){
 			if( !isset($s['screenid']) ) $s['screenid'] = 0;
 
 			if(isset($s['delay']) && $s['delay'] > 0 )
 				$s['delay'] = bold($s['delay']);
-			else	
+			else
 				$s['delay'] = $delay;
-			
+
 			$up = null;
 			if($sid != $first){
 				$up = new CLink(S_UP,'#','action');
 				$up->OnClick("return create_var('".$form->GetName()."','move_up',".$sid.", true);");
 			}
-			
+
 			$down = null;
 			if($sid != $last){
 				$down = new CLink(S_DOWN,'#','action');
 				$down->OnClick("return create_var('".$form->GetName()."','move_down',".$sid.", true);");
 			}
-			
+
 			$screen_data = get_screen_by_screenid($s['screenid']);
 			$name = new CLink($screen_data['name'],'#','action');
 			$name->OnClick("return create_var('".$form->GetName()."','edit_step',".$sid.", true);");
-			
+
 			$tblSteps->AddRow(array(
 				array(new CCheckBox('sel_step[]',null,null,$sid), $name),
 				$s['delay'],
@@ -131,7 +131,7 @@
 				),
 				isset($new_step['sid']) ? 'edit' : 'new');
 		}
-		
+
 		$form->AddItemToBottomRow(new CButton("save",S_SAVE));
 		if(isset($_REQUEST['slideshowid'])){
 			$form->AddItemToBottomRow(SPACE);
@@ -149,19 +149,19 @@
 	function insert_drule_form(){
 
 		$frm_title = S_DISCOVERY_RULE;
-			
+
 		if(isset($_REQUEST['druleid'])){
 			if( ($rule_data = DBfetch(DBselect('SELECT * FROM drules WHERE druleid='.$_REQUEST['druleid']))))
 				$frm_title = S_DISCOVERY_RULE.' "'.$rule_data['name'].'"';
 		}
-		
+
 		$form = new CFormTable($frm_title, null, 'post');
 		$form->SetHelp("web.discovery.rule.php");
 
 		if(isset($_REQUEST['druleid'])){
 			$form->AddVar('druleid', $_REQUEST['druleid']);
 		}
-		
+
 		if(isset($_REQUEST['druleid']) && $rule_data && (!isset($_REQUEST["form_refresh"]) || isset($_REQUEST["register"]))){
 			$proxy_hostid	= $rule_data['proxy_hostid'];
 			$name		= $rule_data['name'];
@@ -186,7 +186,7 @@
 
 			$dchecks	= get_request('dchecks',array());
 		}
-		
+
 		$new_check_type	= get_request('new_check_type', SVC_HTTP);
 		$new_check_ports= get_request('new_check_ports', '80');
 		$new_check_key= get_request('new_check_key', '');
@@ -197,7 +197,7 @@
 		$cmbProxy = new CComboBox("proxy_hostid", $proxy_hostid);
 
 		$cmbProxy->AddItem(0, S_NO_PROXY);
-		
+
 		$sql = 'SELECT hostid,host '.
 				' FROM hosts'.
 				' WHERE status IN ('.HOST_STATUS_PROXY.') '.
@@ -221,7 +221,7 @@
 				case SVC_SNMPv2:
 					$external_param = ' "'.$data['snmp_community'].'":"'.$data['key'].'"';
 					break;
-				case SVC_AGENT:	
+				case SVC_AGENT:
 					$external_param = ' "'.$data['key'].'"';
 					break;
 				default:
@@ -258,7 +258,7 @@
 				$external_param = array_merge($external_param, array(BR(), S_SNMP_COMMUNITY, SPACE, new CTextBox('new_check_snmp_community', $new_check_snmp_community)));
 				$external_param = array_merge($external_param, array(BR(), S_SNMP_OID, new CTextBox('new_check_key', $new_check_key), BR()));
 				break;
-			case SVC_AGENT:	
+			case SVC_AGENT:
 				$form->AddVar('new_check_snmp_community', '');
 				$external_param = array_merge($external_param, array(BR(), S_KEY, new CTextBox('new_check_key', $new_check_key), BR()));
 				break;
@@ -303,43 +303,41 @@
 		$form->SetHelp("web.webmon.httpconf.php");
 
 		$form->AddVar('dstfrm', get_request('dstfrm', null));
-		$form->AddVar('sid', get_request('sid', null));
+		$form->AddVar('stepid', get_request('stepid', null));
 		$form->AddVar('list_name', get_request('list_name', null));
 
-		$sid = get_request('sid', null);
+		$stepid = get_request('stepid', null);
 		$name = get_request('name', '');
 		$url = get_request('url', '');
 		$posts = get_request('posts', '');
 		$timeout = get_request('timeout', 15);
 		$required = get_request('required', '');
 		$status_codes = get_request('status_codes', '');
-		
+
 		$form->AddRow(S_NAME, new CTextBox('name', $name, 50));
 		$form->AddRow(S_URL, new CTextBox('url', $url, 80));
 		$form->AddRow(S_POST, new CTextArea('posts', $posts, 50, 10));
 		$form->AddRow(S_TIMEOUT, new CNumericBox('timeout', $timeout, 5));
 		$form->AddRow(S_REQUIRED, new CTextBox('required', $required, 80));
 		$form->AddRow(S_STATUS_CODES, new CTextBox('status_codes', $status_codes, 80));
-		
-		$form->AddItemToBottomRow(new CButton("save", isset($sid) ? S_SAVE : S_ADD));
+
+		$form->AddItemToBottomRow(new CButton("save", isset($stepid) ? S_SAVE : S_ADD));
 
 		$form->AddItemToBottomRow(new CButtonCancel(null,'close_window();'));
 
 		$form->show();
 	}
-	
-	function	insert_httptest_form()
-	{
 
+	function insert_httptest_form(){
 
 		$form = new CFormTable(S_SCENARIO, null, 'post');
 		$form->SetHelp("web.webmon.httpconf.php");
-		
-		if(isset($_REQUEST["groupid"]))
-			$form->AddVar("groupid",$_REQUEST["groupid"]);
-			
-		$form->AddVar("hostid",$_REQUEST["hostid"]);
-			
+
+		if($_REQUEST['groupid']>0)
+			$form->AddVar('groupid',$_REQUEST['groupid']);
+
+		$form->AddVar("hostid",$_REQUEST['hostid']);
+
 		if(isset($_REQUEST["httptestid"])){
 			$form->AddVar("httptestid",$_REQUEST["httptestid"]);
 		}
@@ -351,19 +349,19 @@
 		$agent		= get_request('agent', '');
 		$macros		= get_request('macros', array());
 		$steps		= get_request('steps', array());
-		
+
 		if((isset($_REQUEST["httptestid"]) && !isset($_REQUEST["form_refresh"])) || isset($limited)){
 			$httptest_data = DBfetch(DBselect("SELECT wt.*, a.name as application ".
 				" FROM httptest wt,applications a WHERE wt.httptestid=".$_REQUEST["httptestid"].
 				" AND a.applicationid=wt.applicationid"));
-		
+
 			$name		= $httptest_data['name'];
 			$application	= $httptest_data['application'];
 			$delay		= $httptest_data['delay'];
 			$status		= $httptest_data['status'];
 			$agent		= $httptest_data['agent'];
 			$macros		= $httptest_data['macros'];
-			
+
 			$steps		= array();
 			$db_steps = DBselect('SELECT * FROM httpstep WHERE httptestid='.$_REQUEST["httptestid"].' order by no');
 			while($step_data = DBfetch($db_steps))
@@ -371,7 +369,7 @@
 				$steps[] = $step_data;
 			}
 		}
-		
+
 		$form->AddRow(S_APPLICATION,array(
 			new CTextBox('application', $application, 40),
 			SPACE,
@@ -382,9 +380,9 @@
 			));
 
 		$form->AddRow(S_NAME, new CTextBox('name', $name, 40));
-		
+
 		$form->AddRow(S_UPDATE_INTERVAL_IN_SEC, new CNumericBox("delay",$delay,5));
-		
+
 		$cmbAgent = new CEditableComboBox('agent', $agent, 80);
 		$cmbAgent->AddItem('Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)',
 			'Internet Explorer 6.0 on Windows XP SP2 with .NET Framework 2.0 installed');
@@ -401,7 +399,7 @@
 		$cmbAgent->AddItem('Googlebot/2.1 (+http://www.google.com/bot.html)',
 			'Googlebot');
 		$form->AddRow(S_AGENT, $cmbAgent);
-		
+
 		$cmbStatus = new CComboBox("status", $status);
 		foreach(array(HTTPTEST_STATUS_ACTIVE, HTTPTEST_STATUS_DISABLED) as $st)
 			$cmbStatus->AddItem($st, httptest_status2str($st));
@@ -415,30 +413,30 @@
 			$first = min(array_keys($steps));
 			$last = max(array_keys($steps));
 		}
-		foreach($steps as $sid => $s){
+		foreach($steps as $stepid => $s){
 			if(!isset($s['name']))		$s['name'] = '';
 			if(!isset($s['timeout']))	$s['timeout'] = 15;
 			if(!isset($s['url']))       	$s['url'] = '';
 			if(!isset($s['posts']))       	$s['posts'] = '';
 			if(!isset($s['required']))       $s['required'] = '';
-			
+
 			$up = null;
-			if($sid != $first)
+			if($stepid != $first)
 			{
 				$up = new CLink(S_UP,'#','action');
-				$up->OnClick("return create_var('".$form->GetName()."','move_up',".$sid.", true);");
+				$up->OnClick("return create_var('".$form->GetName()."','move_up',".$stepid.", true);");
 			}
-			
+
 			$down = null;
-			if($sid != $last)
+			if($stepid != $last)
 			{
 				$down = new CLink(S_DOWN,'#','action');
-				$down->OnClick("return create_var('".$form->GetName()."','move_down',".$sid.", true);");
+				$down->OnClick("return create_var('".$form->GetName()."','move_down',".$stepid.", true);");
 			}
 
 			$name = new CLink($s['name'],'#','action');
 			$name->OnClick('return PopUp("popup_httpstep.php?dstfrm='.$form->GetName().
-				'&list_name=steps&sid='.$sid.
+				'&list_name=steps&stepid='.$stepid.
 				url_param($s['name'],false,'name').
 				url_param($s['timeout'],false,'timeout').
 				url_param($s['url'],false,'url').
@@ -446,7 +444,7 @@
 				url_param($s['required'],false,'required').
 				url_param($s['status_codes'],false,'status_codes').
 				'");');
-			
+
 			if(strlen($s['url']) > 70){
 				$url = new CTag('span','yes', substr($s['url'],0,35).SPACE.'...'.SPACE.substr($s['url'],strlen($s['url'])-25,25));
 				$url->SetHint($s['url']);
@@ -456,7 +454,7 @@
 			}
 
 			$tblSteps->AddRow(array(
-				array(new CCheckBox('sel_step[]',null,null,$sid), $name),
+				array(new CCheckBox('sel_step[]',null,null,$stepid), $name),
 				$s['timeout'].SPACE.S_SEC_SMALL,
 				$url,
 				$s['required'],
@@ -472,7 +470,7 @@
 				'return PopUp("popup_httpstep.php?dstfrm='.$form->GetName().'");'),
 			(count($steps) > 0) ? new CButton('del_sel_step',S_DELETE_SELECTED) : null
 			));
-		
+
 		$form->AddItemToBottomRow(new CButton("save",S_SAVE));
 		if(isset($_REQUEST["httptestid"])){
 			$form->AddItemToBottomRow(SPACE);
@@ -486,7 +484,7 @@
 
                 $form->Show();
 	}
-	
+
 	function	insert_configuration_form($file)
 	{
 		$type		= get_request('type',		'MYSQL');
@@ -494,34 +492,31 @@
 		$database	= get_request('database',	'zabbix');
 		$user		= get_request('user',		'root');
 		$password	= get_request('password',	'');
-		
+
 		$form = new CFormTable(S_CONFIGURATION_OF_ZABBIX_DATABASE, null, 'post');
-		
+
 		$form->SetHelp("install_source_web.php");
 		$cmbType = new CComboBox('type', $type);
 		$cmbType->AddItem('MYSQL',	S_MYSQL);
 		$cmbType->AddItem('POSTGRESQL',	S_POSTGRESQL);
 		$cmbType->AddItem('ORACLE',	S_ORACLE);
 		$form->AddRow(S_TYPE, $cmbType);
-		
+
 		$form->AddRow(S_HOST, new CTextBox('server', $server));
 		$form->AddRow(S_NAME, new CTextBox('database', $database));
 		$form->AddRow(S_USER, new CTextBox('user', $user));
 		$form->AddRow(S_PASSWORD, new CPassBox('password', $password));
-		
+
 		$form->AddItemToBottomRow(new CButton('save',S_SAVE));
-		
+
 		$form->Show();
 	}
-	
-	function	insert_node_form()
-	{
-
 
+	function insert_node_form(){
 		global $ZBX_CURMASTERID;
-		
+
 		$frm_title = S_NODE;
-			
+
 		if(isset($_REQUEST['nodeid'])){
 			$node_data = get_node_by_nodeid($_REQUEST['nodeid']);
 
@@ -529,16 +524,16 @@
 
 			$masterid	= $node_data['masterid'];
 
-			$frm_title = S_NODE." \"".$node_data["name"]."\"";
+			$frm_title = S_NODE.' "'.$node_data['name'].'"';
 		}
-		
+
 		$frmNode= new CFormTable($frm_title);
 		$frmNode->SetHelp("node.php");
 
 		if(isset($_REQUEST['nodeid'])){
 			$frmNode->AddVar('nodeid', $_REQUEST['nodeid']);
 		}
-		
+
 		if(isset($_REQUEST['nodeid']) && (!isset($_REQUEST["form_refresh"]) || isset($_REQUEST["register"]))){
 			$new_nodeid	= $node_data['nodeid'];
 			$name		= $node_data['name'];
@@ -594,7 +589,7 @@
 		$frmNode->AddRow(S_DO_NOT_KEEP_HISTORY_OLDER_THAN, new CNumericBox('slave_history', $slave_history,6));
 		$frmNode->AddRow(S_DO_NOT_KEEP_TRENDS_OLDER_THAN, new CNumericBox('slave_trends', $slave_trends,6));
 
-		
+
 		$frmNode->AddItemToBottomRow(new CButton('save',S_SAVE));
 		if(isset($_REQUEST['nodeid']) && $node_type != ZBX_NODE_LOCAL){
 			$frmNode->AddItemToBottomRow(SPACE);
@@ -605,19 +600,18 @@
 		$frmNode->AddItemToBottomRow(new CButtonCancel(url_param("config")));
 		$frmNode->Show();
 	}
-	
-	function insert_new_message_form($events,$bulk)
-	{
+
+	function insert_new_message_form($events,$bulk){
 		global $USER_DETAILS;
 
-	
+
 		if($bulk){
 			$title = S_ACKNOWLEDGE_ALARM_BY;
-			$btn_txt2 = S_ACKNOWLEDGE.' '.S_AND_SYMB.' '.S_RETURN;			
+			$btn_txt2 = S_ACKNOWLEDGE.' '.S_AND_SYMB.' '.S_RETURN;
 		}
 		else{
 			$temp=get_acknowledges_by_eventid(get_request('eventid',0));
-			
+
 			if(!DBfetch($temp)){
 				$title = S_ACKNOWLEDGE_ALARM_BY;
 				$btn_txt = S_ACKNOWLEDGE;
@@ -630,11 +624,11 @@
 			}
 		}
 
-		$frmMsg= new CFormTable($title." \"".$USER_DETAILS["alias"]."\"");
+		$frmMsg= new CFormTable($title.' "'.$USER_DETAILS["alias"].'"');
 		$frmMsg->SetHelp("manual.php");
 
 		if($bulk) $frmMsg->AddVar('bulkacknowledge',1);
-		
+
 		foreach($events as $id => $eventid){
 			$frmMsg->AddVar('events['.$eventid.']',$eventid);
 		}
@@ -656,7 +650,7 @@
 	function insert_user_form($userid,$profile=0){
 		global $ZBX_LOCALES;
 		global $USER_DETAILS;
-		
+
 		$config = select_config();
 
 		$frm_title = S_USER;
@@ -724,13 +718,20 @@
 			$user_type	= get_request('user_type',USER_TYPE_ZABBIX_USER);;
 			$user_groups	= get_request('user_groups',array());
 			$change_password = get_request('change_password', null);
-
 			$user_medias		= get_request('user_medias', array());
-
 			$new_group_id	= get_request('new_group_id', 0);
 			$new_group_name = get_request('new_group_name', '');
 		}
-
+		
+		if ($autologin > 0) {
+			$autologout = 0;
+			zbx_add_post_js("document.getElementById('autologout_visible').disabled = true;");
+		} else if (isset($_REQUEST['autologout'])) {
+			if ($autologout >= 0 && $autologout < 90) {
+				$autologout = 90;
+			}
+		}
+		
 		$perm_details	= get_request('perm_details',0);
 
 		$media_types = array();
@@ -744,7 +745,7 @@
 
 			while($db_media_type = DBfetch($db_media_types)){
 				$media_types[$db_media_type['mediatypeid']] = $db_media_type['description'];
-			}	
+			}
 		}
 
 		$frmUser = new CFormTable($frm_title);
@@ -761,7 +762,7 @@
 		}
 
 		$auth_type = (isset($userid))?get_user_system_auth($userid):$config['authentication_type'];
-		
+
 		if(ZBX_AUTH_INTERNAL == $auth_type){
 			if(!isset($userid) || isset($change_password)){
 				$frmUser->AddRow(S_PASSWORD,	new CPassBox('password1',$password1,20));
@@ -773,7 +774,7 @@
 				$passwd_but = new CButton('change_password', S_CHANGE_PASSWORD);
 				if($alias == ZBX_GUEST_USER){
 					$passwd_but->AddOption('disabled','disabled');
-				}	
+				}
 				$frmUser->AddRow(S_PASSWORD, $passwd_but);
 			}
 		}
@@ -783,7 +784,7 @@
 				$frmUser->addVar('password2','');
 			}
 		}
-		
+
 		if($profile==0){
 			global $USER_DETAILS;
 
@@ -799,7 +800,7 @@
 				$cmbUserType->AddItem(USER_TYPE_SUPER_ADMIN,	user_type2str(USER_TYPE_SUPER_ADMIN));
 				$frmUser->AddRow(S_USER_TYPE, $cmbUserType);
 			}
-			
+
 			$lstGroups = new CListBox('user_groups_to_del[]');
 			$lstGroups->options['style'] = 'width: 320px';
 
@@ -807,10 +808,10 @@
 				$lstGroups->AddItem($groupid,	$group_name);
 			}
 
-			$frmUser->AddRow(S_GROUPS, 
+			$frmUser->AddRow(S_GROUPS,
 				array(
-					$lstGroups, 
-					BR(), 
+					$lstGroups,
+					BR(),
 					new CButton('add_group',S_ADD,
 						'return PopUp("popup_usrgrp.php?dstfrm='.$frmUser->GetName().
 						'&list_name=user_groups_to_del[]&var_name=user_groups",450, 450);'),
@@ -838,7 +839,7 @@
 								'&period='.$one_media['period'].
 								'&severity='.$one_media['severity'].
 								'&active='.$one_media['active'];
-				
+
 				$media_table->AddRow(array(
 					new CCheckBox('user_medias_to_del['.$id.']',null,null,$id),
 					new CSpan($media_types[$one_media['mediatypeid']], 'nowrap'),
@@ -851,7 +852,7 @@
 			}
 
 			$frmUser->AddRow(
-						S_MEDIA, 
+						S_MEDIA,
 						array($media_table,
 							new CButton('add_media',S_ADD,'javascript: return PopUp("popup_media.php?dstfrm='.$frmUser->GetName().'",550,400);'),
 							SPACE,
@@ -863,27 +864,34 @@
 		foreach($ZBX_LOCALES as $loc_id => $loc_name){
 			$cmbLang->AddItem($loc_id,$loc_name);
 		}
-		
+
 		$frmUser->AddRow(S_LANGUAGE, $cmbLang);
-		
+
 		$cmbTheme = new CComboBox('theme',$theme);
 			$cmbTheme->AddItem(ZBX_DEFAULT_CSS,S_SYSTEM_DEFAULT);
 			$cmbTheme->AddItem('css_ob.css',S_ORIGINAL_BLUE);
 			$cmbTheme->AddItem('css_bb.css',S_BLACK_AND_BLUE);
-		
+
 		$frmUser->AddRow(S_THEME, $cmbTheme);
 
-		$chkbx_autologin = new CCheckBox("autologin",
-							$autologin,
-							new CScript(" var autologout = document.getElementById('autologout'); autologout.value = 0; autologout.readOnly=this.checked; autologout.disabled=false;"),
-							1);
+		$chkbx_autologin = new CCheckBox("autologin", $autologin, new CScript("var autologout_visible = document.getElementById('autologout_visible');
+																				var autologout = document.getElementById('autologout');
+																				if (this.checked) {
+																					if (autologout_visible.checked) {
+																						autologout_visible.checked = false;
+																						autologout_visible.onclick();
+																					}
+																					autologout_visible.disabled = true;
+																				} else {
+																					autologout_visible.disabled = false;
+																				}"), 1);
 		$chkbx_autologin->AddOption('autocomplete','off');
-		
 		$frmUser->AddRow(S_AUTO_LOGIN,	$chkbx_autologin);
-		$frmUser->AddRow(S_AUTO_LOGOUT,	array(new CNumericBox("autologout",$autologout,4,$autologin),S_SECONDS));
+		$frmUser->AddRow(S_AUTO_LOGOUT, array(new CVisibilityBox('autologout_visible', (isset($autologout) && $autologout != 0) ? 'yes' : 'no', 'autologout', S_DISABLED), new CNumericBox("autologout", $autologout, 4)));
 		$frmUser->AddRow(S_URL_AFTER_LOGIN,	new CTextBox("url",$url,50));
 		$frmUser->AddRow(S_SCREEN_REFRESH,	new CNumericBox("refresh",$refresh,4));
 
+
 		if(0 == $profile){
 			$frmUser->AddVar('perm_details', $perm_details);
 
@@ -912,7 +920,7 @@
 
 				$user_rights = array();
 				foreach($tmp_perm as $id => $perm){
-					array_push($user_rights, array(	
+					array_push($user_rights, array(
 						'id'		=> $id,
 						'permission'	=> $perm
 						));
@@ -929,7 +937,7 @@
 			$delete_b = new CButtonDelete("Delete selected user?",url_param("form").url_param("config").url_param("userid"));
 			if(bccomp($USER_DETAILS['userid'],$userid) == 0){
 				$delete_b->AddOption('disabled','disabled');
-			}	
+			}
 
 			$frmUser->AddItemToBottomRow($delete_b);
 		}
@@ -941,9 +949,9 @@
 	# Insert form for User Groups
 	function insert_usergroups_form(){
 		global  $USER_DETAILS;
-		
+
 		$config = select_config();
-		
+
 		$frm_title = S_USER_GROUP;
 		if(isset($_REQUEST["usrgrpid"])){
 			$usrgrp		= get_group_by_usrgrpid($_REQUEST["usrgrpid"]);
@@ -955,7 +963,7 @@
 
 			$users_status = $usrgrp['users_status'];
 			$gui_access = $usrgrp['gui_access'];
-			
+
 			$group_users = array();
 			$db_users=DBselect('SELECT DISTINCT u.userid,u.alias '.
 						' FROM users u,users_groups ug '.
@@ -966,13 +974,13 @@
 			while($db_user=DBfetch($db_users))
 				$group_users[$db_user["userid"]] = $db_user['alias'];
 
-			$group_rights = array();			
+			$group_rights = array();
 			$sql = 'SELECT r.*, n.name as node_name, g.name as name '.
 					' FROM groups g '.
 						' LEFT JOIN rights r on r.id=g.groupid '.
 						' LEFT JOIN nodes n on n.nodeid='.DBid2nodeid('g.groupid').
 					' WHERE r.groupid='.$_REQUEST["usrgrpid"];
-					
+
 			$db_rights = DBselect($sql);
 			while($db_right = DBfetch($db_rights)){
 				if(isset($db_right['node_name']))
@@ -1002,7 +1010,7 @@
 		if(isset($_REQUEST["usrgrpid"])){
 			$frmUserG->AddVar("usrgrpid",$_REQUEST["usrgrpid"]);
 		}
-		
+
 		$grName = new CTextBox("gname",$name,49);
 		$grName->options['style'] = 'width: 280px';
 		$frmUserG->AddRow(S_GROUP_NAME,$grName);
@@ -1018,33 +1026,33 @@
 			$lstUsers->AddItem($userid,	$alias);
 		}
 
-		$frmUserG->AddRow(S_USERS, 
+		$frmUserG->AddRow(S_USERS,
 			array(
-				$lstUsers, 
-				BR(), 
+				$lstUsers,
+				BR(),
 				new CButton('add_user',S_ADD,
 					"return PopUp('popup_users.php?dstfrm=".$frmUserG->GetName().
 					"&list_name=group_users_to_del[]&var_name=group_users',450,450);"),
 				(count($group_users) > 0) ? new CButton('del_group_user',S_DELETE_SELECTED) : null
 			));
 
-		$granted = true;		
+		$granted = true;
 		if(isset($_REQUEST['usrgrpid'])){
 			$granted = granted2update_group($_REQUEST['usrgrpid']);
 		}
 
 		if($granted){
-			$cmbGUI = new CComboBox('gui_access',$gui_access);		
+			$cmbGUI = new CComboBox('gui_access',$gui_access);
 			$cmbGUI->AddItem(GROUP_GUI_ACCESS_SYSTEM,user_auth_type2str(GROUP_GUI_ACCESS_SYSTEM));
-			$cmbGUI->AddItem(GROUP_GUI_ACCESS_INTERNAL,user_auth_type2str(GROUP_GUI_ACCESS_INTERNAL));				
+			$cmbGUI->AddItem(GROUP_GUI_ACCESS_INTERNAL,user_auth_type2str(GROUP_GUI_ACCESS_INTERNAL));
 			$cmbGUI->AddItem(GROUP_GUI_ACCESS_DISABLED,user_auth_type2str(GROUP_GUI_ACCESS_DISABLED));
-			
+
 			$frmUserG->AddRow(S_GUI_ACCESS, $cmbGUI);
-			
-			$cmbStat = new CComboBox('users_status',$users_status);		
+
+			$cmbStat = new CComboBox('users_status',$users_status);
 			$cmbStat->AddItem(GROUP_STATUS_ENABLED,S_ENABLED);
 			$cmbStat->AddItem(GROUP_STATUS_DISABLED,S_DISABLED);
-			
+
 			$frmUserG->AddRow(S_USERS_STATUS, $cmbStat);
 
 		}
@@ -1055,7 +1063,7 @@
 			$frmUserG->AddVar('users_status',GROUP_STATUS_ENABLED);
 			$frmUserG->AddRow(S_USERS_STATUS, new CSpan(S_ENABLED,'green'));
 		}
-		
+
 		$table_Rights = new CTable(S_NO_RIGHTS_DEFINED,'right_table');
 
 		$lstWrite = new CListBox('right_to_del[read_write][]'	,null	,20);
@@ -1142,7 +1150,7 @@
 		$lst['group']['deny']		= new CListBox('groups_deny'	,null	,15);
 
 		$groups = get_accessible_groups_by_rights($rights, $user_type, PERM_DENY, PERM_RES_DATA_ARRAY, get_current_nodeid(true));
-	
+
 		foreach($groups as $group){
 			switch($group['permission']){
 				case PERM_READ_ONLY:
@@ -1157,7 +1165,7 @@
 			$lst['group'][$list_name]->AddItem($group['groupid'],$group['node_name'].':'.$group['name']);
 		}
 		unset($groups);
-		
+
 		$lst['host']['label']		= S_HOSTS;
 		$lst['host']['read_write']	= new CListBox('hosts_write'	,null	,15);
 		$lst['host']['read_only']	= new CListBox('hosts_read'	,null	,15);
@@ -1174,7 +1182,7 @@
 			$lst['host'][$list_name]->AddItem($host['hostid'],$host['node_name'].':'.$host['host']);
 		}
 		unset($hosts);
-		
+
 		foreach($lst as $name => $lists){
 			$row = new CRow();
 			foreach($lists as $class => $list_obj){
@@ -1190,7 +1198,7 @@
 	function get_item_filter_form(){
 
 		$selection_mode					= $_REQUEST['selection_mode'];
-															
+
 		$filter_node					= $_REQUEST['filter_node'];
 		$filter_group					= $_REQUEST['filter_group'];
 		$filter_host					= $_REQUEST['filter_host'];
@@ -1217,19 +1225,19 @@
 		$filter_trapper_hosts			= $_REQUEST['filter_trapper_hosts'];
 
 		$form = new CFormTable(S_ITEM.' '.S_FILTER);
-		
+
 		$form->AddOption('name','zbx_filter');
 		$form->AddOption('id','zbx_filter');
 		$form->SetMethod('get');
-		
+
 		$form->AddAction('onsubmit',"javascript: if(empty_form(this)) return Confirm('Filter is empty! All items will be selected. Proceed?');");
 
 		$form->AddVar('filter_hostid',get_request('filter_hostid',get_request('hostid')));
 		$form->AddVar('selection_mode', $selection_mode);
 
-		$modeLink = new CLink($selection_mode == 0 ? S_ADVANCED : S_SIMPLE, '#','action');
-		$modeLink->SetAction("create_var('".$form->GetName()."','selection_mode',".($selection_mode == 0 ? 1 : 0).',true);');
-		
+		$modeLink = new CSpan($selection_mode == 0 ? S_ADVANCED : S_SIMPLE,'link');
+		$modeLink->addAction('onclick', "javascript: create_var('".$form->GetName()."','selection_mode',".($selection_mode == 0 ? 1 : 0).',true);');
+
 		$form->AddRow(S_SELECTION_MODE,$modeLink);
 
 		if(ZBX_DISTRIBUTED && $selection_mode){
@@ -1320,7 +1328,7 @@
 			$cmbValType->AddItem(ITEM_VALUE_TYPE_LOG, 	S_LOG);
 			$cmbValType->AddItem(ITEM_VALUE_TYPE_TEXT,	S_TEXT);
 			$form->AddRow(array('with ',bold(S_TYPE_OF_INFORMATION)),$cmbValType);
-			
+
 			if( ($filter_value_type==ITEM_VALUE_TYPE_FLOAT) || ($filter_value_type==ITEM_VALUE_TYPE_UINT64))
 			{
 				$form->AddRow(array('with ',bold(S_UNITS)), new CTextBox("filter_units",$filter_units,40));
@@ -1358,7 +1366,7 @@
 				$cmbDelta->AddItem(2,S_DELTA_SIMPLE_CHANGE);
 				$form->AddRow(array('with ',bold(S_STORE_VALUE)),$cmbDelta);
 			}
-			
+
 			if($filter_type==ITEM_TYPE_TRAPPER)
 			{
 				$form->AddRow(array('with ',bold(S_ALLOWED_HOSTS),' like'), new CTextBox("filter_trapper_hosts",$filter_trapper_hosts,40));
@@ -1368,10 +1376,10 @@
 		$reset = new CButton("filter_rst",S_RESET);
 		$reset->SetType('button');
 		$reset->SetAction('javascript: var uri = new url(location.href); uri.setArgument("filter_rst",1); location.href = uri.getUrl();');
-	
+
 		$form->AddItemToBottomRow(new CButton("filter_set",S_FILTER));
 		$form->AddItemToBottomRow($reset);
-		
+
 	return $form;
 	}
 
@@ -1383,7 +1391,8 @@
 		$frmItem->SetHelp('web.items.item.php');
 
 		$frmItem->AddVar('config',get_request('config',0));
-		if(isset($_REQUEST['groupid']))
+		if($_REQUEST['groupid']>0)
+			$frmItem->AddVar('groupid',$_REQUEST['groupid']);
 
 		$frmItem->AddVar('hostid',$_REQUEST['hostid']);
 		$frmItem->AddVar('applications_visible',1);
@@ -1461,7 +1470,7 @@
 			$multiplier		= $item_data['multiplier'];
 			$hostid			= $item_data['hostid'];
 			$params			= $item_data['params'];
-			
+
 			$snmpv3_securityname	= $item_data['snmpv3_securityname'];
 			$snmpv3_securitylevel	= $item_data['snmpv3_securitylevel'];
 			$snmpv3_authpassphrase	= $item_data['snmpv3_authpassphrase'];
@@ -1481,7 +1490,7 @@
 				$delta		= $item_data['delta'];
 				$trends		= $item_data['trends'];
 				$db_delay_flex	= $item_data['delay_flex'];
-				
+
 				if(isset($db_delay_flex)){
 					$arr_of_dellays = explode(';',$db_delay_flex);
 					foreach($arr_of_dellays as $one_db_delay){
@@ -1491,7 +1500,7 @@
 						array_push($delay_flex,array('delay'=>$arr_of_delay[0],'period'=>$arr_of_delay[1]));
 					}
 				}
-				
+
 				$applications = array_unique(array_merge($applications, get_applications_by_itemid($_REQUEST['itemid'])));
 			}
 		}
@@ -1530,7 +1539,7 @@
 
 		if(isset($_REQUEST['itemid'])) {
 			$frmItem->SetTitle(S_ITEM." '$host:".$item_data["description"]."'");
-		} 
+		}
 		else {
 			$frmItem->SetTitle(S_ITEM." '$host:$description'");
 		}
@@ -1550,7 +1559,7 @@
 			$frmItem->AddRow(S_TYPE, $cmbType);
 		}
 
-		if(($type==ITEM_TYPE_SNMPV1)||($type==ITEM_TYPE_SNMPV2C)){ 
+		if(($type==ITEM_TYPE_SNMPV1)||($type==ITEM_TYPE_SNMPV2C)){
 			$frmItem->AddVar('snmpv3_securityname',$snmpv3_securityname);
 			$frmItem->AddVar('snmpv3_securitylevel',$snmpv3_securitylevel);
 			$frmItem->AddVar('snmpv3_authpassphrase',$snmpv3_authpassphrase);
@@ -1575,7 +1584,7 @@
 					case ITEM_SNMPV3_SECURITYLEVEL_AUTHNOPRIV:	$snmpv3_securitylevel = 'AuthNoPriv';	break;
 					case ITEM_SNMPV3_SECURITYLEVEL_AUTHPRIV:	$snmpv3_securitylevel = 'AuthPriv';	break;
 				}
-				$frmItem->AddRow(S_SNMPV3_SECURITY_LEVEL,  new CTextBox('snmpv3_securitylevel_desc', 
+				$frmItem->AddRow(S_SNMPV3_SECURITY_LEVEL,  new CTextBox('snmpv3_securitylevel_desc',
 					$snmpv3_securitylevel, $limited));
 			}
 			else{
@@ -1621,7 +1630,7 @@
 				"&dstfld1=key&srctbl=help_items&srcfld1=key_&itemtype=".$type."');",
 				'T');
 		}
-		
+
 		$frmItem->AddRow(S_KEY, array(new CTextBox('key',$key,40,$limited), $btnSelect));
 
 		if( ITEM_TYPE_DB_MONITOR == $type ){
@@ -1644,7 +1653,7 @@
 			$cmbValType->AddItem(ITEM_VALUE_TYPE_TEXT,	S_TEXT);
 		}
 		$frmItem->AddRow(S_TYPE_OF_INFORMATION,$cmbValType);
-		
+
 		if( ($value_type==ITEM_VALUE_TYPE_FLOAT) || ($value_type==ITEM_VALUE_TYPE_UINT64)){
 			$frmItem->AddRow(S_UNITS, new CTextBox('units',$units,40, $limited));
 
@@ -1658,7 +1667,7 @@
 				$cmbMultipler->AddItem(1,S_CUSTOM_MULTIPLIER);
 			}
 			$frmItem->AddRow(S_USE_MULTIPLIER, $cmbMultipler);
-			
+
 		}
 		else{
 			$frmItem->AddVar('units',$units);
@@ -1675,10 +1684,10 @@
 		if($type != ITEM_TYPE_TRAPPER && $type != ITEM_TYPE_HTTPTEST){
 			$frmItem->AddRow(S_UPDATE_INTERVAL_IN_SEC, new CNumericBox('delay',$delay,5));
 			$frmItem->AddRow(S_FLEXIBLE_INTERVALS, $delay_flex_el);
-			$frmItem->AddRow(S_NEW_FLEXIBLE_INTERVAL, 
+			$frmItem->AddRow(S_NEW_FLEXIBLE_INTERVAL,
 				array(
 					S_DELAY, SPACE,
-					new CNumericBox('new_delay_flex[delay]','50',5), 
+					new CNumericBox('new_delay_flex[delay]','50',5),
 					S_PERIOD, SPACE,
 					new CTextBox('new_delay_flex[period]','1-7,00:00-23:59',27), BR(),
 					new CButton('add_delay_flex',S_ADD)
@@ -1694,7 +1703,7 @@
 			(!isset($_REQUEST['itemid'])) ? null :
 				new CButtonQMessage('del_history',S_CLEAN_HISTORY,S_HISTORY_CLEANING_CAN_TAKE_A_LONG_TIME_CONTINUE_Q)
 			));
-			
+
 		if(uint_in_array($value_type, array(ITEM_VALUE_TYPE_FLOAT, ITEM_VALUE_TYPE_UINT64)))
 			$frmItem->addRow(S_KEEP_TRENDS_IN_DAYS, new CNumericBox('trends',$trends,8));
 		else
@@ -1722,7 +1731,7 @@
 		else{
 			$frmItem->AddVar('delta',0);
 		}
-		
+
 		if(($value_type==ITEM_VALUE_TYPE_UINT64) || ($value_type == ITEM_VALUE_TYPE_STR)){
 			if(isset($limited) && $type != ITEM_TYPE_HTTPTEST){
 				$frmItem->AddVar('valuemapid', $valuemapid);
@@ -1742,11 +1751,11 @@
 						get_node_name_by_elid($db_valuemap['valuemapid']).$db_valuemap['name']
 						);
 			}
-			
+
 			$link = new CLink('throw map','config.php?config=6','action');
 			$link->AddOption('target','_blank');
 			$frmItem->AddRow(array(S_SHOW_VALUE.SPACE,$link),$cmbMap);
-			
+
 		}
 		else{
 			$frmItem->AddVar('valuemapid',0);
@@ -1766,10 +1775,10 @@
 			$frmItem->AddVar('applications',$applications,6);
 		}
 		else{
-			
+
 			$new_app = new CTextBox('new_application',$new_application,40);
 			$frmItem->AddRow(S_NEW_APPLICATION,$new_app);
-			
+
 			$cmbApps = new CListBox('applications[]',$applications,6);
 			$cmbApps->AddItem(0,'-'.S_NONE.'-');
 			$db_applications = DBselect('SELECT DISTINCT applicationid,name '.
@@ -1803,7 +1812,7 @@
 
 		$frmItem->AddSpanRow($frmRow,'form_row_last');
 
-	        $cmbGroups = new CComboBox('add_groupid',$add_groupid);		
+	        $cmbGroups = new CComboBox('add_groupid',$add_groupid);
 
 			$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
 	        $groups=DBselect('SELECT DISTINCT groupid,name '.
@@ -1842,7 +1851,7 @@
 
 		$frmItem->AddVar('group_itemid',get_request('group_itemid',array()));
 		$frmItem->AddVar('config',get_request('config',0));
-		if(isset($_REQUEST['groupid']))
+		if($_REQUEST['groupid']>0)
 			$frmItem->AddVar('groupid',$_REQUEST['groupid']);
 
 		$frmItem->AddVar('hostid',$_REQUEST['hostid']);
@@ -1927,7 +1936,7 @@
 		$cmbSecLevel->AddItem(ITEM_SNMPV3_SECURITYLEVEL_AUTHPRIV,"AuthPriv");
 		$frmItem->AddRow(array( new CVisibilityBox('securitylevel_visible',  get_request('securitylevel_visible'), 'snmpv3_securitylevel',
 			S_ORIGINAL), S_SNMPV3_SECURITY_LEVEL), $cmbSecLevel);
-		$frmItem->AddRow(array( new CVisibilityBox('authpassphrase_visible', get_request('authpassphrase_visible'), 
+		$frmItem->AddRow(array( new CVisibilityBox('authpassphrase_visible', get_request('authpassphrase_visible'),
 			'snmpv3_authpassphrase', S_ORIGINAL), S_SNMPV3_AUTH_PASSPHRASE),
 			new CTextBox('snmpv3_authpassphrase',$snmpv3_authpassphrase,64));
 
@@ -1945,7 +1954,7 @@
 		$cmbValType->AddItem(ITEM_VALUE_TYPE_TEXT,	S_TEXT);
 		$frmItem->AddRow(array( new CVisibilityBox('value_type_visible', get_request('value_type_visible'), 'value_type', S_ORIGINAL),
 			S_TYPE_OF_INFORMATION), $cmbValType);
-		
+
 		$frmItem->AddRow(array( new CVisibilityBox('units_visible', get_request('units_visible'), 'units', S_ORIGINAL), S_UNITS),
 			new CTextBox('units',$units,40));
 
@@ -1958,16 +1967,16 @@
 		$delay_flex_el = new CSpan($delay_flex_el);
 		$delay_flex_el->AddOption('id', 'delay_flex_list');
 
-		$frmItem->AddRow(array( 
-						new CVisibilityBox('delay_flex_visible', 
-								get_request('delay_flex_visible'), 
-								array('delay_flex_list', 'new_delay_flex_el'), 
-								S_ORIGINAL), 
+		$frmItem->AddRow(array(
+						new CVisibilityBox('delay_flex_visible',
+								get_request('delay_flex_visible'),
+								array('delay_flex_list', 'new_delay_flex_el'),
+								S_ORIGINAL),
 						S_FLEXIBLE_INTERVALS), $delay_flex_el);
-			
+
 		$new_delay_flex_el = new CSpan(array(
 										S_DELAY, SPACE,
-										new CNumericBox("new_delay_flex[delay]","50",5), 
+										new CNumericBox("new_delay_flex[delay]","50",5),
 										S_PERIOD, SPACE,
 										new CTextBox("new_delay_flex[period]","1-7,00:00-23:59",27), BR(),
 										new CButton("add_delay_flex",S_ADD)
@@ -1996,7 +2005,7 @@
 		$cmbDelta->AddItem(2,S_DELTA_SIMPLE_CHANGE);
 		$frmItem->AddRow(array( new CVisibilityBox('delta_visible', get_request('delta_visible'), 'delta', S_ORIGINAL),
 			S_STORE_VALUE),$cmbDelta);
-		
+
 		$cmbMap = new CComboBox('valuemapid',$valuemapid);
 		$cmbMap->AddItem(0,S_AS_IS);
 		$db_valuemaps = DBselect('SELECT * FROM valuemaps WHERE '.DBin_node('valuemapid'));
@@ -2005,19 +2014,19 @@
 					$db_valuemap["valuemapid"],
 					get_node_name_by_elid($db_valuemap["valuemapid"]).$db_valuemap["name"]
 					);
-		
+
 		$link = new CLink("throw map","config.php?config=6","action");
 		$link->AddOption("target","_blank");
 		$frmItem->AddRow(array( new CVisibilityBox('valuemapid_visible', get_request('valuemapid_visible'), 'valuemapid', S_ORIGINAL),
 			S_SHOW_VALUE, SPACE, $link),$cmbMap);
-			
+
 		$frmItem->AddRow(array( new CVisibilityBox('trapper_hosts_visible', get_request('trapper_hosts_visible'), 'trapper_hosts',
 			S_ORIGINAL), S_ALLOWED_HOSTS), new CTextBox('trapper_hosts',$trapper_hosts,40));
 
 		$cmbApps = new CListBox('applications[]',$applications,6);
 		$cmbApps->AddItem(0,"-".S_NONE."-");
 		$db_applications = DBselect("SELECT DISTINCT applicationid,name FROM applications".
-			" WHERE hostid=".$_REQUEST["hostid"]." order by name");
+			" WHERE hostid=".$_REQUEST['hostid']." order by name");
 		while($db_app = DBfetch($db_applications)){
 			$cmbApps->AddItem($db_app["applicationid"],$db_app["name"]);
 		}
@@ -2025,13 +2034,13 @@
 			S_ORIGINAL), S_APPLICATIONS),$cmbApps);
 
 		$frmItem->AddItemToBottomRow(array(new CButton("update",S_UPDATE),
-			SPACE, new CButtonCancel(url_param("groupid").url_param("hostid").url_param("config"))));
+			SPACE, new CButtonCancel(url_param('groupid').url_param("hostid").url_param("config"))));
 
 		$frmItem->Show();
 	}
 
 	function insert_copy_elements_to_forms($elements_array_name){
-		
+
 		$copy_type = get_request("copy_type", 0);
 		$copy_mode = get_request("copy_mode", 0);
 		$filter_groupid = get_request("filter_groupid", 0);
@@ -2062,24 +2071,25 @@
 			$cmbGroup->AddItem(0,S_ALL_SMALL);
 			$groups = DBselect($target_sql);
 			while($group = DBfetch($groups)){
-				$cmbGroup->AddItem($group["target_id"],$group["target_name"]);
+				$cmbGroup->addItem($group["target_id"],$group["target_name"]);
 			}
-			
-			$frmCopy->AddRow('Group', $cmbGroup);
 
-			$target_sql = 'SELECT h.hostid as target_id, h.host as target_name FROM hosts h';
+			$frmCopy->addRow('Group', $cmbGroup);
+
+			$target_sql = 'SELECT h.hostid as target_id, h.host as target_name FROM hosts h ';
 			if($filter_groupid > 0){
 				$target_sql .= ', hosts_groups hg WHERE hg.hostid=h.hostid AND hg.groupid='.$filter_groupid;
 			}
+			$target_sql.=' ORDER BY target_name';
 		}
 
-		$db_targets = DBselect($target_sql.' order by target_name');
+		$db_targets = DBselect($target_sql);
 		$target_list = array();
 		while($target = DBfetch($db_targets)){
 			array_push($target_list,array(
 				new CCheckBox('copy_targetid['.$target['target_id'].']',
-					uint_in_array($target['target_id'], $copy_targetid), 
-					null, 
+					uint_in_array($target['target_id'], $copy_targetid),
+					null,
 					$target['target_id']),
 				SPACE,
 				$target['target_name'],
@@ -2087,17 +2097,17 @@
 				));
 		}
 
-		$frmCopy->AddRow(S_TARGET, $target_list);
+		$frmCopy->addRow(S_TARGET, $target_list);
 
 		$cmbCopyMode = new CComboBox('copy_mode',$copy_mode);
-		$cmbCopyMode->AddItem(0, S_UPDATE_EXISTING_NON_LINKED_ITEMS);
-		$cmbCopyMode->AddItem(1, S_SKIP_EXISTING_ITEMS);
-		$cmbCopyMode->SetEnabled(false);
-		$frmCopy->AddRow(S_MODE, $cmbCopyMode);
+		$cmbCopyMode->addItem(0, S_UPDATE_EXISTING_NON_LINKED_ITEMS);
+		$cmbCopyMode->addItem(1, S_SKIP_EXISTING_ITEMS);
+		$cmbCopyMode->setEnabled(false);
+		$frmCopy->addRow(S_MODE, $cmbCopyMode);
 
-		$frmCopy->AddItemToBottomRow(new CButton("copy",S_COPY));
+		$frmCopy->addItemToBottomRow(new CButton("copy",S_COPY));
 		$frmCopy->AddItemToBottomRow(array(SPACE,
-			new CButtonCancel(url_param("groupid").url_param("hostid").url_param("config"))));
+			new CButtonCancel(url_param('groupid').url_param("hostid").url_param("config"))));
 
 		$frmCopy->Show();
 	}
@@ -2119,7 +2129,7 @@
 
 		$frmMTrig = new CFormTable($frm_title,'triggers.php');
 		$frmMTrig->AddVar('massupdate',get_request('massupdate',1));
-		
+
 		$triggers = $_REQUEST['g_triggerid'];
 		foreach($triggers as $id => $triggerid){
 			$frmMTrig->AddVar('g_triggerid['.$triggerid.']',$triggerid);
@@ -2149,58 +2159,58 @@
 			$dep_el[] = S_NO_DEPENDENCES_DEFINED;
 		else
 			$dep_el[] = new CButton('del_dependence','delete selected');
-			
+
 //		$frmMTrig->AddRow(S_THE_TRIGGER_DEPENDS_ON,$dep_el);
 /* end dependencies */
 /* new dependence */
 		$frmMTrig->AddVar('new_dependence','0');
 
-		$txtCondVal = new CTextBox('trigger','',75,'yes');		
-		
+		$txtCondVal = new CTextBox('trigger','',75,'yes');
+
 		$btnSelect = new CButton('btn1', S_SELECT,
 				"return PopUp('popup.php?dstfrm=".S_TRIGGERS_MASSUPDATE.
 				"&dstfld1=new_dependence&dstfld2=trigger&srctbl=triggers".
 				"&srcfld1=triggerid&srcfld2=description',600,450);",
 				'T');
-		
+
 		array_push($dep_el, array(br(),$txtCondVal,$btnSelect,br(),new CButton("add_dependence",S_ADD)));
-		
+
 		$dep_div = new CDiv($dep_el);
 		$dep_div->AddOption('id','dependency_box');
-		
-		$frmMTrig->AddRow(array(new CVisibilityBox('visible[dependencies]', isset($visible['dependencies']), 'dependency_box', S_ORIGINAL),S_TRIGGER_DEPENDENCIES), 	
+
+		$frmMTrig->AddRow(array(new CVisibilityBox('visible[dependencies]', isset($visible['dependencies']), 'dependency_box', S_ORIGINAL),S_TRIGGER_DEPENDENCIES),
 							$dep_div
 						);
 /* end new dependence */
-							
-	
+
+
 		$frmMTrig->AddItemToBottomRow(new CButton('mass_save',S_SAVE));
 		$frmMTrig->AddItemToBottomRow(SPACE);
 		$frmMTrig->AddItemToBottomRow(new CButtonCancel(url_param('config').url_param('groupid')));
 		$frmMTrig->Show();
 	}
-	
+
 // Insert form for Trigger
 	function insert_trigger_form(){
 		global $USER_DETAILS;
-		
+
 		$frmTrig = new CFormTable(S_TRIGGER,"triggers.php");
 		$frmTrig->SetHelp("config_triggers.php");
 
-		if(isset($_REQUEST["hostid"])){
-			$frmTrig->AddVar("hostid",$_REQUEST["hostid"]);
+		if($_REQUEST['hostid']>0){
+			$frmTrig->AddVar("hostid",$_REQUEST['hostid']);
 		}
 
 		$dep_el=array();
 		$dependencies = get_request("dependencies",array());
-	
+
 		$limited = null;
-		
+
 		if(isset($_REQUEST["triggerid"])){
 			$frmTrig->AddVar("triggerid",$_REQUEST["triggerid"]);
 			$trigger=get_trigger_by_triggerid($_REQUEST["triggerid"]);
 
-			$frmTrig->SetTitle(S_TRIGGER." \"".htmlspecialchars($trigger["description"])."\"");
+			$frmTrig->SetTitle(S_TRIGGER.' "'.htmlspecialchars($trigger["description"]).'"');
 
 			$limited = $trigger['templateid'] ? 'yes' : null;
 		}
@@ -2228,14 +2238,14 @@
 							' FROM triggers t,trigger_depends d '.
 							' WHERE t.triggerid=d.triggerid_up '.
 								' AND d.triggerid_down='.$_REQUEST['triggerid']);
-								
+
 				while($trig=DBfetch($trigs)){
 					if(uint_in_array($trig["triggerid"],$dependencies))	continue;
 					array_push($dependencies,$trig["triggerid"]);
 				}
 			}
 		}
-		
+
 		$frmTrig->AddRow(S_NAME, new CTextBox("description",$description,90, $limited));
 		$frmTrig->AddRow(S_EXPRESSION, array(
 				new CTextBox("expression",$expression,75, $limited),
@@ -2272,14 +2282,14 @@
 				"&dstfld1=new_dependence&dstfld2=trigger&srctbl=triggers".
 				"&srcfld1=triggerid&srcfld2=description',600,450);",
 				'T');
-		
-		
-		$frmTrig->AddRow(S_NEW_DEPENDENCY,array($txtCondVal, 
+
+
+		$frmTrig->AddRow(S_NEW_DEPENDENCY,array($txtCondVal,
 			$btnSelect, BR(),
 			new CButton("add_dependence",S_ADD)
 			),'new');
 	/* end new dependence */
-	
+
 		$type_select = new CComboBox('type');
 		$type_select->Additem(TRIGGER_MULT_EVENT_DISABLED,S_NORMAL,(($type == TRIGGER_MULT_EVENT_ENABLED)?'no':'yes'));
 		$type_select->Additem(TRIGGER_MULT_EVENT_ENABLED,S_NORMAL.SPACE.'+'.SPACE.S_MULTIPLE_TRUE_EVENTS,(($type == TRIGGER_MULT_EVENT_ENABLED)?'yes':'no'));
@@ -2295,7 +2305,7 @@
 		$frmTrig->AddRow(S_COMMENTS,new CTextArea("comments",$comments,90,7));
 		$frmTrig->AddRow(S_URL,new CTextBox("url",$url,90));
 		$frmTrig->AddRow(S_DISABLED,new CCheckBox("status",$status));
- 
+
 		$frmTrig->AddItemToBottomRow(new CButton("save",S_SAVE));
 		if(isset($_REQUEST["triggerid"])){
 			$frmTrig->AddItemToBottomRow(SPACE);
@@ -2303,17 +2313,17 @@
 			$frmTrig->AddItemToBottomRow(SPACE);
 			if( !$limited ){
 				$frmTrig->AddItemToBottomRow(new CButtonDelete("Delete trigger?",
-					url_param("form").url_param("groupid").url_param("hostid").
+					url_param("form").url_param('groupid').url_param("hostid").
 					url_param("triggerid")));
 			}
 		}
 		$frmTrig->AddItemToBottomRow(SPACE);
-		$frmTrig->AddItemToBottomRow(new CButtonCancel(url_param("groupid").url_param("hostid")));
+		$frmTrig->AddItemToBottomRow(new CButtonCancel(url_param('groupid').url_param("hostid")));
 		$frmTrig->Show();
 	}
 
 	function insert_trigger_comment_form($triggerid){
-	
+
 		$trigger = DBfetch(DBselect('SELECT t.*, h.* '.
 			' FROM triggers t, functions f, items i, hosts h '.
 			' WHERE t.triggerid='.$triggerid.
@@ -2321,7 +2331,7 @@
 				' AND f.itemid=i.itemid '.
 				' AND i.hostid=h.hostid '));
 
-		$frmComent = new CFormTable(S_COMMENTS." for ".$trigger['host']." : \"".expand_trigger_description_by_data($trigger)."\"");
+		$frmComent = new CFormTable(S_COMMENTS." for ".$trigger['host']." : \"".expand_trigger_description_by_data($trigger).'"');
 		$frmComent->SetHelp("web.tr_comments.comments.php");
 		$frmComent->AddVar("triggerid",$triggerid);
 		$frmComent->AddRow(S_COMMENTS,new CTextArea("comments",$trigger["comments"],100,25));
@@ -2377,11 +2387,11 @@
 						'periods_cnt'	=> $item['periods_cnt']
 					));
 			}
-		} 
+		}
 		else {
 			$name		= get_request('name'		,'');
 			$graphtype	= get_request('graphtype'	,GRAPH_TYPE_NORMAL);
-			
+
 			if(($graphtype == GRAPH_TYPE_PIE) || ($graphtype == GRAPH_TYPE_EXPLODED)){
 				$width		= get_request('width'		,400);
 				$height		= get_request('height'		,300);
@@ -2390,7 +2400,7 @@
 				$width		= get_request('width'		,900);
 				$height		= get_request('height'		,200);
 			}
-			
+
 			$yaxistype	= get_request('yaxistype'	,GRAPH_YAXIS_TYPE_CALCULATED);
 			$yaxismin	= get_request('yaxismin'	,0.00);
 			$yaxismax	= get_request('yaxismax'	,100.00);
@@ -2398,11 +2408,11 @@
 			$showtriggers	= get_request('showtriggers'	,0);
 			$legend		= get_request('legend'	,0);
 			$graph3d	= get_request('graph3d'	,0);
-			
+
 			$visible = get_request('visible');
 			$percent_left  = 0;
 			$percent_right = 0;
-			
+
 			if(isset($visible['percent_left'])) 	$percent_left  = get_request('percent_left', 0);
 			if(isset($visible['percent_right']))	$percent_right = get_request('percent_right', 0);
 		}
@@ -2434,13 +2444,13 @@
 		asort_by_key($items, 'sortorder');
 
 		$group_gid = get_request('group_gid', array());
-	
+
 		$frmGraph->AddRow(S_NAME,new CTextBox('name',$name,32));
-		
+
 		$g_width = new CNumericBox('width',$width,5);
 		$g_width->Addoption('onblur','javascript: submit();');
 		$frmGraph->AddRow(S_WIDTH,$g_width);
-		
+
 		$g_height = new CNumericBox('height',$height,5);
 		$g_height->Addoption('onblur','javascript: submit();');
 		$frmGraph->AddRow(S_HEIGHT,$g_height);
@@ -2452,7 +2462,7 @@
 		$cmbGType->AddItem(GRAPH_TYPE_EXPLODED,S_EXPLODED);
 
 		zbx_add_post_js('graphs.graphtype = '.$graphtype.";\n");
-			
+
 		$frmGraph->AddRow(S_GRAPH_TYPE,$cmbGType);
 
 		if(($graphtype == GRAPH_TYPE_NORMAL) || ($graphtype == GRAPH_TYPE_STACKED)){
@@ -2462,23 +2472,23 @@
 			if($graphtype == GRAPH_TYPE_NORMAL){
 				$percent_left = sprintf("%2.2f",$percent_left);
 				$percent_right = sprintf("%2.2f",$percent_right);
-				
+
 				$pr_left_input = new CTextBox('percent_left',$percent_left,'5');
-				$pr_left_chkbx = new CCheckBox('visible[percent_left]',1,"javascript: ShowHide('percent_left');",1);			
+				$pr_left_chkbx = new CCheckBox('visible[percent_left]',1,"javascript: ShowHide('percent_left');",1);
 				if($percent_left == 0){
 					$pr_left_input->AddOption('style','display: none;');
 					$pr_left_chkbx->SetChecked(0);
 				}
-				
+
 				$pr_right_input = new CTextBox('percent_right',$percent_right,'5');
-				$pr_right_chkbx = new CCheckBox('visible[percent_right]',1,"javascript: ShowHide('percent_right');",1);			
+				$pr_right_chkbx = new CCheckBox('visible[percent_right]',1,"javascript: ShowHide('percent_right');",1);
 				if($percent_right == 0){
 					$pr_right_input->AddOption('style','display: none;');
 					$pr_right_chkbx->SetChecked(0);
 				}
-				
+
 				$frmGraph->AddRow(S_PERCENTILE_LINE.' ('.S_LEFT.')',array($pr_left_chkbx,$pr_left_input));
-						
+
 				$frmGraph->AddRow(S_PERCENTILE_LINE.' ('.S_RIGHT.')',array($pr_right_chkbx,$pr_right_input));
 			}
 
@@ -2496,8 +2506,8 @@
 			else{
 				$frmGraph->AddVar('yaxismin',$yaxismin);
 				$frmGraph->AddVar('yaxismax',$yaxismax);
-			}			
-		} 
+			}
+		}
 		else {
 			$frmGraph->AddRow(S_3D_VIEW,new CCheckBox('graph3d',$graph3d,'javascript: graphs.submit(this);',1));
 			$frmGraph->AddRow(S_LEGEND,new CCheckBox('legend',$legend,'javascript: graphs.submit(this);',1));
@@ -2589,45 +2599,44 @@
 			$frmGraph->AddItemToBottomRow(new CButton("clone",S_CLONE));
 			$frmGraph->AddItemToBottomRow(SPACE);
 			$frmGraph->AddItemToBottomRow(new CButtonDelete(S_DELETE_GRAPH_Q,url_param("graphid").
-				url_param("groupid").url_param("hostid")));
+				url_param('groupid').url_param("hostid")));
 		}
 		$frmGraph->AddItemToBottomRow(SPACE);
-		$frmGraph->AddItemToBottomRow(new CButtonCancel(url_param("groupid").url_param("hostid")));
+		$frmGraph->AddItemToBottomRow(new CButtonCancel(url_param('groupid').url_param("hostid")));
 
 		$frmGraph->Show();
 	}
 
-	function	insert_graphitem_form()
-	{
-
+	function insert_graphitem_form(){
+
+		$graphid	= get_request('graphid', 	null);
+		$graphtype	= get_request('graphtype', 	GRAPH_TYPE_NORMAL);
+		$gid		= get_request('gid',	 	null);
+		$list_name	= get_request('list_name', 	null);
+		$itemid		= get_request('itemid', 	0);
+		$color		= get_request('color', 		'009900');
+		$drawtype	= get_request('drawtype',	0);
+		$sortorder	= get_request('sortorder',	0);
+		$yaxisside	= get_request('yaxisside',	1);
+		$calc_fnc	= get_request('calc_fnc',	2);
+		$type		= get_request('type',		0);
+		$periods_cnt	= get_request('periods_cnt',	5);
+		$only_hostid	= get_request('only_hostid',	null);
+		$monitored_hosts = get_request('monitored_hosts', null);
 
-		$frmGItem = new CFormTable(S_NEW_ITEM_FOR_THE_GRAPH);
+		$caption = ($itemid) ? S_UPD_ITEM_FOR_THE_GRAPH : S_NEW_ITEM_FOR_THE_GRAPH;
+		$frmGItem = new CFormTable($caption);
 		$frmGItem->SetName('graph_item');
-		$frmGItem->SetHelp("web.graph.item.php");
+		$frmGItem->SetHelp('web.graph.item.php');
 
 		$frmGItem->AddVar('dstfrm',$_REQUEST['dstfrm']);
 
-		$graphid	= get_request("graphid", 	null);
-		$graphtype	= get_request("graphtype", 	GRAPH_TYPE_NORMAL);
-		$gid		= get_request("gid",	 	null);
-		$list_name	= get_request("list_name", 	null);
-		$itemid		= get_request("itemid", 	0);
-		$color		= get_request("color", 		'009900');
-		$drawtype	= get_request("drawtype",	0);
-		$sortorder	= get_request("sortorder",	0);
-		$yaxisside	= get_request("yaxisside",	1);
-		$calc_fnc	= get_request("calc_fnc",	2);
-		$type		= get_request("type",		0);
-		$periods_cnt	= get_request("periods_cnt",	5);
-		$only_hostid	= get_request("only_hostid",	null);
-		$monitored_hosts = get_request('monitored_hosts', null);
-
 		$description = '';
 		if($itemid > 0){
 			$description = get_item_by_itemid($itemid);
 			$description = item_description($description);
 		}
-		
+
 		$frmGItem->AddVar('graphid',$graphid);
 		$frmGItem->AddVar('gid',$gid);
 		$frmGItem->AddVar('list_name',$list_name);
@@ -2637,12 +2646,12 @@
 
 		$txtCondVal = new CTextBox('description',$description,50,'yes');
 
-		$host_condition = "";
+		$host_condition = '';
 		if(isset($only_hostid)){// graph for template must use only one host
-			$host_condition = "&only_hostid=".$only_hostid;
+			$host_condition = '&only_hostid='.$only_hostid;
 		}
 		else if(isset($monitored_hosts)){
-			$host_condition = "&monitored_hosts=1";
+			$host_condition = '&monitored_hosts=1';
 		}
 
 		$btnSelect = new CButton('btn1',S_SELECT,
@@ -2650,94 +2659,91 @@
 				"&dstfld1=itemid&dstfld2=description&".
 				"srctbl=items&srcfld1=itemid&srcfld2=description".$host_condition."');",
 				'T');
-		
+
 		$frmGItem->AddRow(S_PARAMETER ,array($txtCondVal,$btnSelect));
 
 		if($graphtype == GRAPH_TYPE_NORMAL){
-			$cmbType = new CComboBox("type",$type,"submit()");
+			$cmbType = new CComboBox('type',$type,'submit()');
 			$cmbType->AddItem(GRAPH_ITEM_SIMPLE, S_SIMPLE);
 			$cmbType->AddItem(GRAPH_ITEM_AGGREGATED, S_AGGREGATED);
 			$frmGItem->AddRow(S_TYPE, $cmbType);
 		}
 		else if(($graphtype == GRAPH_TYPE_PIE) || ($graphtype == GRAPH_TYPE_EXPLODED)){
-			$cmbType = new CComboBox("type",$type,"submit()");
+			$cmbType = new CComboBox('type',$type,'submit()');
 			$cmbType->AddItem(GRAPH_ITEM_SIMPLE, S_SIMPLE);
 			$cmbType->AddItem(GRAPH_ITEM_SUM, S_GRAPH_SUM);
 			$frmGItem->AddRow(S_TYPE, $cmbType);
 		}
 		else{
-			$frmGItem->AddVar("type",GRAPH_ITEM_SIMPLE);
+			$frmGItem->AddVar('type',GRAPH_ITEM_SIMPLE);
 		}
 
 		if($type == GRAPH_ITEM_AGGREGATED){
-			$frmGItem->AddRow(S_AGGREGATED_PERIODS_COUNT,	new CTextBox("periods_cnt",$periods_cnt,15)); 
+			$frmGItem->AddRow(S_AGGREGATED_PERIODS_COUNT,	new CTextBox('periods_cnt',$periods_cnt,15));
 
-			$frmGItem->AddVar("calc_fnc",$calc_fnc);
-			$frmGItem->AddVar("drawtype",$drawtype);
-			$frmGItem->AddVar("color",$color);
+			$frmGItem->AddVar('calc_fnc',$calc_fnc);
+			$frmGItem->AddVar('drawtype',$drawtype);
+			$frmGItem->AddVar('color',$color);
 		}
 		else {
 			if(($graphtype == GRAPH_TYPE_PIE) || ($graphtype == GRAPH_TYPE_EXPLODED)){
-				$frmGItem->AddVar("periods_cnt",$periods_cnt);
-	
-				$cmbFnc = new CComboBox("calc_fnc",$calc_fnc,'submit();');
-	
+				$frmGItem->AddVar('periods_cnt',$periods_cnt);
+
+				$cmbFnc = new CComboBox('calc_fnc',$calc_fnc,'submit();');
+
 				$cmbFnc->AddItem(CALC_FNC_MIN, S_MIN_SMALL);
 				$cmbFnc->AddItem(CALC_FNC_AVG, S_AVG_SMALL);
 				$cmbFnc->AddItem(CALC_FNC_MAX, S_MAX_SMALL);
 				$cmbFnc->AddItem(CALC_FNC_LST, S_LST_SMALL);
-				$frmGItem->AddRow(S_FUNCTION, $cmbFnc);		
+				$frmGItem->AddRow(S_FUNCTION, $cmbFnc);
 			}
 			else{
-				$frmGItem->AddVar("periods_cnt",$periods_cnt);
-	
-				$cmbFnc = new CComboBox("calc_fnc",$calc_fnc,'submit();');
-	
+				$frmGItem->addVar('periods_cnt',$periods_cnt);
+
+				$cmbFnc = new CComboBox('calc_fnc',$calc_fnc,'submit();');
+
 				if($graphtype == GRAPH_TYPE_NORMAL)
 					$cmbFnc->AddItem(CALC_FNC_ALL, S_ALL_SMALL);
-	
+
 				$cmbFnc->AddItem(CALC_FNC_MIN, S_MIN_SMALL);
 				$cmbFnc->AddItem(CALC_FNC_AVG, S_AVG_SMALL);
 				$cmbFnc->AddItem(CALC_FNC_MAX, S_MAX_SMALL);
 				$frmGItem->AddRow(S_FUNCTION, $cmbFnc);
-	
-				if($graphtype == GRAPH_TYPE_NORMAL)
-				{
-					$cmbType = new CComboBox("drawtype",$drawtype);
-					foreach( graph_item_drawtypes() as $i )
-					{
-						$cmbType->AddItem($i,graph_item_drawtype2str($i));
+
+				if($graphtype == GRAPH_TYPE_NORMAL){
+					$cmbType = new CComboBox('drawtype',$drawtype);
+					$drawtypes = graph_item_drawtypes();
+					foreach($drawtypes as $i ){
+						$cmbType->addItem($i,graph_item_drawtype2str($i));
 					}
-					$frmGItem->AddRow(S_DRAW_STYLE, $cmbType);
+					$frmGItem->addRow(S_DRAW_STYLE, $cmbType);
 				}
-				else
-				{
-					$frmGItem->AddVar("drawtype", 1);
+				else{
+					$frmGItem->addVar('drawtype', 1);
 				}
 			}
 
-			$frmGItem->AddRow(S_COLOR, new CColor('color',$color));
+			$frmGItem->addRow(S_COLOR, new CColor('color',$color));
 		}
+
 		if(($graphtype == GRAPH_TYPE_NORMAL) || ($graphtype == GRAPH_TYPE_STACKED)){
-			$cmbYax = new CComboBox("yaxisside",$yaxisside);
+			$cmbYax = new CComboBox('yaxisside',$yaxisside);
 			$cmbYax->AddItem(GRAPH_YAXIS_SIDE_RIGHT, S_RIGHT);
 			$cmbYax->AddItem(GRAPH_YAXIS_SIDE_LEFT,	S_LEFT);
 			$frmGItem->AddRow(S_YAXIS_SIDE, $cmbYax);
 		}
 
 		if($type != GRAPH_ITEM_SUM){
-			$frmGItem->AddRow(S_SORT_ORDER_1_100, new CTextBox("sortorder",$sortorder,3));
+			$frmGItem->AddRow(S_SORT_ORDER_1_100, new CTextBox('sortorder',$sortorder,3));
 		}
 
-		$frmGItem->AddItemToBottomRow(new CButton("save", isset($gid) ? S_SAVE : S_ADD));
+		$frmGItem->AddItemToBottomRow(new CButton('save', isset($gid) ? S_SAVE : S_ADD));
 
 		$frmGItem->AddItemToBottomRow(new CButtonCancel(null,'close_window();'));
 		$frmGItem->Show();
 	}
 
-	function	insert_value_mapping_form()
-	{
-
+	function insert_value_mapping_form(){
 
 		$frmValmap = new CFormTable(S_VALUE_MAP);
 		$frmValmap->SetHelp("web.mapping.php");
@@ -2750,7 +2756,7 @@
 
 			$db_valuemap = DBfetch($db_valuemaps);
 
-			$frmValmap->SetTitle(S_VALUE_MAP." \"".$db_valuemap["name"]."\"");
+			$frmValmap->SetTitle(S_VALUE_MAP.' "'.$db_valuemap["name"].'"');
 		}
 
 		if(isset($_REQUEST["valuemapid"]) && !isset($_REQUEST["form_refresh"])){
@@ -2764,7 +2770,7 @@
 					"newvalue" => $mapping["newvalue"]);
 
 				array_push($valuemap, $value);
-			}				
+			}
 		}
 		else{
 			$mapname = get_request("mapname","");
@@ -2805,54 +2811,54 @@
 			$frmValmap->AddItemToBottomRow(SPACE);
 			$frmValmap->AddItemToBottomRow(new CButtonDelete("Delete selected value mapping?",
 				url_param("form").url_param("valuemapid").url_param("config")));
-		} 
+		}
 		else {
 		}
 		$frmValmap->AddItemToBottomRow(SPACE);
 		$frmValmap->AddItemToBottomRow(new CButtonCancel(url_param("config")));
-	
+
 		$frmValmap->Show();
 	}
 
 	function get_act_action_form($action=null){
 		$tblAct = new CTable('','nowrap');
-		
+
 		if(isset($_REQUEST['actionid']) && empty($action)){
 			$action = get_action_by_actionid($_REQUEST['actionid']);
 		}
-		
+
 		if(isset($_REQUEST['actionid']) && !isset($_REQUEST['form_refresh'])){
 			$name			= $action['name'];
 			$eventsource	= $action['eventsource'];
 			$esc_period		= $action['esc_period'];
 			$status 		= $action['status'];
-			
+
 			$def_shortdata	= $action['def_shortdata'];
 			$def_longdata	= $action['def_longdata'];
-			
+
 			$recovery_msg	= $action['recovery_msg'];
 			$r_shortdata	= $action['r_shortdata'];
 			$r_longdata		= $action['r_longdata'];
-			
+
 			if($esc_period) $_REQUEST['escalation'] = 1;
 		}
 		else{
-			
-			if(isset($_REQUEST['escalation']) && (0 == $_REQUEST['esc_period'])) 
+
+			if(isset($_REQUEST['escalation']) && (0 == $_REQUEST['esc_period']))
 				$_REQUEST['esc_period'] = 3600;
-						
+
 			$name			= get_request('name');
 			$eventsource	= get_request('eventsource');
 			$esc_period		= get_request('esc_period',0);
 			$status 		= get_request('status');
-			
+
 			$def_shortdata	= get_request('def_shortdata', ACTION_DEFAULT_MSG);
 			$def_longdata	= get_request('def_longdata', ACTION_DEFAULT_MSG);
 
-			$recovery_msg	= get_request('recovery_msg',0);			
+			$recovery_msg	= get_request('recovery_msg',0);
 			$r_shortdata	= get_request('r_shortdata', ACTION_DEFAULT_MSG);
 			$r_longdata		= get_request('r_longdata', ACTION_DEFAULT_MSG);
-			
+
 			if(!$esc_period) unset($_REQUEST['escalation']);
 		}
 
@@ -2864,11 +2870,11 @@
 		$cmbSource->AddItem(EVENT_SOURCE_TRIGGERS, S_TRIGGERS);
 		$cmbSource->AddItem(EVENT_SOURCE_DISCOVERY, S_DISCOVERY);
 		$tblAct->AddRow(array(S_EVENT_SOURCE, $cmbSource));
-		
-				
+
+
 		if(EVENT_SOURCE_TRIGGERS == $eventsource){
 			$tblAct->AddRow(array(S_ENABLE_ESCALATIONS, new CCheckBox('escalation',isset($_REQUEST['escalation']),'javascript: submit();',1)));
-			
+
 			if(isset($_REQUEST['escalation'])){
 				$tblAct->AddRow(array(S_PERIOD.' ('.S_SECONDS_SMALL.')', array(new CNumericBox('esc_period', $esc_period, 6, 'no'), '['.S_MIN_SMALL.' 60]')));
 			}
@@ -2879,15 +2885,15 @@
 		else{
 			$tblAct->AddItem(new CVar('esc_period',$esc_period));
 		}
-		
+
 		if(!isset($_REQUEST['escalation'])){
 			unset($_REQUEST['new_opcondition']);
 		}
-		
+
 		$tblAct->AddRow(array(S_DEFAULT_SUBJECT, new CTextBox('def_shortdata', $def_shortdata, 50)));
 		$tblAct->AddRow(array(S_DEFAULT_MESSAGE, new CTextArea('def_longdata', $def_longdata,50,5)));
 
-		if(EVENT_SOURCE_TRIGGERS == $eventsource){			
+		if(EVENT_SOURCE_TRIGGERS == $eventsource){
 			$tblAct->AddRow(array(S_RECOVERY_MESSAGE, new CCheckBox('recovery_msg',$recovery_msg,'javascript: submit();',1)));
 			if($recovery_msg){
 				$tblAct->AddRow(array(S_RECOVERY_SUBJECT, new CTextBox('r_shortdata', $r_shortdata, 50)));
@@ -2901,7 +2907,7 @@
 		else{
 			unset($_REQUEST['recovery_msg']);
 		}
-		
+
 		$cmbStatus = new CComboBox('status',$status);
 		$cmbStatus->AddItem(ACTION_STATUS_ENABLED,S_ENABLED);
 		$cmbStatus->AddItem(ACTION_STATUS_DISABLED,S_DISABLED);
@@ -2922,11 +2928,11 @@
 			$td->AddItem(new CButtonDelete(S_DELETE_SELECTED_ACTION_Q,
 						url_param('form').url_param('eventsource').
 						url_param('actionid')));
-				
+
 		}
 		$td->AddItem(SPACE);
 		$td->AddItem(new CButtonCancel(url_param("actiontype")));
-		
+
 		$tblAction->SetFooter($td);
 	return $tblAction;
 	}
@@ -2939,11 +2945,11 @@
 		}
 
 		$conditions	= get_request('conditions',array());
-		
+
 		if(isset($_REQUEST['actionid']) && !isset($_REQUEST['form_refresh'])){
 			$eventsource	= $action['eventsource'];
 			$evaltype	= $action['evaltype'];
-			
+
 			/* prepare conditions */
 			$db_conditions = DBselect('select conditiontype, operator, value FROM conditions'.
 				' WHERE actionid='.$_REQUEST['actionid'].' order by conditiontype,conditionid');
@@ -2973,7 +2979,7 @@
 		$grouped_conditions = array();
 		$cond_el = new CTable(S_NO_CONDITIONS_DEFINED);
 		$i=0;
-		
+
 		foreach($conditions as $id => $val){
 			if( !isset($val['type']) )	$val['type'] = 0;
 			if( !isset($val['operator']) )	$val['operator'] = 0;
@@ -2986,7 +2992,7 @@
 					new CCheckBox('g_conditionid[]', 'no', null,$i),
 					get_condition_desc($val['type'], $val['operator'], $val['value']))
 				));
-				
+
 			$tblCond->AddItem(new CVar("conditions[$i][type]", 	$val["type"]));
 			$tblCond->AddItem(new CVar("conditions[$i][operator]", 	$val["operator"]));
 			$tblCond->AddItem(new CVar("conditions[$i][value]", 	$val["value"]));
@@ -3034,29 +3040,29 @@
 		else{
 			$tblCond->AddItem(new CVar('evaltype', ACTION_EVAL_TYPE_AND_OR));
 		}
-		
+
 		$tblCond->AddRow(array(S_CONDITIONS, $cond_el));
-		
+
 		$tblConditions = new CTableInfo();
 		$tblConditions->AddRow($tblCond);
 
 		$td = new CCol($cond_buttons);
 		$td->AddOption('colspan','2');
 		$td->AddOption('style','text-align: right;');
-		
+
 		$tblConditions->SetFooter($td);
 		unset($grouped_conditions,$cond_el,$cond_buttons);
-// end of CONDITION LIST		
+// end of CONDITION LIST
 	return $tblConditions;
 	}
-	
+
 	function get_act_new_cond_form($action=null){
 		$tblCond = new CTable('','nowrap');
 
 		if(isset($_REQUEST['actionid']) && empty($action)){
 			$action = get_action_by_actionid($_REQUEST['actionid']);
 		}
-		
+
 		if(isset($_REQUEST['actionid']) && !isset($_REQUEST['form_refresh'])){
 			$eventsource	= $action['eventsource'];
 			$evaltype	= $action['evaltype'];
@@ -3065,7 +3071,7 @@
 			$evaltype	= get_request('evaltype');
 			$eventsource	= get_request('eventsource');
 		}
-				
+
 		$allowed_conditions = get_conditions_by_eventsource($eventsource);
 		/* init new_condition variable */
 		$new_condition = get_request('new_condition', array());
@@ -3077,7 +3083,7 @@
 
 		if( !str_in_array($new_condition['type'], $allowed_conditions) )
 			$new_condition['type'] = $allowed_conditions[0];
-			
+
 // NEW CONDITION
 
 		$rowCondition=array();
@@ -3202,21 +3208,21 @@
 		}
 
 		$tblCond->AddRow($rowCondition);
-		
+
 		$tblConditions = new CTableInfo();
-		
+
 		$tblConditions->AddRow($tblCond);
 
 		$td = new CCol(array(new CButton('add_condition',S_ADD),new CButton('cancel_new_condition',S_CANCEL)));
 		$td->AddOption('colspan','3');
 		$td->AddOption('style','text-align: right;');
-		
+
 		$tblConditions->SetFooter($td);
 		unset($grouped_conditions,$cond_el,$cond_buttons);
 // end of NEW CONDITION
 	return $tblConditions;
 	}
-	
+
 	function get_act_operations_form($action=null){
 		$tblOper = new CTableInfo(S_NO_OPERATIONS_DEFINED);
 		$tblOper->AddOption('style','background-color: #CCC;');
@@ -3252,7 +3258,7 @@
 					'esc_step_to'	=> 	$operation_data['esc_step_to'],
 					'default_msg'	=> 	$operation_data['default_msg'],
 					'evaltype'		=> 	$operation_data['evaltype']);
-				
+
 				$operation_data['opconditions'] = array();
 				$sql = 'SELECT * FROM opconditions WHERE operationid='.$operation_data['operationid'];
 
@@ -3295,7 +3301,7 @@
 		$delay = count_operations_delay($operations,$esc_period);
 		foreach($operations as $id => $val){
 			if( !str_in_array($val['operationtype'], $allowed_operations) )	continue;
-			
+
 			if(!isset($val['default_msg'])) $val['default_msg'] = 0;
 			if(!isset($val['opconditions'])) $val['opconditions'] = array();
 
@@ -3307,13 +3313,13 @@
 			$esc_delay_txt = null;
 
 			if($val['esc_step_from'] < 1) $val['esc_step_from'] = 1;
-			
+
 			if(isset($_REQUEST['escalation'])){
 				$esc_steps_txt = $val['esc_step_from'].' - '.$val['esc_step_to'];
 				$esc_period_txt = $val['esc_period']?$val['esc_period']:S_DEFAULT;
 				$esc_delay_txt = $delay[$val['esc_step_from']]?convert_units($delay[$val['esc_step_from']],'uptime'):S_AT_MOMENT;
 			}
-			
+
 			$tblOper->AddRow(array(
 				new CCheckBox("g_operationid[]", 'no', null,$id),
 				$esc_steps_txt,
@@ -3337,12 +3343,12 @@
 			foreach($val['opconditions'] as $opcondid => $opcond){
 				foreach($opcond as $field => $value)
 					$tblOper->AddItem(new CVar('operations['.$id.'][opconditions]['.$opcondid.']['.$field.']',$value));
-			}			
+			}
 		}
 		unset($operations);
 
 		$tblOperFooter = new CTableInfo(null);
-		
+
 		$oper_buttons = array();
 		if(!isset($_REQUEST['new_operation'])){
 			$oper_buttons[] = new CButton('new_operation',S_NEW);
@@ -3351,17 +3357,17 @@
 		if($tblOper->ItemsCount() > 0 ){
 			$oper_buttons[] = new CButton('del_operation',S_DELETE_SELECTED);
 		}
-		
+
 		$td = new CCol($oper_buttons);
 		$td->AddOption('colspan',isset($_REQUEST['escalation'])?6:3);
 		$td->AddOption('style','text-align: right;');
-		
+
 
 		$tblOperFooter->SetFooter($td);
 // end of condition list preparation
 	return array($tblOper,$tblOperFooter);
 	}
-	
+
 	function get_act_new_oper_form($action=null){
 		$tblOper = new CTableInfo();
 
@@ -3370,7 +3376,7 @@
 		}
 
 		$operations	= get_request("operations",array());
-	
+
 		if(isset($_REQUEST['actionid']) && !isset($_REQUEST['form_refresh'])){
 			$eventsource	= $action['eventsource'];
 		}
@@ -3379,7 +3385,7 @@
 		}
 
 		$allowed_operations = get_operations_by_eventsource($eventsource);
-		
+
 		/* init new_operation variable */
 		$new_operation = get_request('new_operation', array());
 
@@ -3396,39 +3402,39 @@
 		if(!isset($new_operation['esc_step_from']))		$new_operation['esc_step_from'] = 1;
 		if(!isset($new_operation['esc_step_to']))		$new_operation['esc_step_to'] = 1;
 		if(!isset($new_operation['esc_period']))		$new_operation['esc_period'] = 0;
-		
+
 		if(!isset($new_operation['evaltype']))			$new_operation['evaltype']	= 0;
 		if(!isset($new_operation['opconditions']))		$new_operation['opconditions'] = array();
 		if(!isset($new_operation['default_msg']))		$new_operation['default_msg'] = 0;
-		
+
 
 		unset($update_mode);
-		
+
 		$evaltype	= $new_operation['evaltype'];
-		
+
 		if(isset($new_operation['id'])){
 			$tblOper->AddItem(new CVar('new_operation[id]', $new_operation['id']));
 			$update_mode = true;
 		}
 
 		$tblNewOperation = new CTable(null,'nowrap');
-		
+
 		if(isset($_REQUEST['escalation'])){
 			$tblStep = new CTable(null,'nowrap');
 
 			$step_from = new CNumericBox('new_operation[esc_step_from]', $new_operation['esc_step_from'],4);
 			$step_from->AddAction('onchange','javascript:'.$step_from->GetOption('onchange').' if(this.value == 0) this.value=1;');
-			
+
 			$tblStep->AddRow(array(S_FROM, $step_from));
 			$tblStep->AddRow(array(
-								S_TO, 
+								S_TO,
 								new CCol(array(
 									new CNumericBox('new_operation[esc_step_to]', $new_operation['esc_step_to'],4),
 									' [0-'.S_INFINITY.']'))
 							));
-							
+
 			$tblStep->AddRow(array(
-								S_PERIOD, 
+								S_PERIOD,
 								new CCol(array(
 									new CNumericBox('new_operation[esc_period]', $new_operation['esc_period'],5),
 									' [0-'.S_DEFAULT.']'))
@@ -3440,10 +3446,10 @@
 			$tblOper->AddItem(new CVar('new_operation[esc_period]'	,	$new_operation['esc_period']));
 			$tblOper->AddItem(new CVar('new_operation[esc_step_from]',	$new_operation['esc_step_from']));
 			$tblOper->AddItem(new CVar('new_operation[esc_step_to]',	$new_operation['esc_step_to']));
-			
+
 			$tblOper->AddItem(new CVar('new_operation[evaltype]',		$new_operation['evaltype']));
 		}
-		
+
 		$cmbOpType = new CComboBox('new_operation[operationtype]', $new_operation['operationtype'],'submit()');
 		foreach($allowed_operations as $oper)
 			$cmbOpType->AddItem($oper, operation_type2str($oper));
@@ -3464,7 +3470,7 @@
 					$display_name = 'alias';
 				}
 
-				$tblOper->AddItem(new CVar('new_operation[objectid]', $new_operation['objectid'])); 
+				$tblOper->AddItem(new CVar('new_operation[objectid]', $new_operation['objectid']));
 
 				if($object_name)	$object_name = $object_name[$display_name];
 
@@ -3482,9 +3488,9 @@
 							'",450,450)',
 							'T')
 					)));
-				
+
 				$tblNewOperation->AddRow(array(S_DEFAULT_MESSAGE, new CCheckBox('new_operation[default_msg]', $new_operation['default_msg'], 'javascript: submit();',1)));
-				
+
 				if(!$new_operation['default_msg']){
 					$tblNewOperation->AddRow(array(S_SUBJECT, new CTextBox('new_operation[shortdata]', $new_operation['shortdata'], 77)));
 					$tblNewOperation->AddRow(array(S_MESSAGE, new CTextArea('new_operation[longdata]', $new_operation['longdata'],77,7)));
@@ -3593,7 +3599,7 @@
 							'",450,450)',
 							'T')
 					)));
-				break;				
+				break;
 		}
 
 // new Operation conditions
@@ -3602,66 +3608,66 @@
 
 			$opconditions	= $new_operation['opconditions'];
 			$allowed_opconditions = get_opconditions_by_eventsource($eventsource);
-	
+
 // show opcondition LIST
 			zbx_rksort($opconditions);
-	
+
 			/* group opconditions by type */
 			$grouped_opconditions = array();
 			$cond_el = new CTable(S_NO_CONDITIONS_DEFINED);
 			$i=0;
-			
+
 			foreach($opconditions as $val){
 				if( !isset($val['conditiontype']) )	$val['conditiontype'] = 0;
 				if( !isset($val['operator']) )	$val['operator'] = 0;
 				if( !isset($val['value']) )	$val['value'] = 0;
-	
+
 				if( !str_in_array($val["conditiontype"], $allowed_opconditions) ) continue;
-	
+
 				$label = chr(ord('A') + $i);
 				$cond_el->AddRow(array('('.$label.')',array(
 						new CCheckBox("g_opconditionid[]", 'no', null,$i),
 						get_condition_desc($val["conditiontype"], $val["operator"], $val["value"]))
 					));
-				
+
 				$tblCond->AddItem(new CVar("new_operation[opconditions][$i][conditiontype]", 	$val["conditiontype"]));
 				$tblCond->AddItem(new CVar("new_operation[opconditions][$i][operator]", 	$val["operator"]));
 				$tblCond->AddItem(new CVar("new_operation[opconditions][$i][value]", 	$val["value"]));
-	
+
 				$grouped_opconditions[$val["conditiontype"]][] = $label;
-	
+
 				$i++;
 			}
 			unset($opconditions);
-	
+
 			$cond_buttons = array();
-	
+
 			if(!isset($_REQUEST['new_opcondition'])){
 				$cond_buttons[] = new CButton('new_opcondition',S_NEW);
 			}
-	
+
 			if($cond_el->ItemsCount() > 0){
 				if($cond_el->ItemsCount() > 1){
-	
+
 					/* prepare opcondition calcuation type selector */
 					switch($evaltype){
 						case ACTION_EVAL_TYPE_AND:	$group_op = 		$glog_op = S_AND;	break;
 						case ACTION_EVAL_TYPE_OR:	$group_op = 		$glog_op = S_OR;	break;
 						default:			$group_op = S_OR;	$glog_op = S_AND;	break;
 					}
-	
+
 					foreach($grouped_opconditions as $id => $val)
 						$grouped_opconditions[$id] = '('.implode(' '.$group_op.' ', $val).')';
-	
+
 					$grouped_opconditions = implode(' '.$glog_op.' ', $grouped_opconditions);
-	
+
 					$cmb_calc_type = new CComboBox('new_operation[evaltype]', $evaltype, 'submit()');
 					$cmb_calc_type->AddItem(ACTION_EVAL_TYPE_AND_OR, S_AND_OR_BIG);
 					$cmb_calc_type->AddItem(ACTION_EVAL_TYPE_AND, S_AND_BIG);
 					$cmb_calc_type->AddItem(ACTION_EVAL_TYPE_OR, S_OR_BIG);
-					
+
 					$tblNewOperation->AddRow(array(S_TYPE_OF_CALCULATION, new CCol(array($cmb_calc_type,new CTextBox('preview', $grouped_opconditions, 60,'yes')))));
-					
+
 					unset($cmb_calc_type, $group_op, $glog_op);
 					/* end of calcuation type selector */
 				}
@@ -3673,15 +3679,15 @@
 			else{
 				$tblCond->AddItem(new CVar('new_operation[evaltype]', ACTION_EVAL_TYPE_AND_OR));
 			}
-			
+
 			$tblCond->AddRow($cond_el);
 			$tblCond->AddRow(new CCol($cond_buttons));
-			
-// end of opcondition LIST		
+
+// end of opcondition LIST
 			$tblNewOperation->AddRow(array(S_CONDITIONS, $tblCond));
 			unset($grouped_opconditions,$cond_el,$cond_buttons,$tblCond);
 		}
-		
+
 		$tblOper->AddRow($tblNewOperation);
 
 
@@ -3693,19 +3699,19 @@
 
 		$td->AddOption('colspan','3');
 		$td->AddOption('style','text-align: right;');
-		
+
 		$tblOper->SetFooter($td);
 
 	return $tblOper;
 	}
-	
+
 	function get_oper_new_cond_form($action=null){
 		$tblCond = new CTable('','nowrap');
 
 		if(isset($_REQUEST['actionid']) && empty($action)){
 			$action = get_action_by_actionid($_REQUEST['actionid']);
 		}
-		
+
 		if(isset($_REQUEST['actionid']) && !isset($_REQUEST['form_refresh'])){
 			$eventsource	= $action['eventsource'];
 			$evaltype	= $action['evaltype'];
@@ -3714,7 +3720,7 @@
 			$evaltype	= get_request('evaltype');
 			$eventsource	= get_request('eventsource');
 		}
-				
+
 		$allowed_conditions = get_opconditions_by_eventsource($eventsource);
 		/* init new_condition variable */
 		$new_opcondition = get_request('new_opcondition', array());
@@ -3726,7 +3732,7 @@
 
 		if( !str_in_array($new_opcondition['conditiontype'], $allowed_conditions) )
 			$new_opcondition['conditiontype'] = $allowed_conditions[0];
-			
+
 // NEW CONDITION
 		$rowCondition=array();
 
@@ -3755,7 +3761,7 @@
 		}
 
 		$tblCond->AddRow($rowCondition);
-		
+
 		$tblConditions = new CTableInfo();
 
 		$tblConditions->AddRow($tblCond);
@@ -3763,7 +3769,7 @@
 		$td = new CCol(array(new CButton('add_opcondition',S_ADD),new CButton('cancel_new_opcondition',S_CANCEL)));
 		$td->AddOption('colspan','3');
 		$td->AddOption('style','text-align: right;');
-		
+
 		$tblConditions->SetFooter($td);
 		unset($grouped_conditions,$cond_el,$cond_buttons);
 // end of NEW CONDITION
@@ -3870,11 +3876,11 @@
 		}
 
 		$frmImages->AddRow(S_NAME,new CTextBox('name',$name,64));
-	
+
 		$cmbImg = new CComboBox('imagetype',$imagetype);
 		$cmbImg->AddItem(IMAGE_TYPE_ICON,S_ICON);
 		$cmbImg->AddItem(IMAGE_TYPE_BACKGROUND,S_BACKGROUND);
-		
+
 		$frmImages->AddRow(S_TYPE,$cmbImg);
 
 		$frmImages->AddRow(S_UPLOAD,new CFile('image'));
@@ -3890,7 +3896,7 @@
 			$frmImages->AddItemToBottomRow(new CButtonDelete(S_DELETE_SELECTED_IMAGE,
 				url_param('form').url_param('config').url_param('imageid')));
 		}
-		
+
 		$frmImages->AddItemToBottomRow(SPACE);
 		$frmImages->AddItemToBottomRow(new CButtonCancel(url_param('config')));
 		$frmImages->Show();
@@ -3916,7 +3922,7 @@
 			$hsize=get_request("hsize",1);
 			$vsize=get_request("bsize",1);
 		}
-		
+
 		$frmScr = new CFormTable($frm_title,"screenconf.php");
 		$frmScr->SetHelp("web.screenconf.screen.php");
 
@@ -3939,12 +3945,12 @@
 		}
 		$frmScr->AddItemToBottomRow(SPACE);
 		$frmScr->AddItemToBottomRow(new CButtonCancel());
-		$frmScr->Show();	
+		$frmScr->Show();
 	}
 
  	function insert_housekeeper_form(){
 		$config=select_config();
-		
+
 		$frmHouseKeep = new CFormTable(S_HOUSEKEEPER,"config.php");
 		$frmHouseKeep->SetHelp("web.config.housekeeper.php");
 		$frmHouseKeep->AddVar("config",get_request("config",0));
@@ -3961,7 +3967,7 @@
 
 	function insert_work_period_form(){
 		$config=select_config();
-		
+
 		$frmHouseKeep = new CFormTable(S_WORKING_TIME,"config.php");
 		$frmHouseKeep->SetHelp("web.config.workperiod.php");
 		$frmHouseKeep->AddVar("config",get_request("config",7));
@@ -3972,19 +3978,19 @@
 		$frmHouseKeep->AddItemToBottomRow(new CButton("save",S_SAVE));
 		$frmHouseKeep->Show();
 	}
-	
+
 	function insert_themes_form(){
 		$config=select_config();
-		
+
 		$frmThemes = new CFormTable(S_THEMES,"config.php");
 		$frmThemes->AddVar("config",get_request("config",9));
-			
+
 		$cmbTheme = new CComboBox('default_theme',$config['default_theme']);
 			$cmbTheme->AddItem('css_ob.css',S_ORIGINAL_BLUE);
 			$cmbTheme->AddItem('css_bb.css',S_BLACK_AND_BLUE);
 
 		$frmThemes->AddRow(S_DEFAULT_THEME,$cmbTheme);
-			
+
 		$frmThemes->AddItemToBottomRow(new CButton("save",S_SAVE));
 		$frmThemes->Show();
 	}
@@ -3992,7 +3998,7 @@
 	function insert_event_ack_form()
 	{
 		$config=select_config();
-		
+
 		$frmEventAck = new CFormTable(S_EVENTS,"config.php");
 //		$frmEventAck->SetHelp("web.config.workperiod.php");
 		$frmEventAck->AddVar("config",get_request("config",8));
@@ -4003,7 +4009,7 @@
 		$exp_select->AddItem(EVENT_ACK_DISABLED,S_DISABLED,$config['event_ack_enable']?'no':'yes');
 
 		$frmEventAck->AddRow(S_EVENT_ACKNOWLEDGES,$exp_select);
-			
+
 		$frmEventAck->AddRow(S_SHOW_EVENTS_NOT_OLDER.SPACE.'('.S_DAYS.')',
 			new CTextBox('event_expire',$config['event_expire'],5));
 
@@ -4017,11 +4023,11 @@
 	function	insert_other_parameters_form()
 	{
 		$config=select_config();
-		
+
 		$frmHouseKeep = new CFormTable(S_OTHER_PARAMETERS,'config.php');
 		$frmHouseKeep->SetHelp('web.config.other.php');
 		$frmHouseKeep->AddVar('config',get_request('config',5));
-		
+
 		$frmHouseKeep->AddRow(S_REFRESH_UNSUPPORTED_ITEMS,
 			new CNumericBox('refresh_unsupported',$config['refresh_unsupported'],5));
 
@@ -4047,7 +4053,7 @@
 		global $USER_DETAILS;
 
 		$visible = get_request('visible',array());
-		
+
 		$groups= get_request('groups',array());
 
 		$newgroup	= get_request('newgroup','');
@@ -4083,9 +4089,9 @@
 		$notes		= get_request('notes','');
 
 // BEGIN: HOSTS PROFILE EXTENDED Section
-		$useprofile_ext = get_request('useprofile_ext','no');			
+		$useprofile_ext = get_request('useprofile_ext','no');
 		$ext_host_profiles = get_request('ext_host_profiles', array());
-		
+
 		$ext_profiles_fields = array('device_alias','device_type','device_chassis','device_os','device_os_short',
 			'device_hw_arch','device_serial','device_model','device_tag','device_vendor','device_contract',
 			'device_who','device_status','device_app_01','device_app_02','device_app_03','device_app_04',
@@ -4099,7 +4105,7 @@
 		foreach($ext_profiles_fields as $field){
 			if(!isset($ext_host_profiles[$field])) $ext_host_profiles[$field] = '';
 		}
-		
+
 // END:   HOSTS PROFILE EXTENDED Section
 
 		$templates	= get_request('templates',array());
@@ -4117,25 +4123,25 @@
 		$frmHost->SetHelp('web.hosts.host.php');
 		$frmHost->AddVar('config',get_request('config',0));
 		$frmHost->AddVar('massupdate',get_request('massupdate',1));
-		
+
 		$hosts = $_REQUEST['hosts'];
 		foreach($hosts as $id => $hostid){
 			$frmHost->AddVar('hosts['.$hostid.']',$hostid);
 		}
 
 		$frmHost->AddVar('clear_templates',$clear_templates);
-		
+
 //		$frmItem->AddRow(array( new CVisibilityBox('visible[type]', isset($visible['type']), 'type', S_ORIGINAL),S_TYPE), $cmbType);
 
 		$frmHost->AddRow(S_NAME,S_ORIGINAL);
 
 		$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-		$grp_tb = new CTweenBox($frmHost,'groups',$groups,6);	
+		$grp_tb = new CTweenBox($frmHost,'groups',$groups,6);
 		$db_groups=DBselect('SELECT DISTINCT groupid,name '.
 						' FROM groups '.
 						' WHERE '.DBcondition('groupid',$available_groups).
 						' ORDER BY name');
-						
+
 		while($db_group=DBfetch($db_groups)){
 			$grp_tb->AddItem($db_group['groupid'],$db_group['name']);
 		}
@@ -4153,7 +4159,7 @@
 		$frmHost->AddRow(array(new CVisibilityBox('visible[dns]', isset($visible['dns']), 'dns', S_ORIGINAL),S_DNS_NAME),
 						new CTextBox('dns',$dns,'40')
 					);
-		
+
 		$frmHost->AddRow(array(new CVisibilityBox('visible[ip]', isset($visible['ip']), 'ip', S_ORIGINAL),S_IP_ADDRESS),
 						new CTextBox('ip',$ip,defined('ZBX_HAVE_IPV6')?39:15)
 					);
@@ -4161,7 +4167,7 @@
 		$cmbConnectBy = new CComboBox('useip', $useip);
 		$cmbConnectBy->AddItem(0, S_DNS_NAME);
 		$cmbConnectBy->AddItem(1, S_IP_ADDRESS);
-		
+
 		$frmHost->AddRow(array(new CVisibilityBox('visible[useip]', isset($visible['useip']), 'useip', S_ORIGINAL),S_CONNECT_TO),
 						$cmbConnectBy
 					);
@@ -4174,7 +4180,7 @@
 		$cmbProxy = new CComboBox('proxy_hostid', $proxy_hostid);
 
 		$cmbProxy->AddItem(0, S_NO_PROXY);
-		
+
 		$sql = 'SELECT hostid,host '.
 				' FROM hosts '.
 				' WHERE status IN ('.HOST_STATUS_PROXY.') '.
@@ -4194,21 +4200,21 @@
 		$cmbStatus = new CComboBox('status',$status);
 		$cmbStatus->AddItem(HOST_STATUS_MONITORED,	S_MONITORED);
 		$cmbStatus->AddItem(HOST_STATUS_NOT_MONITORED,	S_NOT_MONITORED);
-		
+
 		$frmHost->AddRow(array(new CVisibilityBox('visible[status]', isset($visible['status']), 'status', S_ORIGINAL),S_STATUS),
 						$cmbStatus
 					);
 
 		$template_table = new CTable();
-		
+
 		$template_table->AddOption('name','template_table');
 		$template_table->AddOption('id','template_table');
-		
+
 		$template_table->SetCellPadding(0);
 		$template_table->SetCellSpacing(0);
-		
+
 //		$template_table->AddOption('style','border: 1px black solid;');
-		
+
 		foreach($templates as $id => $temp_name){
 			$frmHost->AddVar('templates['.$id.']',$temp_name);
 			$template_table->AddRow(array(
@@ -4223,12 +4229,12 @@
 					"return PopUp('popup.php?dstfrm=".$frmHost->GetName().
 					"&dstfld1=new_template&srctbl=templates&srcfld1=hostid&srcfld2=host".
 					url_param($templates,false,'existed_templates')."',450,450)"));
-							
+
 		$frmHost->AddRow(array(
-					new CVisibilityBox('visible[template_table]', isset($visible['template_table']), 'template_table', S_ORIGINAL),S_LINK_WITH_TEMPLATE), 
+					new CVisibilityBox('visible[template_table]', isset($visible['template_table']), 'template_table', S_ORIGINAL),S_LINK_WITH_TEMPLATE),
 					$template_table, 'T'
 				);
-	
+
 		$frmHost->AddRow(array(
 					new CVisibilityBox('visible[useipmi]', isset($visible['useipmi']), 'useipmi', S_ORIGINAL), S_USEIPMI),
 					new CCheckBox("useipmi", $useipmi, "submit()")
@@ -4298,52 +4304,52 @@
 				new CVisibilityBox('visible[devicetype]', isset($visible['devicetype']), 'devicetype', S_ORIGINAL),S_DEVICE_TYPE),
 				new CTextBox("devicetype",$devicetype,61)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[name]', isset($visible['name']), 'name', S_ORIGINAL),S_NAME),
 				new CTextBox("name",$name,61)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[os]', isset($visible['os']), 'os', S_ORIGINAL),S_OS),
 				new CTextBox("os",$os,61)
 			);
 
-			$frmHost->AddRow(array(	
+			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[serialno]', isset($visible['serialno']), 'serialno', S_ORIGINAL),S_SERIALNO),
 				new CTextBox("serialno",$serialno,61)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[tag]', isset($visible['tag']), 'tag', S_ORIGINAL),S_TAG),
 				new CTextBox("tag",$tag,61)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[macaddress]', isset($visible['macaddress']), 'macaddress', S_ORIGINAL),S_MACADDRESS),
 				new CTextBox("macaddress",$macaddress,61)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[hardware]', isset($visible['hardware']), 'hardware', S_ORIGINAL),S_HARDWARE),
 				new CTextArea("hardware",$hardware,60,4)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[software]', isset($visible['software']), 'software', S_ORIGINAL),S_SOFTWARE),
 				new CTextArea("software",$software,60,4)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[contact]', isset($visible['contact']), 'contact', S_ORIGINAL),S_CONTACT),
 				new CTextArea("contact",$contact,60,4)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[location]', isset($visible['location']), 'location', S_ORIGINAL),S_LOCATION),
 				new CTextArea("location",$location,60,4)
 			);
-			
+
 			$frmHost->AddRow(array(
 				new CVisibilityBox('visible[notes]', isset($visible['notes']), 'notes', S_ORIGINAL),S_NOTES),
 				new CTextArea("notes",$notes,60,4)
@@ -4369,7 +4375,7 @@
 			new CVisibilityBox('visible[device_alias]', isset($visible['device_alias']), 'ext_host_profiles[device_alias]', S_ORIGINAL),S_DEVICE_ALIAS),
 			new CTextBox('ext_host_profiles[device_alias]',$ext_host_profiles['device_alias'],61)
 		);
-		
+
 		$frmHost->AddRow(array(
 			new CVisibilityBox('visible[device_type]', isset($visible['device_type']), 'ext_host_profiles[device_type]', S_ORIGINAL),S_DEVICE_TYPE),
 			new CTextBox('ext_host_profiles[device_type]',$ext_host_profiles['device_type'],61)
@@ -4492,7 +4498,7 @@
 			new CVisibilityBox('visible[oob_router]', isset($visible['oob_router']), 'ext_host_profiles[oob_router]', S_ORIGINAL),S_OOB_ROUTER),
 			new CTextBox('ext_host_profiles[oob_router]',$ext_host_profiles['oob_router'],61)
 		);
-		
+
 		$frmHost->AddRow(array(
 			new CVisibilityBox('visible[date_hw_buy]', isset($visible['date_hw_buy']), 'ext_host_profiles[date_hw_buy]', S_ORIGINAL),S_DATE_HW_BUY),
 			new CTextBox('ext_host_profiles[date_hw_buy]',$ext_host_profiles['date_hw_buy'],15)
@@ -4509,7 +4515,7 @@
 			new CVisibilityBox('visible[date_hw_decomm]', isset($visible['date_hw_decomm']), 'ext_host_profiles[date_hw_decomm]', S_ORIGINAL),S_DATE_HW_DECOMM),
 			new CTextBox('ext_host_profiles[date_hw_decomm]',$ext_host_profiles['date_hw_decomm'],15)
 		);
-		
+
 		$frmHost->AddRow(array(
 			new CVisibilityBox('visible[site_street_1]', isset($visible['site_street_1']), 'ext_host_profiles[site_street_1]', S_ORIGINAL),S_SITE_STREET_1),
 			new CTextBox('ext_host_profiles[site_street_1]',$ext_host_profiles['site_street_1'],61)
@@ -4667,9 +4673,9 @@
 	}
 // END:   HOSTS PROFILE EXTENDED Section
 
-		$frmHost->AddItemToBottomRow(new CButton("save",S_SAVE));		
+		$frmHost->AddItemToBottomRow(new CButton("save",S_SAVE));
 		$frmHost->AddItemToBottomRow(SPACE);
-		$frmHost->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param("groupid")));
+		$frmHost->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param('groupid')));
 		$frmHost->Show();
 	}
 
@@ -4721,7 +4727,7 @@
 
 		$frm_title	= $show_only_tmp ? S_TEMPLATE : S_HOST;
 
-		if(isset($_REQUEST['hostid'])){
+		if($_REQUEST['hostid']>0){
 			$db_host=get_host_by_hostid($_REQUEST['hostid']);
 			$frm_title	.= SPACE.' ['.$db_host['host'].']';
 
@@ -4730,34 +4736,31 @@
 		else{
 			$original_templates = array();
 		}
-		
-		if(isset($_REQUEST['hostid']) && !isset($_REQUEST['form_refresh'])){
-			$proxy_hostid		= $db_host['proxy_hostid'];
+
+		if(($_REQUEST['hostid']>0) && !isset($_REQUEST['form_refresh'])){
+			$proxy_hostid	= $db_host['proxy_hostid'];
 			$host			= $db_host['host'];
 			$port			= $db_host['port'];
 			$status			= $db_host['status'];
 			$useip			= $db_host['useip'];
 			$useipmi		= $db_host['useipmi'] ? 'yes' : 'no';
-			if ($useipmi == 'yes')
-			{
-				if ($useip)
-				{
+			if($useipmi == 'yes'){
+				if($useip){
 					$ip	= $db_host['ip'];
 					$dns	= '';
 					$ipmi_ip= $db_host['dns'];
 				}
-				else
-				{
+				else{
 					$ip	= '0.0.0.0';
 					$dns	= $db_host['dns'];
 					$ipmi_ip= $db_host['ip'];
 				}
 			}
-			else
-			{
+			else{
 				$ip		= $db_host['ip'];
 				$dns		= $db_host['dns'];
 			}
+
 			$ipmi_port		= $db_host['ipmi_port'];
 			$ipmi_authtype		= $db_host['ipmi_authtype'];
 			$ipmi_privilege		= $db_host['ipmi_privilege'];
@@ -4798,7 +4801,7 @@
 
 // BEGIN: HOSTS PROFILE EXTENDED Section
 			$useprofile_ext = 'no';
-			
+
 			$db_profiles_alt = DBselect('SELECT * FROM hosts_profiles_ext		 WHERE hostid='.$_REQUEST['hostid']);
 			if($ext_host_profiles = DBfetch($db_profiles_alt)){
 				$useprofile_ext = 'yes';
@@ -4810,7 +4813,7 @@
 
 			$templates = $original_templates;
 		}
-		
+
 		$ext_profiles_fields = array('device_alias','device_type','device_chassis','device_os','device_os_short',
 			'device_hw_arch','device_serial','device_model','device_tag','device_vendor','device_contract',
 			'device_who','device_status','device_app_01','device_app_02','device_app_03','device_app_04',
@@ -4821,7 +4824,7 @@
 			'poc_1_name','poc_1_email','poc_1_phone_1','poc_1_phone_2','poc_1_cell','poc_1_screen','poc_1_notes','poc_2_name',
 			'poc_2_email','poc_2_phone_1','poc_2_phone_2','poc_2_cell','poc_2_screen','poc_2_notes');
 
-		
+
 		foreach($ext_profiles_fields as $id => $field){
 			if(!isset($ext_host_profiles[$field])) $ext_host_profiles[$field] = '';
 		}
@@ -4836,22 +4839,22 @@
 
 		$frmHost->AddVar('clear_templates',$clear_templates);
 
-		if(isset($_REQUEST['hostid']))		$frmHost->AddVar('hostid',$_REQUEST['hostid']);
-		if(isset($_REQUEST['groupid']))		$frmHost->AddVar('groupid',$_REQUEST['groupid']);
-		
+		if($_REQUEST['hostid']>0)		$frmHost->addVar('hostid',$_REQUEST['hostid']);
+		if($_REQUEST['groupid']>0)		$frmHost->addVar('groupid',$_REQUEST['groupid']);
+
 		$frmHost->AddRow(S_NAME,new CTextBox('host',$host,20));
 
 		$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-		$grp_tb = new CTweenBox($frmHost,'groups',$groups,10);	
+		$grp_tb = new CTweenBox($frmHost,'groups',$groups,10);
 		$db_groups=DBselect('SELECT DISTINCT groupid,name '.
 						' FROM groups '.
 						' WHERE '.DBcondition('groupid',$available_groups).
 						' ORDER BY name');
-						
+
 		while($db_group=DBfetch($db_groups)){
 			$grp_tb->AddItem($db_group['groupid'],$db_group['name']);
 		}
-		
+
 		$frmHost->AddRow(S_GROUPS,$grp_tb->Get(S_IN.SPACE.S_GROUPS,S_OTHER.SPACE.S_GROUPS));
 
 		$frmHost->AddRow(S_NEW_GROUP,new CTextBox('newgroup',$newgroup),'new');
@@ -4885,7 +4888,7 @@
 			$frmHost->AddVar('status',$status);
 		}
 		else{
-			$frmHost->AddRow(S_PORT,new CNumericBox('port',$port,5));	
+			$frmHost->AddRow(S_PORT,new CNumericBox('port',$port,5));
 
 //Proxy
 			$cmbProxy = new CComboBox('proxy_hostid', $proxy_hostid);
@@ -4902,7 +4905,7 @@
 			$cmbStatus = new CComboBox('status',$status);
 			$cmbStatus->AddItem(HOST_STATUS_MONITORED,	S_MONITORED);
 			$cmbStatus->AddItem(HOST_STATUS_NOT_MONITORED,	S_NOT_MONITORED);
-			$frmHost->AddRow(S_STATUS,$cmbStatus);	
+			$frmHost->AddRow(S_STATUS,$cmbStatus);
 		}
 
 		$template_table = new CTable();
@@ -4939,7 +4942,7 @@
 				$frmHost->AddRow(S_IPMI_IP_ADDRESS,new CTextBox('ipmi_ip',$ipmi_ip,'39'));
 			else
 				$frmHost->AddRow(S_IPMI_IP_ADDRESS,new CTextBox('ipmi_ip',$ipmi_ip,'15'));
-			$frmHost->AddRow(S_IPMI_PORT, new CNumericBox('ipmi_port', $ipmi_port, 5));	
+			$frmHost->AddRow(S_IPMI_PORT, new CNumericBox('ipmi_port', $ipmi_port, 5));
 
 			$cmbIPMIAuthtype = new CComboBox('ipmi_authtype', $ipmi_authtype);
 			$cmbIPMIAuthtype->AddItem(IPMI_AUTHTYPE_DEFAULT,	S_AUTHTYPE_DEFAULT);
@@ -4949,7 +4952,7 @@
 			$cmbIPMIAuthtype->AddItem(IPMI_AUTHTYPE_STRAIGHT,	S_AUTHTYPE_STRAIGHT);
 			$cmbIPMIAuthtype->AddItem(IPMI_AUTHTYPE_OEM,		S_AUTHTYPE_OEM);
 			$cmbIPMIAuthtype->AddItem(IPMI_AUTHTYPE_RMCP_PLUS,	S_AUTHTYPE_RMCP_PLUS);
-			$frmHost->AddRow(S_IPMI_AUTHTYPE, $cmbIPMIAuthtype);	
+			$frmHost->AddRow(S_IPMI_AUTHTYPE, $cmbIPMIAuthtype);
 
 			$cmbIPMIPrivilege = new CComboBox('ipmi_privilege', $ipmi_privilege);
 			$cmbIPMIPrivilege->AddItem(IPMI_PRIVILEGE_CALLBACK,	S_PRIVILEGE_CALLBACK);
@@ -4957,20 +4960,20 @@
 			$cmbIPMIPrivilege->AddItem(IPMI_PRIVILEGE_OPERATOR,	S_PRIVILEGE_OPERATOR);
 			$cmbIPMIPrivilege->AddItem(IPMI_PRIVILEGE_ADMIN,	S_PRIVILEGE_ADMIN);
 			$cmbIPMIPrivilege->AddItem(IPMI_PRIVILEGE_OEM,		S_PRIVILEGE_OEM);
-			$frmHost->AddRow(S_IPMI_PRIVILEGE, $cmbIPMIPrivilege);	
+			$frmHost->AddRow(S_IPMI_PRIVILEGE, $cmbIPMIPrivilege);
 
 			$frmHost->AddRow(S_IPMI_USERNAME, new CTextBox('ipmi_username', $ipmi_username, 16));
 			$frmHost->AddRow(S_IPMI_PASSWORD, new CTextBox('ipmi_password', $ipmi_password, 20));
 		}
 		else{
-			$frmHost->AddVar('ipmi_ip', $ipmi_ip);	
-			$frmHost->AddVar('ipmi_port', $ipmi_port);	
+			$frmHost->AddVar('ipmi_ip', $ipmi_ip);
+			$frmHost->AddVar('ipmi_port', $ipmi_port);
 			$frmHost->AddVar('ipmi_authtype', $ipmi_authtype);
 			$frmHost->AddVar('ipmi_privilege', $ipmi_privilege);
 			$frmHost->AddVar('ipmi_username', $ipmi_username);
 			$frmHost->AddVar('ipmi_password', $ipmi_password);
 		}
-	
+
 		if($show_only_tmp){
 			$useprofile = 'no';
 			$frmHost->AddVar('useprofile',$useprofile);
@@ -4981,7 +4984,7 @@
 			$frmHost->AddRow(S_USE_PROFILE,new CCheckBox('useprofile',$useprofile,'submit()'));
 			$frmHost->AddRow(S_USE_EXTENDED_PROFILE,new CCheckBox('useprofile_ext',$useprofile_ext,'submit()','yes'));
 		}
-		
+
 		if($useprofile=='yes'){
 			$frmHost->AddRow(S_DEVICE_TYPE,new CTextBox("devicetype",$devicetype,61));
 			$frmHost->AddRow(S_NAME,new CTextBox("name",$name,61));
@@ -5032,24 +5035,24 @@
 			$frmHost->AddRow(S_DEVICE_URL_1,new CTextBox('ext_host_profiles[device_url_1]',$ext_host_profiles['device_url_1'],61));
 			$frmHost->AddRow(S_DEVICE_URL_2,new CTextBox('ext_host_profiles[device_url_2]',$ext_host_profiles['device_url_2'],61));
 			$frmHost->AddRow(S_DEVICE_URL_3,new CTextBox('ext_host_profiles[device_url_3]',$ext_host_profiles['device_url_3'],61));
-			
+
 			$frmHost->AddRow(S_DEVICE_NETWORKS,new CTextArea('ext_host_profiles[device_networks]',$ext_host_profiles['device_networks'],50,5));
 			$frmHost->AddRow(S_DEVICE_NOTES,new CTextArea('ext_host_profiles[device_notes]',$ext_host_profiles['device_notes'],50,5));
 			$frmHost->AddRow(S_DEVICE_HARDWARE,new CTextArea('ext_host_profiles[device_hardware]',$ext_host_profiles['device_hardware'],50,5));
 			$frmHost->AddRow(S_DEVICE_SOFTWARE,new CTextArea('ext_host_profiles[device_software]',$ext_host_profiles['device_software'],50,5));
-			
+
 			$frmHost->AddRow(S_IP_SUBNET_MASK,new CTextBox('ext_host_profiles[ip_subnet_mask]',$ext_host_profiles['ip_subnet_mask'],61));
 			$frmHost->AddRow(S_IP_ROUTER,new CTextBox('ext_host_profiles[ip_router]',$ext_host_profiles['ip_router'],61));
 			$frmHost->AddRow(S_IP_MACADDRESS,new CTextBox('ext_host_profiles[ip_macaddress]',$ext_host_profiles['ip_macaddress'],61));
 			$frmHost->AddRow(S_OOB_IP,new CTextBox('ext_host_profiles[oob_ip]',$ext_host_profiles['oob_ip'],61));
 			$frmHost->AddRow(S_OOB_SUBNET_MASK,new CTextBox('ext_host_profiles[oob_subnet_mask]',$ext_host_profiles['oob_subnet_mask'],61));
 			$frmHost->AddRow(S_OOB_ROUTER,new CTextBox('ext_host_profiles[oob_router]',$ext_host_profiles['oob_router'],61));
-			
+
 			$frmHost->AddRow(S_DATE_HW_BUY,new CTextBox('ext_host_profiles[date_hw_buy]',$ext_host_profiles['date_hw_buy'],15));
 			$frmHost->AddRow(S_DATE_HW_INSTALL,new CTextBox('ext_host_profiles[date_hw_install]',$ext_host_profiles['date_hw_install'],15));
 			$frmHost->AddRow(S_DATE_HW_EXPIRY,new CTextBox('ext_host_profiles[date_hw_expiry]',$ext_host_profiles['date_hw_expiry'],15));
 			$frmHost->AddRow(S_DATE_HW_DECOMM,new CTextBox('ext_host_profiles[date_hw_decomm]',$ext_host_profiles['date_hw_decomm'],15));
-			
+
 			$frmHost->AddRow(S_SITE_STREET_1,new CTextBox('ext_host_profiles[site_street_1]',$ext_host_profiles['site_street_1'],61));
 			$frmHost->AddRow(S_SITE_STREET_2,new CTextBox('ext_host_profiles[site_street_2]',$ext_host_profiles['site_street_2'],61));
 			$frmHost->AddRow(S_SITE_STREET_3,new CTextBox('ext_host_profiles[site_street_3]',$ext_host_profiles['site_street_3'],61));
@@ -5059,7 +5062,7 @@
 			$frmHost->AddRow(S_SITE_ZIP,new CTextBox('ext_host_profiles[site_zip]',$ext_host_profiles['site_zip'],61));
 			$frmHost->AddRow(S_SITE_RACK,new CTextBox('ext_host_profiles[site_rack]',$ext_host_profiles['site_rack'],61));
 			$frmHost->AddRow(S_SITE_NOTES,new CTextArea('ext_host_profiles[site_notes]',$ext_host_profiles['site_notes'],50,5));
-			
+
 			$frmHost->AddRow(S_POC_1_NAME,new CTextBox('ext_host_profiles[poc_1_name]',$ext_host_profiles['poc_1_name'],61));
 			$frmHost->AddRow(S_POC_1_EMAIL,new CTextBox('ext_host_profiles[poc_1_email]',$ext_host_profiles['poc_1_email'],61));
 			$frmHost->AddRow(S_POC_1_PHONE_1,new CTextBox('ext_host_profiles[poc_1_phone_1]',$ext_host_profiles['poc_1_phone_1'],61));
@@ -5067,7 +5070,7 @@
 			$frmHost->AddRow(S_POC_1_CELL,new CTextBox('ext_host_profiles[poc_1_cell]',$ext_host_profiles['poc_1_cell'],61));
 			$frmHost->AddRow(S_POC_1_SCREEN,new CTextBox('ext_host_profiles[poc_1_screen]',$ext_host_profiles['poc_1_screen'],61));
 			$frmHost->AddRow(S_POC_1_NOTES,new CTextArea('ext_host_profiles[poc_1_notes]',$ext_host_profiles['poc_1_notes'],50,5));
-			
+
 			$frmHost->AddRow(S_POC_2_NAME,new CTextBox('ext_host_profiles[poc_2_name]',$ext_host_profiles['poc_2_name'],61));
 			$frmHost->AddRow(S_POC_2_EMAIL,new CTextBox('ext_host_profiles[poc_2_email]',$ext_host_profiles['poc_2_email'],61));
 			$frmHost->AddRow(S_POC_2_PHONE_1,new CTextBox('ext_host_profiles[poc_2_phone_1]',$ext_host_profiles['poc_2_phone_1'],61));
@@ -5143,7 +5146,7 @@
 // Host items
 			$items_lbx = new CListBox('items',null,8);
 			$items_lbx->AddOption('disabled','disabled');
-			
+
 			$sql = 'SELECT * '.
 					' FROM items '.
 					' WHERE hostid='.$_REQUEST['hostid'].
@@ -5154,13 +5157,13 @@
 				$item_description = item_description($host_item);
 				$items_lbx->AddItem($host_item['itemid'],$item_description);
 			}
-			
+
 			if($items_lbx->ItemsCount() < 1) $items_lbx->AddOption('style','width: 200px;');
 			$frmHost->AddRow(S_ITEMS, $items_lbx);
-			
+
 // Host triggers
-			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
-			
+			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array($_REQUEST['hostid']), PERM_RES_IDS_ARRAY);
+
 			$trig_lbx = new CListBox('triggers',null,8);
 			$trig_lbx->AddOption('disabled','disabled');
 
@@ -5172,19 +5175,19 @@
 						' AND '.DBcondition('t.triggerid', $available_triggers).
 						' AND t.templateid=0 '.
 					' ORDER BY t.description';
-					
+
 			$host_trig_res = DBselect($sql);
 			while($host_trig = DBfetch($host_trig_res)){
 				$trig_description = expand_trigger_description($host_trig["triggerid"]);
 				$trig_lbx->AddItem($host_trig['triggerid'],$trig_description);
 			}
-			
+
 			if($trig_lbx->ItemsCount() < 1) $trig_lbx->AddOption('style','width: 200px;');
 			$frmHost->AddRow(S_TRIGGERS, $trig_lbx);
-		
+
 // Host graphs
-			$available_graphs = get_accessible_graphs(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
-			
+			$available_graphs = get_accessible_graphs(PERM_READ_ONLY, array($_REQUEST['hostid']), PERM_RES_IDS_ARRAY);
+
 			$graphs_lbx = new CListBox('graphs',null,8);
 			$graphs_lbx->AddOption('disabled','disabled');
 
@@ -5197,29 +5200,29 @@
 							' AND i.itemid=gi.itemid '.
 							' AND i.hostid='.$_REQUEST['hostid'].
 						' ORDER BY g.name';
-											
+
 			$host_graph_res = DBselect($sql);
 			while($host_graph = DBfetch($host_graph_res)){
 				$graphs_lbx->AddItem($host_graph['graphid'],$host_graph['name']);
 			}
-			
+
 			if($graphs_lbx->ItemsCount() < 1) $graphs_lbx->AddOption('style','width: 200px;');
-			
+
 			$frmHost->AddRow(S_GRAPHS, $graphs_lbx);
 		}
-		
+
 		$frmHost->AddItemToBottomRow(new CButton("save",S_SAVE));
-		if(isset($_REQUEST["hostid"]) && ($_REQUEST['form'] != 'full_clone')){
+		if(($_REQUEST['hostid']>0) && ($_REQUEST['form'] != 'full_clone')){
 			$frmHost->AddItemToBottomRow(SPACE);
 			$frmHost->AddItemToBottomRow(new CButton("clone",S_CLONE));
 			$frmHost->AddItemToBottomRow(SPACE);
 			$frmHost->AddItemToBottomRow(new CButton("full_clone",S_FULL_CLONE));
-			
+
 			$frmHost->AddItemToBottomRow(SPACE);
 			$frmHost->AddItemToBottomRow(
 				new CButtonDelete(S_DELETE_SELECTED_HOST_Q,
 					url_param("form").url_param("config").url_param("hostid").
-					url_param("groupid")
+					url_param('groupid')
 				));
 
 			if($show_only_tmp){
@@ -5229,29 +5232,29 @@
 						'Delete AND clear',
 						S_DELETE_SELECTED_HOSTS_Q,
 						url_param("form").url_param("config").url_param("hostid").
-						url_param("groupid")
+						url_param('groupid')
 					)
 				);
 			}
 		}
 		$frmHost->AddItemToBottomRow(SPACE);
-		$frmHost->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param("groupid")));
+		$frmHost->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param('groupid')));
 		$frmHost->Show();
 	}
 
-	# Insert form for Host Groups
+// Insert form for Host Groups
 	function insert_hostgroups_form(){
 		global	$USER_DETAILS;
 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
 
-		$hosts = get_request("hosts",array());
+		$hosts = get_request('hosts',array());
 		$frm_title = S_HOST_GROUP;
-		if(isset($_REQUEST["groupid"])){
-			$group = get_hostgroup_by_groupid($_REQUEST["groupid"]);
+		if($_REQUEST['groupid']>0){
+			$group = get_hostgroup_by_groupid($_REQUEST['groupid']);
 			$frm_title = S_HOST_GROUP.' ['.$group["name"].']';
 		}
-		
-		if(isset($_REQUEST["groupid"]) && !isset($_REQUEST["form_refresh"])){
+
+		if(($_REQUEST['groupid']>0) && !isset($_REQUEST["form_refresh"])){
 			$name=$group["name"];
 			$db_hosts=DBselect('SELECT DISTINCT h.hostid,host '.
 					' FROM hosts h, hosts_groups hg '.
@@ -5260,20 +5263,20 @@
 						' AND hg.groupid='.$_REQUEST['groupid'].
 					' ORDER BY host');
 			while($db_host=DBfetch($db_hosts)){
-				if(uint_in_array($db_host["hostid"],$hosts)) continue;
-				array_push($hosts, $db_host["hostid"]);
+				if(uint_in_array($db_host['hostid'],$hosts)) continue;
+				array_push($hosts, $db_host['hostid']);
 			}
 		}
 		else{
 			$name=get_request("gname","");
 		}
-		
+
 		$frmHostG = new CFormTable($frm_title,"hosts.php");
 		$frmHostG->SetHelp("web.hosts.group.php");
 		$frmHostG->AddVar("config",get_request("config",1));
-		
-		if(isset($_REQUEST["groupid"])){
-			$frmHostG->AddVar("groupid",$_REQUEST["groupid"]);
+
+		if($_REQUEST['groupid']>0){
+			$frmHostG->AddVar('groupid',$_REQUEST['groupid']);
 		}
 
 		$frmHostG->AddRow(S_GROUP_NAME,new CTextBox("gname",$name,48));
@@ -5284,23 +5287,23 @@
 				' WHERE status in ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.')'.
 					' AND '.DBcondition('hostid',$available_hosts).
 				' ORDER BY host');
-				
+
 		while($db_host=DBfetch($db_hosts)){
 			$cmbHosts->AddItem(
-					$db_host["hostid"],
+					$db_host['hostid'],
 					get_node_name_by_elid($db_host['hostid']).$db_host["host"]
 					);
 		}
 		$frmHostG->AddRow(S_HOSTS,$cmbHosts->Get(S_HOSTS.SPACE.S_IN,S_OTHER.SPACE.S_HOSTS));
 
 		$frmHostG->AddItemToBottomRow(new CButton("save",S_SAVE));
-		if(isset($_REQUEST["groupid"])){
+		if($_REQUEST['groupid']>0){
 			$frmHostG->AddItemToBottomRow(SPACE);
 			$frmHostG->AddItemToBottomRow(new CButton("clone",S_CLONE));
 			$frmHostG->AddItemToBottomRow(SPACE);
 			$frmHostG->AddItemToBottomRow(
 				new CButtonDelete("Delete selected group?",
-					url_param("form").url_param("config").url_param("groupid")
+					url_param("form").url_param("config").url_param('groupid')
 				)
 			);
 		}
@@ -5313,35 +5316,35 @@
 	function	insert_proxies_form(){
 		global	$USER_DETAILS;
 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-		
+
 		$hosts = array();
 		$frm_title = S_PROXY;
-		
-		if(isset($_REQUEST["hostid"])){
-			$proxy = get_host_by_hostid($_REQUEST["hostid"]);
+
+		if($_REQUEST['hostid']>0){
+			$proxy = get_host_by_hostid($_REQUEST['hostid']);
 			$frm_title = S_PROXY.' ['.$proxy["host"].']';
 		}
-		
-		if(isset($_REQUEST["hostid"]) && !isset($_REQUEST["form_refresh"])){
+
+		if(($_REQUEST['hostid']>0) && !isset($_REQUEST["form_refresh"])){
 			$name=$proxy["host"];
 			$db_hosts=DBselect('SELECT hostid '.
 				' FROM hosts '.
 				' WHERE status NOT IN ('.HOST_STATUS_DELETED.') '.
 					' AND proxy_hostid='.$_REQUEST['hostid']);
-					
+
 			while($db_host=DBfetch($db_hosts))
-				array_push($hosts, $db_host["hostid"]);
+				array_push($hosts, $db_host['hostid']);
 		}
 		else{
 			$name=get_request("host","");
 		}
-		
+
 		$frmHostG = new CFormTable($frm_title,"hosts.php");
 		$frmHostG->SetHelp("web.proxy.php");
 		$frmHostG->AddVar("config",get_request("config",5));
-		
-		if(isset($_REQUEST["hostid"])){
-			$frmHostG->AddVar("hostid",$_REQUEST["hostid"]);
+
+		if($_REQUEST['hostid']>0){
+			$frmHostG->AddVar("hostid",$_REQUEST['hostid']);
 		}
 
 		$frmHostG->AddRow(S_PROXY_NAME,new CTextBox("host",$name,30));
@@ -5353,15 +5356,15 @@
 								' AND '.DBcondition('hostid',$available_hosts).
 							' ORDER BY host');
 		while($db_host=DBfetch($db_hosts)){
-			$cmbHosts->AddItem($db_host["hostid"],
-					get_node_name_by_elid($db_host["hostid"]).$db_host["host"],
+			$cmbHosts->AddItem($db_host['hostid'],
+					get_node_name_by_elid($db_host['hostid']).$db_host["host"],
 					NULL,
-					($db_host["proxy_hostid"] == 0 || isset($_REQUEST["hostid"]) && ($db_host["proxy_hostid"] == $_REQUEST["hostid"])));
+					($db_host["proxy_hostid"] == 0 || ($_REQUEST['hostid']>0) && ($db_host["proxy_hostid"] == $_REQUEST['hostid'])));
 		}
 		$frmHostG->AddRow(S_HOSTS,$cmbHosts->Get(S_PROXY.SPACE.S_HOSTS,S_OTHER.SPACE.S_HOSTS));
 
 		$frmHostG->AddItemToBottomRow(new CButton("save",S_SAVE));
-		if(isset($_REQUEST["hostid"])){
+		if($_REQUEST['hostid']>0){
 			$frmHostG->AddItemToBottomRow(SPACE);
 			$frmHostG->AddItemToBottomRow(new CButton("clone",S_CLONE));
 			$frmHostG->AddItemToBottomRow(SPACE);
@@ -5382,7 +5385,7 @@
 		$frmHostP = new CFormTable(S_HOST_PROFILE);
 		$frmHostP->SetHelp("web.host_profile.php");
 
-		$result=DBselect('SELECT * FROM hosts_profiles WHERE hostid='.$_REQUEST["hostid"]);
+		$result=DBselect('SELECT * FROM hosts_profiles WHERE hostid='.$_REQUEST['hostid']);
 
 		$row=DBfetch($result);
 		if($row){
@@ -5413,10 +5416,10 @@
 		else{
 			$frmHostP->AddSpanRow("Profile for this host is missing","form_row_c");
 		}
-		$frmHostP->AddItemToBottomRow(new CButtonCancel(url_param("groupid")));
+		$frmHostP->AddItemToBottomRow(new CButtonCancel(url_param('groupid')));
 		$frmHostP->Show();
 	}
-	
+
 // BEGIN: HOSTS PROFILE EXTENDED Section
 	function insert_host_profile_ext_form(){
 
@@ -5446,24 +5449,24 @@
 			$frmHostPA->AddRow(S_DEVICE_URL_1,new CTextBox('ext_host_profiles[device_url_1]',$row['device_url_1'],61,'yes'));
 			$frmHostPA->AddRow(S_DEVICE_URL_2,new CTextBox('ext_host_profiles[device_url_2]',$row['device_url_2'],61,'yes'));
 			$frmHostPA->AddRow(S_DEVICE_URL_3,new CTextBox('ext_host_profiles[device_url_3]',$row['device_url_3'],61,'yes'));
-			
+
 			$frmHostPA->AddRow(S_DEVICE_NETWORKS,new CTextArea('ext_host_profiles[device_networks]',$row['device_networks'],50,5,'yes'));
 			$frmHostPA->AddRow(S_DEVICE_NOTES,new CTextArea('ext_host_profiles[device_notes]',$row['device_notes'],50,5,'yes'));
 			$frmHostPA->AddRow(S_DEVICE_HARDWARE,new CTextArea('ext_host_profiles[device_hardware]',$row['device_hardware'],50,5,'yes'));
 			$frmHostPA->AddRow(S_DEVICE_SOFTWARE,new CTextArea('ext_host_profiles[device_software]',$row['device_software'],50,5,'yes'));
-			
+
 			$frmHostPA->AddRow(S_IP_SUBNET_MASK,new CTextBox('ext_host_profiles[ip_subnet_mask]',$row['ip_subnet_mask'],61,'yes'));
 			$frmHostPA->AddRow(S_IP_ROUTER,new CTextBox('ext_host_profiles[ip_router]',$row['ip_router'],61,'yes'));
 			$frmHostPA->AddRow(S_IP_MACADDRESS,new CTextBox('ext_host_profiles[ip_macaddress]',$row['ip_macaddress'],61,'yes'));
 			$frmHostPA->AddRow(S_OOB_IP,new CTextBox('ext_host_profiles[oob_ip]',$row['oob_ip'],61,'yes'));
 			$frmHostPA->AddRow(S_OOB_SUBNET_MASK,new CTextBox('ext_host_profiles[oob_subnet_mask]',$row['oob_subnet_mask'],61,'yes'));
 			$frmHostPA->AddRow(S_OOB_ROUTER,new CTextBox('ext_host_profiles[oob_router]',$row['oob_router'],61,'yes'));
-			
+
 			$frmHostPA->AddRow(S_DATE_HW_BUY,new CTextBox('ext_host_profiles[date_hw_buy]',$row['date_hw_buy'],15,'yes'));
 			$frmHostPA->AddRow(S_DATE_HW_INSTALL,new CTextBox('ext_host_profiles[date_hw_install]',$row['date_hw_install'],15,'yes'));
 			$frmHostPA->AddRow(S_DATE_HW_EXPIRY,new CTextBox('ext_host_profiles[date_hw_expiry]',$row['date_hw_expiry'],15,'yes'));
 			$frmHostPA->AddRow(S_DATE_HW_DECOMM,new CTextBox('ext_host_profiles[date_hw_decomm]',$row['date_hw_decomm'],15,'yes'));
-			
+
 			$frmHostPA->AddRow(S_SITE_STREET_1,new CTextBox('ext_host_profiles[site_street_1]',$row['site_street_1'],61,'yes'));
 			$frmHostPA->AddRow(S_SITE_STREET_2,new CTextBox('ext_host_profiles[site_street_2]',$row['site_street_2'],61,'yes'));
 			$frmHostPA->AddRow(S_SITE_STREET_3,new CTextBox('ext_host_profiles[site_street_3]',$row['site_street_3'],61,'yes'));
@@ -5473,7 +5476,7 @@
 			$frmHostPA->AddRow(S_SITE_ZIP,new CTextBox('ext_host_profiles[site_zip]',$row['site_zip'],61,'yes'));
 			$frmHostPA->AddRow(S_SITE_RACK,new CTextBox('ext_host_profiles[site_rack]',$row['site_rack'],61,'yes'));
 			$frmHostPA->AddRow(S_SITE_NOTES,new CTextArea('ext_host_profiles[site_notes]',$row['site_notes'],50,5,'yes'));
-			
+
 			$frmHostPA->AddRow(S_POC_1_NAME,new CTextBox('ext_host_profiles[poc_1_name]',$row['poc_1_name'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_1_EMAIL,new CTextBox('ext_host_profiles[poc_1_email]',$row['poc_1_email'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_1_PHONE_1,new CTextBox('ext_host_profiles[poc_1_phone_1]',$row['poc_1_phone_1'],61,'yes'));
@@ -5481,7 +5484,7 @@
 			$frmHostPA->AddRow(S_POC_1_CELL,new CTextBox('ext_host_profiles[poc_1_cell]',$row['poc_1_cell'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_1_SCREEN,new CTextBox('ext_host_profiles[poc_1_screen]',$row['poc_1_screen'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_1_NOTES,new CTextArea('ext_host_profiles[poc_1_notes]',$row['poc_1_notes'],50,5,'yes'));
-			
+
 			$frmHostPA->AddRow(S_POC_2_NAME,new CTextBox('ext_host_profiles[poc_2_name]',$row['poc_2_name'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_2_EMAIL,new CTextBox('ext_host_profiles[poc_2_email]',$row['poc_2_email'],61,'yes'));
 			$frmHostPA->AddRow(S_POC_2_PHONE_1,new CTextBox('ext_host_profiles[poc_2_phone_1]',$row['poc_2_phone_1'],61,'yes'));
@@ -5498,81 +5501,76 @@
 	}
 // END:   HOSTS PROFILE EXTENDED Section
 
- 	function insert_template_form(){
- 		global	$USER_DETAILS;
- 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE, PERM_RES_IDS_ARRAY);
-		
+ 	function insert_template_form($available_hosts){
  		$frm_title = S_TEMPLATE_LINKAGE;
 
- 		if(isset($_REQUEST["hostid"])){
- 			$template = get_host_by_hostid($_REQUEST["hostid"]);
+ 		if($_REQUEST['hostid']>0){
+ 			$template = get_host_by_hostid($_REQUEST['hostid']);
  			$frm_title.= ' ['.$template['host'].']';
  		}
-		
- 		if(isset($_REQUEST['hostid']) && !isset($_REQUEST["form_refresh"])){
+
+ 		if(($_REQUEST['hostid']>0) && !isset($_REQUEST['form_refresh'])){
  			$name=$template['host'];
  		}
  		else{
  			$name=get_request("tname",'');
  		}
-		
- 		$frmHostT = new CFormTable($frm_title,"hosts.php");
- 		$frmHostT->SetHelp("web.hosts.group.php");
- 		$frmHostT->AddVar("config",get_request("config",2));
- 		if(isset($_REQUEST["hostid"])){
- 			$frmHostT->AddVar("hostid",$_REQUEST["hostid"]);
+
+ 		$frmHostT = new CFormTable($frm_title,'hosts.php');
+ 		$frmHostT->setHelp('web.hosts.group.php');
+ 		$frmHostT->addVar('config',get_request('config',2));
+ 		if($_REQUEST['hostid']>0){
+ 			$frmHostT->addVar('hostid',$_REQUEST['hostid']);
  		}
- 
- 		$frmHostT->AddRow(S_TEMPLATE,new CTextBox("tname",$name,60,'yes'));
- 
+
+ 		$frmHostT->addRow(S_TEMPLATE,new CTextBox('tname',$name,60,'yes'));
+
 		$hosts_in_tpl = array();
 		$sql = 'SELECT DISTINCT h.hostid,h.host '.
 			' FROM hosts h,hosts_templates ht'.
  			' WHERE ht.templateid='.$_REQUEST['hostid'].
 				' AND h.hostid=ht.hostid'.
-				' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.') '.
+				' AND h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
  				' AND '.DBcondition('h.hostid',$available_hosts).
  			' ORDER BY h.host';
-
  		$db_hosts=DBselect($sql);
  		while($db_host=DBfetch($db_hosts)){
 			$hosts_in_tpl[$db_host['hostid']] = $db_host['hostid'];
- 		}		
+ 		}
 
  		$cmbHosts = new CTweenBox($frmHostT,'hosts',$hosts_in_tpl,6);
 		$sql = 'SELECT DISTINCT h.hostid,h.host '.
 			' FROM hosts h'.
- 			' WHERE ( h.status='.HOST_STATUS_MONITORED.' OR h.status='.HOST_STATUS_NOT_MONITORED.' ) '.
+ 			' WHERE h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.') '.
  				' AND '.DBcondition('h.hostid',$available_hosts).
  			' ORDER BY h.host';
-			
  		$db_hosts=DBselect($sql);
-			
+
  		while($db_host=DBfetch($db_hosts)){
  			$cmbHosts->AddItem($db_host['hostid'],get_node_name_by_elid($db_host['hostid']).$db_host['host']);
  		}
-		
+
  		$frmHostT->AddRow(S_HOSTS,$cmbHosts->Get(S_HOSTS.SPACE.S_IN,S_OTHER.SPACE.S_HOSTS));
-		
+
  		$frmHostT->AddItemToBottomRow(new CButton('save',S_SAVE));
  		$frmHostT->AddItemToBottomRow(SPACE);
- 		$frmHostT->AddItemToBottomRow(new CButtonCancel(url_param("config")));
+ 		$frmHostT->AddItemToBottomRow(new CButtonCancel(url_param('config')));
  		$frmHostT->Show();
 	}
 
 
 	function insert_application_form(){
-		$frm_title = "New Application";
+		$frm_title = 'New Application';
 
-		if(isset($_REQUEST["applicationid"])){
-			$result=DBselect("SELECT * FROM applications WHERE applicationid=".$_REQUEST["applicationid"]);
+		if(isset($_REQUEST['applicationid'])){
+			$result=DBselect('SELECT * FROM applications WHERE applicationid='.$_REQUEST['applicationid']);
 			$row=DBfetch($result);
 			$frm_title = 'Application: "'.$row['name'].'"';
 		}
-		
+
 		if(isset($_REQUEST["applicationid"]) && !isset($_REQUEST["form_refresh"])){
 			$appname = $row["name"];
-			$apphostid = $row["hostid"];
+			$apphostid = $row['hostid'];
 		}
 		else{
 			$appname = get_request("appname","");
@@ -5598,7 +5596,7 @@
 
 		$frmApp->AddVar("apphostid",$apphostid);
 
-		if(!isset($_REQUEST["applicationid"])){ 
+		if(!isset($_REQUEST["applicationid"])){
 // anly new application can SELECT host
 			$frmApp->AddRow(S_HOST,array(
 				new CTextBox("apphost",$apphost,32,'yes'),
@@ -5613,12 +5611,12 @@
 		if(isset($_REQUEST["applicationid"])){
 			$frmApp->AddItemToBottomRow(SPACE);
 			$frmApp->AddItemToBottomRow(new CButtonDelete("Delete this application?",
-					url_param("config").url_param("hostid").url_param("groupid").
+					url_param("config").url_param("hostid").url_param('groupid').
 					url_param("form").url_param("applicationid")));
 		}
-		
+
 		$frmApp->AddItemToBottomRow(SPACE);
-		$frmApp->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param("hostid").url_param("groupid")));
+		$frmApp->AddItemToBottomRow(new CButtonCancel(url_param("config").url_param("hostid").url_param('groupid')));
 
 		$frmApp->Show();
 
@@ -5630,9 +5628,9 @@
 		if(isset($_REQUEST["sysmapid"])){
 			$result=DBselect("SELECT * FROM sysmaps WHERE sysmapid=".$_REQUEST["sysmapid"]);
 			$row=DBfetch($result);
-			$frm_title = "System map: \"".$row["name"]."\"";
+			$frm_title = "System map: \"".$row["name"].'"';
 		}
-		
+
 		if(isset($_REQUEST["sysmapid"]) && !isset($_REQUEST["form_refresh"])){
 			$name		= $row["name"];
 			$width		= $row["width"];
@@ -5663,7 +5661,7 @@
 
 		$cmbImg = new CComboBox("backgroundid",$backgroundid);
 		$cmbImg->AddItem(0,"No image...");
-		
+
 		$result=DBselect('SELECT * FROM images WHERE imagetype=2 AND '.DBin_node('imageid').' order by name');
 		while($row=DBfetch($result)){
 			$cmbImg->AddItem(
@@ -5671,7 +5669,7 @@
 					get_node_name_by_elid($row["imageid"]).$row["name"]
 					);
 		}
-		
+
 		$frmMap->AddRow(S_BACKGROUND_IMAGE,$cmbImg);
 
 		$cmbLabel = new CComboBox("label_type",$label_type);
@@ -5691,18 +5689,18 @@
 		$frmMap->AddRow(S_ICON_LABEL_LOCATION,$cmbLocation);
 
 		$frmMap->AddItemToBottomRow(new CButton("save",S_SAVE));
-		
+
 		if(isset($_REQUEST["sysmapid"])){
 			$frmMap->AddItemToBottomRow(SPACE);
 			$frmMap->AddItemToBottomRow(new CButtonDelete("Delete system map?",
 					url_param("form").url_param("sysmapid")));
 		}
-		
+
 		$frmMap->AddItemToBottomRow(SPACE);
 		$frmMap->AddItemToBottomRow(new CButtonCancel());
 
 		$frmMap->Show();
-		
+
 	}
 
 	function insert_map_element_form(){
@@ -5720,7 +5718,7 @@
 		}
 
 		if(isset($_REQUEST['selementid']) && !isset($_REQUEST['form_refresh'])){
-		
+
 			$elementid	= $element['elementid'];
 			$elementtype	= $element['elementtype'];
 			$label		= $element['label'];
@@ -5735,7 +5733,7 @@
 			if(is_null($label_location)) $label_location = -1;
 		}
 		else{
-		
+
 			$elementid 	= get_request('elementid', 	0);
 			$elementtype	= get_request('elementtype', 	SYSMAP_ELEMENT_TYPE_HOST);
 			$label		= get_request('label',		'');
@@ -5751,7 +5749,7 @@
 
 		$cmbType = new CComboBox('elementtype',$elementtype,'submit()');
 		$available_hosts = 		get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-		
+
 		$sql = 'SELECT DISTINCT n.name as node_name,h.hostid,h.host '.
 				' FROM hosts h'.
 					' LEFT JOIN nodes n on n.nodeid='.DBid2nodeid('h.hostid').
@@ -5822,7 +5820,7 @@
 			$frmEl->AddRow(S_MAP, $cmbMaps);
 		}
 		else if($elementtype==SYSMAP_ELEMENT_TYPE_TRIGGER){
-			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
+			$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY, get_current_nodeid(true));
 
 			$trigger = '';
 			$trigger_info = DBfetch(DBselect('SELECT DISTINCT n.name as node_name,h.hostid,h.host,t.*'.
@@ -5834,7 +5832,7 @@
 				' WHERE t.triggerid='.$elementid.
 					' AND '.DBcondition('t.triggerid',$available_triggers).
 				' ORDER BY node_name,h.host,t.description'));
-			
+
 			if($trigger_info)
 				$trigger = expand_trigger_description_by_data($trigger_info);
 			else
@@ -5855,7 +5853,7 @@
 		}
 		else if($elementtype==SYSMAP_ELEMENT_TYPE_HOST_GROUP){
 			$available_groups = 	get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,null,get_current_nodeid(true));
-			
+
 			$group = '';
 			$group_info = DBfetch(DBselect('SELECT DISTINCT n.name as node_name,g.groupid,g.name '.
 								' FROM groups g '.
@@ -5892,7 +5890,7 @@
 			$cmbIconUnknown	= new CComboBox('iconid_unknown',$iconid_unknown);
 		if ($elementtype != SYSMAP_ELEMENT_TYPE_HOST_GROUP && $elementtype != SYSMAP_ELEMENT_TYPE_MAP)
 			$cmbIconDisabled= new CComboBox('iconid_disabled',$iconid_disabled);
-		
+
 		$result = DBselect('SELECT * FROM images WHERE imagetype=1 AND '.DBin_node('imageid').' order by name');
 		while($row=DBfetch($result)){
 			$row['name'] = get_node_name_by_elid($row['imageid']).$row['name'];
@@ -5904,7 +5902,7 @@
 			if ($elementtype != SYSMAP_ELEMENT_TYPE_HOST_GROUP && $elementtype != SYSMAP_ELEMENT_TYPE_MAP)
 				$cmbIconDisabled->AddItem($row['imageid'],$row['name']);
 		}
-		
+
 		$frmEl->AddRow(S_ICON_OK,$cmbIconOff);
 		if ($elementtype != SYSMAP_ELEMENT_TYPE_IMAGE)
 			$frmEl->AddRow(S_ICON_PROBLEM,$cmbIconOn);
@@ -5944,10 +5942,10 @@
 
 		if(isset($_REQUEST['linkid']) && !isset($_REQUEST['form_refresh'])){
 			$frmCnct->AddVar('linkid',$_REQUEST['linkid']);
-			
+
 			$db_links = DBselect('SELECT * FROM sysmaps_links WHERE linkid='.$_REQUEST['linkid']);
 			$db_link = DBfetch($db_links);
-			
+
 
 			$selementid1	= $db_link['selementid1'];
 			$selementid2	= $db_link['selementid2'];
@@ -5972,12 +5970,12 @@
 /* START comboboxes preparations */
 		$cmbElements1 = new CComboBox('selementid1',$selementid1);
 		$cmbElements2 = new CComboBox('selementid2',$selementid2);
-		
+
 		$db_selements = DBselect('SELECT selementid,label,elementid,elementtype '.
 							' FROM sysmaps_elements '.
 							' WHERE sysmapid='.$_REQUEST['sysmapid']);
 		while($db_selement = DBfetch($db_selements)){
-		
+
 			$label = $db_selement['label'];
 			if($db_selement['elementtype'] == SYSMAP_ELEMENT_TYPE_HOST){
 				$db_host = get_host_by_hostid($db_selement['elementid']);
@@ -5998,7 +5996,7 @@
 					$label .= ':'.$db_group['name'];
 				}
 			}
-			
+
 			$cmbElements1->AddItem($db_selement['selementid'],$label);
 			$cmbElements2->AddItem($db_selement['selementid'],$label);
 		}
@@ -6008,7 +6006,7 @@
 		foreach(map_link_drawtypes() as $i){
 			$value = map_link_drawtype2str($i);
 			$cmbType->AddItem($i, $value);
-		}		
+		}
 
 /* END preparation */
 
@@ -6020,9 +6018,9 @@
 			if(isset($trigger['triggerid']))
 				$triggers[$id]['description'] = expand_trigger_description($trigger['triggerid']);
 		}
-		
+
 		$table = new CTable();
-		
+
 		$table->SetClass('tableinfo');
 		$table->oddRowClass = 'even_row';
 		$table->evenRowClass = 'even_row';
@@ -6030,21 +6028,21 @@
 		$table->options['cellspacing'] = 1;
 		$table->headerClass = 'header';
 		$table->footerClass = 'footer';
-		
+
 		$table->SetHeader(array(
 			new CCheckBox('all_triggers',null,"CheckAll('".$frmCnct->GetName()."','all_triggers','triggers');"),
 			S_TRIGGERS,
 			S_TYPE,
 			S_COLOR));
-	
+
 		$table->AddOption('id','link_triggers');
-	
+
 		foreach($triggers as $id => $trigger){
 			if(!isset($trigger['triggerid'])) continue;
-			
+
 			$colorbox = new CSpan(SPACE.SPACE.SPACE);
 			$colorbox->AddOption('style','text-decoration: none; outline-color: black; outline-style: solid; outline-width: 1px; background-color: #'.$trigger['color'].';');
-		
+
 			$table->AddRow(array(
 					array(
 						new CCheckBox('triggers['.$trigger['triggerid'].'][triggerid]',null,null,$trigger['triggerid']),
@@ -6064,7 +6062,7 @@
 						)
 					));
 		}
-	
+
 		$btnAdd = new CButton('btn1',S_ADD,
 			"javascript: openWinCentered('popup_link_tr.php?form=1&dstfrm=".$frmCnct->GetName().url_param('linkid')."','ZBX_Link_Indicator',560,180,'scrollbars=1, toolbar=0, menubar=0, resizable=0');",
 			'T');
@@ -6074,7 +6072,7 @@
 			'T');
 
 		$btnAdd->SetType('button');
-		
+
 		$frmCnct->AddRow(S_LINK_STATUS_INDICATORS,array($table, BR(), $btnAdd, $btnRemove));
 
 //----------
@@ -6090,7 +6088,7 @@
 		}
 		$frmCnct->AddItemToBottomRow(SPACE);
 		$frmCnct->AddItemToBottomRow(new CButtonCancel(url_param("sysmapid")));
-		
+
 		$frmCnct->Show();
 	}
 
@@ -6105,7 +6103,7 @@
 			error($message);
 			$message = "";
 		}
-		
+
 		$frmResult->AddRow(S_RESULT,new CTextArea("message",$message,100,25,'yes'));
 		$frmResult->AddItemToBottomRow(new CButton('close',S_CLOSE,'window.close();'));
 
diff --git a/frontends/php/include/func.inc.php b/frontends/php/include/func.inc.php
index 4fa9129..6d1990e 100644
--- a/frontends/php/include/func.inc.php
+++ b/frontends/php/include/func.inc.php
@@ -161,7 +161,7 @@ function zbx_flush_post_cookies($unset=false){
 function zbx_set_post_cookie($name, $value, $time=null){
 	global $ZBX_PAGE_COOKIES;
 
-	$ZBX_PAGE_COOKIES[] = array($name, $value, isset($time) ? $time : (0));
+	$ZBX_PAGE_COOKIES[] = array($name, $value, isset($time)?$time:0);
 }
 
 /************ END COOKIES ************/
@@ -292,7 +292,7 @@ function zbx_rksort(&$array, $flags=NULL){
 /************* ZBX MISC *************/
 if(!function_exists('ctype_digit')){
 	function ctype_digit($x){ 
-		return preg_match('/^\\d+$/',$x); 
+		return preg_match('/^\\d+$/',$x);
 	}
 }
 
@@ -301,7 +301,8 @@ function zbx_numeric($value){
 	if(zbx_empty($value)) return false;
 	
 	$value = strval($value);
-return ctype_digit($value);
+
+return preg_match('/^[-|+]?\\d+$/',$value);
 }
 
 function zbx_empty($value){
@@ -344,6 +345,18 @@ function zbx_stristr($haystack,$needle){
 return $pos;
 }
 
+function zbx_substring($haystack, $start, $end=null){
+	if($end < $start) return '';
+	
+	$len = zbx_strlen($haystack);
+	if(is_null($end))
+		$result = substr($haystack, $start);
+	else
+		$result = substr($haystack, $start, ($end - $start));
+
+return $result;
+}
+
 function uint_in_array($needle,$haystack){
 	foreach($haystack as $id => $value)
 		if(bccomp($needle,$value) == 0) return true;
diff --git a/frontends/php/include/graphs.inc.php b/frontends/php/include/graphs.inc.php
index 72a59f8..564140c 100644
--- a/frontends/php/include/graphs.inc.php
+++ b/frontends/php/include/graphs.inc.php
@@ -191,16 +191,17 @@
  *     Aly
  *
  */		
-	function get_accessible_graphs($perm,$perm_res=null,$nodeid=null,$hostid=null,$cache=1){
+	function get_accessible_graphs($perm,$hostids,$perm_res=null,$nodeid=null,$cache=1){
 		global $USER_DETAILS;
 		static $available_graphs;
 		
 		if(is_null($perm_res)) $perm_res = PERM_RES_IDS_ARRAY;
 		$nodeid_str =(is_array($nodeid))?implode('',$nodeid):strval($nodeid);
-		$hostid_str =(is_array($hostid))?implode('',$hostid):strval($hostid);
+		$hostid_str = implode('',$hostids);
 		
-		if($cache && isset($available_graphs[$perm][$perm_res][$nodeid_str][$hostid_str])){
-			return $available_graphs[$perm][$perm_res][$nodeid_str][$hostid_str];
+		$cache_hash = md5($perm.$perm_res.$nodeid_str.$hostid_str);
+		if($cache && isset($available_graphs[$cache_hash])){
+			return $available_graphs[$cache_hash];
 		}
 		
 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, $perm, PERM_RES_IDS_ARRAY, $nodeid);
@@ -208,11 +209,15 @@
 		$denied_graphs = array();
 		$result = array();
 		
+		$sql_where = '';
+		if(!empty($hostids)){
+			$sql_where.= ' AND '.DBcondition('i.hostid',$hostids);
+		}		
 		$sql = 	'SELECT DISTINCT g.graphid '.
 				' FROM graphs g, graphs_items gi, items i '.
 				' WHERE g.graphid=gi.graphid '.
-					(!empty($hostid)?' AND i.hostid='.$hostid:'').
 					' AND i.itemid=gi.itemid '.
+					$sql_where.
 					' AND '.DBcondition('i.hostid',$available_hosts, true);
 
 		$db_graphs = DBselect($sql);
@@ -223,9 +228,9 @@
 		$sql = 	'SELECT DISTINCT g.graphid '.
 				' FROM graphs g, graphs_items gi, items i '.
 				' WHERE g.graphid=gi.graphid '.
-					(!empty($hostid)?' AND i.hostid='.$hostid:'').
 					' AND i.itemid=gi.itemid '.
 					' AND i.status='.ITEM_STATUS_ACTIVE.
+					$sql_where.
 					(!empty($denied_graphs)?' AND '.DBcondition('g.graphid',$denied_graphs,true):'');
 		$db_graphs = DBselect($sql);
 		while($graph = DBfetch($db_graphs)){
@@ -239,7 +244,7 @@
 				$result = implode(',',$result);
 		}
 
-		$available_graphs[$perm][$perm_res][$nodeid_str][$hostid_str] = $result;
+		$available_graphs[$cache_hash] = $result;
 
 	return $result;
 	}
@@ -253,24 +258,65 @@
  * Author:
  *     Aly
  *
+ * Comment:
+ *	   sql is splited to many sql's to optimize search on history tables
+ *
  */	
 	function get_min_itemclock_by_graphid($graphid){
-		$min = 0;
-		$row = DBfetch(DBselect('SELECT MIN(t.clock) as clock '.
-						' FROM graphs_items gi, trends t '.
-						' WHERE gi.graphid='.$graphid.
-						  ' AND t.itemid = gi.itemid')); 
-						  
-		if(!empty($row) && $row && $row['clock']) 
+		$itemids = array();
+		$sql = 'SELECT DISTINCT gi.itemid '.
+				' FROM graphs_items gi '.
+				' WHERE gi.graphid='.$graphid;
+		$res = DBselect($sql);
+		while($item = DBfetch($res)){
+			$itemids[$item['itemid']] = $item['itemid'];
+		}
+
+// OPTIMIZED SQL!!!
+// sql is splited to optimize search on history tables
+
+		$min = null;
+// TRENDS
+		$sql = 'SELECT t.itemid, t.clock FROM trends t WHERE '.DBcondition('t.itemid', $itemids).' ORDER BY t.itemid, t.clock';
+		$row = DBfetch(DBselect($sql,1)); 
+		if(!empty($row) && $row && $row['clock']){
 			$min = $row['clock'];
+		}
 
-		$row = DBfetch(DBselect('SELECT MIN(t.clock) as clock '.
-						' FROM graphs_items gi, trends_uint t '.
-						' WHERE gi.graphid='.$graphid.
-						  ' AND t.itemid = gi.itemid')); 
-						  
-		if(!empty($row) && $row && $row['clock']) 
-			$min = $min == 0 ? $row['clock'] : min($min, $row['clock']);
+		$sql = 'SELECT t.itemid, t.clock FROM trends_uint t WHERE '.DBcondition('t.itemid', $itemids).' ORDER BY t.itemid, t.clock';
+		$row = DBfetch(DBselect($sql,1)); 
+		if(!empty($row) && $row && $row['clock']){
+			$min = is_null($min)?$row['clock']:min($min, $row['clock']);
+		}
+
+		if(is_null($min)){
+// HISTORY
+			$sql = 'SELECT h.itemid, h.clock FROM history h WHERE '.DBcondition('h.itemid', $itemids).' ORDER BY h.itemid, h.clock';
+			$row = DBfetch(DBselect($sql,1)); 
+			if(!empty($row) && $row && $row['clock']){
+				$min = $row['clock'];
+			}
+	
+			$sql = 'SELECT h.itemid, h.clock FROM history_uint h WHERE '.DBcondition('h.itemid', $itemids).' ORDER BY h.itemid, h.clock';
+			$row = DBfetch(DBselect($sql,1)); 
+			if(!empty($row) && $row && $row['clock']){
+				$min = is_null($min)?$row['clock']:min($min, $row['clock']);
+			}
+		}
+
+///////
+// if no entry is found in history
+		if(is_null($min)){
+			$min = 0;
+			$sql = 'SELECT DISTINCT MAX(i.history) as history, MAX(i.trends) as trends '.
+					' FROM items i '.
+					' WHERE '.DBcondition('i.itemid', $itemids);
+			if($item = DBfetch(DBselect($sql))){
+				$time = max($item['trends'],$item['history']) * 86400;
+				$min = time() - $time;
+			}
+		}
+/////
 
 	return $min;
 	}
@@ -314,20 +360,20 @@
 				url_param($from,false,'from').
 				url_param($stime,false,'stime').
 				url_param($period,false,'period')));
-		$td->AddOption('align','center');
+		$td->addOption('align','center');
 		
 		$tr = new CRow($td);
-		$tr->AddOption('bgcolor','#dddddd');
+		$tr->addOption('bgcolor','#dddddd');
 		
 		$table = new CTable();
-		$table->AddOption('width','100%');
-		$table->AddOption('bgcolor','#cccccc');
-		$table->AddOption('cellspacing','1');
-		$table->AddOption('cellpadding','3');
+		$table->addOption('width','100%');
+		$table->addOption('bgcolor','#cccccc');
+		$table->addOption('cellspacing','1');
+		$table->addOption('cellpadding','3');
 		
-		$table->AddRow($tr);
+		$table->addRow($tr);
 		
-		$table->Show();
+		$table->show();
 		echo SBR;
 	}
 
@@ -919,9 +965,9 @@
 	}
 
 	function navigation_bar_calc(){
-		if(!isset($_REQUEST["period"]))	$_REQUEST["period"]=ZBX_PERIOD_DEFAULT;
-		if(!isset($_REQUEST["from"]))	$_REQUEST["from"]=0;
-		if(!isset($_REQUEST["stime"]))	$_REQUEST["stime"]=null;
+		if(!isset($_REQUEST['period']))	$_REQUEST['period']=ZBX_PERIOD_DEFAULT;
+		if(!isset($_REQUEST['from']))	$_REQUEST['from']=0;
+		if(!isset($_REQUEST['stime']))	$_REQUEST['stime']=null;
 
 		if($_REQUEST['period']<ZBX_MIN_PERIOD){
 			show_message(S_WARNING.'. '.S_TIME_PERIOD.SPACE.S_MIN_VALUE_SMALL.': '.ZBX_MIN_PERIOD.' ('.(int)(ZBX_MIN_PERIOD/3600).'h)');
@@ -933,13 +979,13 @@
 			$_REQUEST['period'] = ZBX_MAX_PERIOD;			
 		}
 
-		if(isset($_REQUEST["stime"])){
+		if(isset($_REQUEST['stime'])){
 			$bstime = $_REQUEST['stime'];
 			$time = mktime(substr($bstime,8,2),substr($bstime,10,2),0,substr($bstime,4,2),substr($bstime,6,2),substr($bstime,0,4));
 			if(($time+$_REQUEST['period']) > time()) unset($_REQUEST['stime']);
 		}
 		
-	return $_REQUEST["period"];
+	return $_REQUEST['period'];
 	}
 
 	function navigation_bar($url,$ext_saved_request=NULL){
diff --git a/frontends/php/include/hosts.inc.php b/frontends/php/include/hosts.inc.php
index 6a9d2e3..f7c9408 100644
--- a/frontends/php/include/hosts.inc.php
+++ b/frontends/php/include/hosts.inc.php
@@ -733,171 +733,421 @@ require_once "include/httptest.inc.php";
 	}
 
 /*
- * Function: get_correct_group_and_host
+ * Function: get_viewed_groups
  *
  * Description:
- *     Retrive correct relations for group and host
+ *     Retrive groups for dropdown
  *
  * Author:
- *		Eugene Grigorjev (eugene.grigorjev@zabbix.com)
+ *		Artem "Aly" Suharev
  *
  * Comments:
- *		mod by Aly
+ *	
  */
-	function get_correct_group_and_host($a_groupid=null, $a_hostid=null, $perm=PERM_READ_WRITE, $options = array()){
-		if(!is_array($options)){
-			fatal_error("Incorrect options for get_correct_group_and_host");
-		}
-		
-		global $USER_DETAILS;
+function get_viewed_groups($perm, $options=array(), $nodeid=null, $sql=array()){
+	global $USER_DETAILS;
+	global $page;
+	
+	$def_sql = array(
+				'from' =>	array('groups g'),
+				'where' =>	array(),
+			);
+			
+	$def_options = array(
+				'allow_all' =>					0,
+				'select_first_group'=>			0,
+				'select_first_group_if_empty'=>	0,
+				'do_not_select' =>				0,
+				'do_not_select_if_empty' =>		0,
+				'monitored_hosts' =>			0,
+				'templated_hosts' =>			0,
+				'real_hosts' =>					0,
+				'not_proxy_hosts' =>			0,
+				'with_items' =>					0,
+				'with_monitored_items' =>		0,
+				'with_triggers' =>				0,
+				'with_monitored_triggers'=>		0,
+				'with_httptests' =>				0,
+				'with_monitored_httptests'=>	0,
+				'with_graphs'=>					0,
+				'only_current_node' =>			0,
+			);	
+	$def_options = array_merge($def_options, $options);
+	
+	$dd_first_entry = ZBX_DROPDOWN_FIRST_ENTRY;
+//	if($page['menu'] == 'config') $dd_first_entry = ZBX_DROPDOWN_FIRST_NONE;
+	if($def_options['allow_all']) $dd_first_entry = ZBX_DROPDOWN_FIRST_ALL;
 
-		$first_hostid_in_group = 0;
+	$result = array('selected'=>0, 'groups'=> array(), 'groupids'=> array());
+	$groups = &$result['groups'];
+	$groupids = &$result['groupids'];
+	
+	$first_entry = ($dd_first_entry == ZBX_DROPDOWN_FIRST_NONE)?S_NOT_SELECTED_SMALL:S_ALL_SMALL;
+	$groups['0'] = $first_entry;
+	$groupids['0'] = '0';
+	
+	$_REQUEST['groupid'] = get_request('groupid', -1);
+	$_REQUEST['hostid'] = get_request('hostid', -1);
+//-----
+	
+	$nodeid = is_null($nodeid)?get_current_nodeid(!$def_options['only_current_node']):$nodeid;
+	$available_groups = get_accessible_groups_by_user($USER_DETAILS,$perm,PERM_RES_IDS_ARRAY,$nodeid,AVAILABLE_NOCACHE);
+
+// hosts
+	if($def_options['monitored_hosts'])
+		$def_sql['where'][] = 'h.status='.HOST_STATUS_MONITORED;
+	else if($def_options['real_hosts'])
+		$def_sql['where'][] = 'h.status IN('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.')';
+	else if($def_options['templated_hosts'])
+		$def_sql['where'][] = 'h.status='.HOST_STATUS_TEMPLATE;
+	else if($def_options['not_proxy_hosts'])
+		$def_sql['where'][] = 'h.status<>'.HOST_STATUS_PROXY;
+	else
+		$in_hosts = false;
+
+	if(!isset($in_hosts)){
+		$def_sql['from'][] = 'hosts_groups hg';
+		$def_sql['from'][] = 'hosts h';
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'h.hostid=hg.hostid';
+	}
+	
+// items
+	if($def_options['with_items']){
+		$def_sql['from'][] = 'hosts_groups hg';
+
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS (SELECT i.hostid FROM items i WHERE hg.hostid=i.hostid )';
+	} 
+	else if($def_options['with_monitored_items']){
+		$def_sql['from'][] = 'hosts_groups hg';
+
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS (SELECT i.hostid FROM items i WHERE hg.hostid=i.hostid AND i.status='.ITEM_STATUS_ACTIVE.')';
+	}
 
-		$allow_all_hosts = 			str_in_array('allow_all_hosts',$options)?1:0;
-		$always_select_first_host = str_in_array('always_select_first_host',$options)?1:0;
-		$only_current_node = 		str_in_array('only_current_node',$options)?1:0;
+// triggers
+	if($def_options['with_triggers']){
+		$def_sql['from'][] = 'hosts_groups hg';
 		
-		if(str_in_array('monitored_hosts',$options))
-			$with_host_status = ' AND h.status='.HOST_STATUS_MONITORED;
-		else if(str_in_array('real_hosts',$options))
-			$with_host_status = ' AND h.status<>'.HOST_STATUS_TEMPLATE;
-		else if(str_in_array('templated_hosts',$options))
-			$with_host_status = ' AND h.status='.HOST_STATUS_TEMPLATE;
-		else
-			$with_host_status = '';
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS( SELECT t.triggerid '.
+									' FROM items i, functions f, triggers t'.
+									' WHERE i.hostid=hg.hostid '.
+										' AND f.itemid=i.itemid '.
+										' AND t.triggerid=f.triggerid)';
+	}	
+	else if($def_options['with_monitored_triggers']){
+		$def_sql['from'][] = 'hosts_groups hg';
+		
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS( SELECT t.triggerid '.
+									' FROM items i, functions f, triggers t'.
+									' WHERE i.hostid=hg.hostid '.
+										' AND i.status='.ITEM_STATUS_ACTIVE.
+										' AND i.itemid=f.itemid '.
+										' AND f.triggerid=t.triggerid '.
+										' AND t.status='.TRIGGER_STATUS_ENABLED.')';
+	}
+	
+// htptests	
+	if($def_options['with_httptests']){
+		$def_sql['from'][] = 'hosts_groups hg';
+		
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS( SELECT a.applicationid '.
+								' FROM applications a, httptest ht '.
+								' WHERE a.hostid=hg.hostid '.
+									' AND ht.applicationid=a.applicationid)';
+	}
+	else if($def_options['with_monitored_httptests']){
+		$def_sql['from'][] = 'hosts_groups hg';
+		
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS( SELECT a.applicationid '.
+								' FROM applications a, httptest ht '.
+								' WHERE a.hostid=hg.hostid '.
+									' AND ht.applicationid=a.applicationid '.
+									' AND ht.status='.HTTPTEST_STATUS_ACTIVE.')';
+	}
+	
+// graphs
+	if($def_options['with_graphs']){
+		$def_sql['from'][] = 'hosts_groups hg';
+		
+		$def_sql['where'][] = 'hg.groupid=g.groupid';
+		$def_sql['where'][] = 'EXISTS( SELECT DISTINCT i.itemid '.
+									' FROM items i, graphs_items gi '.
+									' WHERE i.hostid=hg.hostid '.
+										' AND i.itemid=gi.itemid)';
+	}
+	
+//-----
+	foreach($sql as $key => $value){
+		zbx_value2array($value);
 
-		$with_items = '';
-		if(str_in_array('with_monitored_items',$options)){
-			$with_items = ' AND EXISTS (SELECT i.hostid FROM items i WHERE h.hostid=i.hostid AND i.status='.ITEM_STATUS_ACTIVE.')';
+		if(isset($def_sql[$key])) $def_sql[$key] = array_merge($def_sql[$key], $value);
+		else $def_sql[$key] = $value;
+	}
+	
+	$def_sql['from'] = array_unique($def_sql['from']);
+	$def_sql['where'] = array_unique($def_sql['where']);
+
+	$sql_from = '';
+	$sql_where = '';
+	if(!empty($def_sql['from'])) $sql_from.= implode(',',$def_sql['from']);
+	if(!empty($def_sql['where'])) $sql_where.= ' AND '.implode(' AND ',$def_sql['where']);
+
+	$sql = 'SELECT DISTINCT g.groupid,g.name '.
+			' FROM '.$sql_from.
+			' WHERE '.DBcondition('g.groupid',$available_groups).
+				$sql_where.
+			' ORDER BY g.name';
+//SDI($sql);
+	$res = DBselect($sql);
+	while($group = DBfetch($res)){
+		$groups[$group['groupid']] = $group['name'];
+		$groupids[$group['groupid']] = $group['groupid'];
+		
+		if(bccomp($_REQUEST['groupid'],$group['groupid']) == 0) $result['selected'] = $group['groupid'];
+	}
+
+//-----
+	if($def_options['do_not_select']){
+		$result['selected'] = $_REQUEST['groupid'] = 0;
+	}
+	else if($def_options['do_not_select_if_empty'] && ($_REQUEST['groupid'] == -1)){
+		$result['selected'] = $_REQUEST['groupid'] = 0;
+	}
+	else if(($def_options['select_first_group']) || 
+			($def_options['select_first_group_if_empty'] && ($_REQUEST['groupid'] == -1)))
+	{
+		$first_groupid = next($groupids);
+		reset($groupids);
+		
+		if($first_groupid !== FALSE)
+			$_REQUEST['groupid'] = $result['selected'] = $first_groupid;
+		else 
+			$_REQUEST['groupid'] = $result['selected'] = 0;
+	}
+	else{
+		if(ZBX_DROPDOWN_FIRST_REMEMBER){
+			if($_REQUEST['groupid'] == -1) $_REQUEST['groupid'] = get_profile('web.'.$page['menu'].'.groupid', '0', PROFILE_TYPE_ID);
+			if(uint_in_array($_REQUEST['groupid'], $groupids)){
+				$result['selected'] = $_REQUEST['groupid'];
+			}
+			else{
+				$_REQUEST['groupid'] = $result['selected'];
+			}
 		}
-		else if(str_in_array('with_items',$options)){
-			$with_items = ' AND EXISTS (SELECT i.hostid FROM items i WHERE h.hostid=i.hostid )';
-		} 
+		else{
+			$_REQUEST['groupid'] = $result['selected'];
+		}
+	}
 
-		$with_node = '';
+return $result;
+}
 
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,$perm,PERM_RES_IDS_ARRAY,get_current_nodeid(!$only_current_node));
+/*
+ * Function: get_viewed_hosts
+ *
+ * Description:
+ *     Retrive groups for dropdown
+ *
+ * Author:
+ *		Artem "Aly" Suharev
+ *
+ * Comments:
+ *	
+ */
+function get_viewed_hosts($perm, $groupid=0, $options=array(), $nodeid=null, $sql=array('monitored_hosts'=>1)){
+	global $USER_DETAILS;
+	global $page;
 
-		if(is_null($a_groupid)){
-			$groupid = 0;
-		}
-		else{
-			$groupid = $a_groupid;
-			
-			if(($groupid < 0) && str_in_array('always_select_first_group',$options)){
-				$with_node = ' AND '.DBin_node('g.groupid', get_current_nodeid(!$only_current_node));
-
-				$sql = 'SELECT DISTINCT g.name,g.groupid '.
-						' FROM groups g, hosts_groups hg, hosts h '.
-						' WHERE hg.groupid=g.groupid '.
-							' AND h.hostid=hg.hostid '.
-							' AND '.DBcondition('h.hostid',$available_hosts).
-							$with_host_status.
-							$with_node.
-							$with_items.
-						' ORDER BY g.name';
-//SDI($groupid);
-				$groupid=($grp = DBfetch(DBselect($sql,1)))?$grp['groupid']:0;
-			}
+	$def_sql = array(
+				'from' =>	array('hosts h'),
+				'where' =>	array(),
+			);
+
+	$def_options = array(
+				'allow_all' =>					0,
+				'select_first_host'=>			0,
+				'select_first_host_if_empty'=>	0,
+				'select_host_on_group_switch'=>	0,
+				'do_not_select' =>				0,
+				'do_not_select_if_empty' =>		0,
+				'monitored_hosts' =>			0,
+				'templated_hosts' =>			0,
+				'real_hosts' =>					0,
+				'not_proxy_hosts' =>			0,
+				'with_items' =>					0,
+				'with_monitored_items' =>		0,
+				'with_triggers' =>				0,
+				'with_monitored_triggers'=>		0,
+				'with_httptests' =>				0,
+				'with_monitored_httptests'=>	0,
+				'with_graphs'=>					0,
+				'only_current_node' =>			0,
+			);
 			
-			if($groupid > 0){
-				$with_node = ' AND '.DBin_node('g.groupid', get_current_nodeid(!$only_current_node));
-				$sql = 'SELECT DISTINCT g.groupid '.
-						' FROM groups g, hosts_groups hg, hosts h '.
-						' WHERE hg.groupid=g.groupid '.
-							' AND h.hostid=hg.hostid '.
-							' AND '.DBcondition('h.hostid',$available_hosts).
-//							' AND g.groupid='.$groupid.
-							$with_host_status.
-							$with_items.
-							$with_node;
-				if(!DBfetch(DBselect($sql.' AND g.groupid='.$groupid))){
-					if($db_group = DBfetch(DBselect($sql,1))){
-						$groupid = $db_group['groupid'];
-					}
-					else{
-						$groupid = 0;
-					}
-				}
+	$def_options = array_merge($def_options, $options);
 
-			}
-		}
+	$dd_first_entry = ZBX_DROPDOWN_FIRST_ENTRY;
+	if($def_options['allow_all']) $dd_first_entry = ZBX_DROPDOWN_FIRST_ALL;
+	if($dd_first_entry == ZBX_DROPDOWN_FIRST_ALL) $def_options['select_host_on_group_switch'] = 1;
 
-		if(is_null($a_hostid)){
-			$hostid = 0;
+	$result = array('selected'=>0, 'hosts'=> array(), 'hostids'=> array());
+	$hosts = &$result['hosts'];
+	$hostids = &$result['hostids'];
+	
+	$first_entry = ($dd_first_entry == ZBX_DROPDOWN_FIRST_NONE)?S_NOT_SELECTED_SMALL:S_ALL_SMALL;
+	$hosts['0'] = $first_entry;
+	$hostids['0'] = '0';
+	
+	if(!is_array($groupid) && ($groupid == 0)){
+		if($dd_first_entry == ZBX_DROPDOWN_FIRST_NONE){
+			return $result;
 		}
-		else{
-			$hostid = $a_hostid;
-/* is not 'All' selected */
-//			if(!(($hostid == 0) && ($allow_all_hosts == 1))) {
-			if(($hostid != 0) || ($allow_all_hosts != 1)){
-				$group_table = '';
-				$with_group = '';
-				
-				if($groupid != 0){
-					$with_node = ' AND '.DBin_node('hg.hostid', get_current_nodeid(!$only_current_node));
-					
-					$sql = 'SELECT hg.hostid '.
-							' FROM hosts_groups hg '.
-							' WHERE hg.groupid='.$groupid.
-								' AND hg.hostid='.$hostid.
-								$with_node;
-					if(!DBfetch(DBselect($sql))){
-						$hostid = -1;
-					}
-					$group_table = ' ,hosts_groups hg ';
-					$with_group = ' AND hg.hostid=h.hostid AND hg.groupid='.$groupid;
-				}
+	}
+	else{
+		zbx_value2array($groupid);
 
-				$with_node = ' AND '.DBin_node('h.hostid',get_current_nodeid(!$only_current_node));
-//SDI('C: '.$a_groupid.' : '.$a_hostid);
-				$sql = 'SELECT DISTINCT h.hostid,h.host '.
-						' FROM hosts h '.$group_table.
-						' WHERE '.DBcondition('h.hostid',$available_hosts).
-							$with_host_status.
-							$with_items.
-							$with_group.
-							$with_node.
-						' ORDER BY h.host';
-				if($db_host = DBfetch(DBselect($sql))){
-					$first_hostid_in_group = $db_host['hostid'];
-				}
+		$def_sql['from'][] = 'hosts_groups hg';
+		$def_sql['where'][] = DBcondition('hg.groupid',$groupid);
+		$def_sql['where'][] = 'hg.hostid=h.hostid';
+	}
+	
+	$_REQUEST['hostid'] = get_request('hostid', -1);
+//-----
+	
+	$nodeid = is_null($nodeid)?get_current_nodeid(!$def_options['only_current_node']):$nodeid;
+	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,$perm,PERM_RES_IDS_ARRAY,$nodeid,AVAILABLE_NOCACHE);
+	
+// hosts
+	if($def_options['monitored_hosts'])
+		$def_sql['where'][] = 'h.status='.HOST_STATUS_MONITORED;
+	else if($def_options['real_hosts'])
+		$def_sql['where'][] = 'h.status IN('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.')';
+	else if($def_options['templated_hosts'])
+		$def_sql['where'][] = 'h.status='.HOST_STATUS_TEMPLATE;
+	else if($def_options['not_proxy_hosts'])
+		$def_sql['where'][] = 'h.status<>'.HOST_STATUS_PROXY;
+
+
+// items
+	if($def_options['with_items']){
+		$def_sql['where'][] = 'EXISTS (SELECT i.hostid FROM items i WHERE h.hostid=i.hostid )';
+	}		
+	else if($def_options['with_monitored_items']){
+		$def_sql['where'][] = 'EXISTS (SELECT i.hostid FROM items i WHERE h.hostid=i.hostid AND i.status='.ITEM_STATUS_ACTIVE.')';
+	}
+		
+// triggers
+	if($def_options['with_triggers']){
+		$def_sql['where'][] = 'EXISTS( SELECT i.itemid '.
+									' FROM items i, functions f, triggers t'.
+									' WHERE i.hostid=h.hostid '.
+										' AND i.itemid=f.itemid '.
+										' AND f.triggerid=t.triggerid)';
+	}	
+	else if($def_options['with_monitored_triggers']){
+		$def_sql['where'][] = 'EXISTS( SELECT i.itemid '.
+									' FROM items i, functions f, triggers t'.
+									' WHERE i.hostid=h.hostid '.
+										' AND i.status='.ITEM_STATUS_ACTIVE.
+										' AND i.itemid=f.itemid '.
+										' AND f.triggerid=t.triggerid '.
+										' AND t.status='.TRIGGER_STATUS_ENABLED.')';
+	}
 
-				if($first_hostid_in_group == 0)	$hostid = 0; /* no hosts in selected groupe */
-
-				if($hostid > 0){
-					$sql = 'SELECT DISTINCT h.hostid '.
-							' FROM hosts h '.
-							' WHERE h.hostid='.$hostid.
-								' AND '.DBcondition('h.hostid',$available_hosts).
-								$with_host_status.
-								$with_items.
-								$with_node;
-								
-					if(!DBfetch(DBselect($sql))){
-							$hostid = -1;
-					}
-				}
+// httptests
+	if($def_options['with_httptests']){
+		$def_sql['where'][] = 'EXISTS( SELECT a.applicationid '.
+								' FROM applications a, httptest ht '.
+								' WHERE a.hostid=h.hostid '.
+									' AND ht.applicationid=a.applicationid)';
+	}
+	else if($def_options['with_monitored_httptests']){
+		$def_sql['where'][] = 'EXISTS( SELECT a.applicationid '.
+								' FROM applications a, httptest ht '.
+								' WHERE a.hostid=h.hostid '.
+									' AND ht.applicationid=a.applicationid '.
+									' AND ht.status='.HTTPTEST_STATUS_ACTIVE.')';
+	}
+	
+// graphs
+	if($def_options['with_graphs']){
+		$def_sql['where'][] = 'EXISTS( SELECT DISTINCT i.itemid '.
+									' FROM items i, graphs_items gi '.
+									' WHERE i.hostid=h.hostid '.
+										' AND i.itemid=gi.itemid)';
+	}
+//------
 
-				if($hostid < 0){
-					if($always_select_first_host == 1)
-						$hostid = $first_hostid_in_group;
-					else
-						$hostid = 0;
-				}
+	foreach($sql as $key => $value){
+		zbx_value2array($value);
+
+		if(isset($def_sql[$key])) $def_sql[$key] = array_merge($def_sql[$key], $value);
+		else $def_sql[$key] = $value;
+	}
+	
+	$def_sql['from'] = array_unique($def_sql['from']);
+	$def_sql['where'] = array_unique($def_sql['where']);
+
+	$sql_from = '';
+	$sql_where = '';
+	if(!empty($def_sql['from'])) $sql_from.= implode(',',$def_sql['from']);
+	if(!empty($def_sql['where'])) $sql_where.= ' AND '.implode(' AND ',$def_sql['where']);
+	
+	$sql = 'SELECT DISTINCT h.hostid, h.host '.
+			' FROM '.$sql_from.
+			' WHERE '.DBcondition('h.hostid',$available_hosts).
+				$sql_where.
+			' ORDER BY h.host';	
+//SDI($sql);
+	$res = DBselect($sql);
+	while($host = DBfetch($res)){
+		$hosts[$host['hostid']] = $host['host'];
+		$hostids[$host['hostid']] = $host['hostid'];
+		
+		if(bccomp($_REQUEST['hostid'],$host['hostid']) == 0) $result['selected'] = $host['hostid'];
+	}
+//-----	
+	if($def_options['do_not_select']){
+		$_REQUEST['hostid'] = $result['selected'] = 0;	
+	}
+	else if($def_options['do_not_select_if_empty'] && ($_REQUEST['hostid'] == -1)){
+		$_REQUEST['hostid'] = $result['selected'] = 0;
+	}
+	else if(($def_options['select_first_host']) || 
+			($def_options['select_first_host_if_empty'] && ($_REQUEST['hostid'] == -1)) || 
+			($def_options['select_host_on_group_switch'] && (bccomp($_REQUEST['hostid'],$result['selected']) != 0)))
+	{
+		$first_hostid = next($hostids);
+		reset($hostids);
+		
+		if($first_hostid !== FALSE)
+			$_REQUEST['hostid'] = $result['selected'] = $first_hostid;
+		else 
+			$_REQUEST['hostid'] = $result['selected'] = 0;
+
+	}
+	else{
+		if(ZBX_DROPDOWN_FIRST_REMEMBER){
+			if($_REQUEST['hostid'] == -1) $_REQUEST['hostid'] = get_profile('web.'.$page['menu'].'.hostid', '0', PROFILE_TYPE_ID);
+			if(uint_in_array($_REQUEST['hostid'], $hostids)){
+				$result['selected'] = $_REQUEST['hostid'];
+			}
+			else{
+				$_REQUEST['hostid'] = $result['selected'];
 			}
 		}
-		
-		$group_correct	= (bccomp($groupid ,$a_groupid)==0)?1:0;
-		$host_correct	= (bccomp($hostid ,$a_hostid)==0)?1:0;
-		return array(
-			'groupid'	=> $groupid,
-			'group_correct'	=> $group_correct,
-			'hostid'	=> $hostid,
-			'host_correct'	=> $host_correct,
-			'correct'	=> ($group_correct && $host_correct)?1:0
-			);
+		else{
+			$_REQUEST['hostid'] = $result['selected'];
+		}
 	}
+return $result;
+}
 	
 /*
  * Function: validate_group_with_host
@@ -907,38 +1157,54 @@ require_once "include/httptest.inc.php";
  *     and check current group an host relations
  *
  * Author:
- *		Eugene Grigorjev (eugene.grigorjev@zabbix.com)
+ *		Aly
  *
  * Comments:
- *		mod by Aly
+ *
  */
-	function validate_group_with_host($perm, $options = array(),$group_var=null,$host_var=null){
-		if(is_null($group_var)) $group_var = 'web.latest.groupid';
-		if(is_null($host_var))	$host_var = 'web.latest.hostid';
+	function validate_group_with_host(&$PAGE_GROUPS, &$PAGE_HOSTS, $reset_host=true){
+		global $page;
+		
+		$dd_first_entry = ZBX_DROPDOWN_FIRST_ENTRY;
+//		if($page['menu'] == 'config') $dd_first_entry = ZBX_DROPDOWN_FIRST_NONE;
+//		if(($PAGE_GROUPS['selected'] == 0) && (ZBX_DROPDOWN_FIRST_ENTRY == ZBX_DROPDOWN_FIRST_ALL)) $dd_first_entry = ZBX_DROPDOWN_FIRST_ALL;
 
-		$_REQUEST['groupid']    = get_request('groupid', -1);
-		$_REQUEST['hostid']     = get_request('hostid', get_profile($host_var, -1));
+		$group_var = 'web.latest.groupid';
+		$host_var = 'web.latest.hostid';
 
-		if(-1 == $_REQUEST['groupid']){
-			$_REQUEST['groupid'] = get_profile($group_var, 0, PROFILE_TYPE_ID);
+		$_REQUEST['groupid']    = get_request('groupid', get_profile($group_var, -1));
+		$_REQUEST['hostid']     = get_request('hostid', get_profile($host_var, -1));
+		
+		if($_REQUEST['groupid'] > 0){
+			if($_REQUEST['hostid'] > 0){
+				$sql = 'SELECT groupid FROM hosts_groups WHERE hostid='.$_REQUEST['hostid'].' AND groupid='.$_REQUEST['groupid'];
+				if(!DBfetch(DBselect($sql))){
+					$_REQUEST['hostid'] = 0;
+				}
+			}
+			else if($reset_host){
+				$_REQUEST['hostid'] = 0;
+			}
+		}
+		else{
+			$_REQUEST['groupid'] = 0;
 			
-			if(!in_node($_REQUEST['groupid'])) $_REQUEST['groupid'] = 0;
-
-			if(($_REQUEST['hostid'] > 0) && !DBfetch(DBselect('SELECT groupid FROM hosts_groups WHERE hostid='.$_REQUEST['hostid'].' AND groupid='.$_REQUEST['groupid']))){
-				$_REQUEST['groupid'] = 0;
+			if($reset_host && ($dd_first_entry == ZBX_DROPDOWN_FIRST_NONE)){
+				$_REQUEST['hostid'] = 0;
 			}
 		}
-
-//		if(str_in_array('always_select_first_host',$options) && ($_REQUEST['hostid'] == 0) && ($_REQUEST['groupid'] != 0))
-//			$_REQUEST['hostid'] = -1;
-
-		$result = get_correct_group_and_host($_REQUEST['groupid'],$_REQUEST['hostid'], $perm, $options);
-
-		$_REQUEST['groupid']    = $result['groupid'];
-		$_REQUEST['hostid']     = $result['hostid'];
-
-		if($_REQUEST['hostid'] > 0) update_profile($host_var,$_REQUEST['hostid'], PROFILE_TYPE_ID);
-		if($_REQUEST['groupid'] > 0) update_profile($group_var,$_REQUEST['groupid'], PROFILE_TYPE_ID);
+		
+		$PAGE_GROUPS['selected'] = $_REQUEST['groupid'];
+		$PAGE_HOSTS['selected'] = $_REQUEST['hostid'];
+		
+		if(($PAGE_HOSTS['selected'] == 0) && ($dd_first_entry == ZBX_DROPDOWN_FIRST_NONE) && $reset_host){
+			$PAGE_HOSTS['hostids'] = array(0);
+		}
+		
+		update_profile('web.'.$page['menu'].'.groupid', $_REQUEST['groupid'], PROFILE_TYPE_ID);
+		update_profile('web.'.$page['menu'].'.hostid', $_REQUEST['hostid'], PROFILE_TYPE_ID);
+		update_profile($group_var, $_REQUEST['groupid'], PROFILE_TYPE_ID);
+		update_profile($host_var, $_REQUEST['hostid'], PROFILE_TYPE_ID);
 	}
 
 /*
@@ -948,24 +1214,33 @@ require_once "include/httptest.inc.php";
  *     Check available groups by user permisions
  *
  * Author:
- *     Eugene Grigorjev (eugene.grigorjev@zabbix.com)
+ *     Artem "Aly" Suharev
  * 
  * Comments:
- *		Modified: by Aly
+ *	
  */
-	function validate_group($perm, $options = array(),$group_var=null){
-		if(is_null($group_var)) $group_var = 'web.latest.groupid';
-		$_REQUEST['groupid'] = get_request('groupid',get_profile($group_var, 0, PROFILE_TYPE_ID));
-
-		if(!in_node($_REQUEST['groupid'])) $_REQUEST['groupid'] = 0;
+ 	function validate_group(&$PAGE_GROUPS, &$PAGE_HOSTS, $reset_host=true){
+		global $page;
+		$group_var = 'web.latest.groupid';
+		$host_var = 'web.latest.hostid';
 		
-		if(str_in_array('always_select_first_group',$options) && ($_REQUEST['groupid'] == 0))
-			$_REQUEST['groupid'] = -1;
-
-		$result = get_correct_group_and_host($_REQUEST['groupid'],null,$perm,$options);
-		$_REQUEST['groupid'] = $result['groupid'];
+		$_REQUEST['groupid']    = get_request('groupid', get_profile($group_var, -1));
+		
+		if($_REQUEST['groupid'] < 0){
+			$PAGE_HOSTS['selected'] = $_REQUEST['groupid'] = 0;
+			$PAGE_HOSTS['selected'] = $_REQUEST['hostid'] = 0;
+		}
 		
-		if($_REQUEST['groupid'] > 0) update_profile($group_var, $_REQUEST['groupid'], PROFILE_TYPE_ID);
+		if(!isset($_REQUEST['hostid']) || $reset_host){
+			$PAGE_HOSTS['selected'] = $_REQUEST['hostid'] = 0;
+		}
+		
+		$PAGE_GROUPS['selected'] = $_REQUEST['groupid'];
+				
+		update_profile('web.'.$page['menu'].'.groupid', $_REQUEST['groupid'], PROFILE_TYPE_ID);
+		update_profile('web.'.$page['menu'].'.hostid', $_REQUEST['hostid'], PROFILE_TYPE_ID);
+		update_profile($group_var, $_REQUEST['groupid'], PROFILE_TYPE_ID);
+		update_profile($host_var, $_REQUEST['hostid'], PROFILE_TYPE_ID);
 	}
 
 /* APPLICATIONS */
@@ -1469,8 +1744,7 @@ require_once "include/httptest.inc.php";
 	return $action;
 	}
 
-	function expand_host_ipmi_ip_by_data($ipmi_ip, $host)
-	{
+	function expand_host_ipmi_ip_by_data($ipmi_ip, $host){
 		if (zbx_strstr($ipmi_ip, '{HOSTNAME}'))
 			$ipmi_ip = str_replace('{HOSTNAME}', $host['host'], $ipmi_ip);
 		else if (zbx_strstr($ipmi_ip, '{IPADDRESS}'))
diff --git a/frontends/php/include/html.inc.php b/frontends/php/include/html.inc.php
index 9cb8fa1..68fcfc2 100644
--- a/frontends/php/include/html.inc.php
+++ b/frontends/php/include/html.inc.php
@@ -58,7 +58,7 @@
 	}
 
 	function prepare_url(&$var, $varname=null){
-		$result = "";
+		$result = '';
 
 		if(is_array($var)){
 			foreach($var as $id => $par)
diff --git a/frontends/php/include/import.inc.php b/frontends/php/include/import.inc.php
index aee6490..db2bfa1 100644
--- a/frontends/php/include/import.inc.php
+++ b/frontends/php/include/import.inc.php
@@ -91,7 +91,7 @@
 							info('Host ['.$data['name'].'] skipped - user rule');
 							break; // case
 						}
-						if(!uint_in_array($host_data['hostid'], $this->available_hosts)){
+						if(!isset($this->available_hosts[$host_data['hostid']])){
 							error('Host ['.$data['name'].'] skipped - Access deny.');
 							break; // case
 						}
@@ -367,12 +367,12 @@
 						break; // case
 					}
 					
-					if(!uint_in_array($group["groupid"], $this->available_groups)){
+					if(!isset($this->available_groups[$group['groupid']])){
 						error('Group ['.$this->element_data.'] skipped - Access deny.');
 						break; // case
 					}
 
-					array_push($this->data[XML_TAG_HOST]['groups'], $group["groupid"]);
+					$this->data[XML_TAG_HOST]['groups'][$group['groupid']] = $group['groupid'];
 
 					break; // case
 				case XML_TAG_DEPENDENCY:
@@ -430,7 +430,7 @@
 						break; // case
 					}
 					
-					if(!uint_in_array($template["hostid"], $this->available_hosts)){
+					if(!isset($this->available_hosts[$template['hostid']])){
 						error('Template ['.$this->element_data.'] skipped - Access deny.');
 						break; // case
 					}
@@ -604,7 +604,7 @@
 						}
 					}
 					else{
-						$data['expression'] = str_replace('{HOSTNAME}',$this->data[XML_TAG_HOST]['name'],$data['expression']);
+						$data['expression'] = str_replace('{{HOSTNAME}:','{'.$this->data[XML_TAG_HOST]['name'].':',$data['expression']);
  
 						$result = DBselect('SELECT DISTINCT t.triggerid,t.templateid,t.expression '.
  							' FROM triggers t,functions f,items i '.
@@ -797,10 +797,7 @@
 					if(!isset($data['type']))		$data['type']		= 0;
 					if(!isset($data['periods_cnt']))	$data['periods_cnt']	= 5;
 
-					if(!($item = DBfetch(DBselect('select i.itemid from items i,hosts h'.
-						' where h.hostid=i.hostid and i.key_='.zbx_dbstr($data['key']).
-						' and h.host='.zbx_dbstr($data['host'])))))
-					{
+					if(!$item = get_item_by_key($data['key'], $data['host'])){
 						$this->data[XML_TAG_GRAPH]['error'] = true;
 
 						error('Missed item ['.$data['key'].'] for host ['.$data['host'].']');
diff --git a/frontends/php/include/items.inc.php b/frontends/php/include/items.inc.php
index b440426..33074f4 100644
--- a/frontends/php/include/items.inc.php
+++ b/frontends/php/include/items.inc.php
@@ -758,6 +758,25 @@
 		return update_item_status($itemids, ITEM_STATUS_DISABLED);
 	}
 
+	function get_item_by_key($key,$host=''){
+		$item = false;
+
+		$sql_from = '';
+		$sql_where = '';
+		if(!empty($host)){
+			$sql_from = ',hosts h ';
+			$sql_where = ' AND h.host='.zbx_dbstr($host).' AND i.hostid=h.hostid ';
+		}
+		$sql = 'SELECT DISTINCT i.* '.
+			' FROM items i '.$sql_from.
+			' WHERE i.key_='.zbx_dbstr($key).
+				$sql_where;
+		if($item = DBfetch(DBselect($sql))){
+			$item = $item;
+		}
+	return $item;
+	}
+
 	function get_items_by_hostid($hostids){
 		zbx_value2array($hostids);
 	return DBselect('SELECT * FROM items WHERE '.DBcondition('hostid',$hostids));
@@ -949,52 +968,41 @@
 	}
 	
 	function get_realhost_by_itemid($itemid){
-		$itme = get_item_by_itemid($itemid);
-		if($itme["templateid"] <> 0)
-			return get_realhost_by_itemid($itme["templateid"]);
+		$item = get_item_by_itemid($itemid);
+		if($item['templateid'] <> 0)
+			return get_realhost_by_itemid($item['templateid']);
 
 	return get_host_by_itemid($itemid);
 	}
 
-	/*
-	 * Function: get_items_data_overview
-	 *
-	 * Description:
-	 *     Retrive overview table object for items
-	 *
-	 * Author:
-	 *     Eugene Grigorjev (eugene.grigorjev@zabbix.com)
-	 *
-	 * Comments:
-	 *
-	 */
-	function get_items_data_overview($groupid,$view_style=null){
-		global	$USER_DETAILS;
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+/*
+ * Function: get_items_data_overview
+ *
+ * Description:
+ *     Retrive overview table object for items
+ *
+ * Author:
+ *     Eugene Grigorjev (eugene.grigorjev@zabbix.com)
+ *
+ * Comments:
+ *
+ */
+	function get_items_data_overview($hostids,$view_style=null){
 
 		if(is_null($view_style)) $view_style = get_profile('web.overview.view.style',STYLE_TOP);
 		
 		$table = new CTableInfo(S_NO_ITEMS_DEFINED);
 
-		$sql_from = '';
-		$sql_where = '';
-		if($groupid > 0){
-			$sql_from = ', hosts_groups hg ';
-			$sql_where = ' AND hg.groupid='.$groupid.' AND hg.hostid=h.hostid ';							
-		} 
-
 COpt::profiling_start('prepare data');
 		$result = DBselect('SELECT DISTINCT h.hostid, h.host,i.itemid, i.key_, i.value_type, i.lastvalue, i.units, '.
 				' i.description, t.priority, i.valuemapid, t.value as tr_value, t.triggerid '.
 			' FROM hosts h, items i '.
 				' LEFT JOIN functions f on f.itemid=i.itemid '.
 				' LEFT JOIN triggers t on t.triggerid=f.triggerid '.
-				$sql_from.
-			' WHERE '.DBcondition('h.hostid',$available_hosts).
+			' WHERE '.DBcondition('h.hostid',$hostids).
 				' AND h.status='.HOST_STATUS_MONITORED.
 				' AND h.hostid=i.hostid '.
 				' AND i.status='.ITEM_STATUS_ACTIVE.
-				$sql_where.
 			' ORDER BY i.description,i.itemid');
 
 		unset($items);
diff --git a/frontends/php/include/locales.inc.php b/frontends/php/include/locales.inc.php
index ad07970..e9727f8 100644
--- a/frontends/php/include/locales.inc.php
+++ b/frontends/php/include/locales.inc.php
@@ -78,6 +78,7 @@ function set_zbx_locales(){
 		'ko_kr'=>  S_KOREAN_KO,
 		'ja_jp'=>  S_JAPANESE_JP,
 		'lv_lv'=>  S_LATVIAN_LV,
+		'pl_pl'=>  S_POLISH_PL,
 		'pt_br'=>  S_PORTUGUESE_PT,
 		'ru_ru'=>  S_RUSSIAN_RU,
 		'sp_sp'=>  S_SPANISH_SP,
diff --git a/frontends/php/include/locales/en_gb.inc.php b/frontends/php/include/locales/en_gb.inc.php
index 81192a1..f2706a6 100644
--- a/frontends/php/include/locales/en_gb.inc.php
+++ b/frontends/php/include/locales/en_gb.inc.php
@@ -1,5 +1,5 @@
 <?php
-/* 
+/*
 ** ZABBIX
 ** Copyright (C) 2000-2005 SIA Zabbix
 **
@@ -31,7 +31,7 @@
 	'S_DISABLE_SELECTED'=>			'Disable selected',
 	'S_DELETE_SELECTED'=>			'Delete selected',
 	'S_COPY_SELECTED_TO'=>			'Copy selected to ...',
-	
+
 //	dicoveryconf.php
 	'S_HOST_IP'=>				'Host ip',
 	'S_SERVICE_TYPE'=>			'Service type',
@@ -140,7 +140,7 @@
 	'S_POST'=>				'Post',
 	'S_REQUIRED'=>				'Required',
 	'S_STEP_OF_SCENARIO'=>			'Step of scenario',
-	
+
 //	exp_imp.php
 	'S_ELEMENT'=>				'Element',
 	'S_ELEMENTS'=>				'Elements',
@@ -181,7 +181,7 @@
 	'S_INSTALLATION_UPDATE'=>		'Installation/Update',
 	'S_ZABBIX_IS_UNAVAILABLE'=>		'ZABBIX is temporary unavailable',
 	'S_REQUIRE_MB_STRING_MODULE'=>	'Require Multibyte String module to run FrontEnd',
-	
+
 //	node.php
 	'S_TIME_ZONE'=>				'Time zone',
 	'S_DO_NOT_KEEP_HISTORY_OLDER_THAN'=>	'Do not keep history older than (in days)',
@@ -198,7 +198,7 @@
 	'S_CURRENT_NODE'=>			'Current node',
 	'S_CURRENT_NODE_ONLY'=>			'Current node only',
 	'S_WITH_SUBNODES'=>			'With subnodes',
-	
+
 //	acknow.php
 	'S_NO_EVENTS_TO_ACKNOWLEDGE'=>	'No events to acknowledge',
 	'S_ACKNOWLEDGES'=>				'Acknowledges',
@@ -296,7 +296,7 @@
 	'S_RECOVERY_SUBJECT'=>					'Recovery subject',
 	'S_DEFAULT_MESSAGE'=>					'Default message',
 	'S_DEFAULT_SUBJECT'=>					'Default subject',
-	'S_MESSAGE'=>					'Message',	
+	'S_MESSAGE'=>					'Message',
 	'S_ON'=>						'ON',
 	'S_OFF'=>						'OFF',
 	'S_NO_ACTIONS_DEFINED'=>		'No actions defined',
@@ -371,7 +371,7 @@
 	'S_BOLD_LINE'=>				'Bold line',
 	'S_DOT'=>					'Dot',
 	'S_DASHED_LINE'=>			'Dashed line',
-	
+
 //	charts.php
 	'S_CUSTOM_GRAPHS'=>				'Custom graphs',
 	'S_GRAPHS_BIG'=>				'GRAPHS',
@@ -520,14 +520,14 @@
 	'S_INCORRECT_GROUP'=>			'Incorrect group',
 	'S_NOTHING_TO_DO'=>			'Nothing to do',
 	'S_ICORRECT_WORK_PERIOD'=>		'Icorrect work period',
-	
+
 //	nodes.php
 	'S_NODE'=>					'Node',
 	'S_NODES'=>					'Nodes',
 	'S_NODES_BIG'=>				'NODES',
 	'S_NEW_NODE'=>				'New node',
 	'S_NO_NODES_DEFINED'=>		'No nodes defined',
-	
+
 //  Authentication
 	'S_AUTHENTICATION'=>				'Authentication',
 	'S_AUTHENTICATION_TO_ZABBIX'=>		'Authentication to ZABBIX',
@@ -543,7 +543,7 @@
 	'S_HTTP_AUTH'=>						'HTTP Authentication',
 	'S_ZABBIX_INTERNAL_AUTH'=>			'ZABBIX Internal authentication',
 	'S_DEFAULT_AUTHENTICATION'=>		'Default authentication',
-	
+
 
 //	Latest values
 	'S_LATEST_VALUES'=>			'Latest values',
@@ -554,6 +554,7 @@
 	'S_ALL_BIG'=>					'ALL',
 	'S_MINUS_ALL_MINUS'=>			'- all -',
 	'S_MINUS_OTHER_MINUS'=>			'- other -',
+	'S_NOT_SELECTED_SMALL'=>		'not selected',
 	'S_DESCRIPTION_LARGE'=>			'DESCRIPTION',
 	'S_DESCRIPTION_SMALL'=>			'Description',
 	'S_NO_DESCRIPTION'=>			'No description',
@@ -584,6 +585,7 @@
 	'S_UP'=>				'Up',
 	'S_DOWN'=>				'Down',
 	'S_NEW_ITEM_FOR_THE_GRAPH'=>		'New item for the graph',
+	'S_UPD_ITEM_FOR_THE_GRAPH'=>		'Update item for the graph',
 	'S_SORT_ORDER_1_100'=>			'Sort order (0->100)',
 	'S_YAXIS_SIDE'=>			'Y axis side',
 	'S_LEFT'=>				'Left',
@@ -664,7 +666,7 @@
 	'S_APPLICATION'=>			'Application',
 	'S_APPLICATIONS'=>			'Applications',
 	'S_APPLICATIONS_BIG'=>			'APPLICATIONS',
-	'S_CREATE_APPLICATION'=>		'Create application',	
+	'S_CREATE_APPLICATION'=>		'Create application',
 	'S_DELETE_SELECTED_APPLICATIONS_Q'=>	'Delete selected applications?',
 	'S_DISABLE_ITEMS_FROM_SELECTED_APPLICATIONS_Q'=>'Disable items from selected applications?',
 	'S_ACTIVATE_ITEMS'=>			'Activate Items',
@@ -772,12 +774,12 @@
 	'S_CREATE_PROXY'=>			'Create Proxy',
 	'S_PROXY_NAME'=>			'Proxy name',
 	'S_LASTSEEN_AGE'=>			'Last seen (age)',
-	
+
 	'S_TRANSACTION'=>			'Transaction',
 	'S_STARTED_BIG'=>			'STARTED!',
 	'S_COMMITED_BIG'=>			'COMMITED!',
 	'S_ROLLBACKED_BIG'=>		'ROLLBACKED!',
-	
+
 //	Host profiles
 	'S_HOST_PROFILE'=>			'Host profile',
 	'S_DEVICE_TYPE'=>			'Device type',
@@ -1168,8 +1170,10 @@
 	'S_TRENDS_STORED'=>			'Trends stored',
 	'S_NUMBER_OF_TRIGGERS'=>		'Number of triggers (enabled/disabled)[true/unknown/false]',
 	'S_NUMBER_OF_TRIGGERS_SHORT'=>		'Triggers (e/d)[t/u/f]',
+	'S_NUMBER_OF_TRIGGERS_TOOLTIP'=>		'Only triggers assigned to enabled hosts and depending on enabled items are counted',
 	'S_NUMBER_OF_ITEMS'=>			'Number of items (monitored/disabled/not supported)',
 	'S_NUMBER_OF_ITEMS_SHORT'=>		'Items (m/d/n)[t]',
+	'S_NUMBER_OF_ITEMS_TOOLTIP'=>	'Only items assigned to enabled hosts are counted',
 	'S_NUMBER_OF_USERS'=>			'Number of users (online)',
 	'S_NUMBER_OF_USERS_SHORT'=>		'Users (online)',
 	'S_NUMBER_OF_HOSTS'=>			'Number of hosts (monitored/not monitored/templates)',
@@ -1232,7 +1236,7 @@
 	'S_NUMBER_OF_STATUS_CHANGES'=>		'Number of status changes',
 	'S_WEEK'=>				'Week',
 	'S_LAST'=>				'Last',
- 
+
 //	screenconf.php
 	'S_SCREENS'=>				'Screens',
 	'S_SCREEN'=>				'Screen',
@@ -1351,7 +1355,7 @@
 	'S_STATUS_CALCULATION_ALGORITHM'=>	'Status calculation algorithm',
 	'S_NONE'=>				'None',
 	'S_PROBLEM_IF_AT_LEAST_ONE'=>	'Problem, if at least one child has a problem',
-	'S_PROBLEM_IF_ALL'=>			'Problem, if all children have problems',	
+	'S_PROBLEM_IF_ALL'=>			'Problem, if all children have problems',
 	'S_SERVICE_1'=>				'Service 1',
 	'S_SERVICE_2'=>				'Service 2',
 	'S_SOFT_HARD_LINK'=>			'Soft/hard link',
@@ -1455,12 +1459,12 @@
 	'S_SHOW_DISABLED_TRIGGERS'=>		'Show disabled triggers',
 	'S_HIDE_DISABLED_TRIGGERS'=>		'Hide disabled triggers',
 	'S_THE_TRIGGER_DEPENDS_ON'=>		'The trigger depends on',
-	'S_NO_DEPENDENCES_DEFINED'=>		'No dependences defined',
+	'S_NO_DEPENDENCES_DEFINED'=>		'No dependencies defined',
 	'S_NEW_DEPENDENCY'=>			'New dependency',
 
 	'S_MULTIPLE_EVENTS'=>		'Multiple events',
 	'S_EVENT_GENERATION'=>		'Event generation',
-	
+
 	'S_TRIGGERS_MASSUPDATE'=>	'Triggers massupdate',
 	'S_TRIGGER_DEPENDENCIES'=>	'Trigger dependencies',
 	'S_INCORRECT_DEPENDENCY'=>	'Incorrect dependency',
@@ -1502,6 +1506,7 @@
 	'S_ACK'=>							'Ack',
 	'S_NOT_ACK'=>						'Not Ack',
 	'S_NEVER'=>							'Never',
+	'S_FOUND'=>							'Found',
 
 //	users.php
 	'S_ZABBIX_USER'=>			'ZABBIX User',
@@ -1574,8 +1579,8 @@
 	'S_CHANGE_PASSWORD'=>			'Change password',
 	'S_PASSWORD_ONCE_AGAIN'=>		'Password (once again)',
 	'S_URL_AFTER_LOGIN'=>			'URL (after login)',
-	'S_AUTO_LOGIN'=>				'Auto-login (1 month)',
-	'S_AUTO_LOGOUT'=>		'Auto-logout (0-disable)',
+	'S_AUTO_LOGIN'=>				'Auto-login',
+	'S_AUTO_LOGOUT'=>		'Auto-logout (min 90 seconds)',
 	'S_SCREEN_REFRESH'=>                    'Refresh (in seconds)',
 	'S_CREATE_USER'=>			'Create User',
 	'S_CREATE_GROUP'=>			'Create Group',
@@ -1646,6 +1651,7 @@
 	'S_CHINESE_CN'=>			'Chinese (CN)',
 	'S_DUTCH_NL'=>				'Dutch (NL)',
 	'S_HUNGARY_HU'=>			'Hungary (HU)',
+	'S_POLISH_PL'=>				'Polish (PL)',
 
 //	index.php
 	'S_ZABBIX_BIG'=>			'ZABBIX',
diff --git a/frontends/php/include/locales/pl_pl.inc.php b/frontends/php/include/locales/pl_pl.inc.php
new file mode 100644
index 0000000..1e81d8f
--- /dev/null
+++ b/frontends/php/include/locales/pl_pl.inc.php
@@ -0,0 +1,1508 @@
+<?php
+/* 
+** ZABBIX
+** Copyright (C) 2000-2009 SIA Zabbix
+**
+** This program is free software; you can redistribute it and/or modify
+** it under the terms of the GNU General Public License as published by
+** the Free Software Foundation; either version 2 of the License, or
+** (at your option) any later version.
+**
+** This program is distributed in the hope that it will be useful,
+** but WITHOUT ANY WARRANTY; without even the implied warranty of
+** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+** GNU General Public License for more details.
+**
+** You should have received a copy of the GNU General Public License
+** along with this program; if not, write to the Free Software
+** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+**/
+?>
+<?php
+	global $TRANSLATION;
+
+	$TRANSLATION=array(
+
+	'S_DATE_FORMAT_YMDHMS'=>			'd M G:m:s',
+	'S_DATE_FORMAT_YMD'=>				'd M R',
+	'S_HTML_CHARSET'=>				'UTF-8',
+	'S_ACTIVATE_SELECTED'=>				'Aktywuj wybrane',
+	'S_DISABLE_SELECTED'=>				'Wyłącz wybrane',
+	'S_DELETE_SELECTED'=>				'Usuń wybrane',
+	'S_COPY_SELECTED_TO'=>				'Kopiuj wybrane do...',
+	'S_HOST_IP'=>					'IP stacji',
+	'S_SERVICE_TYPE'=>				'Typ usługi',
+	'S_SERVICE_PORT'=>				'Port usługi',
+	'S_DISCOVERY_STATUS'=>				'Status wykrycia',
+	'S_RECEIVED_VALUE'=>				'Pobrana wartość',
+	'S_UPTIME_DOWNTIME'=>				'Czas dostępności/niedostępności',
+	'S_DISCOVERY_RULE'=>				'Reguła wykrycia',
+	'S_DISCOVERY'=>					'Wykrycie',
+	'S_DISCOVERY_BIG'=>				'WYKRYCIE',
+	'S_CONFIGURATION_OF_DISCOVERY'=>		'Konfiguracja wykrycia',
+	'S_CONFIGURATION_OF_DISCOVERY_BIG'=>		'KONFIGURACJA WYKRYCIA',
+	'S_NO_DISCOVERY_RULES_DEFINED'=>		'Brak definicji reguł wykrycia',
+	'S_IP_RANGE'=>					'Zakres IP',
+	'S_INTERVALS'=>					'Interwały',
+	'S_CHECKS'=>					'Sprawdzenia',
+	'S_ENABLE_SELECTED_RULES_Q'=>			'Włączyć wybrane reguły?',
+	'S_DISABLE_SELECTED_RULES_Q'=>			'Wyłączyć wybrane reguły?',
+	'S_DELETE_SELECTED_RULES_Q'=>			'Usunąć wybrane reguły?',
+	'S_CREATE_RULE'=>				'Utwórz regułę',
+	'S_DELETE_RULE_Q'=>				'Usunąć regułę?',
+	'S_DISCOVERY_BY_PROXY'=>			'Wykrycie przez proxy',
+	'S_NO_PROXY'=>					'(brak proxy)',
+	'S_EVENT_SOURCE'=>				'Źródło zdarzenia',
+	'S_NEW_CHECK'=>					'Nowe sprawdzenie',
+	'S_SSH'=>					'SSH',
+	'S_LDAP'=>					'LDAP',
+	'S_SMTP'=>					'SMTP',
+	'S_FTP'=>					'FTP',
+	'S_HTTP'=>					'HTTP',
+	'S_POP'=>					'POP',
+	'S_NNTP'=>					'NNTP',
+	'S_IMAP'=>					'IMAP',
+	'S_TCP'=>					'TCP',
+	'S_ICMPPING'=>					'ICMP Ping',
+	'S_PORTS_SMALL'=>				'porty',
+	'S_DISCOVERY_RULES_DELETED'=>			'Reguły wykrycia usunięte',
+	'S_DISCOVERY_RULE_DELETED'=>			'Reguła wykrycia usunięta',
+	'S_CANNOT_DELETE_DISCOVERY_RULE'=>		'Nie można usunąć reguły wykrycia',
+	'S_DISCOVERY_RULES_UPDATED'=>			'Reguły wykrycia uaktualnione',
+	'S_DISCOVERY_RULE_UPDATED'=>			'Reguła wykrycia uaktualniona',
+	'S_CANNOT_UPDATE_DISCOVERY_RULE'=>		'Nie można uaktualnić reguły wykrycia',
+	'S_DISCOVERY_RULE_ADDED'=>			'Reguła wykrycia dodana',
+	'S_CANNOT_ADD_DISCOVERY_RULE'=>			'Nie można dodać reguły wykrycia',
+	'S_STATUS_OF_DISCOVERY_BIG'=>			'STATUS WYKRYCIA',
+	'S_STATUS_OF_DISCOVERY'=>			'Status wykrycia',
+	'S_DISCOVER'=>					'Wykryj',
+	'S_LOST'=>					'Stracone',
+	'S_DETAILS_OF_SCENARIO'=>			'Szczegóły scenariusza',
+	'S_DETAILS_OF_SCENARIO_BIG'=>			'SZCZEGÓŁY SCENARIUSZA',
+	'S_SPEED'=>					'Prędkość',
+	'S_RESPONSE_CODE'=>				'Kod odpowiedzi',
+	'S_TOTAL_BIG'=>					'RAZEM',
+	'S_RESPONSE_TIME'=>				'Czas odpowiedzi',
+	'S_IN_PROGRESS'=>				'W trakcie',
+	'S_OF_SMALL'=>					'z',
+	'S_IN_CHECK'=>					'W trakcie sprawdzania',
+	'S_IDLE_TILL'=>					'Wolny do',
+	'S_FAILED_ON'=>					'Niepowodzenie w',
+	'S_FAILED'=>					'Niepowodzenie',
+	'S_STATUS_OF_WEB_MONITORING'=>			'Status monitoringu WWW',
+	'S_STATUS_OF_WEB_MONITORING_BIG'=>		'STATUS MONITORINGU WWW',
+	'S_STATE'=>					'Stan',
+	'S_STATUS_CODES'=>				'Kody statusu',
+	'S_WEB'=>					'WWW',
+	'S_CONFIGURATION_OF_WEB_MONITORING'=>		'Konfiguracja monitoringu WWW',
+	'S_CONFIGURATION_OF_WEB_MONITORING_BIG'=>	'KONFIGURACJA MONITORINGU WWW',
+	'S_SCENARIO'=>					'Scenariusz',
+	'S_SCENARIOS'=>					'Scenariusze',
+	'S_SCENARIOS_BIG'=>				'SCENARIUSZE',
+	'S_CREATE_SCENARIO'=>				'Utwórz scenariusz',
+	'S_HIDE_DISABLED_SCENARIOS'=>			'Ukryj wyłączone scenariusze',
+	'S_SHOW_DISABLED_SCENARIOS'=>			'Pokaż wyłączone scenariusze',
+	'S_NUMBER_OF_STEPS'=>				'Liczba kroków',
+	'S_SCENARIO_DELETED'=>				'Scenariusz usunięty',
+	'S_SCENARIO_ACTIVATED'=>			'Scenariusz włączony',
+	'S_SCENARIO_DISABLED'=>				'Scenariusz wyłączony',
+	'S_ACTIVATE_SELECTED_SCENARIOS_Q'=>		'Włączyć wybrane scenariusze?',
+	'S_DISABLE_SELECTED_SCENARIOS_Q'=>		'Wyłączyć wybrane scenariusze?',
+	'S_DELETE_SELECTED_SCENARIOS_Q'=>		'Usunąć wybrane scenariusze?',
+	'S_DELETE_SCENARIO_Q'=>				'Usunąć scenariusz?',
+	'S_CLEAN_HISTORY_SELECTED_SCENARIOS'=>		'Usuń historię wybranych scenariuszy',
+	'S_SCENARIO_UPDATED'=>				'Scenariusz uaktualniony',
+	'S_CANNOT_UPDATE_SCENARIO'=>			'Nie można uaktualnić scenariusza',
+	'S_SCENARIO_ADDED'=>				'Scenariusz dodany',
+	'S_CANNOT_ADD_SCENARIO'=>			'Nie można dodać scenariusza',
+	'S_CANNOT_DELETE_SCENARIO'=>			'Nie można usunąć scenariusza',
+	'S_AGENT'=>					'Agent',
+	'S_VARIABLES'=>					'Zmienne',
+	'S_STEP'=>					'Krok',
+	'S_STEPS'=>					'Kroki',
+	'S_TIMEOUT'=>					'Przekroczenie czasu',
+	'S_POST'=>					'Post',
+	'S_REQUIRED'=>					'Wymagane',
+	'S_STEP_OF_SCENARIO'=>				'Krok scenariusza',
+	'S_ELEMENT'=>					'Element',
+	'S_ELEMENTS'=>					'Elementy',
+	'S_ONLY_HOST_INFO'=>				'Tylko info o stacji',
+	'S_EXPORT_IMPORT'=>				'Eksport/Import',
+	'S_IMPORT_FILE'=>				'Import pliku',
+	'S_IMPORT'=>					'Import',
+	'S_IMPORT_BIG'=>				'IMPORT',
+	'S_IMPORT_HOSTS'=>				'Import stacji',
+	'S_IMPORT_HOSTS_BIG'=>				'IMPORT STACJI',
+	'S_EXPORT'=>					'Eksport',
+	'S_EXPORT_FILE'=>				'Eksport pliku',
+	'S_EXPORT_BIG'=>				'EKSPORT',
+	'S_PREVIEW'=>					'Podgląd',
+	'S_BACK'=>					'Powrót',
+	'S_BACK_BIG'=>					'POWRÓT',
+	'S_NO_DATA_FOR_EXPORT'=>			'Brak danych do eksportu',
+	'S_NO_DATA_SMALL'=>				'brak danych',
+	'S_RULES'=>					'Reguły',
+	'S_SKIP'=>					'Pomiń',
+	'S_EXISTING'=>					'Istniejące',
+	'S_MISSING'=>					'Brakujące',
+	'S_REFRESH'=>					'Odśwież',
+	'S_IMPORTED'=>					'Zaimportowane',
+	'S_SUCCESSEFULLY_SMALL'=>			'udane',
+	'S_FAILED_SMALL'=>				'nieudane',
+	'S_PREVIOUS'=>					'Poprzedni',
+	'S_NEXT'=>					'Następny',
+	'S_RETRY'=>					'Ponów',
+	'S_FINISH'=>					'Zakończ',
+	'S_FAIL'=>					'Niepowodzenie',
+	'S_UPDATE_BIG'=>				'UAKTUALNIJ',
+	'S_INSTALLATION'=>				'Instalacja',
+	'S_NEW_INSTALLATION'=>				'Nowa instalacja',
+	'S_NEW_INSTALLATION_BIG'=>			'NOWA INSTALACJA',
+	'S_INSTALLATION_UPDATE'=>			'Instalacja/Uaktualnienie',
+	'S_ZABBIX_IS_UNAVAILABLE'=>			'ZABBIX jest tymczasowo niedostępny',
+	'S_REQUIRE_MB_STRING_MODULE'=>			'Wymagany moduł Multibyte String aby uruchomić FrontEnd',
+	'S_TIME_ZONE'=>					'Strefa czasowa',
+	'S_DO_NOT_KEEP_HISTORY_OLDER_THAN'=>		'Nie trzymać historii starszej niż (w dniach)',
+	'S_DO_NOT_KEEP_TRENDS_OLDER_THAN'=>		'Nie trzymać trendów starszych niż (w dniach)',
+	'S_MASTER_NODE'=>				'Węzeł główny',
+	'S_REMOTE'=>					'Zdalny',
+	'S_MASTER'=>					'Główny',
+	'S_NODE_UPDATED'=>				'Węzeł uaktualniony',
+	'S_CANNOT_UPDATE_NODE'=>			'Nie można uaktualnić węzła',
+	'S_NODE_ADDED'=>				'Węzeł dodany',
+	'S_CANNOT_ADD_NODE'=>				'Nie można dodać węzła',
+	'S_NODE_DELETED'=>				'Węzeł usunięty',
+	'S_CANNOT_DELETE_NODE'=>			'Nie można usunąć węzła',
+	'S_CURRENT_NODE'=>				'Węzeł bieżący',
+	'S_CURRENT_NODE_ONLY'=>				'Tylko węzeł bieżący',
+	'S_WITH_SUBNODES'=>				'Z podwęzłami',
+	'S_NO_EVENTS_TO_ACKNOWLEDGE'=>			'Brak zdarzeń do potwierdzenia',
+	'S_ACKNOWLEDGES'=>				'Potwierdzenia',
+	'S_ACKNOWLEDGE'=>				'Potwierdzenie',
+	'S_RETURN'=>					'Powrót',
+	'S_ACKNOWLEDGE_ALARM_BY'=>			'Potwierdzenie alarmu przez',
+	'S_ADD_COMMENT_BY'=>				'Dodanie komentarza przez',
+	'S_COMMENT_ADDED'=>				'Komentarz dodany',
+	'S_CANNOT_ADD_COMMENT'=>			'Nie można dodać komentarza',
+	'S_ALARM_ACKNOWLEDGES_BIG'=>			'POTWIERDZENIA ALARMÓW',
+	'S_ACKNOWLEDGE_ADDED'=>				'Potwierdzenie dodane',
+	'S_SYS_BULK_ACKNOWLEDGE'=>			'----[POTWIERDZENIE ZBIOROWE]----',
+	'S_BULK_ACKNOWLEDGE'=>				'Potwierdzenie zbiorowe',
+	'S_AT_MOMENT'=>					'Teraz',
+	'S_INFINITY'=>					'Nieskończoność',
+	'S_RECOVERY_MESSAGE'=>				'Komunikat odzyskania',
+	'S_CONFIGURATION_OF_ACTIONS'=>			'Konfiguracja działań',
+	'S_CONFIGURATION_OF_ACTIONS_BIG'=>		'KONFIGURACJA DZIAŁAŃ',
+	'S_FILTER_HOST_GROUP'=>				'Filtr: grupa stacji',
+	'S_FILTER_HOST'=>				'Filtr: Stacja',
+	'S_FILTER_TRIGGER'=>				'Filtr: Wyzwalacz',
+	'S_FILTER_TRIGGER_NAME'=>			'Filtr: Nazwa wyzwalacza',
+	'S_FILTER_TRIGGER_SEVERITY'=>			'Filtr: Drastyczność wyzwalacza',
+	'S_FILTER_WHEN_TRIGGER_BECOMES'=>		'Filtr: Kiedy wyzwalacz staje się',
+	'S_OPERATION_TYPE'=>				'Typ operacji',
+	'S_SEND_MESSAGE'=>				'Wyślij wiadomość',
+	'S_REMOTE_COMMAND'=>				'Polecenie zdalne',
+	'S_REMOTE_COMMANDS'=>				'Polecenia zdalne',
+	'S_FILTER'=>					'Filtr',
+	'S_FILTER_TYPE'=>				'Typ filtra',
+	'S_TRIGGER_NAME'=>				'nazwa wyzwalacza',
+	'S_TRIGGER_SEVERITY'=>				'Drastyczność wyzwalacza',
+	'S_TRIGGER_VALUE'=>				'Wartość wyzwalacza',
+	'S_TIME_PERIOD'=>				'Okres',
+	'S_MAX_VALUE_SMALL'=>				'wartość maksymalna',
+	'S_MIN_VALUE_SMALL'=>				'wartość minimalna',
+	'S_TRIGGER_DESCRIPTION'=>			'Opis wyzwalacza',
+	'S_ACTION_CONDITIONS'=>				'Warunki działania',
+	'S_OPERATION_CONDITION'=>			'Warunek operacji',
+	'S_CONDITIONS'=>				'Warunki',
+	'S_CONDITION'=>					'Warunek',
+	'S_NEW_CONDITION'=>				'Nowy warunek',
+	'S_ACTION_OPERATIONS'=>				'Operacje działania',
+	'S_OPERATIONS'=>				'Operacje',
+	'S_OPERATION'=>					'Operacja',
+	'S_NEW_OPERATION'=>				'Nowa operacja',
+	'S_EDIT_OPERATION'=>				'Edycja operacji',
+	'S_NO_CONDITIONS_DEFINED'=>			'Brak zdefiniowanych warunków',
+	'S_ACTIONS_DELETED'=>				'Działania usunięte',
+	'S_CANNOT_DELETE_ACTIONS'=>			'Nie można usunąć działań',
+	'S_NO_OPERATIONS_DEFINED'=>			'Brak zdefiniowanych operacji',
+	'S_NEW'=>					'Nowy',
+	'S_ADD_HOST'=>					'Dodaj stację',
+	'S_REMOVE_HOST'=>				'Usuń stację',
+	'S_LINK_TO_TEMPLATE'=>				'Łącze do wzorca',
+	'S_CANNOT_LINK_TO_TEMPLATE'=>			'Nie można utworzyć łącza do wzorca',
+	'S_UNLINK_FROM_TEMPLATE'=>			'Usuń łącze do wzorca',
+	'S_CANNOT_UNLINK_FROM_TEMPLATE'=>		'Nie można usunąć łącza do wzorca',
+	'S_HOST_TEMPLATE'=>				'Wzorzec stacji',
+	'S_EVENT_ACKNOWLEDGED'=>			'Zdarzenie potwierdzone',
+	'S_INCORRECT_TRIGGER'=>				'Niepoprawny wyzwalacz',
+	'S_INCORRECT_HOST'=>				'Niepoprawna stacja',
+	'S_INCORRECT_PERIOD'=>				'Niepoprawny okres',
+	'S_INCORRECT_IP'=>				'Niepoprawne IP',
+	'S_INCORRECT_DISCOVERY_CHECK'=>			'Niepoprawne sprawdzenie wykrycia',
+	'S_INCORRECT_PORT'=>				'Niepoprawny port',
+	'S_INCORRECT_DISCOVERY_STATUS'=>		'Niepoprawny status wykrycia',
+	'S_INCORRECT_CONDITION_TYPE'=>			'Niepoprawny typ warunku',
+	'S_INCORRECT_OPERATION_TYPE'=>			'Niepoprawny typ operacji',
+	'S_INCORRECT_USER'=>				'Niepoprawny użytkownik',
+	'S_INCORRECT_STEPS'=>				'Niepoprawne kroki',
+	'S_ACTIONS'=>					'Działania',
+	'S_ACTIONS_BIG'=>				'DZIAŁANIA',
+	'S_MESSAGE_ACTIONS'=>				'Działania komunikatu',
+	'S_COMMAND_ACTIONS'=>				'Działania polecenia',
+	'S_ACTION_ADDED'=>				'Działanie dodane',
+	'S_CANNOT_ADD_ACTION'=>				'Nie można dodać działania',
+	'S_ACTION_UPDATED'=>				'Działanie uaktualnione',
+	'S_CANNOT_UPDATE_ACTION'=>			'Nie można uaktualnić działania',
+	'S_ACTION_DELETED'=>				'Działanie usunięte',
+	'S_CANNOT_DELETE_ACTION'=>			'Nie można usunąć działania',
+	'S_SCOPE'=>					'Zakres',
+	'S_SEND_MESSAGE_TO'=>				'Wyślij wiadomość do',
+	'S_RUN_REMOTE_COMMANDS'=>			'Uruchom zdalne polecenia',
+	'S_WHEN_TRIGGER'=>				'Kiedy wyzwalacz',
+	'S_DELAY'=>					'Opóźnienie',
+	'S_SUBJECT'=>					'Temat',
+	'S_RECOVERY_SUBJECT'=>				'Temat odzyskania',
+	'S_DEFAULT_MESSAGE'=>				'Wiadomość domyślna',
+	'S_DEFAULT_SUBJECT'=>				'Temat domyślny',
+	'S_MESSAGE'=>					'Wiadomość',
+	'S_ON'=>					'WŁĄCZ',
+	'S_OFF'=>					'WYŁĄCZ',
+	'S_NO_ACTIONS_DEFINED'=>			'Brak zdefiniowanych działań',
+	'S_SINGLE_USER'=>				'Pojedyczy użytkownik',
+	'S_USER_GROUP'=>				'Grupa użytkowników',
+	'S_GROUP'=>					'Grupa',
+	'S_USER'=>					'Użytkownik',
+	'S_ON_OR_OFF'=>					'WŁĄCZ lub WYŁĄCZ',
+	'S_DELAY_BETWEEN_MESSAGES_IN_SEC'=>		'Opóźnienie między wiadomościami (w sek.)',
+	'S_DELAY_BETWEEN_EXECUTIONS_IN_SEC'=>		'Opóźnienie między wykonaniami (w sek.)',
+	'S_THIS_TRIGGER_ONLY'=>				'Tylko ten wyzwalacz',
+	'S_ALL_TRIGGERS_OF_THIS_HOST'=>			'Wszystkie wyzwalacze tej stacji',
+	'S_ALL_TRIGGERS'=>				'Wszystkie wyzwalacze',
+	'S_USE_IF_TRIGGER_SEVERITY'=>			'Użyj jeśli waga wyzwalacza(y) jest równa lub większa niż',
+	'S_NOT_CLASSIFIED'=>				'Nie sklasyfikowany',
+	'S_INFORMATION'=>				'Informacja',
+	'S_WARNING'=>					'Ostrzeżenie',
+	'S_AVERAGE'=>					'Średni',
+	'S_HIGH'=>					'Wysoki',
+	'S_DISASTER'=>					'Katastrofa',
+	'S_AND_OR_BIG'=>				'I / LUB',
+	'S_AND_BIG'=>					'I',
+	'S_AND'=>					'i',
+	'S_AND_SYMB'=>					'&',
+	'S_OR_BIG'=>					'LUB',
+	'S_OR'=>					'lub',
+	'S_TYPE_OF_CALCULATION'=>			'Typ obliczeń',
+	'S_CREATE_ACTION'=>				'Utwórz Działanie',
+	'S_ENABLE_SELECTED_ACTIONS_Q'=>			'Włączyć wybrane działania?',
+	'S_DISABLE_SELECTED_ACTIONS_Q'=>		'Wyłączyć wybrane działania?',
+	'S_DELETE_SELECTED_ACTIONS_Q'=>			'Usunąć wybrane działania?',
+	'S_DELETE_SELECTED_ACTION_Q'=>			'Usunąć wybrane działanie?',
+	'S_LIKE_SMALL'=>				'podobne',
+	'S_NOT_LIKE_SMALL'=>				'niepodobne',
+	'S_IN_SMALL'=>					'w',
+	'S_NOT_IN_SMALL'=>				'nie w',
+	'S_RETRIES_LEFT'=>				'Pozostałe próby',
+	'S_ALARMS'=>					'Alarmy',
+	'S_ALARMS_SMALL'=>				'Alarmy',
+	'S_ALARMS_BIG'=>				'ALARMY',
+	'S_SHOW_ONLY_LAST_100'=>			'Pokaż tylko ostatnie 100',
+	'S_SHOW_ALL'=>					'Pokaż wszystko',
+	'S_TIME'=>					'Czas',
+	'S_STATUS'=>					'Status',
+	'S_DURATION'=>					'Czas trwania',
+	'S_SUM'=>					'Suma',
+	'S_TRUE_BIG'=>					'PRAWDA',
+	'S_FALSE_BIG'=>					'FAŁSZ',
+	'S_DISABLED_BIG'=>				'WYŁĄCZONE',
+	'S_UNKNOWN_BIG'=>				'NIEZNANE',
+	'S_HISTORY_OF_ACTIONS_BIG'=>			'HISTORIA DZIAŁAŃ',
+	'S_LATEST_ACTIONS'=>				'Ostatnie działania',
+	'S_ALERTS_BIG'=>				'ALERTY',
+	'S_TYPE'=>					'Typ',
+	'S_RECIPIENTS'=>				'Odbiorca(y)',
+	'S_RECIPIENT'=>					'Odbiorca',
+	'S_ERROR'=>					'Błąd',
+	'S_SENT'=>					'wysłane',
+	'S_EXECUTED'=>					'wykonane',
+	'S_NOT_SENT'=>					'nie wysłane',
+	'S_NO_ACTIONS_FOUND'=>				'Nie znaleziono działań',
+	'S_SHOW_NEXT_100'=>				'Pokaż następne 100',
+	'S_SHOW_PREVIOUS_100'=>				'Pokaż poprzednie 100',
+	'S_LINE'=>					'Linia',
+	'S_FILLED_REGION'=>				'Obszar wypełniony',
+	'S_BOLD_LINE'=>					'Gruba linia',
+	'S_DOT'=>					'Kropka',
+	'S_DASHED_LINE'=>				'Linia przerywana',
+	'S_CUSTOM_GRAPHS'=>				'Wykresy własne',
+	'S_GRAPHS_BIG'=>				'WYKRESY',
+	'S_NO_GRAPHS_TO_DISPLAY'=>			'Brak wykresów do wyświetlenia',
+	'S_SELECT_GRAPH_TO_DISPLAY'=>			'Wybierz wykres do wyświetlenia',
+	'S_PERIOD'=>					'Okres',
+	'S_1H'=>					'1g',
+	'S_2H'=>					'2g',
+	'S_4H'=>					'4g',
+	'S_8H'=>					'8g',
+	'S_12H'=>					'12g',
+	'S_24H'=>					'24g',
+	'S_WEEK_SMALL'=>				'tydzień',
+	'S_MONTH_SMALL'=>				'miesiąc',
+	'S_YEAR_SMALL'=>				'rok',
+	'S_KEEP_PERIOD'=>				'Utrzymaj okres',
+	'S_ON_C'=>					'Włącz',
+	'S_OFF_C'=>					'Wyłącz',
+	'S_MOVE'=>					'Przenieś',
+	'S_NAVIGATE'=>					'Nawiguj',
+	'S_INCREASE'=>					'Zwiększ',
+	'S_DECREASE'=>					'Zmniejsz',
+	'S_RIGHT_DIR'=>					'Prawo',
+	'S_LEFT_DIR'=>					'Lewo',
+	'S_SELECT_GRAPH_DOT_DOT_DOT'=>			'Wybierz wykres...',
+	'S_FULLSCREEN'=>				'Pełny ekran',
+	'S_VIEW'=>					'Widok',
+	'S_BLACK'=>					'Czarny',
+	'S_BLUE'=>					'Niebieski',
+	'S_CYAN'=>					'Fioletowy',
+	'S_DARK_BLUE'=>					'Ciemnoniebieski',
+	'S_DARK_GREEN'=>				'Ciemnozielony',
+	'S_DARK_RED'=>					'Ciemnoczerwony',
+	'S_DARK_YELLOW'=>				'Ciemnożółty',
+	'S_GREEN'=>					'Zielony',
+	'S_RED'=>					'Czerwony',
+	'S_WHITE'=>					'Biały',
+	'S_YELLOW'=>					'Żółty',
+	'S_THEMES'=>					'Motywy',
+	'S_SYSTEM_DEFAULT'=>				'Domyślny systemowy',
+	'S_BLACK_AND_BLUE'=>				'Czerń i błękit',
+	'S_ORIGINAL_BLUE'=>				'Pierwotny błękit',
+	'S_DEFAULT_THEME'=>				'Motyw domyślny',
+	'S_EVENT_ACKNOWLEDGES'=>			'Potwierdzenia zdarzeń',
+	'S_DAYS'=>					'Dni',
+	'S_SHOW_EVENTS_NOT_OLDER'=>			'Pokaż zdarzenia nie starsze',
+	'S_SHOW_EVENTS_MAX'=>				'Pokaż maks. zdarzeń',
+	'S_MAX_COUNT_OF_EVENTS'=>			'Maksymalna pokazywana liczba zdarzeń na wyzwalacz',
+	'S_CANNNOT_UPDATE_VALUE_MAP'=>			'Nie można uaktualnić mapy wartości',
+	'S_VALUE_MAP_ADDED'=>				'Dodano mapę wartości',
+	'S_CANNNOT_ADD_VALUE_MAP'=>			'Nie można dodać mapy wartości',
+	'S_VALUE_MAP_DELETED'=>				'Usunięto mapę wartości',
+	'S_CANNNOT_DELETE_VALUE_MAP'=>			'Nie można usunąć mapy wartości',
+	'S_VALUE_MAP_UPDATED'=>				'Uaktualniono mapę wartości',
+	'S_VALUE_MAPPING_BIG'=>				'MAPOWANIE WARTOŚCI',
+	'S_VALUE_MAPPING'=>				'Mapowanie wartości',
+	'S_VALUE_MAP'=>					'Mapa wartości',
+	'S_MAPPING'=>					'Mapowanie',
+	'S_NEW_MAPPING'=>				'Nowe mapowanie',
+	'S_NO_MAPPING_DEFINED'=>			'Brak zdefiniowanego mapowania',
+	'S_CREATE_VALUE_MAP'=>				'Utwórz mapę wartości',
+	'S_CONFIGURATION_OF_ZABBIX'=>			'Konfiguracja ZABBIXa',
+	'S_CONFIGURATION_OF_ZABBIX_BIG'=>		'KONFIGURACJA ZABBIXA',
+	'S_CONFIGURATION_UPDATED'=>			'Konfiguracja uaktualniona',
+	'S_CONFIGURATION_WAS_NOT_UPDATED'=>		'Nie uaktualniono konfiguracji',
+	'S_ADDED_NEW_MEDIA_TYPE'=>			'Dodano nowy typ mediów',
+	'S_NEW_MEDIA_TYPE_WAS_NOT_ADDED'=>		'Nie dodano nowego typu mediów',
+	'S_MEDIA_TYPE_UPDATED'=>			'Uaktualniono typ mediów',
+	'S_MEDIA_TYPE_WAS_NOT_UPDATED'=>		'Nie uaktualniono typu mediów',
+	'S_MEDIA_TYPE_DELETED'=>			'Usunięto typ mediów',
+	'S_MEDIA_TYPE_WAS_NOT_DELETED'=>		'Nie usunięto typu mediów',
+	'S_CONFIGURATION'=>				'Konfiguracja',
+	'S_ADMINISTRATION'=>				'Administracja',
+	'S_DO_NOT_KEEP_ACTIONS_OLDER_THAN'=>		'Nie zachowuj działań starszych niż (w dniach)',
+	'S_DO_NOT_KEEP_EVENTS_OLDER_THAN'=>		'Nie zachowuj zdarzeń starszych niż (w dniach)',
+	'S_NO_MEDIA_TYPES_DEFINED'=>			'Brak zdefiniowanych typów mediów',
+	'S_SMTP_SERVER'=>				'Serwer SMTP',
+	'S_SMTP_HELO'=>					'SMTP helo',
+	'S_SMTP_EMAIL'=>				'SMTP email',
+	'S_SCRIPT_NAME'=>				'Nazwa skryptu',
+	'S_DELETE_SELECTED_MEDIA'=>			'Usunąć wybrane media?',
+	'S_DELETE_SELECTED_IMAGE'=>			'Usunąć wybrany obraz?',
+	'S_HOUSEKEEPER'=>				'Sprzątacz',
+	'S_MEDIA_TYPES'=>				'Typy mediów',
+	'S_ESCALATION_RULES'=>				'Reguły eskalacji',
+	'S_ENABLE_ESCALATIONS'=>			'Włącz eskalacje',
+	'S_ESCALATION'=>				'Eskalacja',
+	'S_ESCALATION_RULES_BIG'=>			'REGUŁY ESKALACJI',
+	'S_NO_ESCALATION_RULES_DEFINED'=>		'Brak zdefiniowanych reguł eskalacji',
+	'S_NO_ESCALATION_DETAILS'=>			'Brak szczegółów eskalacji',
+	'S_ESCALATION_DETAILS_BIG'=>			'SZCZEGÓŁY ESKALACJI',
+	'S_ESCALATION_ADDED'=>				'Dodano eskalację',
+	'S_ESCALATION_WAS_NOT_ADDED'=>			'Nie dodano eskalacji',
+	'S_ESCALATION_RULE_ADDED'=>			'Dodano regułę eskalacji',
+	'S_ESCALATION_RULE_WAS_NOT_ADDED'=>		'Nie dodano reguły eskalacji',
+	'S_ESCALATION_RULE_UPDATED'=>			'Uaktualniono regułę eskalacji',
+	'S_ESCALATION_RULE_WAS_NOT_UPDATED'=>		'Nie uaktualniono reguły eskalacji',
+	'S_ESCALATION_RULE_DELETED'=>			'Usunięto regułę eskalacji',
+	'S_ESCALATION_RULE_WAS_NOT_DELETED'=>		'Nie usunięto reguły eskalacji',
+	'S_ESCALATION_UPDATED'=>			'Uaktualniono eskalację',
+	'S_ESCALATION_WAS_NOT_UPDATED'=>		'Nie uaktualniono eskalacji',
+	'S_ESCALATION_DELETED'=>			'Usunięto eskalację',
+	'S_ESCALATION_WAS_NOT_DELETED'=>		'Nie usunięto eskalacji',
+	'S_ESCALATION_RULE'=>				'Reguła eskalacji',
+	'S_DO'=>					'Zrób',
+	'S_DEFAULT'=>					'Domyślnie',
+	'S_IS_DEFAULT'=>				'Jest domyślnie',
+	'S_LEVEL'=>					'Poziom',
+	'S_DELAY_BEFORE_ACTION'=>			'Opóźnienie przed działaniem',
+	'S_IMAGES'=>					'Obrazy',
+	'S_IMAGE'=>					'Obraz',
+	'S_IMAGES_BIG'=>				'OBRAZY',
+	'S_ICON'=>					'Ikona',
+	'S_NO_IMAGES_DEFINED'=>				'Brak zdefiniowanych obrazów',
+	'S_BACKGROUND'=>				'Tło',
+	'S_UPLOAD'=>					'Załaduj',
+	'S_IMAGE_ADDED'=>				'Dodano obraz',
+	'S_CANNOT_ADD_IMAGE'=>				'Nie można dodać obrazu',
+	'S_IMAGE_DELETED'=>				'Usunięto obraz',
+	'S_CANNOT_DELETE_IMAGE'=>			'Nie można usunąć obrazu',
+	'S_IMAGE_UPDATED'=>				'Uaktualniono obraz',
+	'S_CANNOT_UPDATE_IMAGE'=>			'Nie można uaktualnić obrazu',
+	'S_UPDATE_SELECTED_IMAGE'=>			'Uaktualnić wybrany obraz?',
+	'S_PRIORITY'=>					'Priorytet',
+	'S_PATTERN'=>					'Wzór',
+	'S_OTHER'=>					'Inne',
+	'S_OTHER_PARAMETERS'=>				'Inne parametry',
+	'S_REFRESH_UNSUPPORTED_ITEMS'=>			'Odśwież nie wspierane elementy (w sek.)',
+	'S_CREATE_MEDIA_TYPE'=>				'Utwórz Typ Mediów',
+	'S_CREATE_IMAGE'=>				'Utwórz Obraz',
+	'S_WORKING_TIME'=>				'Czas pracy',
+	'S_USER_GROUP_FOR_DATABASE_DOWN_MESSAGE'=>	'Grupa użytkowników dla wiadomości o wyłączeniu bazy danych',
+	'S_INCORRECT_GROUP'=>				'Niepoprawna grupa',
+	'S_NOTHING_TO_DO'=>				'Nic do zrobienia',
+	'S_ICORRECT_WORK_PERIOD'=>			'Niepoprawny okres pracy',
+	'S_NODE'=>					'Węzeł',
+	'S_NODES'=>					'Węzły',
+	'S_NODES_BIG'=>					'WĘZŁY',
+	'S_NEW_NODE'=>			'		Nowy węzeł',
+	'S_NO_NODES_DEFINED'=>				'Brak zdefiniowanych węzłów',
+	'S_AUTHENTICATION'=>				'Uwierzytelnienie',
+	'S_AUTHENTICATION_TO_ZABBIX'=>			'Uwierzytelnienie w ZABBIXie',
+	'S_BASE_DN'=>					'Podstawowe DN',
+	'S_BIND_DN'=>					'DN do dowiązania',
+	'S_BIND_PASSWORD'=>				'Hasło do dowiązania',
+	'S_SEARCH_ATTRIBUTE'=>				'Atrybut wyszukiwania',
+	'S_TEST'=>					'Test',
+	'S_WAS_NOT'=>					'nie był',
+	'S_SUCCESSFUL_SMALL'=>				'udany',
+	'S_MUST_BE_VALID_SMALL'=>			'musi być ważny',
+	'S_LDAP_AUTH'=>					'Uwierzytelnienie LDAP',
+	'S_HTTP_AUTH'=>					'Uwierzytelnienie HTTP',
+	'S_ZABBIX_INTERNAL_AUTH'=>			'Wewnętrzne uwierzytelnienie ZABBIXa',
+	'S_DEFAULT_AUTHENTICATION'=>			'Domyślne uwierzytelnienie',
+	'S_LATEST_VALUES'=>				'Ostatnie wartości',
+	'S_NO_PERMISSIONS'=>				'Brak uprawnień!',
+	'S_LATEST_DATA_BIG'=>				'OSTATNIE DANE',
+	'S_ALL_S'=>					'Wszystkie',
+	'S_ALL_SMALL'=>					'wszystkie',
+	'S_ALL_BIG'=>					'WSZYSTKIE',
+	'S_MINUS_ALL_MINUS'=>				'- wszystkie -',
+	'S_MINUS_OTHER_MINUS'=>				'- inne -',
+	'S_DESCRIPTION_LARGE'=>				'OPIS',
+	'S_DESCRIPTION_SMALL'=>				'Opis',
+	'S_NO_DESCRIPTION'=>				'Brak opisu',
+	'S_GRAPH'=>					'Wykres',
+	'S_TREND'=>					'Trend',
+	'S_COMPARE'=>					'Porównanie',
+	'S_COPYRIGHT_BY'=>				'Prawa autorskie 2001-2009 dla',
+	'S_CONNECTED_AS'=>				'Połączony jako',
+	'S_NOT_CONNECTED'=>				'Nie połączony',
+	'S_SIA_ZABBIX'=>				'SIA Zabbix',
+	'S_CONFIGURATION_OF_GRAPH'=>			'Konfiguracja wykresu',
+	'S_CONFIGURATION_OF_GRAPH_BIG'=>		'KONFIGURACJA WYKRESU',
+	'S_ITEM_ADDED'=>				'Dodano element',
+	'S_ITEM_UPDATED'=>				'Uaktualniono element',
+	'S_ITEMS_UPDATED'=>				'Uaktualniono elementy',
+	'S_ITEM_NOT_EXISTS'=>				'Element nie istnieje',
+	'S_SORT_ORDER_UPDATED'=>			'Uaktualniono porządek sortowania',
+	'S_CANNOT_UPDATE_SORT_ORDER'=>			'Nie można uaktualnić porządku sortowania',
+	'S_DISPLAYED_PARAMETERS_BIG'=>			'WYŚWIETLANE PARAMETRY',
+	'S_SORT_ORDER'=>				'Porządek sortowania',
+	'S_PARAMETER'=>					'Parametr',
+	'S_COLOR'=>					'Kolor',
+	'S_UP'=>					'W górę',
+	'S_DOWN'=>					'W dół',
+	'S_NEW_ITEM_FOR_THE_GRAPH'=>			'Nowy element wykresu',
+	'S_SORT_ORDER_1_100'=>				'Porządek sortowania (0->100)',
+	'S_YAXIS_SIDE'=>				'Strona osi Y',
+	'S_LEFT'=>					'Lewy',
+	'S_FUNCTION'=>					'Funkcja',
+	'S_MIN_SMALL'=>					'min',
+	'S_AVG_SMALL'=>					'średnio',
+	'S_MAX_SMALL'=>					'max',
+	'S_LST_SMALL'=>					'ostatni',
+	'S_DRAW_STYLE'=>				'Styl rysowania',
+	'S_SIMPLE'=>					'Prosty',
+	'S_GRAPH_TYPE'=>				'Typ wykresu',
+	'S_STACKED'=>					'Warstwowy',
+	'S_NORMAL'=>					'Normalny',
+	'S_PIE'=>					'Kołowy',
+	'S_EXPLODED'=>					'Rozsunięty',
+	'S_AGGREGATED'=>				'Skumulowany',
+	'S_AGGREGATED_PERIODS_COUNT'=>			'Zliczenie skumulowanych okresów',
+	'S_PERCENTILE_LINE'=>				'Linia procentowa',
+	'S_CONFIGURATION_OF_GRAPHS'=>			'Konfiguracja wykresów',
+	'S_CONFIGURATION_OF_GRAPHS_BIG'=>		'KONFIGURACJA WYKRESÓW',
+	'S_GRAPH_ADDED'=>				'Dodano wykres',
+	'S_GRAPH_UPDATED'=>				'Uaktualniono wykres',
+	'S_CANNOT_UPDATE_GRAPH'=>			'Nie można uaktualnić wykresu',
+	'S_GRAPH_DELETED'=>				'Usunięto wykres',
+	'S_CANNOT_DELETE_GRAPH'=>			'Nie można usunąć wykresu',
+	'S_CANNOT_ADD_GRAPH'=>				'Nie można dodać wykresu',
+	'S_ANOTHER_ITEM_SUM'=>				'Nie można dodać kolejnego elementu o typie \"Suma wykresu\"',
+	'S_ID'=>					'Id',
+	'S_NO_GRAPHS_DEFINED'=>				'Brak zdefiniowanych wykresów',
+	'S_NO_GRAPH_DEFINED'=>				'Brak zdefiniowanego wykresu',
+	'S_DELETE_GRAPH_Q'=>				'Usunąć wykres?',
+	'S_YAXIS_TYPE'=>				'Typ osi Y',
+	'S_YAXIS_MIN_VALUE'=>				'MIN wartość osi Y',
+	'S_YAXIS_MAX_VALUE'=>				'MAX wartość osi Y',
+	'S_CALCULATED'=>				'Obliczone',
+	'S_CALCULATED_0_MIN'=>				'Obliczone [Min=0]',
+	'S_FIXED'=>					'Stałe',
+	'S_CREATE_GRAPH'=>				'Utwórz Wykres',
+	'S_SHOW_WORKING_TIME'=>				'Pokaż czas pracy',
+	'S_SHOW_TRIGGERS'=>				'Pokaż wyzwalacze',
+	'S_3D_VIEW'=>					'Widok 3D',
+	'S_LEGEND'=>					'Legenda',
+	'S_GRAPH_SUM'=>					'Suma wykresu',
+	'S_GRAPH_ITEM'=>				'Element wykresu',
+	'S_REQUIRED_ITEMS_FOR_GRAPH'=>			'Elementy wymagane dla wykresu',
+	'S_SECONDS_SMALL'=>				'sekundy',
+	'S_SEC_SMALL'=>					'sek.',
+	'S_TILL_SMALL'=>				'do',
+	'S_SELECT_ROWS_WITH_VALUE_LIKE'=>		'Wybierz wiersze z wartościami jak',
+	'S_SHOWING_HISTORY_OF'=>			'Pokazuję historię',
+	'S_LAST_HOUR_GRAPH'=>				'Wykres z ostatniej godziny',
+	'S_LAST_WEEK_GRAPH'=>				'Wykres z ostatniego tygodnia',
+	'S_LAST_MONTH_GRAPH'=>				'Wykres z ostatniego miesiąca',
+	'S_VALUES_OF_LAST_HOUR'=>			'Wartości z ostatniej godziny',
+	'S_500_LATEST_VALUES'=>				'500 ostatnich wartości',
+	'S_VALUES_IN_PLAIN_TEXT_FORMAT'=>		'Wartości w postaci czystego tekstu',
+	'S_TIMESTAMP'=>					'Odcisk czasowy',
+	'S_LOCAL'=>					'Lokalny',
+	'S_SOURCE'=>					'Źródło',
+	'S_SHOW_UNKNOWN'=>				'Pokaż nieznane',
+	'S_HIDE_UNKNOWN'=>				'Ukryj nieznane',
+	'S_SHOW_SELECTED'=>				'Pokaż wybrane',
+	'S_HIDE_SELECTED'=>				'Ukryj wybrane',
+	'S_MARK_SELECTED'=>				'Zaznacz wybrane',
+	'S_MARK_OTHERS'=>				'Zaznacz inne',
+	'S_AS_RED'=>					'jako Czerwone',
+	'S_AS_GREEN'=>					'jako Zielone',
+	'S_AS_BLUE'=>					'jako Niebieskie',
+	'S_IN'=>					'W',
+	'S_APPLICATION'=>				'Aplikacja',
+	'S_APPLICATIONS'=>				'Aplikacje',
+	'S_APPLICATIONS_BIG'=>				'APLIKACJE',
+	'S_CREATE_APPLICATION'=>			'Utwórz aplikację',
+	'S_DELETE_SELECTED_APPLICATIONS_Q'=>		'Usunąć wybrane aplikacje?',
+	'S_DISABLE_ITEMS_FROM_SELECTED_APPLICATIONS_Q'=>	'Wyłączyć elementy z wybranych aplikacji?',
+	'S_ACTIVATE_ITEMS'=>				'Aktywuj Elementy',
+	'S_DISABLE_ITEMS'=>				'Wyłącz Elementy',
+	'S_ACTIVATE_ITEMS_FROM_SELECTED_APPLICATIONS_Q'=>	'Aktywować elementy z wybranych aplikacji?',
+	'S_APPLICATION_UPDATED'=>			'Aplikacja uaktualniona',
+	'S_CANNOT_UPDATE_APPLICATION'=>			'Nie można uaktualnić aplikacji',
+	'S_APPLICATION_ADDED'=>				'Dodano aplikację',
+	'S_CANNOT_ADD_APPLICATION'=>			'Nie można dodać aplikacji',
+	'S_APPLICATION_DELETED'=>			'Usunięto aplikację',
+	'S_CANNOT_DELETE_APPLICATION'=>			'Nie można usunąć aplikacji',
+	'S_NO_APPLICATIONS_DEFINED'=>			'Brak zdefiniowanych aplikacji',
+	'S_HOSTS'=>					'Stacje',
+	'S_ALL_HOSTS_BIG'=>				'WSZYSTKIE STACJE',
+	'S_ITEMS'=>					'Elementy',
+	'S_ITEMS_BIG'=>					'ELEMENTY',
+	'S_TRIGGERS'=>					'Wyzwalacze',
+	'S_GRAPHS'=>					'Wykresy',
+	'S_HOST_ADDED'=>				'Dodano stację',
+	'S_CANNOT_ADD_HOST'=>				'Nie można dodać stacji',
+	'S_ITEMS_ADDED'=>				'Dodano elementy',
+	'S_ITEMS_COPIED'=>				'Skopiowano elementy',
+	'S_CANNOT_COPY_ITEMS'=>				'Nie można skopiować elementów',
+	'S_CANNOT_ADD_ITEMS'=>				'Nie można dodać elementów',
+	'S_HOST_UPDATED'=>				'Stacja uaktualniona',
+	'S_CANNOT_UPDATE_HOST'=>			'Nie można uaktualnić stacji',
+	'S_CANNOT_UPDATE'=>				'Nie można uaktualnić',
+	'S_HOST_STATUS_UPDATED'=>			'Uaktualniono status stacji',
+	'S_CANNOT_UPDATE_HOST_STATUS'=>			'Nie można uaktualnić statusu stacji',
+	'S_HOST_DELETED'=>				'Usunięto stację',
+	'S_CANNOT_DELETE_HOST'=>			'Nie można usunąć stacji',
+	'S_TEMPLATE_LINKAGE_ADDED'=>			'Dodano powiązanie do wzorca',
+	'S_CANNOT_ADD_TEMPLATE_LINKAGE'=>		'Nie można dodać powiązania do wzorca',
+	'S_TEMPLATE_LINKAGE_UPDATED'=>			'Uaktualniono powiązanie do wzorca',
+	'S_CANNOT_UPDATE_TEMPLATE_LINKAGE'=>		'Nie można uaktualnić powiązania do wzorca',
+	'S_TEMPLATE_LINKAGE_DELETED'=>			'Usunięto powiązanie do wzorca',
+	'S_CANNOT_DELETE_TEMPLATE_LINKAGE'=>		'Nie można usunąć powiązania do wzorca',
+	'S_CONFIGURATION_OF_HOSTS_GROUPS_AND_TEMPLATES'=>	'KONFIGURACJA STACJI, GRUP I WZORCÓW',
+	'S_HOST_GROUPS_BIG'=>				'GRUPY STACJI',
+	'S_START'=>					'Start',
+	'S_STOP'=>					'Stop',
+	'S_NO_HOST_GROUPS_DEFINED'=>			'Brak zdefiniowanych grup stacji',
+	'S_NO_LINKAGES_DEFINED'=>			'Brak zdefiniowanych powiązań',
+	'S_NO_HOSTS_DEFINED'=>				'Brak zdefiniowanych stacji',
+	'S_NO_TEMPLATES_DEFINED'=>			'Brak zdefiniowanych wzorców',
+	'S_NO_PROXIES_DEFINED'=>			'Brak zdefiniowanych proxy',
+	'S_HOSTS_BIG'=>					'STACJE',
+	'S_HOST'=>					'Stacja',
+	'S_HOST_BIG'=>					'STACJA',
+	'S_CONNECT_TO'=>				'Połącz z',
+	'S_DNS'=>					'DNS',
+	'S_IP'=>					'IP',
+	'S_PORT'=>					'Port',
+	'S_MONITORED'=>					'Monitorowany',
+	'S_NOT_MONITORED'=>				'Nie monitorowany',
+	'S_UNREACHABLE'=>				'Nieosiągalny',
+	'S_TEMPLATE'=>					'Wzorzec',
+	'S_TEMPLATE_SMALL'=>				'wzorzec',
+	'S_DELETED'=>					'Usunięto',
+	'S_UNKNOWN'=>					'Nieznany',
+	'S_GROUPS'=>					'Grupy',
+	'S_MINUS_ALL_GROUPS_MINUS'=>			'- wszystkie grupy -',
+	'S_NO_GROUPS_DEFINED'=>				'Brak zdefiniowanych grup',
+	'S_FOR_GROUP_SMALL'=>				'dla grupy',
+	'S_FOR_NODE_SMALL'=>				'dla węzła',
+	'S_NEW_GROUP'=>					'Nowa grupa',
+	'S_DNS_NAME'=>					'Nazwa DNS',
+	'S_IP_ADDRESS'=>				'Adres IP',
+	'S_LINK_WITH_TEMPLATE'=>			'Powiąż ze Wzorcem',
+	'S_USEIPMI'=>					'Użyj IPMI',
+	'S_IPMI_IP_ADDRESS'=>				'Adres IP IPMI',
+	'S_IPMI_PORT'=>					'Port IPMI',
+	'S_IPMI_AUTHTYPE'=>				'Algorytm uwierzytelnienia IPMI',
+	'S_AUTHTYPE_DEFAULT'=>				'Domyślny',
+	'S_AUTHTYPE_NONE'=>				'Brak',
+	'S_AUTHTYPE_MD2'=>				'MD2',
+	'S_AUTHTYPE_MD5'=>				'MD5',
+	'S_AUTHTYPE_STRAIGHT'=>				'Prosty',
+	'S_AUTHTYPE_OEM'=>				'OEM',
+	'S_AUTHTYPE_RMCP_PLUS'=>			'RMCP+',
+	'S_IPMI_PRIVILEGE'=>				'Poziom uprzywilejowania IPMI',
+	'S_PRIVILEGE_CALLBACK'=>			'Oddzwanianie',
+	'S_PRIVILEGE_USER'=>				'Użytkownik',
+	'S_PRIVILEGE_OPERATOR'=>			'Operator',
+	'S_PRIVILEGE_ADMIN'=>				'Admin',
+	'S_PRIVILEGE_OEM'=>				'OEM',
+	'S_IPMI_USERNAME'=>				'Użytkownik IPMI',
+	'S_IPMI_PASSWORD'=>				'Hasło IPMI',
+	'S_USE_PROFILE'=>				'Użyj profilu',
+	'S_DELETE_SELECTED_HOST_Q'=>			'Usunąć wybraną stację?',
+	'S_DELETE_SELECTED_GROUP_Q'=>			'Usunąć wybraną grupę?',
+	'S_DELETE_SELECTED_GROUPS_Q'=>			'Usunąć wybrane grupy?',
+	'S_DELETE_SELECTED_WITH_LINKED_ELEMENTS'=>	'Usunąć wybrane z powiązanymi elementami',
+	'S_GROUP_NAME'=>				'Nazwa grupy',
+	'S_HOST_GROUP'=>				'Grupa stacji',
+	'S_HOST_GROUPS'=>				'Grupy stacji',
+	'S_UPDATE'=>					'Uaktualnij',
+	'S_AVAILABILITY'=>				'Dostępność',
+	'S_AVAILABLE'=>					'Dostępne',
+	'S_NOT_AVAILABLE'=>				'Niedostępne',
+	'S_PROXIES'=>					'Proxy',
+	'S_PROXIES_BIG'=>				'PROXY',
+	'S_PROXY'=>					'Proxy',
+	'S_CREATE_PROXY'=>				'Utwórz Proxy',
+	'S_PROXY_NAME'=>				'Nazwa proxy',
+	'S_LASTSEEN_AGE'=>				'Ostatnio widziane (wiek)',
+	'S_TRANSACTION'=>				'Transakcja',
+	'S_STARTED_BIG'=>				'URUCHOMIONE!',
+	'S_COMMITED_BIG'=>				'ZAPISANE!',
+	'S_ROLLBACKED_BIG'=>				'COFNIĘTE!',
+	'S_HOST_PROFILE'=>				'Profil stacji',
+	'S_DEVICE_TYPE'=>				'Typ urządzenia',
+	'S_OS'=>					'OS',
+	'S_SERIALNO'=>					'Nr seryjny',
+	'S_TAG'=>					'Etykieta',
+	'S_HARDWARE'=>					'Sprzęt',
+	'S_SOFTWARE'=>					'Oprogramowanie',
+	'S_CONTACT'=>					'Kontakt',
+	'S_LOCATION'=>					'Lokalizacja',
+	'S_NOTES'=>					'Notatki',
+	'S_MACADDRESS'=>				'Adres MAC',
+	'S_PROFILE_ADDED'=>				'Dodano profil',
+	'S_CANNOT_ADD_PROFILE'=>			'Nie można dodać profilu',
+	'S_PROFILE_UPDATED'=>				'Uaktualniono profil',
+	'S_CANNOT_UPDATE_PROFILE'=>			'Nie mozna uaktualnić profilu',
+	'S_PROFILE_DELETED'=>				'Usunięto profil',
+	'S_CANNOT_DELETE_PROFILE'=>			'Nie można usunąć profilu',
+	'S_ADD_TO_GROUP'=>				'Dodaj do grupy',
+	'S_DELETE_FROM_GROUP'=>				'Usuń z grupy',
+	'S_UPDATE_IN_GROUP'=>				'Uaktualnij w grupie',
+	'S_DELETE_SELECTED_HOSTS_Q'=>			'Usunąć wybrane stacje?',
+	'S_DISABLE_SELECTED_HOSTS_Q'=>			'Wyłączyć wybrane stacje?',
+	'S_ACTIVATE_SELECTED_HOSTS_Q'=>			'Włączyć wybrane stacje?',
+	'S_SELECT_HOST_TEMPLATE_FIRST'=>		'Wybierz wpierw wzorzec stacji',
+	'S_CREATE_HOST'=>				'Utwórz Stację',
+	'S_CREATE_TEMPLATE'=>				'Utwórz Wzorzec',
+	'S_TEMPLATE_LINKAGE'=>				'Powiązanie wzorca',
+	'S_TEMPLATE_LINKAGE_BIG'=>			'POWIĄZANIE WZORCA',
+	'S_NO_LINKAGES'=>				'Brak Powiązań',
+	'S_TEMPLATES'=>					'Wzorce',
+	'S_TEMPLATES_BIG'=>				'WZORCE',
+	'S_UNLINK'=>					'Odwiąż',
+	'S_UNLINK_AND_CLEAR'=>				'Odwiąż i wyczyść',
+	'S_UNLINKED_SMALL'=>				'Odwiązano',
+	'S_CLEANED_SMALL'=>				'Wyczyszczono',
+	'S_MONITORED_BY_PROXY'=>			'Monitorowany przez proxy',
+	'S_USE_EXTENDED_PROFILE'=>			'Użyj profilu rozszerzonego',
+	'S_DEVICE_ALIAS'=>				'Alias',
+	'S_DEVICE_CHASSIS'=>				'Obudowa Urządzenia',
+	'S_DEVICE_OS'=>					'OS (Szczegóły)',
+	'S_DEVICE_OS_SHORT'=>				'OS (W skrócie)',
+	'S_DEVICE_HW_ARCH'=>				'Architektura sprzętu',
+	'S_DEVICE_SERIAL'=>				'Numer Seryjny',
+	'S_DEVICE_MODEL'=>				'Numer Modelu',
+	'S_DEVICE_TAG'=>				'Etykietka Zasobu',
+	'S_DEVICE_VENDOR'=>				'Dostawca Urządzenia',
+	'S_DEVICE_CONTRACT'=>				'Numer Kontraktowy Urządzenia',
+	'S_DEVICE_WHO'=>				'Nazwa Instalatora',
+	'S_DEVICE_STATUS'=>				'Status Wdrożenia Urządzenia',
+	'S_DEVICE_APP_01'=>				'Aplikacja programowa #1',
+	'S_DEVICE_APP_02'=>				'Aplikacja programowa #2',
+	'S_DEVICE_APP_03'=>				'Aplikacja programowa #3',
+	'S_DEVICE_APP_04'=>				'Aplikacja programowa #4',
+	'S_DEVICE_APP_05'=>				'Aplikacja programowa #5',
+	'S_DEVICE_URL_1'=>				'URL #1',
+	'S_DEVICE_URL_2'=>				'URL #2',
+	'S_DEVICE_URL_3'=>				'URL #3',
+	'S_DEVICE_NETWORKS'=>				'Połączenia Portów Urządzenia',
+	'S_DEVICE_NOTES'=>				'Urządzenie: Notatki',
+	'S_DEVICE_HARDWARE'=>				'Urządzenie: Sprzęt',
+	'S_DEVICE_SOFTWARE'=>				'Urządzenie: Oprogramowanie',
+	'S_IP_HOST'=>					'Adres IP Stacji',
+	'S_IP_SUBNET_MASK'=>				'Maska Podsieci Stacji',
+	'S_IP_ROUTER'=>					'Router Stacji',
+	'S_IP_MACADDRESS'=>				'Adres MAC Stacji',
+	'S_OOB_IP'=>					'Adres OOB IP',
+	'S_OOB_SUBNET_MASK'=>				'Maska podsieci OOB',
+	'S_OOB_ROUTER'=>				'Router OOB',
+	'S_DATE_HW_BUY'=>				'Data Zakupu Sprzętu',
+	'S_DATE_HW_INSTALL'=>				'Data Instalacji Sprzętu',
+	'S_DATE_HW_EXPIRY'=>				'Data Wygaśnięcia Serwisu Sprzętu',
+	'S_DATE_HW_DECOMM'=>				'Data Zdania Sprzętu',
+	'S_SITE_STREET_1'=>				'Adres Lokalizacji 1',
+	'S_SITE_STREET_2'=>				'Adres Lokalizacji 2',
+	'S_SITE_STREET_3'=>				'Adres Lokalizacji 3',
+	'S_SITE_CITY'=>					'Miasto Lokalizacji',
+	'S_SITE_STATE'=>				'Województwo Lokalizacji',
+	'S_SITE_COUNTRY'=>				'Państwo Lokalizacji',
+	'S_SITE_ZIP'=>					'Kod pocztowy Lokalizacji',
+	'S_SITE_RACK'=>					'Lokalizacja Szafy Rackowej',
+	'S_SITE_NOTES'=>				'Lokalizacja - notatki',
+	'S_POC_1_NAME'=>				'Kontakt Główny - Nazwa',
+	'S_POC_1_EMAIL'=>				'Kontakt Główny - Email',
+	'S_POC_1_PHONE_1'=>				'Kontakt Główny - Telefon 1',
+	'S_POC_1_PHONE_2'=>				'Kontakt Główny - Telefon 2',
+	'S_POC_1_CELL'=>				'Kontakt Główny - Telefon komórkowy',
+	'S_POC_1_SCREEN'=>				'Kontakt Główny - Nazwa na ekranie',
+	'S_POC_1_NOTES'=>				'Kontakt Główny - Komentarz',
+	'S_POC_2_NAME'=>				'Kontakt Dodatkowy - Nazwa',
+	'S_POC_2_EMAIL'=>				'Kontakt Dodatkowy - Email',
+	'S_POC_2_PHONE_1'=>				'Kontakt Dodatkowy - Telefon 1',
+	'S_POC_2_PHONE_2'=>				'Kontakt Dodatkowy - Telefon 2',
+	'S_POC_2_CELL'=>				'Kontakt Dodatkowy - Telefon komórkowy',
+	'S_POC_2_SCREEN'=>				'Kontakt Dodatkowy - Nazwa na ekranie',
+	'S_POC_2_NOTES'=>				'Kontakt Dodatkowy - Komentarz',
+	'S_NO_ITEMS_DEFINED'=>				'Brak zdefiniowanych elementów',
+	'S_NO_ITEM_DEFINED'=>				'Brak zdefiniowanego elementu',
+	'S_HISTORY_CLEANED'=>				'Wyczyszczono historię',
+	'S_CLEAN_HISTORY_SELECTED_ITEMS'=>		'Wyczyść historię wybranych elementów',
+	'S_CLEAN_HISTORY'=>				'Wyczyść historię',
+	'S_CANNOT_CLEAN_HISTORY'=>			'Nie można wyczyścić historii',
+	'S_CONFIGURATION_OF_ITEMS'=>			'Konfiguracja elementów',
+	'S_CONFIGURATION_OF_ITEMS_BIG'=>		'KONFIGURACJA ELEMENTÓW',
+	'S_CANNOT_UPDATE_ITEM'=>			'Nie można uaktualnić elementu',
+	'S_STATUS_UPDATED'=>				'Uaktualniono status',
+	'S_CANNOT_UPDATE_STATUS'=>			'Nie można uaktualnić statusu',
+	'S_CANNOT_ADD_ITEM'=>				'Nie można dodać elementu',
+	'S_ITEM_DELETED'=>				'Usunięto element',
+	'S_CANNOT_DELETE_ITEM'=>			'Nie można usunąć elementu',
+	'S_ITEMS_DELETED'=>				'Usunięto elementy',
+	'S_CANNOT_DELETE_ITEMS'=>			'Nie można usunąć elementów',
+	'S_ITEMS_ACTIVATED'=>				'Włączono elementy',
+	'S_CANNOT_ACTIVATE_ITEMS'=>			'Nie można włączyć elementów',
+	'S_ITEMS_DISABLED'=>				'Wyłączono elementy',
+	'S_CANNOT_DISABLE_ITEMS'=>			'Nie można wyłączyć elementów',
+	'S_SERVERNAME'=>				'Nazwa Serwera',
+	'S_KEY'=>					'Klucz',
+	'S_DESCRIPTION'=>				'Opis',
+	'S_UPDATE_INTERVAL'=>				'Uaktualnij interwał',
+	'S_HISTORY'=>					'Historia',
+	'S_TRENDS'=>					'Trendy',
+	'S_SHORT_NAME'=>				'Nazwa skrócona',
+	'S_ZABBIX_AGENT'=>				'Agent ZABBIXa',
+	'S_ZABBIX_AGENT_ACTIVE'=>			'Agent ZABBIXa (aktywny)',
+	'S_SNMPV1_AGENT'=>				'Agent SNMPv1',
+	'S_ZABBIX_TRAPPER'=>				'Trapper ZABBIXa',
+	'S_SIMPLE_CHECK'=>				'Proste sprawdzenie',
+	'S_SNMPV2_AGENT'=>				'Agent SNMPv2',
+	'S_SNMPV3_AGENT'=>				'Agent SNMPv3',
+	'S_ZABBIX_INTERNAL'=>				'Wewnętrzny ZABBIXa',
+	'S_ZABBIX_DATABASE_MONITOR'=>			'Monitor bazy danych',
+	'S_IPMI_AGENT'=>				'Agent IPMI',
+	'S_ZABBIX_AGGREGATE'=>				'Całość ZABBIXa',
+	'S_EXTERNAL_CHECK'=>				'Sprawdzenie zewnętrzne',
+	'S_WEB_MONITORING'=>				'Monitoring WWW',
+	'S_ZABBIX_UNKNOWN'=>				'Nieznane',
+	'S_ACTIVE'=>					'Aktywne',
+	'S_NOT_ACTIVE'=>				'Nieaktywne',
+	'S_NOT_SUPPORTED'=>				'Nie wspierane',
+	'S_ACTIVATE_SELECTED_ITEMS_Q'=>			'Włączyć wybrane elementy?',
+	'S_DISABLE_SELECTED_ITEMS_Q'=>			'Wyłączyć wybrane elementy?',
+	'S_DELETE_SELECTED_ITEMS_Q'=>			'Usunąć wybrane elementy?',
+	'S_EMAIL'=>					'Email',
+	'S_JABBER'=>					'Jabber',
+	'S_JABBER_IDENTIFIER'=>				'Identyfikator Jabbera',
+	'S_SMS'=>					'SMS',
+	'S_SCRIPT'=>					'Skrypt',
+	'S_GSM_MODEM'=>					'Modem GSM',
+	'S_UNITS'=>					'Jednostki',
+	'S_MULTIPLIER'=>				'Mnożnik',
+	'S_UPDATE_INTERVAL_IN_SEC'=>			'Uaktualnij interwał (w sek.)',
+	'S_KEEP_HISTORY_IN_DAYS'=>			'Trzymaj historię (w dniach)',
+	'S_KEEP_TRENDS_IN_DAYS'=>			'Trzymaj trendy (w dniach)',
+	'S_TYPE_OF_INFORMATION'=>			'Typ informacji',
+	'S_STORE_VALUE'=>				'Zachowaj wartość',
+	'S_SHOW_VALUE'=>				'Pokaż wartość',
+	'S_NUMERIC_UINT64'=>				'Numerycznie (całkowita 64bit)',
+	'S_NUMERIC_FLOAT'=>				'Numerycznie (zmiennoprzecinkowo)',
+	'S_CHARACTER'=>					'Znak',
+	'S_LOG'=>					'Log',
+	'S_TEXT'=>					'Tekst',
+	'S_AS_IS'=>					'Tak jak jest',
+	'S_DELTA_SPEED_PER_SECOND'=>			'Zmiana (prędkość na sekundę)',
+	'S_DELTA_SIMPLE_CHANGE'=>			'Zmiana (prosta zmiana)',
+	'S_ITEM'=>					'Element',
+	'S_SNMP_COMMUNITY'=>				'Wspólnota SNMP',
+	'S_SNMP_OID'=>					'SNMP OID',
+	'S_SNMP_PORT'=>					'Port SNMP',
+	'S_ALLOWED_HOSTS'=>				'Dopuszczalne stacje',
+	'S_SNMPV3_SECURITY_NAME'=>			'Nazwa bezpieczeństwa SNMPv3',
+	'S_SNMPV3_SECURITY_LEVEL'=>			'Poziom bezpieczeństwa SNMPv3',
+	'S_SNMPV3_AUTH_PASSPHRASE'=>			'Hasło auth SNMPv3',
+	'S_SNMPV3_PRIV_PASSPHRASE'=>			'Hasło priv SNMPv3',
+	'S_CUSTOM_MULTIPLIER'=>				'Własny mnożnik',
+	'S_DO_NOT_USE'=>				'Nie używaj',
+	'S_USE_MULTIPLIER'=>				'Użyj mnożnika',
+	'S_SELECT_HOST_DOT_DOT_DOT'=>			'Wybierz stację...',
+	'S_LOG_TIME_FORMAT'=>				'Format czasu logowania',
+	'S_CREATE_ITEM'=>				'Utwórz Element',
+	'S_ADD_ITEM'=>					'Dodaj Element',
+	'S_X_ELEMENTS_COPY_TO_DOT_DOT_DOT'=>		'Skopiuj elementy do...',
+	'S_MODE'=>					'Tryb',
+	'S_TARGET'=>					'Cel',
+	'S_TARGET_TYPE'=>				'Typ celu',
+	'S_SKIP_EXISTING_ITEMS'=>			'Pomiń istniejące elementy',
+	'S_UPDATE_EXISTING_NON_LINKED_ITEMS'=>		'Uaktualnij istniejące nie podłączone elementy',
+	'S_COPY'=>					'Skopiuj',
+	'S_SHOW_ITEMS_WITH_DESCRIPTION_LIKE'=>		'Pokaż elementy z opisem w rodzaju',
+	'S_SHOW_DISABLED_ITEMS'=>			'Pokaż wyłączone elementy',
+	'S_HIDE_DISABLED_ITEMS'=>			'Ukryj wyłączone elementy',
+	'S_HISTORY_CLEANING_CAN_TAKE_A_LONG_TIME_CONTINUE_Q'=>	'Czyszczenie historii może zająć dużo czasu. Kontynuować?',
+	'S_ITEM_SELECTION'=>				'Wybór elementu',
+	'S_SELECTION_MODE'=>				'Tryb wyboru',
+	'S_ADVANCED'=>					'Zaawansowane',
+	'S_MASS_UPDATE'=>				'Uaktualnienie masowe',
+	'S_SEARCH'=>					'Szukaj',
+	'S_EXTERNAL_FILTER'=>				'Filtr zewnętrzny',
+	'S_ORIGINAL'=>					'Oryginał',
+	'S_NEW_FLEXIBLE_INTERVAL'=>			'Nowy elastyczny interwał',
+	'S_FLEXIBLE_INTERVALS'=>			'Interwały elastyczne (sek.)',
+	'S_NO_FLEXIBLE_INTERVALS'=>			'Brak elastycznych interwałów',
+	'S_PARAMS'=>					'Dodatkowe parametry',
+	'S_NEW_APPLICATION'=>				'Nowa aplikacja',
+	'S_IPMI_SENSOR'=>				'Czujnik IPMI',
+	'S_EVENT'=>					'Zdarzenie',
+	'S_EVENT_DETAILS'=>				'Szczegóły zdarzenia',
+	'S_LIST'=>					'Lista',
+	'S_LATEST_EVENTS'=>				'Ostatnie zdarzenia',
+	'S_HISTORY_OF_EVENTS_BIG'=>			'HISTORIA ZDARZEŃ',
+	'S_NO_EVENTS_FOUND'=>				'Nie znaleziono zdarzeń',
+	'S_LAST_CHECK'=>				'Ostatnie sprawdzenie',
+	'S_LAST_CHECK_BIG'=>				'OSTATNIE SPRAWDZENIE',
+	'S_LAST_VALUE'=>				'Ostatnia wartość',
+	'S_LINK'=>					'Powiązanie',
+	'S_LINKS'=>					'Powiązania',
+	'S_LABEL'=>					'Etykieta',
+	'S_X'=>						'X',
+	'S_Y'=>						'Y',
+	'S_ICON_PROBLEM'=>				'Ikona (problem)',
+	'S_ICON_OK'=>					'Ikona (ok)',
+	'S_ICON_UNKNOWN'=>				'Ikona (nieznane)',
+	'S_ICON_DISABLED'=>				'Ikona (wyłączone)',
+	'S_ELEMENT_1'=>					'Element 1',
+	'S_ELEMENT_2'=>					'Element 2',
+	'S_LINK_STATUS_INDICATOR'=>			'Wskaźnik statusu powiązania',
+	'S_CONFIGURATION_OF_NETWORK_MAPS'=>		'Konfiguracja map sieci',
+	'S_CONFIGURATION_OF_NETWORK_MAPS_BIG'=>		'KONFIGURACJA MAP SIECI',
+	'S_DISPLAYED_ELEMENTS'=>			'WYŚWIETLANE ELEMENTY',
+	'S_CONNECTORS'=>				'ŁĄCZNIKI',
+	'S_ADD_ELEMENT'=>				'Dodaj element',
+	'S_CREATE_CONNECTION'=>				'Utwórz połączenie',
+	'S_COORDINATE_X'=>				'Współrzędne X',
+	'S_COORDINATE_Y'=>				'Współrzędne Y',
+	'S_TYPE_OFF'=>					'Typ (WYŁ.)',
+	'S_TYPE_ON'=>					'Typ (WŁ.)',
+	'S_COLOR_OFF'=>					'Kolor (WYŁ.)',
+	'S_COLOR_ON'=>					'Kolor (WŁ.)',
+	'S_MAPS_BIG'=>					'MAPY',
+	'S_NO_MAPS_DEFINED'=>				'Brak zdefiniowanych map',
+	'S_CREATE_MAP'=>				'Utwórz Mapę',
+	'S_ICON_LABEL_LOCATION'=>			'Lokalizacja etykiety ikony',
+	'S_BOTTOM'=>					'Dół',
+	'S_TOP'=>					'Góra',
+	'S_LINK_STATUS_INDICATORS'=>			'Wskaźniki statusu powiązania',
+	'S_OK_BIG'=>					'OK',
+	'S_PROBLEM_BIG'=>				'PROBLEM',
+	'S_PROBLEMS_SMALL'=>				'problemy',
+	'S_ZABBIX_URL'=>				'http://www.zabbix.com',
+	'S_NETWORK_MAPS'=>				'Mapy sieci',
+	'S_NETWORK_MAPS_BIG'=>				'MAPY SIECI',
+	'S_NO_MAPS_TO_DISPLAY'=>			'Brak map do wyświetlenia',
+	'S_SELECT_MAP_TO_DISPLAY'=>			'Wybierz mapę do wyświetlenia',
+	'S_SELECT_MAP_DOT_DOT_DOT'=>			'Wybierz mapę...',
+	'S_BACKGROUND_IMAGE'=>				'Obraz tła',
+	'S_ICON_LABEL_TYPE'=>				'Typ etykiety ikony',
+	'S_LABEL_LOCATION'=>				'Lokalizacja etykiety',
+	'S_ELEMENT_NAME'=>				'Nazwa elementu',
+	'S_STATUS_ONLY'=>				'Tylko status',
+	'S_NOTHING'=>					'Nic',
+	'S_CONFIGURATION_OF_MEDIA_TYPES_BIG'=>		'KONFIGURACJA TYPÓW MEDIÓW',
+	'S_MEDIA'=>					'Media',
+	'S_MEDIA_BIG'=>					'MEDIA',
+	'S_MEDIA_ACTIVATED'=>				'Włączono media',
+	'S_CANNOT_ACTIVATE_MEDIA'=>			'Nie można włączyć mediów',
+	'S_MEDIA_DISABLED'=>				'Wyłączono media',
+	'S_CANNOT_DISABLE_MEDIA'=>			'Nie można wyłączyć mediów',
+	'S_MEDIA_ADDED'=>				'Dodano media',
+	'S_CANNOT_ADD_MEDIA'=>				'Nie można dodać mediów',
+	'S_MEDIA_UPDATED'=>				'Uaktualniono media',
+	'S_CANNOT_UPDATE_MEDIA'=>			'Nie można uaktualnić mediów',
+	'S_MEDIA_DELETED'=>				'Usunięto media',
+	'S_CANNOT_DELETE_MEDIA'=>			'Nie można usunąć mediów',
+	'S_SEND_TO'=>					'Wyślij do',
+	'S_WHEN_ACTIVE'=>				'Kiedy włączone',
+	'S_NO_MEDIA_DEFINED'=>				'Brak zdefiniowanych mediów',
+	'S_NEW_MEDIA'=>					'Nowe media',
+	'S_USE_IF_SEVERITY'=>				'Użyj jeżeli drastyczność',
+	'S_DELETE_SELECTED_MEDIA_Q'=>			'Usunąć wybrane media?',
+	'S_CREATE_MEDIA'=>				'Utwórz Media',
+	'S_SAVE'=>					'Zachowaj',
+	'S_CANCEL'=>					'Anuluj',
+	'S_MENU_LATEST_VALUES'=>			'OSTATNIE WARTOŚCI',
+	'S_MENU_TRIGGERS'=>				'WYZWALACZE',
+	'S_MENU_QUEUE'=>				'KOLEJKA',
+	'S_MENU_ALARMS'=>				'ALARMY',
+	'S_MENU_ALERTS'=>				'ALERTY',
+	'S_MENU_NETWORK_MAPS'=>				'MAPY SIECI',
+	'S_MENU_GRAPHS'=>				'WYKRESY',
+	'S_MENU_SCREENS'=>				'EKRANY',
+	'S_MENU_IT_SERVICES'=>				'USŁUGI IT',
+	'S_MENU_HOME'=>					'DOM',
+	'S_MENU_ABOUT'=>				'O',
+	'S_MENU_STATUS_OF_ZABBIX'=>			'STATUS ZABBIXA',
+	'S_MENU_AVAILABILITY_REPORT'=>			'RAPORT DOSTĘPNOŚCI',
+	'S_MENU_CONFIG'=>				'KONFIGURACJA',
+	'S_MENU_USERS'=>				'UŻYTKOWNICY',
+	'S_MENU_HOSTS'=>				'STACJE',
+	'S_MENU_ITEMS'=>				'ELEMENTY',
+	'S_MENU_AUDIT'=>				'AUDYT',
+	'S_SWITCH_NODE'=>				'Przełącz węzeł',
+	'S_DASHBOARD'=>					'Deska rozdzielcza',
+	'S_DASHBOARD_BIG'=>				'OSOBISTA DESKA ROZDZIELCZA',
+	'S_SWITCH_VIEW'=>				'Przełącz widok',
+	'S_AGE'=>					'Wiek',
+	'S_ISSUE'=>					'Wydarzenie',
+	'S_ISSUES'=>					'Wydarzenia',
+	'S_SYSTEM_STATUS'=>				'Status systemu',
+	'S_LAST_20_ISSUES'=>				'Ostatnie 20 wydarzeń',
+	'S_FAVORITE'=>					'Ulubione',
+	'S_FAVORITES'=>					'Ulubione',
+	'S_EVERY'=>					'Każdy',
+	'S_REFRESHED'=>					'Odświeżony',
+	'S_MENU'=>					'Menu',
+	'S_RESET'=>					'Reset',
+	'S_MAXIMIZE'=>					'Zmaksymalizuj',
+	'S_MINIMIZE'=>					'Zminimalizuj',
+	'S_LOADING_P'=>					'Ładuję...',
+	'S_SELECT_GROUP_DOT_DOT_DOT'=>			'Wybierz grupę...',
+	'S_OVERVIEW'=>					'Przegląd',
+	'S_OVERVIEW_BY_PROXY'=>				'Przegląd wg proxy',
+	'S_OVERVIEW_BIG'=>				'PRZEGLĄD',
+	'S_HOSTS_LOCATION'=>				'Lokalizacja stacji',
+	'S_EXCL'=>					'!',
+	'S_DATA'=>					'Dane',
+	'S_SHOW_GRAPH_OF_ITEM'=>			'Pokaż wykres elementu',
+	'S_SHOW_VALUES_OF_ITEM'=>			'Pokaż wartości elementu',
+	'S_VALUES'=>					'Wartości',
+	'S_5_MIN'=>					'5 min',
+	'S_15_MIN'=>					'15 min',
+	'S_QUEUE_BIG'=>					'KOLEJKA',
+	'S_QUEUE_OF_ITEMS_TO_BE_UPDATED_BIG'=>		'KOLEJKA ELEMENTÓW DO AKTUALIZACJI',
+	'S_NEXT_CHECK'=>				'Następne sprawdzenie',
+	'S_THE_QUEUE_IS_EMPTY'=>			'kolejka jest pusta',
+	'S_TOTAL'=>					'Razem',
+	'S_COUNT'=>					'Zliczenie',
+	'S_MINUTES_SMALL'=>				'minut',
+	'S_5_SECONDS'=>					'5 sekund',
+	'S_10_SECONDS'=>				'10 sekund',
+	'S_30_SECONDS'=>				'30 sekund',
+	'S_1_MINUTE'=>					'1 minuta',
+	'S_5_MINUTES'=>					'5 minut',
+	'S_MORE_THAN_10_MINUTES'=>			'Ponad 10 minut',
+	'S_STATUS_OF_ZABBIX'=>				'Status ZABBIXa',
+	'S_STATUS_OF_ZABBIX_BIG'=>			'STATUS ZABBIXa',
+	'S_VALUE'=>					'Wartość',
+	'S_ZABBIX_SERVER_IS_RUNNING'=>			'Serwer ZABBIXa działa',
+	'S_NUMBER_OF_VALUES_STORED'=>			'Liczba wartości zachowana',
+	'S_VALUES_STORED'=>				'Zachowane wartości',
+	'S_NUMBER_OF_TRENDS_STORED'=>			'Liczba zachowanych trendów',
+	'S_TRENDS_STORED'=>				'Zachowane trendy',
+	'S_NUMBER_OF_TRIGGERS'=>			'Liczba wyzwalaczy (włączonych/wyłączonych)[prawdziwych/nieznanych/fałszywych]',
+	'S_NUMBER_OF_TRIGGERS_SHORT'=>			'Wyzwalacze (wł./wył.)[pr/nn/fa]',
+	'S_NUMBER_OF_ITEMS'=>				'Liczba elementów (monitorowanych/wyłączonych/nie wspieranych)',
+	'S_NUMBER_OF_ITEMS_SHORT'=>			'Elementy (m/wył./nw)[wz]',
+	'S_NUMBER_OF_USERS'=>				'Liczba użytkowników (online)',
+	'S_NUMBER_OF_USERS_SHORT'=>			'Użytkownicy (online)',
+	'S_NUMBER_OF_HOSTS'=>				'Liczba stacji (monitorowanych/nie monitorowanych/wzorców)',
+	'S_NUMBER_OF_HOSTS_SHORT'=>			'Stacje (m/n/w/d)',
+	'S_REQUIRED_SERVER_PERFORMANCE_NVPS'=>		'Wymagana wydajność serwera, nowe wartości na sekundę',
+	'S_YES'=>					'Tak',
+	'S_NO'=>					'Nie',
+	'S_RUNNING'=>					'działa',
+	'S_NOT_RUNNING'=>				'nie działa',
+	'S_AVAILABILITY_REPORT'=>			'Raport dostępności',
+	'S_AVAILABILITY_REPORT_BIG'=>			'RAPORT DOSTĘPNOŚCI',
+	'S_SHOW'=>					'Pokaż',
+	'S_TRUE'=>					'Prawda',
+	'S_FALSE'=>					'Fałsz',
+	'S_BY_HOST'=>					'Wg stacji',
+	'S_BY_TRIGGER_TEMPLATE'=>			'Wg wzorca wyzwalacza',
+	'S_IT_SERVICES_AVAILABILITY_REPORT'=>		'Raport dostępności usług IT',
+	'S_IT_SERVICES_AVAILABILITY_REPORT_BIG'=>	'RAPORT DOSTĘPNOŚCI USŁUG IT',
+	'S_FROM'=>					'Od',
+	'S_FROM_SMALL'=>				'od',
+	'S_TILL'=>					'Do',
+	'S_TO'=>					'Do',
+	'S_OK'=>					'Ok',
+	'S_PROBLEMS'=>					'Problemy',
+	'S_PERCENTAGE'=>				'Procent',
+	'S_SLA'=>					'SLA',
+	'S_HOUR'=>					'Godzina',
+	'S_MINUTE'=>					'Minuta',
+	'S_DAY'=>					'Dzień',
+	'S_MONTH'=>					'Miesiąc',
+	'S_YEAR'=>					'Rok',
+	'S_DAILY'=>					'Dziennie',
+	'S_WEEKLY'=>					'Tygodniowo',
+	'S_MONTHLY'=>					'Miesięcznie',
+	'S_YEARLY'=>					'Rocznie',
+	'S_DO_NOT_ADD'=>				'Nie dodawaj',
+	'S_LEAVE_EMPTY'=>				'Zostaw puste',
+	'S_FILL_WITH_DEFAULT_VALUE'=>			'Wypełnij domyślną wartością',
+	'S_CREATE'=>					'Utwórz',
+	'S_NEW_SMALL'=>					'nowy',
+	'S_FILE_SMALL'=>				'plik',
+	'S_LOCALES'=>					'Lokalizacje',
+	'S_LOCALE_SMALL'=>				'lokalizacja',
+	'S_DOWNLOAD'=>					'Pobierz',
+	'S_NOTIFICATIONS'=>				'Powiadomienia',
+	'S_NOTIFICATIONS_BIG'=>				'POWIADOMIENIA',
+	'S_IT_NOTIFICATIONS'=>				'Raport powiadomień',
+	'S_TRIGGERS_TOP_100'=>				'Najczętsze wyzwalacze top 100',
+	'S_TRIGGERS_TOP_100_BIG'=>			'NAJCZĘSTSZE WYZWALACZE TOP 100',
+	'S_NUMBER_OF_STATUS_CHANGES'=>			'Liczba zmian statusu',
+	'S_WEEK'=>					'Tydzień',
+	'S_LAST'=>					'Ostatni',
+	'S_SCREENS'=>					'Ekrany',
+	'S_SCREEN'=>					'Ekran',
+	'S_CONFIGURATION_OF_SCREENS_BIG'=>		'KONFIGURACJA EKRANÓW',
+	'S_CONFIGURATION_OF_SCREENS'=>			'Konfiguracja ekranów',
+	'S_SCREEN_ADDED'=>				'Dodano ekran',
+	'S_CANNOT_ADD_SCREEN'=>				'Nie można dodać ekranu',
+	'S_SCREEN_UPDATED'=>				'Uaktualniono ekran',
+	'S_CANNOT_UPDATE_SCREEN'=>			'Nie można uaktualnić ekranu',
+	'S_SCREEN_DELETED'=>				'Usunięto ekran',
+	'S_CANNOT_DELETE_SCREEN'=>			'Nie można usunąć ekranu',
+	'S_COLUMNS'=>					'Kolumny',
+	'S_ROWS'=>					'Wiersze',
+	'S_NO_SCREENS_DEFINED'=>			'Brak zdefiniowanych ekranów',
+	'S_DELETE_SCREEN_Q'=>				'Usunąć ekran?',
+	'S_CONFIGURATION_OF_SCREEN_BIG'=>		'KONFIGURACJA EKRANU',
+	'S_SCREEN_CELL_CONFIGURATION'=>			'Konfiguracja komórki ekranu',
+	'S_RESOURCE'=>					'Zasób',
+	'S_RESOURCES'=>					'Zasoby',
+	'S_RESOURCE_TYPE'=>				'Typ zasobu',
+	'S_RIGHTS_OF_RESOURCES'=>			'Prawa użytkownika',
+	'S_NO_RESOURCES_DEFINED'=>			'Brak zdefiniowanych zasobów',
+	'S_SIMPLE_GRAPH'=>				'Prosty wykres',
+	'S_SIMPLE_GRAPHS'=>				'Proste wykresy',
+	'S_SIMPLE_GRAPH_BIG'=>				'PROSTY WYKRES',
+	'S_GRAPH_NAME'=>				'Nazwa wykresu',
+	'S_WIDTH'=>					'Szerokość',
+	'S_HEIGHT'=>					'Wysokość',
+	'S_CREATE_SCREEN'=>				'Utwórz Ekran',
+	'S_EDIT'=>					'Edycja',
+	'S_DYNAMIC_ITEM'=>				'Element dynamiczny',
+	'S_DIMENSION_COLS_ROWS'=>			'Wymiary (kol. x rzędy)',
+	'S_SLIDESHOWS'=>				'Pokazy slajdów',
+	'S_SLIDESHOW'=>					'Pokaz slajdów',
+	'S_CONFIGURATION_OF_SLIDESHOWS_BIG'=>		'KONFIGURACJA POKAZÓW SLAJDÓW',
+	'S_SLIDESHOWS_BIG'=>				'POKAZY SLAJDÓW',
+	'S_NO_SLIDESHOWS_DEFINED'=>			'Brak zdefiniowanych pokazów slajdów',
+	'S_COUNT_OF_SLIDES'=>				'Zliczenie slajdów',
+	'S_NO_SLIDES_DEFINED'=>				'Brak zdefiniowanych slajdów',
+	'S_SLIDES'=>					'Slajdy',
+	'S_NEW_SLIDE'=>					'Nowy slajd',
+	'S_MAP'=>					'Mapa',
+	'S_AS_PLAIN_TEXT'=>				'Jako zwykły tekst',
+	'S_PLAIN_TEXT'=>				'Zwykły tekst',
+	'S_PLAIN_TEXT_BIG'=>				'ZWYKŁY TEKST',
+	'S_COLUMN_SPAN'=>				'Rozpiętość kolumn',
+	'S_ROW_SPAN'=>					'Rozpiętość wierszy',
+	'S_SHOW_LINES'=>				'Pokaż linie',
+	'S_HOSTS_INFO'=>				'Info o stacjach',
+	'S_TRIGGERS_INFO'=>				'Info o wyzwalaczach',
+	'S_SERVER_INFO'=>				'Info o serwerze',
+	'S_CLOCK'=>					'Zegar',
+	'S_TRIGGERS_OVERVIEW'=>				'Przegląd wyzwalaczy',
+	'S_DATA_OVERVIEW'=>				'Przegląd danych',
+	'S_HISTORY_OF_ACTIONS'=>			'Historia działań',
+	'S_HISTORY_OF_EVENTS'=>				'Historia zdarzeń',
+	'S_TIME_TYPE'=>					'Typ czasu',
+	'S_SERVER_TIME'=>				'Czas serwera',
+	'S_LOCAL_TIME'=>				'Czas lokalny',
+	'S_STYLE'=>					'Styl',
+	'S_VERTICAL'=>					'Pionowe',
+	'S_HORISONTAL'=>				'Poziome',
+	'S_HORISONTAL_ALIGN'=>				'Ułożenie poziome',
+	'S_CENTER'=>					'Wycentruj',
+	'S_RIGHT'=>					'Prawo',
+	'S_VERTICAL_ALIGN'=>				'Ułożenie pionowe',
+	'S_MIDDLE'=>					'Środek',
+	'S_CUSTOM_SCREENS'=>				'Własne ekrany',
+	'S_SCREENS_BIG'=>				'EKRANY',
+	'S_NO_SCREENS_TO_DISPLAY'=>			'Brak ekranów do wyświetlenia',
+	'S_SELECT_SCREEN_TO_DISPLAY'=>			'Wybierz ekrany do wyświetlenia',
+	'S_SELECT_SCREEN_DOT_DOT_DOT'=>			'Wybierz ekran...',
+	'S_SLIDESHOW_UPDATED'=>				'Uaktualniono pokaz slajdów',
+	'S_CANNOT_UPDATE_SLIDESHOW'=>			'Nie można uaktualnić pokazu slajdów',
+	'S_SLIDESHOW_ADDED'=>				'Dodano pokaz slajdów',
+	'S_CANNOT_ADD_SLIDESHOW'=>			'Nie można dodać pokazu slajdów',
+	'S_SLIDESHOW_DELETED'=>				'Usunięto pokaz slajdów',
+	'S_CANNOT_DELETE_SLIDESHOW'=>			'Nie można usunąć pokazu slajdów',
+	'S_DELETE_SLIDESHOW_Q'=>			'Usunąć pokaz slajdów?',
+	'S_AVERAGE_PROBLEM'=>				'Normalny problem',
+	'S_SERIOUS_PROBLEM'=>				'Poważny problem',
+	'S_MINOR_PROBLEM'=>				'Drobny problem ',
+	'S_ROOT_SMALL'=>				'root',
+	'S_IT_SERVICE'=>				'Usługa IT',
+	'S_IT_SERVICES'=>				'Usługi IT',
+	'S_CONFIGURATION_OF_IT_SERVICES'=>		'Konfiguracja usług IT',
+	'S_SERVICE_UPDATED'=>				'Uaktualniono usługę',
+	'S_NO_IT_SERVICE_DEFINED'=>			'Brak zdefiniowanych usług IT',
+	'S_CANNOT_UPDATE_SERVICE'=>			'Nie można uaktualnić usługi',
+	'S_SERVICE_ADDED'=>				'Dodano usługę',
+	'S_CANNOT_ADD_SERVICE'=>			'Nie można dodać usługi',
+	'S_LINK_ADDED'=>				'Dodano powiązanie',
+	'S_CANNOT_ADD_LINK'=>				'Nie można dodać powiązania',
+	'S_SERVICE_DELETED'=>				'Usunięto usługę',
+	'S_CANNOT_DELETE_SERVICE'=>			'Nie można usunąć usługi',
+	'S_LINK_DELETED'=>				'Usunięto powiązanie',
+	'S_CANNOT_DELETE_LINK'=>			'Nie można usunąć powiązania',
+	'S_STATUS_CALCULATION'=>			'Wyliczenie statusu',
+	'S_STATUS_CALCULATION_ALGORITHM'=>		'Algorytm wyliczenia statusu',
+	'S_NONE'=>					'Żaden',
+	'S_PROBLEM_IF_AT_LEAST_ONE'=>			'Problem, jeśli przynajmniej jeden potomek ma problem',
+	'S_PROBLEM_IF_ALL'=>				'Problem, jeśli wszystie potomki mają problem',
+	'S_SERVICE_1'=>					'Usługa 1',
+	'S_SERVICE_2'=>					'Usługa 2',
+	'S_SOFT_HARD_LINK'=>				'Powiązanie miękkie/twarde',
+	'S_SOFT'=>					'Miękkie',
+	'S_HARD'=>					'Twarde',
+	'S_DO_NOT_CALCULATE'=>				'Nie wyliczaj',
+	'S_MAX_BIG'=>					'MAX',
+	'S_MIN_BIG'=>					'MIN',
+	'S_CALCULATE_SLA'=>				'Wylicz SLA',
+	'S_ACCEPTABLE_SLA_IN_PERCENT'=>			'Akceptowalne SLA (w %)',
+	'S_LINK_TO_TRIGGER_Q'=>				'Powiązać z wyzwalaczem?',
+	'S_SORT_ORDER_0_999'=>				'Porządek sortowania (0->999)',
+	'S_DELETE_SERVICE_Q'=>				'Usunąć usługę?',
+	'S_LINK_TO'=>					'Powiąż z',
+	'S_SOFT_LINK_Q'=>				'Miękkie powiązanie?',
+	'S_ADD_SERVER_DETAILS'=>			'Dodaj szczegóły serwera',
+	'S_TRIGGER'=>					'Wyzwalacz',
+	'S_SERVER'=>					'Usługa',
+	'S_DELETE'=>					'Usuń',
+	'S_CLONE'=>					'Powielenie',
+	'S_FULL_CLONE'=>				'Pełne powielenie',
+	'S_DELETE_SELECTED_SERVICES'=>			'Usunąć wybrane usługi?',
+	'S_DELETE_SELECTED_LINKS'=>			'Usunąć wybrane powiązania?',
+	'S_SERVICES_DELETED'=>				'Usługi usunięte',
+	'S_CANNOT_DELETE_SERVICES'=>			'Nie można usunąć usług',
+	'S_UPTIME'=>					'Czas pracy',
+	'S_DOWNTIME'=>					'Czas przerw w pracy',
+	'S_ONE_TIME_DOWNTIME'=>				'Jednorazowa przerwa w pracy',
+	'S_NO_TIMES_DEFINED'=>				'Brak zdefiniowanych czasów',
+	'S_SERVICE_TIMES'=>				'Czas obsługi',
+	'S_NEW_SERVICE_TIME'=>				'Nowy czas obsługi',
+	'S_NOTE'=>					'Notatka',
+	'S_SOFT_LINK'=>					'Miękkie powiązanie',
+	'S_REMOVE'=>					'Usuń',
+	'S_DEPENDS_ON'=>				'Zależy od',
+	'S_SUNDAY'=>					'Niedziela',
+	'S_MONDAY'=>					'Poniedziałek',
+	'S_TUESDAY'=>					'Wtorek',
+	'S_WEDNESDAY'=>					'Środa',
+	'S_THURSDAY'=>					'Czwartek',
+	'S_FRIDAY'=>					'Piątek',
+	'S_SATURDAY'=>					'Sobota',
+	'S_IT_SERVICES_BIG'=>				'USŁUGI IT',
+	'S_SERVICE'=>					'Usługa',
+	'S_SERVICES'=>					'Usługi',
+	'S_REASON'=>					'Powód',
+	'S_SLA_LAST_7_DAYS'=>				'SLA (ostatnie 7 dni)',
+	'S_PLANNED_CURRENT_SLA'=>			'Planowane/bieżące SLA',
+	'S_TRIGGER_BIG'=>				'WYZWALACZ',
+	'S_NO_TRIGGER'=>				'Brak wyzwalacza',
+	'S_NO_TRIGGERS_DEFINED'=>			'Brak zdefiniowanych wyzwalaczy',
+	'S_NO_TRIGGER_DEFINED'=>			'Brak zdefiniowanego wyzwalacza',
+	'S_CONFIGURATION_OF_TRIGGERS'=>			'Konfiguracja wyzwalaczy',
+	'S_CONFIGURATION_OF_TRIGGERS_BIG'=>		'KONFIGURACJA WYZWALACZY',
+	'S_DEPENDENCY_ADDED'=>				'Dodano zależność',
+	'S_CANNOT_ADD_DEPENDENCY'=>			'Nie można dodać zależności',
+	'S_TRIGGERS_UPDATED'=>				'Uaktualniono wyzwalacze',
+	'S_CANNOT_UPDATE_TRIGGERS'=>			'Nie można uaktualnić wyzwalaczy',
+	'S_TRIGGERS_DISABLED'=>				'Wyłączono wyzwalacze',
+	'S_CANNOT_DISABLE_TRIGGERS'=>			'Nie można wyłączyć wyzwalaczy',
+	'S_TRIGGERS_DELETED'=>				'Usunięto wyzwalacze',
+	'S_CANNOT_DELETE_TRIGGERS'=>			'Nie można usunąć wyzwalaczy',
+	'S_TRIGGER_DELETED'=>				'Usunięto wyzwalacz',
+	'S_CANNOT_DELETE_TRIGGER'=>			'Nie można usunąć wyzwalacza',
+	'S_INVALID_TRIGGER_EXPRESSION'=>		'Niewłaściwe wyrażenie wyzwalacza',
+	'S_TRIGGER_ADDED'=>				'Dodano wyzwalacz',
+	'S_CANNOT_ADD_TRIGGER'=>			'Nie można dodać wyzwalacza',
+	'S_SEVERITY'=>					'Drastyczność',
+	'S_MIN_SEVERITY'=>				'Min. drastyczność',
+	'S_EXPRESSION'=>				'Wyrażenie',
+	'S_DISABLED'=>					'Wyłączony',
+	'S_ENABLED'=>					'Włączony',
+	'S_DISABLE'=>					'Wyłącz',
+	'S_ENABLE'=>					'Włącz',
+	'S_ENABLE_SELECTED'=>				'Włącz wybrane',
+	'S_ENABLE_SELECTED_TRIGGERS_Q'=>		'Włączyć wybrane wyzwalacze?',
+	'S_DISABLE_SELECTED_TRIGGERS_Q'=>		'Wyłączyć wybrane wyzwalacze?',
+	'S_DELETE_SELECTED_TRIGGERS_Q'=>		'Usunąć wybrane wyzwalacze?',
+	'S_CHANGE'=>					'Zmień',
+	'S_TRIGGER_UPDATED'=>				'Uaktualniono wyzwalacz',
+	'S_CANNOT_UPDATE_TRIGGER'=>			'Nie można uaktualnić wyzwalacza',
+	'S_URL'=>					'URL',
+	'S_INVALID_URL'=>				'Niewłaściwy URL',
+	'S_CREATE_TRIGGER'=>				'Utwórz Wyzwalacz',
+	'S_INSERT'=>					'Wprowadź',
+	'S_TIMES'=>					'Razy',
+	'S_SECONDS'=>					'Sekundy',
+	'S_COUNTS'=>					'Zliczenia',
+	'S_LAST_OF'=>					'Ostatni z',
+	'S_MULTIPLE_TRUE_EVENTS'=>			'Wielokrotne zdarzenia PRAWDA',
+	'S_SHOW_DISABLED_TRIGGERS'=>			'Pokaż wyłączone wyzwalacze',
+	'S_HIDE_DISABLED_TRIGGERS'=>			'Ukryj wyłączone wyzwalacze',
+	'S_THE_TRIGGER_DEPENDS_ON'=>			'Wyzwalacz zależy od',
+	'S_NO_DEPENDENCES_DEFINED'=>			'Brak zdefiniowanych zależności',
+	'S_NEW_DEPENDENCY'=>				'Nowa zależność',
+	'S_MULTIPLE_EVENTS'=>				'Wielokrotne zdarzenia',
+	'S_EVENT_GENERATION'=>				'Generowanie zdarzeń',
+	'S_TRIGGERS_MASSUPDATE'=>			'Masowe uaktualnienie wyzwalaczy',
+	'S_TRIGGER_DEPENDENCIES'=>			'Zależności wyzwalacza',
+	'S_INCORRECT_DEPENDENCY'=>			'Niepoprawna zależność',
+	'S_TRIGGER_COMMENTS'=>				'Komentarze do wyzwalacza',
+	'S_TRIGGER_COMMENTS_BIG'=>			'KOMENTARZE DO WYZWALACZA',
+	'S_COMMENT_UPDATED'=>				'Uaktualniono komentarz',
+	'S_CANNOT_UPDATE_COMMENT'=>			'Nie można uaktualnić komentarza',
+	'S_ADD'=>					'Dodaj',
+	'S_SOUND'=>					'Dźwięk',
+	'S_MUTE'=>					'Wyciszenie',
+	'S_STATUS_OF_TRIGGERS'=>			'Status wyzwalaczy',
+	'S_STATUS_OF_TRIGGERS_BIG'=>			'STATUS WYZWALACZY',
+	'S_SHOW_ONLY_TRUE'=>				'Pokaż tylko prawdziwe',
+	'S_HIDE_ACTIONS'=>				'Ukryj działania',
+	'S_SHOW_ACTIONS'=>				'Pokaż działania',
+	'S_HIDE_ALL'=>					'Ukryj wszystko',
+	'S_SHOW_ONLY_PROBLEMS'=>			'Pokaż tylko problemy',
+	'S_SHOW_NOFALSEFORB'=>				'Pokaż wszystko (nie FAŁSZ dla B)',
+	'S_SHOW_UNACKNOWLEDGED'=>			'Pokaż niezatwierdzone',
+	'S_SHOW_PROBLEM_UNACKNOWLEDGED'=>		'Pokaż problem-niezatwierdzony',
+	'S_NOT_ACKNOWLEDGED'=>				'Nie zatwierdzone',
+	'S_HIDE_DETAILS'=>				'Ukryj szczegóły',
+	'S_SHOW_DETAILS'=>				'Pokaż szczegóły',
+	'S_SELECT'=>					'Wybierz',
+	'S_INVERSE_SELECT'=>				'Wybór odwrotny',
+	'S_HIDE_SELECT'=>				'Ukryj wybrane',
+	'S_TRIGGERS_BIG'=>				'WYZWALACZE',
+	'S_NAME_BIG'=>					'NAZWA',
+	'S_SEVERITY_BIG'=>				'DRASTYCZNOŚĆ',
+	'S_LAST_CHANGE_BIG'=>				'OSTATNIA ZMIANA',
+	'S_LAST_CHANGE'=>				'Ostatnia zmiana',
+	'S_COMMENTS'=>					'Komentarze',
+	'S_ACKNOWLEDGED'=>				'Zatwierdzone',
+	'S_ACK'=>					'Zatw.',
+	'S_NOT_ACK'=>					'Nie zatw.',
+	'S_NEVER'=>					'Nigdy',
+	'S_ZABBIX_USER'=>				'Użytkownik ZABBIXa',
+	'S_ZABBIX_ADMIN'=>				'Administrator ZABBIXa',
+	'S_SUPER_ADMIN'=>				'Nadadministrator ZABBIXa',
+	'S_USER_TYPE'=>					'Typ użytkownika',
+	'S_USERS'=>					'Użytkownicy',
+	'S_USER_ADDED'=>				'Dodano użytkownika',
+	'S_CANNOT'=>					'Nie można',
+	'S_CANNOT_ADD_USER'=>				'Nie można dodać użytkownika',
+	'S_CANNOT_ADD_USER_BOTH_PASSWORDS_MUST'=>	'Nie można dodać użytkownika. Oba hasła muszą być identyczne.',
+	'S_USER_DELETED'=>				'Usunięto użytkownika',
+	'S_CANNOT_DELETE_USER'=>			'Nie można usunąć użytkownika',
+	'S_PASSWORD_SHOULD_NOT_BE_EMPTY'=>		'Hasło nie powinno być puste',
+	'S_FOR_GUEST_PASSWORD_MUST_BE_EMPTY'=>		'Hasło użytkownika guest musi być puste',
+	'S_PERMISSION_DELETED'=>			'Usunięto uprawnienie',
+	'S_CANNOT_DELETE_PERMISSION'=>			'Nie można usunąć uprawnienia',
+	'S_PERMISSION_ADDED'=>				'Dodano uprawnienie',
+	'S_CANNOT_ADD_PERMISSION'=>			'Nie można dodać uprawnienia',
+	'S_USER_UPDATED'=>				'Uaktualniono użytkownika',
+	'S_ONLY_FOR_GUEST_ALLOWED_EMPTY_PASSWORD'=>	'Tylko użytkownik \'guest\' może mieć puste hasło.',
+	'S_CANNOT_UPDATE_USER'=>			'Nie można uaktualnić użytkownika',
+	'S_CANNOT_UPDATE_USER_BOTH_PASSWORDS'=>		'Nie można uaktualnić użytkownika. Oba hasła muszą być identyczne.',
+	'S_GROUP_ADDED'=>				'Dodano grupę',
+	'S_CANNOT_ADD_GROUP'=>				'Nie można dodać grupy',
+	'S_GROUP_UPDATED'=>				'Uaktualniono grupę',
+	'S_CANNOT_UPDATE_GROUP'=>			'Nie można uaktualnić grupy',
+	'S_GROUP_DELETED'=>				'Usunięto grupę',
+	'S_CANNOT_DELETE_GROUP'=>			'Nie można usunąć grupy',
+	'S_PROXY_ADDED'=>				'Dodano proxy',
+	'S_CANNOT_ADD_PROXY'=>				'Nie można dodać proxy',
+	'S_PROXY_UPDATED'=>				'Uaktualniono proxy',
+	'S_CANNOT_UPDATE_PROXY'=>			'Nie można uaktualnić proxy',
+	'S_PROXY_DELETED'=>				'Usunięto proxy',
+	'S_CANNOT_DELETE_PROXY'=>			'Nie można usunąć proxy',
+	'S_GUI_ACCESS_UPDATED'=>			'Uaktualniono prawa dostępu do GUI',
+	'S_CANNOT_UPDATE_GUI_ACCESS'=>			'Nie można uaktualnić praw dostępu do GUI',
+	'S_CANNOT_SET'=>				'Nie można ustawić',
+	'S_USER_CANNOT_DISABLE_ITSELF'=>		'Użytkownik nie może wyłączyć samego siebie',
+	'S_USER_CANNOT_CHANGE_STATUS'=>			'Użytkownik nie może zmienić swojego własnego statusu',
+	'S_USER_CANNOT_CHANGE_GUI_ACCESS'=>		'Użytkownik nie może sam sobie zmienić praw dostępu do GUI',
+	'S_USER_CANNOT_DELETE_ITSELF'=>			'Użytkownik nie może usunąć sam siebie',
+	'S_CONFIGURATION_OF_USERS_AND_USER_GROUPS'=>	'KONFIGURACJA UŻYTKOWNIKÓW I GRUP UŻYTKOWNIKÓW',
+	'S_USER_GROUPS_BIG'=>				'GRUPY UŻYTKOWNIKÓW',
+	'S_USERS_BIG'=>					'UŻYTKOWNICY',
+	'S_USER_GROUPS'=>				'Grupy użytkowników',
+	'S_MEMBERS'=>					'Członkowie',
+	'S_HOSTS_TEMPLATES_LINKAGE'=>			'Powiązanie do stacji/wzorców',
+	'S_CONFIGURATION_OF_TEMPLATES_LINKAGE'=>	'KONFIGURACJA POWIĄZANIA DO WZORCÓW',
+	'S_LINKED_TEMPLATES_BIG'=>			'POWIĄZANE WZORCE',
+	'S_NO_USER_GROUPS_DEFINED'=>			'Brak zdefiniowanych grup użytkowników',
+	'S_ALIAS'=>					'Alias',
+	'S_NAME'=>					'Nazwa/Imię',
+	'S_SURNAME'=>					'Nazwisko',
+	'S_IS_ONLINE_Q'=>				'Czy jest połączony?',
+	'S_NO_USERS_DEFINED'=>				'Brak zdefiniowanych użytkowników',
+	'S_PERMISSION'=>				'Uprawnienie',
+	'S_RIGHTS'=>					'Prawa',
+	'S_GUI_ACCESS'=>				'Dostęp do GUI',
+	'S_USERS_STATUS'=>				'Status użytkownika',
+	'S_NO_RIGHTS_DEFINED'=>				'Brak zdefinowanych praw',
+	'S_RESOURCE_NAME'=>				'Nazwa zasobu',
+	'S_READ_ONLY'=>					'Tylko do odczytu',
+	'S_READ_WRITE'=>				'Do odczytu i zapisu',
+	'S_DENY'=>					'Zabroń',
+	'S_HIDE'=>					'Ukryj',
+	'S_PASSWORD'=>					'Hasło',
+	'S_CHANGE_PASSWORD'=>				'Zmień hasło',
+	'S_PASSWORD_ONCE_AGAIN'=>			'Hasło (ponownie)',
+	'S_URL_AFTER_LOGIN'=>				'URL (po zalogowaniu)',
+	'S_AUTO_LOGIN'=>				'Auto-logowanie (1 miesiąc)',
+	'S_AUTO_LOGOUT'=>				'Auto-wylogowanie (0-wyłącz)',
+	'S_SCREEN_REFRESH'=>				'Odśwież (w sekundach)',
+	'S_CREATE_USER'=>				'Utwórz Użytkownika',
+	'S_CREATE_GROUP'=>				'Utwórz Grupę',
+	'S_DELETE_SELECTED_USERS_Q'=>			'Usunąć wybranych użytkowników?',
+	'S_NO_ACCESSIBLE_RESOURCES'=>			'Brak dostępnych zasobów',
+	'S_ADD_TO'=>					'Dodaj do',
+	'S_REMOVE_FROM'=>				'Usuń z',
+	'S_STATUS_DISABLED'=>				'Wyłączono status',
+	'S_INTERNAL_S'=>				'Wewnętrzny',
+	'S_SCRIPTS'=>					'Skrypty',
+	'S_COMMAND'=>					'Polecenie',
+	'S_PERMISSIONS_SMALL'=>				'Uprawnienia',
+	'S_REQUIRED_HOST'=>				'Wymagana stacja',
+	'S_READ'=>					'Czytaj',
+	'S_WRITE'=>					'Zapis',
+	'S_NO_SCRIPTS_DEFINED'=>			'Brak zdefiniowanych skryptów',
+	'S_HOST_ACCESS'=>				'Dostęp do stacji',
+	'S_DELETE_SELECTED_SCRIPTS_Q'=>			'Usunąć wybrane skrypty?',
+	'S_ADD_SCRIPT'=>				'Dodaj skrypt',
+	'S_SCRIPT_ADDED'=>				'Dodano skrypt',
+	'S_CANNOT_ADD_SCRIPT'=>				'Nie można dodać skryptu',
+	'S_SCRIPT_UPDATED'=>				'Uaktualniono skrypt',
+	'S_CANNOT_UPDATE_SCRIPT'=>			'Nie można uaktualnić skryptu',
+	'S_SCRIPT_DELETED'=>				'Usunięto skrypt',
+	'S_CANNOT_DELETE_SCRIPT'=>			'Nie można usunąć skryptu',
+	'S_TOOLS'=>					'Narzędzia',
+	'S_RESULT'=>					'Wynik',
+	'S_CLOSE'=>					'Zamknij',
+	'S_CONNECT_TO_SERVER_ERROR'=>			'Nie można połączyć się z serwerem ZABBIXa',
+	'S_AUDIT'=>					'Audyt',
+	'S_AUDIT_BIG'=>					'AUDYT',
+	'S_AUDIT_LOGS'=>				'Logi audytu',
+	'S_AUDIT_ACTIONS'=>				'Działania audytu',
+	'S_ACTION'=>					'Działanie',
+	'S_DETAILS'=>					'Szczegóły',
+	'S_UNKNOWN_ACTION'=>				'Nieznane działanie',
+	'S_ADDED'=>					'Dodano',
+	'S_UPDATED'=>					'Uaktualniono',
+	'S_LOGGED_IN'=>					'Zalogowano',
+	'S_LOGGED_OUT'=>				'Wylogowano',
+	'S_MEDIA_TYPE'=>				'Typ mediów',
+	'S_GRAPH_ELEMENT'=>				'Element wykresu',
+	'S_UNKNOWN_RESOURCE'=>				'Nieznany zasób',
+	'S_ALREADY_EXISTS_SMALL'=>			'już istnieje',
+	'S_USER_PROFILE_BIG'=>				'PROFIL UŻYTKOWNIKA',
+	'S_USER_PROFILE'=>				'Profil użytkownika',
+	'S_LANGUAGE'=>					'Język',
+	'S_THEME'=>					'Motyw',
+	'S_ENGLISH_GB'=>				'Angielski (GB)',
+	'S_FRENCH_FR'=>					'Francuski (FR)',
+	'S_GERMAN_DE'=>					'Niemiecki (DE)',
+	'S_ITALIAN_IT'=>				'Włoski (IT)',
+	'S_KOREAN_KO'=>					'Koreański (KO)',
+	'S_LATVIAN_LV'=>				'Łotewski (LV)',
+	'S_RUSSIAN_RU'=>				'Rosyjski (RU)',
+	'S_PORTUGUESE_PT'=>				'Portugalski (PT)',
+	'S_SPANISH_SP'=>				'Hiszpański (SP)',
+	'S_SWEDISH_SE'=>				'Szwedzki (SE)',
+	'S_JAPANESE_JP'=>				'Japoński (JP)',
+	'S_CHINESE_CN'=>				'Chiński (CN)',
+	'S_DUTCH_NL'=>					'Holenderski (NL)',
+	'S_HUNGARY_HU'=>				'Węgierski (HU)',
+	'S_POLISH_PL'=>					'Polski (PL)',
+	'S_ZABBIX_BIG'=>				'ZABBIX',
+	'S_HOST_PROFILES'=>				'Profile stacji',
+	'S_HOST_PROFILES_BIG'=>				'PROFILE STACJI',
+	'S_EXTENDED_HOST_PROFILE'=>			'Rozszerzony profil stacji',
+	'S_EXTENDED'=>					'Rozszerzony',
+	'S_EMPTY'=>					'Pusty',
+	'S_STANDARD_ITEMS_BIG'=>			'ELEMENTY STANDARDOWE',
+	'S_NO_ITEMS'=>					'Brak elementów',
+	'S_HELP'=>					'Pomoc',
+	'S_PROFILE'=>					'Profil',
+	'S_GET_SUPPORT'=>				'Uzyskaj pomoc',
+	'S_MONITORING'=>				'Monitoring',
+	'S_INVENTORY'=>					'Inwentarz',
+	'S_QUEUE'=>					'Kolejka',
+	'S_EVENTS'=>					'Zdarzenia',
+	'S_EVENTS_BIG'=>				'ZDARZENIA',
+	'S_MAPS'=>					'Mapy',
+	'S_REPORTS'=>					'Raporty',
+	'S_GENERAL'=>					'Ogólne',
+	'S_LOGIN'=>					'Logowanie',
+	'S_LOGOUT'=>					'Wylogowanie',
+	'S_PRINT'=>					'Drukuj',
+	'S_LATEST_DATA'=>				'Ostatnie dane',
+	'S_INCORRECT_DESCRIPTION'=>			'Niepoprawny opis',
+	'S_CANT_FORMAT_TREE'=>				'Nie można sformatować Drzewa',
+	'S_UNSUPPORTED_FILE_FORMAT'=>			'Niewspierany format pliku',
+	'S_UNSUPPORTED_VERSION_OF_IMPORTED_DATA'=>	'Niewspierana wersja zaimportowanych danych',
+	
+	);
+?>
\ No newline at end of file
diff --git a/frontends/php/include/maps.inc.php b/frontends/php/include/maps.inc.php
index 2d0c3ff..cfae804 100644
--- a/frontends/php/include/maps.inc.php
+++ b/frontends/php/include/maps.inc.php
@@ -89,7 +89,7 @@
 			while(($se_data = DBfetch($db_result)) && $result){
 				switch($se_data['elementtype']){
 					case SYSMAP_ELEMENT_TYPE_HOST:
-						if(!uint_in_array($se_data['elementid'],$available_hosts)){
+						if(!isset($available_hosts[$se_data['elementid']])){
 							$result = false;
 						}
 						break;
@@ -97,14 +97,14 @@
 						$result = sysmap_accessible($se_data['elementid'], $perm);
 						break;
 					case SYSMAP_ELEMENT_TYPE_TRIGGER:
-						$available_triggers = get_accessible_triggers($perm, PERM_RES_IDS_ARRAY);
-						if(!uint_in_array($se_data['elementid'],$available_triggers)){
+						$available_triggers = get_accessible_triggers($perm, array(), PERM_RES_IDS_ARRAY);
+						if(!isset($available_triggers[$se_data['elementid']])){
 							$result = false;
 						}
 						break;
 					case SYSMAP_ELEMENT_TYPE_HOST_GROUP:
 						$available_groups = get_accessible_groups_by_user($USER_DETAILS,$perm);
-						if(!uint_in_array($se_data['elementid'],$available_groups)){
+						if(!isset($available_groups[$se_data['elementid']])){
 							$result = false;
 						}
 						break;
diff --git a/frontends/php/include/page_header.php b/frontends/php/include/page_header.php
index 27912ed..ec94edf 100644
--- a/frontends/php/include/page_header.php
+++ b/frontends/php/include/page_header.php
@@ -44,7 +44,7 @@ COpt::profiling_start("page");
 	init_nodes();
 
 	/* set Page header */
-	switch($page["type"]){
+	switch($page['type']){
 		case PAGE_TYPE_IMAGE:
 			set_image_header();
 			define('ZBX_PAGE_NO_MENU', 1);
@@ -102,6 +102,7 @@ COpt::profiling_start("page");
 	$ZBX_MENU = array(
 		'view'=>array(
 				'label'			=> S_MONITORING,
+				'user_type'		=> USER_TYPE_ZABBIX_USER,
 				'node_perm'		=> PERM_READ_LIST,
 				'default_page_id'	=> 0,
 				'pages'=>array(
@@ -163,6 +164,7 @@ COpt::profiling_start("page");
 				),
 		'cm'=>array(
 				'label'			=> S_INVENTORY,
+				'user_type'		=> USER_TYPE_ZABBIX_USER,
 				'node_perm'		=> PERM_READ_LIST,
 				'default_page_id'	=> 0,
 				'pages'=>array(
@@ -171,6 +173,7 @@ COpt::profiling_start("page");
 				),
 		'reports'=>array(
 				'label'			=> S_REPORTS,
+				'user_type'		=> USER_TYPE_ZABBIX_USER,
 				'node_perm'		=> PERM_READ_LIST,
 				'default_page_id'	=> 0,
 				'pages'=>array(
@@ -208,17 +211,21 @@ COpt::profiling_start("page");
 							'sub_pages'=>array('popup_trexpr.php')
 						),
 					array('url'=>'actionconf.php'	,'label'=>S_ACTIONS),
-					array('url'=>'graphs.php'	,'label'=>S_GRAPHS,
-						'sub_pages'=>array('popup_gitem.php')
+					array('url'=>'graphs.php',
+							'label'=>S_GRAPHS,
+							'sub_pages'=>array('popup_gitem.php')
 						),
-					array('url'=>'screenconf.php'	,'label'=>S_SCREENS,
-						'sub_pages'=>array('screenedit.php')
+					array('url'=>'screenconf.php',
+							'label'=>S_SCREENS,
+							'sub_pages'=>array('screenedit.php')
 						),
-					array('url'=>'sysmaps.php'	,'label'=>S_MAPS,
-						'sub_pages'=>array('sysmap.php','popup_link_tr.php')
+					array('url'=>'sysmaps.php',
+							'label'=>S_MAPS,
+							'sub_pages'=>array('sysmap.php','popup_link_tr.php')
 						),
-					array('url'=>'services.php'	,'label'=>S_IT_SERVICES,
-						'sub_pages'=>array('services_form.php')	
+					array('url'=>'services.php',
+							'label'=>S_IT_SERVICES,
+							'sub_pages'=>array('services_form.php')	
 						),
 					array('url'=>'discoveryconf.php','label'=>S_DISCOVERY),
 					array('url'=>'exp_imp.php'	,'label'=>S_EXPORT_IMPORT),
@@ -232,156 +239,135 @@ COpt::profiling_start("page");
 				'default_page_id'	=> 1,
 				'forse_disable_subnodes'=> true,
 				'pages'=>array(
-					ZBX_DISTRIBUTED ? array('url'=>'nodes.php'	,'label'=>S_NODES) : null ,
+					ZBX_DISTRIBUTED?array('url'=>'nodes.php','label'=>S_NODES):null,
 					array('url'=>'authentication.php'	,'label'=>S_AUTHENTICATION),
-					array('url'=>'users.php'	,'label'=>S_USERS		,
+					array('url'=>'users.php',
+						'label'=>S_USERS,
 						'sub_pages'=>array('popup_media.php','popup_usrgrp.php','popup_right.php','popup_users.php')
 						),
-					array('url'=>'media_types.php'	,'label'=>S_MEDIA_TYPES		),
+					array('url'=>'media_types.php'	,'label'=>S_MEDIA_TYPES),
 					array('url'=>'scripts.php'	,'label'=>S_SCRIPTS),
-					array('url'=>'audit.php'	,'label'=>S_AUDIT		),
-					array('url'=>'queue.php'	,'label'=>S_QUEUE	),
-					array('url'=>'report4.php'	,'label'=>S_NOTIFICATIONS	),
+					array('url'=>'audit.php'	,'label'=>S_AUDIT),
+					array('url'=>'queue.php'	,'label'=>S_QUEUE),
+					array('url'=>'report4.php'	,'label'=>S_NOTIFICATIONS),
 					array('url'=>'locales.php'	,'label'=>S_LOCALES	),
-					array('url'=>'instal.php'	,'label'=>S_INSTALLATION	,
+					array('url'=>'instal.php'	,'label'=>S_INSTALLATION,
 						'sub_pages'=>array('setup.php','warning.php'))
 					)
 				),
 		'login'=>array(
 				'label'			=> S_LOGIN,
+				'user_type'		=> 	0,
 				'default_page_id'	=> 0,
 				'forse_disable_subnodes'=> true,
 				'pages'=>array(
-					array('url'=>'index.php',
-						'sub_pages'=>array('profile.php')
-						)
+					array('url'=>'index.php','sub_pages'=>array('profile.php'))
 					)
 				)
 		);
-
-	$main_menu_row	= array();
-	$sub_menu_row	= array();
-
-	foreach($ZBX_MENU as $label=>$sub){
-// Check permissions for main menu
-		unset($deny);
-		if(!defined('ZBX_PAGE_NO_AUTHERIZATION')){
-			if(isset($sub['user_type'])){
-				if($USER_DETAILS['type'] < $sub['user_type']){
-					$deny = true;
-				}
-			}
-
-			if(isset($sub['node_perm'])){ 
-				if(0 == count(get_accessible_nodes_by_user($USER_DETAILS,$sub['node_perm']))){
-					$deny = true;
-				}
-			}
-
-			if($label=='login'){
-				$deny = true;				
-/*				if(isset($USER_DETAILS['sessionid']))
-					$sub['label'] = S_LOGOUT;
-				else
-					unset($deny);
-*/
-			}
+//SDI($USER_DETAILS);
+	$deny = !defined('ZBX_PAGE_NO_AUTHERIZATION');
+	$main_menu	= array();
+	$sub_menus	= array();
+	foreach($ZBX_MENU as $label => $menu){
+// Check to show menu or not
+		$show_menu = true;
+
+		if(isset($menu['user_type'])){
+			$show_menu &= ($menu['user_type'] <= $USER_DETAILS['type']);
 		}
 
-// End of main menu permissions checking
-
-		unset($menu_url);
-		foreach($sub['pages'] as $id => $sub_pages){
+		if(isset($menu['node_perm']) && isset($DB['DB']) && !is_null($DB['DB'])){
+			$available_nodes = get_accessible_nodes_by_user($USER_DETAILS,$menu['node_perm']);
+			$show_menu &= (0 < count($available_nodes));
+		}
 
-			if(!defined('ZBX_PAGE_NO_AUTHERIZATION')){
-				if(isset($sub_pages['user_type'])){
-					if($USER_DETAILS['type'] < $sub_pages['user_type']){
-						unset($sub['pages'][$id]);
-						continue;
-					}
-				}
+		if($label == 'login'){
+			$show_menu = false;
+		}
 
-				if(isset($sub_pages['node_perm'])){
-					if ( 0 == count(get_accessible_nodes_by_user($USER_DETAILS,$sub_pages['node_perm']))){
-						unset($sub['pages'][$id]);
-						continue;
-					}
-				}
+//---
+		$menu_class = 'horizontal_menu_n';
+		
+		$page_exists = false;
+		$sub_menus[$label] = array();
+		foreach($menu['pages'] as $id => $sub_page){
+			$show_sub_menu = true;
+// show check
+			if(!isset($sub_page['label'])) $show_sub_menu = false;
+
+			if(isset($sub_page['user_type']) && ($USER_DETAILS['type'] < $sub_page['user_type'])){
+				$show_sub_menu = false;
 			}
 
-			if(isset($page_exist)) continue; 
-				
-			if($page['file'] == $sub_pages['url']){
-				if(isset($sub_pages['label'])){
-					$menu_url = $sub_pages['url'];
+			if(isset($sub_pages['node_perm']) && isset($DB['DB']) && !is_null($DB['DB'])){
+				$available_nodes = get_accessible_nodes_by_user($USER_DETAILS,$sub_page['node_perm']);				
+				if(0 == count($available_nodes)){
+					$show_sub_menu = false;
 				}
-				
-				$page_exist = true;
-				$sub['pages'][$id]['active'] = true; /* mark as active */
-			}
-			else if(isset($sub_pages['sub_pages'])){
-				if(str_in_array($page['file'], $sub_pages['sub_pages'])){
-					if(isset($sub_pages['label'])){
-						$menu_url = $sub_pages['url'];
-					}
-					$page_exist = true;
-					$sub['pages'][$id]['active'] = true; /* mark as active */
-				}					
-			}
-
-			if (isset($page_exist) &&
-				( isset($sub['forse_disable_subnodes']) || isset($sub_pages['forse_disable_subnodes']) ) &&
-				!defined('ZBX_DISABLE_SUBNODES'))
-			{
-					define('ZBX_DISABLE_SUBNODES', 1);
 			}
-		}
-
-		if(isset($menu_url)){ /* active menu */
-			$class = 'active';
-
-			update_profile('web.menu.'.$label.'.last', $menu_url, PROFILE_TYPE_STR);
-
-			if(isset($deny)){
-				$denyed_page_requested = true;
-				continue;
-			}
-
-			foreach($sub['pages'] as $sub_pages){
-				if(!isset($sub_pages['label'])) continue;
-
-				$label = new CLink($sub_pages['label'], $sub_pages['url'],'highlight');
-				if(isset($sub_pages['active'])) $label = new CSpan($label, 'active');
+//----------
+			$row = array('menu_text' => isset($sub_page['label'])?$sub_page['label']:'', 
+							'menu_url'=> $sub_page['url'],
+							'class'=> 'highlight',
+							'selected'=> false);
+
+			$sub_menu_active = ($page['file'] == $sub_page['url']);
+			$sub_menu_active |=  (isset($sub_page['sub_pages']) && str_in_array($page['file'], $sub_page['sub_pages']));
+
+			if($sub_menu_active){
+// PERMISSION CHECK
+				$deny &= ($USER_DETAILS['type'] < $menu['user_type']);
+// END OF PERMISSION CHECK 
+				$menu_class = 'active';
+				$page_exists = true;
+				$page['menu'] = $label;
+				$row['selected'] = true;
 				
-				array_push($sub_menu_row, 
-					$label,
-					new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider')
-					);
+				if(!defined('ZBX_PAGE_NO_MENU'))
+					update_profile('web.menu.'.$label.'.last', $sub_page['url'], PROFILE_TYPE_STR);
 			}
+			
+			if($show_sub_menu) $sub_menus[$label][] = $row;
+		}
+		
+		if($page_exists && !defined('ZBX_DISABLE_SUBNODES') && 
+			(isset($menu['forse_disable_subnodes']) || isset($sub_page['forse_disable_subnodes'])))
+		{
+			define('ZBX_DISABLE_SUBNODES', 1);
+		}
+//SDI($label.' : '.$show_menu.' : '.$deny);
+		if($page_exists && $deny){
+			$denyed_page_requested = true;
 		}
-		else{
-			if(isset($deny)) continue;
-
-			$class = 'horizontal_menu_n';
 
+		if(!$show_menu){
+			unset($sub_menus[$label]);
+			continue;
+		}
+		
+		if(ZBX_DISABLE_MENU_CACHE == 0)
 			$menu_url = get_profile('web.menu.'.$label.'.last',false);
+		else
+			$menu_url = $menu['pages'][$sub['default_page_id']]['url'];
 
-			if(!$menu_url)
-				$menu_url = $sub['pages'][$sub['default_page_id']]['url'];
-		}
 
-		array_push($main_menu_row, new CCol(new CLink($sub['label'], $menu_url, 'highlight'),$class));
-		unset($menu_url, $class);
+		$mmenu_entry = new CCol($menu['label'], $menu_class);
+		$mmenu_entry->addOption('id', $label);
+		$mmenu_entry->addAction('onclick', "javascript: location.href = '$menu_url';");
+		$mmenu_entry->addAction('onmouseover', 'javascript: MMenu.mouseOver("'.$label.'");');
+		$mmenu_entry->addAction('onmouseout', 'javascript: MMenu.mouseOut();');
+		
+		array_push($main_menu, $mmenu_entry);
 	}
 
-	if((!isset($page_exist) && $page['type']!=PAGE_TYPE_XML)){
+	if(!isset($page_exists) && ($page['type']!=PAGE_TYPE_XML)){
 		$denyed_page_requested = true;
 	}
 
 	zbx_flush_post_cookies(isset($denyed_page_requested));
 
-	if($page['type'] == PAGE_TYPE_HTML)
-	{
+	if($page['type'] == PAGE_TYPE_HTML){
 ?>
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml">
@@ -426,9 +412,9 @@ COpt::profiling_start("page");
 
 <script type="text/javascript" src="js/prototype.js"></script>
 <script type="text/javascript" src="js/common.js"></script>
+<script type="text/javascript" src="js/gpc.js"></script>
 <script type="text/javascript" src="js/ajax_req.js"></script>
-<script type="text/javascript" src="js/url.js"></script>
-<script type="text/javascript" src="js/chkbxrange.js"></script>
+
 <?php
 	if(isset($page['scripts']) && is_array($page['scripts'])){
 		foreach($page['scripts'] as $id => $script){
@@ -484,10 +470,8 @@ COpt::compare_files_with_menu($ZBX_MENU);
 			$page_header_r_col[] = array('|', new CLink(S_LOGIN, 'index.php?reconnect=1', 'small_font'));
 		}
 
-		$logo = new CLink(new CDiv(SPACE,'zabbix_logo'),'http://www.zabbix.com');
+		$logo = new CLink(new CDiv(SPACE,'zabbix_logo'),'http://www.zabbix.com/');
 		$logo->setTarget('_blank');
-//		$logo = new CDiv(SPACE,'zabbix_logo');
-//		$logo->AddAction('onclick',"javascript: document.location = 'http://www.zabbix.com';");		
 		
 		$td_r = new CCol($page_header_r_col, 'page_header_r');
 		$td_r->addOption('width','100%');
@@ -499,15 +483,14 @@ COpt::compare_files_with_menu($ZBX_MENU);
 		$table->setCellSpacing(0);
 		$table->setCellPadding(5);
 		$table->addRow($top_page_row);
-		$table->Show();
+		$table->show();
 
 		$menu_table = new CTable(NULL,'menu');
 		$menu_table->setCellSpacing(0);
 		$menu_table->setCellPadding(5);
-		$menu_table->addRow($main_menu_row);
-
+		$menu_table->addRow($main_menu);
+		
 		$node_form = null;
-
 		if(ZBX_DISTRIBUTED){
 			$lst_nodes = new CComboBox('switch_node', get_current_nodeid(false), 'submit()');
 			$available_nodes = get_accessible_nodes_by_user($USER_DETAILS,PERM_READ_LIST);
@@ -516,7 +499,7 @@ COpt::compare_files_with_menu($ZBX_MENU);
 						' WHERE '.DBcondition('nodeid',$available_nodes).
 						' ORDER BY name ');
 			while($node_data = DBfetch($db_nodes)){
-				$lst_nodes->AddItem($node_data['nodeid'],$node_data['name']);
+				$lst_nodes->addItem($node_data['nodeid'],$node_data['name']);
 			}
 
 			if($lst_nodes->ItemsCount() > 0){
@@ -528,14 +511,11 @@ COpt::compare_files_with_menu($ZBX_MENU);
 					global $ZBX_WITH_SUBNODES;
 
 					$cmd_show_subnodes = new CComboBox('show_subnodes', !empty($ZBX_WITH_SUBNODES) ? 1 : 0, 'submit()');
-					$cmd_show_subnodes->AddItem(0, S_CURRENT_NODE_ONLY);
-					$cmd_show_subnodes->AddItem(1, S_WITH_SUBNODES);
+					$cmd_show_subnodes->addItem(0, S_CURRENT_NODE_ONLY);
+					$cmd_show_subnodes->addItem(1, S_WITH_SUBNODES);
 
 					$node_form->addItem(array(SPACE, new CSpan(S_SHOW,'textcolorstyles'), $cmd_show_subnodes));
 				}
-
-// No need for the button anymore
-//				$node_form->AddItem(new CButton('submit',S_SWITCH_NODE));
 			}
 		}
 		
@@ -548,15 +528,56 @@ COpt::compare_files_with_menu($ZBX_MENU);
 		$r_col->addOption('style','text-align: right;');
 		
 		$table->addRow(array($menu_table,$r_col));
-		$table->Show();
 		
+		$page_menu = new CDiv();
+		$page_menu->addoption('id','mmenu');
+		$page_menu->addItem($table);
+		
+		$menu_selected = false;
+		foreach($sub_menus as $label => $sub_menu){
+			$sub_menu_table = new CTable(NULL,'sub_menu');
+			$sub_menu_table->setCellSpacing(0);
+			$sub_menu_table->setCellPadding(5);
+			
+			$sub_menu_row = array();
+			foreach($sub_menu as $id => $sub_page){
+				if(empty($sub_page['menu_text'])) $sub_page['menu_text'] = SPACE;
+				
+				$sub_menu_item = new CLink($sub_page['menu_text'], $sub_page['menu_url'], $sub_page['class']);
+				if($sub_page['selected']) $sub_menu_item = new CSpan($sub_menu_item, 'active');
+				$sub_menu_row[] = $sub_menu_item;
+				$sub_menu_row[] = new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider');
+			}
+			$sub_menu_table->addRow(new CCol($sub_menu_row));
+			
+			$sub_menu_div = new CDiv($sub_menu_table);
+			$sub_menu_div->addOption('id', 'sub_'.$label);
+			$sub_menu_div->addAction('onmouseover','javascript: MMenu.submenu_mouseOver();');
+			$sub_menu_div->addAction('onmouseout','javascript: MMenu.mouseOut();');
+
+			if(isset($page['menu']) && ($page['menu'] == $label)){
+				$menu_selected = true;
+				$sub_menu_div->addOption('style','display: block;');
+				insert_js('MMenu.def_label = '.zbx_jsvalue($label));
+			}
+			else{
+				$sub_menu_div->addOption('style','display: none;');
+			}
+			
+			$page_menu->addItem($sub_menu_div);
+		}
+
 		$sub_menu_table = new CTable(NULL,'sub_menu');
 		$sub_menu_table->setCellSpacing(0);
 		$sub_menu_table->setCellPadding(5);
+		$sub_menu_table->addRow(SPACE);
+		
+		$sub_menu_div = new CDiv($sub_menu_table);
+		$sub_menu_div->addOption('id', 'sub_empty');
+		$sub_menu_div->addOption('style','display: '.($menu_selected?'none;':'block;'));
+		$page_menu->addItem($sub_menu_div);
 		
-		(empty($sub_menu_row))?($sub_menu_row = '&nbsp;'):('');
-		$sub_menu_table->addRow(new CCol($sub_menu_row));
-		$sub_menu_table->Show();
+		$page_menu->show();
 	}
 //------------------------------------- <HISTORY> ---------------------------------------
 	if(isset($page['hist_arg']) && ($USER_DETAILS['alias'] != ZBX_GUEST_USER) && ($page['type'] == PAGE_TYPE_HTML) && !defined('ZBX_PAGE_NO_MENU')){
@@ -584,7 +605,7 @@ COpt::compare_files_with_menu($ZBX_MENU);
 	unset($table, $top_page_row, $menu_table, $node_form);
 	unset($main_menu_row);
 	unset($db_nodes, $node_data);
-	unset($sub_menu_table, $sub_menu_row);
+	unset($sub_menu_table, $sub_menu_rows);
 
 	if(isset($denyed_page_requested)){
 		access_deny();
diff --git a/frontends/php/include/perm.inc.php b/frontends/php/include/perm.inc.php
index 2dd7aec..9036cfe 100644
--- a/frontends/php/include/perm.inc.php
+++ b/frontends/php/include/perm.inc.php
@@ -43,9 +43,8 @@ function check_authorisation(){
 
 	$USER_DETAILS = NULL;
 	$login = FALSE;
-	
-	$sessionid = get_cookie('zbx_sessionid');
 
+	$sessionid = get_cookie('zbx_sessionid');
 	if(!is_null($sessionid)){
 		$sql = 'SELECT u.*,s.* '.
 				' FROM sessions s,users u'.
@@ -54,9 +53,8 @@ function check_authorisation(){
 					' AND s.userid=u.userid'.
 					' AND ((s.lastaccess+u.autologout>'.time().') OR (u.autologout=0))'.
 					' AND '.DBin_node('u.userid', $ZBX_LOCALNODEID);
-					
-		$login = $USER_DETAILS = DBfetch(DBselect($sql));
 
+		$login = $USER_DETAILS = DBfetch(DBselect($sql));
 		if(!$USER_DETAILS){
 			$incorrect_session = true;
 		}
@@ -73,7 +71,7 @@ function check_authorisation(){
 		}
 	}
 
-	if(!$USER_DETAILS){
+	if(!$USER_DETAILS && !isset($_SERVER['PHP_AUTH_USER'])){
 		$sql = 'SELECT u.* '.
 				' FROM users u '.
 				' WHERE u.alias='.zbx_dbstr(ZBX_GUEST_USER).
@@ -120,7 +118,7 @@ function check_authorisation(){
 				'name'	=>'- unknown -',
 				'nodeid'=>0));
 	}
-	
+
 	if(!$login || isset($incorrect_session) || isset($missed_user_guest)){
 
 		if(isset($incorrect_session))	$message = 'Session was ended, please relogin!';
@@ -130,7 +128,7 @@ function check_authorisation(){
 				$message = 'Table users is empty. Possible database corruption.';
 			}
 		}
-		
+
 		if(!isset($_REQUEST['message']) && isset($message)) $_REQUEST['message'] = $message;
 		
 		include('index.php');
@@ -263,18 +261,6 @@ return $result;
 /***********************************************
 	GET ACCESSIBLE RESOURCES BY USERID
 ************************************************/
-function perm_mode2comparator($perm_mode){
-	switch($perm_mode){
-		case PERM_MODE_NE:	$perm_mode = '!='; break;
-		case PERM_MODE_EQ:	$perm_mode = '=='; break;
-		case PERM_MODE_GT:	$perm_mode = '>'; break;
-		case PERM_MODE_LT:	$perm_mode = '<'; break;
-		case PERM_MODE_LE:	$perm_mode = '<='; break;
-		case PERM_MODE_GE:
-		default:		$perm_mode = '>='; break;
-	}
-return $perm_mode;
-}
 
 function get_accessible_hosts_by_user(&$user_data,$perm,$perm_res=null,$nodeid=null,$cache=1){
 //		global $DB;
@@ -358,7 +344,7 @@ COpt::counter_up('perm');
 				$result[$host_data['hostid']] = $host_data; 
 				break;
 			default:
-				$result[$host_data['hostid']] = $host_data["hostid"]; 
+				$result[$host_data['hostid']] = $host_data['hostid']; 
 		}
 	}
 
@@ -391,11 +377,12 @@ function get_accessible_groups_by_user($user_data,$perm,$perm_res=null,$nodeid=n
 COpt::counter_up('perm_group['.$userid.','.$perm.','.$perm_res.','.$nodeid.']');
 COpt::counter_up('perm');
 
+	$processed = array();
 	$where = array();
 
-	if(!is_null($nodeid))
+	if(!is_null($nodeid)){
 		array_push($where, DBin_node('hg.groupid', $nodeid));
-
+	}
 	$where = count($where)?' WHERE '.implode(' AND ',$where):'';
 
 	$sql = 'SELECT n.nodeid as nodeid,n.name as node_name,hg.groupid,hg.name,min(r.permission) as permission,g.userid'.
@@ -406,10 +393,7 @@ COpt::counter_up('perm');
 		$where.
 		' GROUP BY n.nodeid, n.name, hg.groupid, hg.name, g.userid, g.userid '.
 		' ORDER BY node_name, hg.name, permission ';
-
 	$db_groups = DBselect($sql);
-
-	$processed = array();
 	while($group_data = DBfetch($db_groups)){
 		if(zbx_empty($group_data['nodeid'])) $group_data['nodeid'] = id2nodeid($group_data['groupid']);
 
@@ -472,10 +456,8 @@ function get_accessible_nodes_by_user(&$user_data,$perm,$perm_res=null,$nodeid=n
 
 	$node_data = array();
 	$result = array();
-	
-//COpt::counter_up('perm_nodes['.$userid.','.$perm.','.$perm_mode.','.$perm_res.','.$nodeid.']');
-//COpt::counter_up('perm');
 
+//COpt::counter_up('perm');
 	if(USER_TYPE_SUPER_ADMIN == $user_type){
 		$nodes = DBselect('SELECT nodeid FROM nodes');// WHERE '.DBcondition('nodeid',$nodeid));
 		while($node = DBfetch($nodes)){
@@ -692,7 +674,6 @@ function get_accessible_nodes_by_rights(&$rights,$user_type,$perm,$perm_res=null
 	$node_data = array();
 	$result = array();
 	
-//COpt::counter_up('perm_nodes['.$userid.','.$perm.','.$perm_mode.','.$perm_res.','.$nodeid.']');
 //COpt::counter_up('perm');
 //SDI(get_accessible_groups_by_rights($rights,$user_type,$perm,PERM_RES_DATA_ARRAY,$nodeid));
 	$available_groups = get_accessible_groups_by_rights($rights,$user_type,$perm,PERM_RES_DATA_ARRAY,$nodeid);
diff --git a/frontends/php/include/profiles.inc.php b/frontends/php/include/profiles.inc.php
index 92afa45..b1fff6d 100644
--- a/frontends/php/include/profiles.inc.php
+++ b/frontends/php/include/profiles.inc.php
@@ -310,15 +310,17 @@ function profile_value_by_type(&$value,$type){
 				$result = false;
 		}
 	}
-	else{			
+	else{
 		switch($type){	
 			case PROFILE_TYPE_ID:
+				$result = ctype_digit($value);
+				break;
 			case PROFILE_TYPE_INT:
 				$result = zbx_numeric($value)?$value:false;
-			break;
+				break;
 			case PROFILE_TYPE_STR:
 				$result = strval($value);
-			break;
+				break;
 			default:
 				$result = false;
 		}
@@ -328,6 +330,7 @@ return $result;
 
 /********** END MISC ***********/
 
+
 /************ CONFIG **************/
 
 function select_config(){
@@ -337,11 +340,10 @@ function select_config(){
 	if($row){
 		return	$row;
 	}
-	else{
-		if($page["title"] != S_INSTALLATION)
+	else if($page['title'] != S_INSTALLATION){
 			error('Unable to select configuration');
 	}
-	return	$row;
+return	$row;
 }
 
 function update_config($configs){
diff --git a/frontends/php/include/reports.inc.php b/frontends/php/include/reports.inc.php
index 842a95d..61b7767 100644
--- a/frontends/php/include/reports.inc.php
+++ b/frontends/php/include/reports.inc.php
@@ -20,99 +20,48 @@
 ?>
 <?php
 
-function show_report2_header($config){
+function show_report2_header($config,&$PAGE_GROUPS, &$PAGE_HOSTS){
 	global $USER_DETAILS;
-	
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+
+//	$available_groups = $PAGE_GROUPS['groupids'];
+//	$available_hosts = $PAGE_HOSTS['hostids'];
 	
 	$r_form = new CForm();
-	$r_form->SetMethod('get');
+	$r_form->setMethod('get');
 	
 	$cmbConf = new CComboBox('config',$config,'submit()');
-	$cmbConf->AddItem(0,S_BY_HOST);
-	$cmbConf->AddItem(1,S_BY_TRIGGER_TEMPLATE);
+	$cmbConf->addItem(0,S_BY_HOST);
+	$cmbConf->addItem(1,S_BY_TRIGGER_TEMPLATE);
 
-	$r_form->AddItem(array(S_MODE.SPACE,$cmbConf,SPACE));
+	$r_form->addItem(array(S_MODE.SPACE,$cmbConf,SPACE));
 
-	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-	
-	$status_filter=($config==1)?' AND h.status='.HOST_STATUS_TEMPLATE:' AND h.status='.HOST_STATUS_MONITORED;
-	
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g,hosts_groups hg,hosts h'.
-			' WHERE '.DBcondition('h.hostid',$available_hosts).
-				' AND '.DBcondition('g.groupid',$available_groups).
-				' AND g.groupid=hg.groupid '.
-				' AND h.hostid=hg.hostid'.
-				$status_filter.
-			' ORDER BY g.name';
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbGroup->AddItem($row['groupid'],	get_node_name_by_elid($row['groupid']).$row['name']);
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
-
-
-	$sql_from = '';
-	$sql_where = '';
-
-	if(0 == $config){
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
-		$sql_where = ' AND h.status='.HOST_STATUS_MONITORED;
+	foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+		$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 	}
-	else{
-		$cmbTpls = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
+	
+	$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+	$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+
+	if(1 == $config){
 		$cmbTrigs = new CComboBox('tpl_triggerid',get_request('tpl_triggerid',0),'submit()');
 		$cmbHGrps = new CComboBox('hostgroupid',get_request('hostgroupid',0),'submit()');
 		
-		$cmbTrigs->AddItem(0,S_ALL_SMALL);
-		$cmbHGrps->AddItem(0,S_ALL_SMALL);
-		
-		$sql_where = ' AND h.status='.HOST_STATUS_TEMPLATE;		
+		$cmbTrigs->addItem(0,S_ALL_SMALL);
+		$cmbHGrps->addItem(0,S_ALL_SMALL);
 	}
 	
-	
-	if($_REQUEST['groupid'] > 0){
-		$sql_from .= ',hosts_groups hg ';
-		$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
-	}
-	else{
-		if(0 == $config){
-			$cmbHosts->AddItem(0,S_ALL_SMALL);
-		}
-		else{
-			$cmbTpls->AddItem(0,S_ALL_SMALL);
-		}		
-	}
-	
-	$sql='SELECT DISTINCT h.hostid,h.host '.
-		' FROM hosts h,items i '.$sql_from.
-		' WHERE '.DBcondition('h.hostid',$available_hosts).
-			$sql_where.
-			' AND i.hostid=h.hostid '.
-		' ORDER BY h.host';
-
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		if(0 == $config){
-			$cmbHosts->AddItem($row['hostid'],get_node_name_by_elid($row['hostid']).$row['host']);
-		}
-		else{
-			$cmbTpls->AddItem($row['hostid'],get_node_name_by_elid($row['hostid']).$row['host']);
-		}
-	}
-
-	
 	if(0 == $config){
-		$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
 		show_table_header(S_AVAILABILITY_REPORT_BIG, $r_form);
 	}
 	else{
-		$r_form->AddItem(array(SPACE.S_TEMPLATE.SPACE,$cmbTpls));
-
 		$sql_cond = ' AND h.hostid=ht.hostid ';
 		if($_REQUEST['hostid'] > 0)	$sql_cond.=' AND ht.templateid='.$_REQUEST['hostid'];
 		
@@ -135,7 +84,7 @@ function show_report2_header($config){
 			' ORDER BY g.name');
 
 		while($row=DBfetch($result)){
-			$cmbHGrps->AddItem(
+			$cmbHGrps->addItem(
 				$row['groupid'],
 				get_node_name_by_elid($row['groupid']).$row['name']
 				);
@@ -156,18 +105,18 @@ function show_report2_header($config){
 		$result=DBselect($sql);
 
 		while($row=DBfetch($result)){
-			$cmbTrigs->AddItem(
+			$cmbTrigs->addItem(
 					$row['triggerid'],
 					get_node_name_by_elid($row['triggerid']).expand_trigger_description($row['triggerid'])
 					);
 		}
 		$rr_form = new CForm();
-		$rr_form->SetMethod('get');
-		$rr_form->AddVar('config',$config);
-		$rr_form->AddVar('groupid',$_REQUEST['groupid']);
-		$rr_form->AddVar('hostid',$_REQUEST['hostid']);
+		$rr_form->setMethod('get');
+		$rr_form->addVar('config',$config);
+		$rr_form->addVar('groupid',$_REQUEST['groupid']);
+		$rr_form->addVar('hostid',$_REQUEST['hostid']);
 		
-		$rr_form->AddItem(array(S_TRIGGER.SPACE,$cmbTrigs,BR(),S_FILTER,SPACE,S_HOST_GROUP.SPACE,$cmbHGrps));
+		$rr_form->addItem(array(S_TRIGGER.SPACE,$cmbTrigs,BR(),S_FILTER,SPACE,S_HOST_GROUP.SPACE,$cmbHGrps));
 		show_table_header(S_AVAILABILITY_REPORT_BIG, array($r_form,$rr_form));
 	}
 }
diff --git a/frontends/php/include/screens.inc.php b/frontends/php/include/screens.inc.php
index e8c7640..e2a9871 100644
--- a/frontends/php/include/screens.inc.php
+++ b/frontends/php/include/screens.inc.php
@@ -787,12 +787,12 @@
 
 		$form->AddItemToBottomRow(new CButton("save",S_SAVE));
 		if(isset($_REQUEST["screenitemid"])){
-			$form->AddItemToBottomRow(SPACE);
-			$form->AddItemToBottomRow(new CButtonDelete(null,
+			$form->addItemToBottomRow(SPACE);
+			$form->addItemToBottomRow(new CButtonDelete(null,
 				url_param("form").url_param("screenid").url_param("screenitemid")));
 		}
-		$form->AddItemToBottomRow(SPACE);
-		$form->AddItemToBottomRow(new CButtonCancel(url_param("screenid")));
+		$form->addItemToBottomRow(SPACE);
+		$form->addItemToBottomRow(new CButtonCancel(url_param("screenid")));
 		return $form;
 	}
 
@@ -886,7 +886,7 @@
 					$action = 'screenedit.php?form=update'.url_param('screenid').'&x='.$c.'&y='.$r.'#form';
 				else
 					$action = NULL;
-
+					
 				if($editmode == 1 && isset($_REQUEST["form"]) && 
 					isset($_REQUEST["x"]) && $_REQUEST["x"]==$c &&
 					isset($_REQUEST["y"]) && $_REQUEST["y"]==$r)
@@ -1068,12 +1068,20 @@
 					$item = array(get_screen($resourceid, 2, $effectiveperiod));
 					if($editmode == 1)	array_push($item,new CLink(S_CHANGE,$action));
 				}
-				else if( ($screenitemid!=0) && ($resourcetype==SCREEN_RESOURCE_TRIGGERS_OVERVIEW) ){
-					$item = array(get_triggers_overview($resourceid,$style));
+				else if( ($screenitemid!=0) && ($resourcetype==SCREEN_RESOURCE_TRIGGERS_OVERVIEW) ){		
+					$hostids = array();
+					$res = DBselect('SELECT DISTINCT hg.hostid FROM hosts_groups hg WHERE hg.groupid='.$resourceid);
+					while($tmp_host = DBfetch($res)) $hostids[$tmp_host['hostid']] = $tmp_host['hostid'];
+
+					$item = array(get_triggers_overview($hostids,$style));
 					if($editmode == 1)	array_push($item,new CLink(S_CHANGE,$action));
 				}
 				else if( ($screenitemid!=0) && ($resourcetype==SCREEN_RESOURCE_DATA_OVERVIEW) ){
-					$item = array(get_items_data_overview($resourceid,$style));
+					$hostids = array();
+					$res = DBselect('SELECT DISTINCT hg.hostid FROM hosts_groups hg WHERE hg.groupid='.$resourceid);
+					while($tmp_host = DBfetch($res)) $hostids[$tmp_host['hostid']] = $tmp_host['hostid'];
+
+					$item = array(get_items_data_overview($hostids,$style));
 					if($editmode == 1)	array_push($item,new CLink(S_CHANGE,$action));
 				}
 				else if( ($screenitemid!=0) && ($resourcetype==SCREEN_RESOURCE_URL) ){
diff --git a/frontends/php/include/services.inc.php b/frontends/php/include/services.inc.php
index 288109c..07e39e4 100644
--- a/frontends/php/include/services.inc.php
+++ b/frontends/php/include/services.inc.php
@@ -252,7 +252,7 @@
 		return	FALSE;
 	}
 
-	function	service_has_parent($serviceid){
+	function service_has_parent($serviceid){
 		$row = DBfetch(DBselect('SELECT linkid FROM services_links WHERE servicedownid='.$serviceid));
 		if($row && !zbx_empty($row['linkid'])){
 			return	TRUE;
@@ -261,8 +261,7 @@
 	}
 
 // Seems not used ant more!
-	function	service_has_no_this_parent($parentid,$serviceid)
-	{
+	function service_has_no_this_parent($parentid,$serviceid){
 		$row = DBfetch(DBselect('SELECT linkid FROM services_links WHERE serviceupid='.$parentid.' AND servicedownid='.$serviceid));
 		if($row && !zbx_empty($row['linkid'])){
 			return	FALSE;
@@ -270,7 +269,7 @@
 		return	TRUE;
 	}
 
-	function	add_service_link($servicedownid,$serviceupid,$softlink){
+	function add_service_link($servicedownid,$serviceupid,$softlink){
 		if( ($softlink==0) && (is_service_hardlinked($servicedownid)==true) ){
 			error("cannot link hardlinked service.");
 			return	false;
@@ -292,7 +291,7 @@
 		return $linkid;
 	}
 	
-	function	update_service_link($linkid,$servicedownid,$serviceupid,$softlink){
+	function update_service_link($linkid,$servicedownid,$serviceupid,$softlink){
 		if( ($softlink==0) && (is_service_hardlinked($servicedownid)==true) ){
 			return	false;
 		}
@@ -315,28 +314,25 @@
 		DBExecute($query);
 	}
 	
-	function	get_last_service_value($serviceid,$clock){
+	function get_last_service_value($serviceid,$clock){
 	       	$sql="SELECT count(*) as cnt,max(clock) as maxx FROM service_alarms WHERE serviceid=$serviceid and clock<=$clock";
 //		echo " $sql<br>";
 		
 	        $result=DBselect($sql);
 		$row=DBfetch($result);
-		if($row["cnt"]>0)
-		{
+		if($row["cnt"]>0){
 	       		$sql="SELECT value FROM service_alarms WHERE serviceid=$serviceid and clock=".$row["maxx"];
 		        $result2=DBselect($sql);
 // Assuring that we get very latest service value. There could be several with the same timestamp
 //			$value=DBget_field($result2,0,0);
-			while($row2=DBfetch($result2))
-			{
+			while($row2=DBfetch($result2)){
 				$value=$row2["value"];
 			}
 		}
-		else
-		{
+		else{
 			$value=0;
 		}
-		return $value;
+	return $value;
 	}
 /*	
 function VDI($time,$show=1){
@@ -559,7 +555,7 @@ if($serviceid == 1 || $serviceid == 2){
 	return $sla_time;
 	}
 
-	function	get_service_status_description($status){
+	function get_service_status_description($status){
 		$desc=new CSpan(S_OK_BIG,'green');
 		if(TRIGGER_SEVERITY_DISASTER == $status){
 			$desc=new CTag('div','yes',S_DISASTER,'disaster');
@@ -579,11 +575,10 @@ if($serviceid == 1 || $serviceid == 2){
 	return $desc;
 	}
 
-	function	get_num_of_service_childs($serviceid)
-	{
+	function get_num_of_service_childs($serviceid){
 		$row = DBfetch(DBselect("SELECT count(distinct servicedownid) as cnt FROM services_links ".
 					" WHERE serviceupid=".$serviceid));
-		return	$row["cnt"];
+	return	$row["cnt"];
 	}
 
 	function	get_service_by_serviceid($serviceid)
diff --git a/frontends/php/include/triggers.inc.php b/frontends/php/include/triggers.inc.php
index 4450a47..0465923 100644
--- a/frontends/php/include/triggers.inc.php
+++ b/frontends/php/include/triggers.inc.php
@@ -19,9 +19,9 @@
 **/
 ?>
 <?php
-	require_once "maps.inc.php";
-	require_once "acknow.inc.php";
-	require_once "services.inc.php";
+	require_once('maps.inc.php');
+	require_once('acknow.inc.php');
+	require_once('services.inc.php');
 
 	/*
 	 * Function: INIT_TRIGGER_EXPRESSION_STRUCTURES
@@ -182,17 +182,19 @@
  *     Aly
  *
  */		
-	function get_accessible_triggers($perm,$perm_res=null,$nodeid=null,$hostid=null,$cache=1){
+	function get_accessible_triggers($perm,$hostids,$perm_res=null,$nodeid=null,$cache=1){
 		global $USER_DETAILS;
 		static $available_triggers;
+		zbx_value2array($hostids);
 		
 		$result = array();
 		if(is_null($perm_res)) $perm_res = PERM_RES_IDS_ARRAY;
 		$nodeid_str =(is_array($nodeid))?implode('',$nodeid):strval($nodeid);
-		$hostid_str =(is_array($hostid))?implode('',$hostid):strval($hostid);
-			
-		if($cache && isset($available_triggers[$perm][$perm_res][$nodeid_str][$hostid_str])){
-			return $available_triggers[$perm][$perm_res][$nodeid_str][$hostid_str];
+		$hostid_str = implode('',$hostids);
+
+		$cache_hash = md5($perm.$perm_res.$nodeid_str.$hostid_str);
+		if($cache && isset($available_triggers[$cache_hash])){
+			return $available_triggers[$cache_hash];
 		}
 
 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, $perm, PERM_RES_IDS_ARRAY, $nodeid);
@@ -200,23 +202,30 @@
 		$denied_triggers = array();
 		$available_triggers = array();
 		
+		$sql_where = '';
+		if(!empty($hostids)){
+			$sql_where.= ' AND '.DBcondition('i.hostid',$hostids);
+		}		
 		$sql = 	'SELECT DISTINCT t.triggerid '.
 				' FROM triggers t, functions f, items i '.
 				' WHERE t.triggerid=f.triggerid '.
 					' AND f.itemid=i.itemid'.
-					(!empty($hostid)?' AND i.hostid='.$hostid:'').
-					' AND '.DBcondition('i.hostid',$available_hosts,true);
+					' AND '.DBcondition('i.hostid',$available_hosts,true).
+					$sql_where;
 		$db_triggers = DBselect($sql);
 		while($trigger = DBfetch($db_triggers)){
 			$denied_triggers[] = $trigger['triggerid'];
 		}
 
+		if(!empty($denied_triggers)){
+			$sql_where.= ' AND '.DBcondition('t.triggerid',$denied_triggers,true);
+		}
+
 		$sql = 	'SELECT DISTINCT t.triggerid '.
 				' FROM triggers t, functions f, items i '.
 				' WHERE t.triggerid=f.triggerid '.
 					' AND f.itemid=i.itemid'.
-					(!empty($hostid)?' AND i.hostid='.$hostid:'').
-					(!empty($denied_triggers)?' AND '.DBcondition('t.triggerid',$denied_triggers,true):'');
+					$sql_where;
 		$db_triggers = DBselect($sql);
 		while($trigger = DBfetch($db_triggers)){
 			$result[$trigger['triggerid']] = $trigger['triggerid'];
@@ -229,7 +238,7 @@
 				$result = implode(',',$result);
 		}
 		
-		$available_triggers[$perm][$perm_res][$nodeid_str][$hostid_str] = $result;
+		$available_triggers[$cache_hash] = $result;
 		
 	return $result;
 	}
@@ -1170,20 +1179,22 @@
 			$description = str_replace("{HOSTNAME}", $row["host"],$description);
 
 			if(zbx_strstr($description,"{ITEM.LASTVALUE}")){
-				$row2=DBfetch(DBselect('SELECT i.lastvalue, i.value_type, i.itemid '.
-										' FROM items i, triggers t, functions f '.
-										' WHERE i.itemid=f.itemid '.
-											' AND f.triggerid=t.triggerid '.
-											' AND t.triggerid='.$row['triggerid']));
-
-				if($row2['value_type']!=ITEM_VALUE_TYPE_LOG){
-					$description = str_replace('{ITEM.LASTVALUE}', $row2['lastvalue'],$description);
-				}
-				else{
-					$row3=DBfetch(DBselect("select max(clock) as max from history_log where itemid=".$row2["itemid"]));
-					if($row3 && !is_null($row3["max"])){
-						$row4=DBfetch(DBselect("select value from history_log where itemid=".$row2["itemid"]." and clock=".$row3["max"]));
-						$description = str_replace("{ITEM.LASTVALUE}", $row4["value"],$description);
+				$functionid=trigger_get_N_functionid($row["expression"], 1);
+				if (isset($functionid)){
+					$row2=DBfetch(DBselect('SELECT i.lastvalue, i.value_type, i.itemid '.
+									' FROM items i, functions f '.
+									' WHERE i.itemid=f.itemid '.
+										' AND f.functionid='.$functionid));
+
+					if($row2['value_type']!=ITEM_VALUE_TYPE_LOG){
+						$description = str_replace('{ITEM.LASTVALUE}', $row2['lastvalue'],$description);
+					}
+					else{
+						$row3=DBfetch(DBselect("select max(clock) as max from history_log where itemid=".$row2["itemid"]));
+						if($row3 && !is_null($row3["max"])){
+							$row4=DBfetch(DBselect("select value from history_log where itemid=".$row2["itemid"]." and clock=".$row3["max"]));
+							$description = str_replace("{ITEM.LASTVALUE}", $row4["value"],$description);
+						}
 					}
 				}
 			}
@@ -1510,13 +1521,12 @@
 	}
 
 	function check_right_on_trigger_by_expression($permission,$expression){
-	
 		global $USER_DETAILS;
 		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, $permission, null, get_current_nodeid(true));
 
 		$db_hosts = get_hosts_by_expression($expression);
 		while($host_data = DBfetch($db_hosts)){
-			if(!uint_in_array($host_data['hostid'], $available_hosts)) return false;
+			if(!isset($available_hosts[$host_data['hostid']])) return false;
 		}
 
 		return true;
@@ -1822,36 +1832,28 @@
 		}
 	}
 
-	/*
-	 * Function: get_triggers_overview
-	 *
-	 * Description: 
-	 *     Retrive table with overview of triggers
-	 *     
-	 * Author: 
-	 *     Eugene Grigorjev (eugene.grigorjev@zabbix.com)
-	 *
-	 * Comments: !!! Don't forget sync code with C !!!
-	 *
-	 */
-	function get_triggers_overview($groupid,$view_style=null){
-		global $USER_DETAILS;
-		
-		$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+/*
+ * Function: get_triggers_overview
+ *
+ * Description: 
+ *     Retrive table with overview of triggers
+ *     
+ * Author: 
+ *     Eugene Grigorjev (eugene.grigorjev@zabbix.com)
+ *
+ * Comments: !!! Don't forget sync code with C !!!
+ *
+ */
+	function get_triggers_overview($hostids,$view_style=null){		
+		$available_triggers = get_accessible_triggers(PERM_READ_ONLY,$hostids);
 		
 		if(is_null($view_style)) $view_style = get_profile('web.overview.view.style',STYLE_TOP);
 		
 		$table = new CTableInfo(S_NO_TRIGGERS_DEFINED);
-		if($groupid > 0){
-			$group_where = ',hosts_groups hg WHERE hg.groupid='.$groupid.' AND hg.hostid=h.hostid AND ';
-		} 
-		else {
-			$group_where = ' WHERE ';
-		}
 
 		$result=DBselect('SELECT DISTINCT t.triggerid,t.description,t.expression,t.value,t.priority,t.lastchange,h.hostid,h.host'.
 			' FROM hosts h,items i,triggers t, functions f '.
-			$group_where.' h.status='.HOST_STATUS_MONITORED.
+			' WHERE h.status='.HOST_STATUS_MONITORED.
 				' AND h.hostid=i.hostid '.
 				' AND i.itemid=f.itemid '.
 				' AND f.triggerid=t.triggerid'.
diff --git a/frontends/php/include/validate.inc.php b/frontends/php/include/validate.inc.php
index 33e854e..97e68b5 100644
--- a/frontends/php/include/validate.inc.php
+++ b/frontends/php/include/validate.inc.php
@@ -27,7 +27,7 @@
 	define('ZBX_VALID_ERROR',	1);
 	define('ZBX_VALID_WARNING',	2);
 
-	function	is_int_range($value){
+	function is_int_range($value){
 		if( !empty($value) ) foreach(explode(',',$value) as $int_range){
 			$int_range = explode('-', $int_range);
 			if(count($int_range) > 2) return false;
@@ -38,35 +38,35 @@
 		return true;
 	}
 	
-	function	is_hex_color($value){
+	function is_hex_color($value){
 		return eregi('^[0-9,A-F]{6}$', $value);
 	}
 	
-	function	BETWEEN($min,$max,$var=NULL){
+	function BETWEEN($min,$max,$var=NULL){
 		return "({".$var."}>=".$min."&&{".$var."}<=".$max.")&&";
 	}
 
-	function	GT($value,$var=''){
+	function GT($value,$var=''){
 		return "({".$var."}>=".$value.")&&";
 	}
 
-	function	IN($array,$var=''){
+	function IN($array,$var=''){
 		if(is_array($array)) $array = implode(',', $array);
 
 		return "str_in_array({".$var."},array(".$array."))&&";
 	}
-	function	HEX($var=NULL){
+	function HEX($var=NULL){
 		return "ereg(\"^[a-zA-Z0-9]{1,}$\",{".$var."})&&";
 	}
-	function	KEY_PARAM($var=NULL){
+	function KEY_PARAM($var=NULL){
 		return 'ereg(\'^([0-9a-zA-Z\_\.[.'.ZBX_EREG_MINUS_SYMB.'.]\$ ]+)$\',{'.$var.'})&&';
 	}
-	function	validate_ipv4($str,&$arr){
+	function validate_ipv4($str,&$arr){
 		if( !ereg('^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$', $str, $arr) )	return false;
 		for($i=1; $i<=4; $i++)	if( !is_numeric($arr[$i]) || $arr[$i] > 255 || $arr[$i] < 0 )	return false;
 		return true;
 	}
-	function	validate_ipv6($str,&$arr){
+	function validate_ipv6($str,&$arr){
 		$pattern1 = '([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}';
 		$pattern2 = ':(:[A-Fa-f0-9]{1,4}){1,7}';
 		$pattern3 = '[A-Fa-f0-9]{1,4}::([A-Fa-f0-9]{1,4}:){0,5}[A-Fa-f0-9]{1,4}';
@@ -82,7 +82,7 @@
 		return true;
 	}
 
-	function	validate_ip($str,&$arr){
+	function validate_ip($str,&$arr){
 		if(validate_ipv4($str,$arr))
 			return true;
 		if(defined('ZBX_HAVE_IPV6')){
@@ -91,7 +91,7 @@
 		return false;
 	}
 
-/*	function	validate_ip_range($str){
+/*	function validate_ip_range($str){
 		foreach(explode(',',$str) as $ip_range){
 			$ip_parts = explode('.', $ip_range);
 			if(count($ip_parts) != 4) return false;
@@ -111,7 +111,7 @@
 		return true;
 	}
 */
-	function	validate_ip_range($str){
+	function validate_ip_range($str){
 		foreach(explode(',',$str) as $ip_range){
 			$parts = explode('-', $ip_range);
 			$parts_count = count($parts);
@@ -158,7 +158,7 @@
 		return false;
 	}
 */
-	function	validate_port_list($str){
+	function validate_port_list($str){
 		foreach(explode(',',$str) as $port_range){
 			$port_range = explode('-', $port_range);
 			if(count($port_range) > 2) return false;
@@ -170,12 +170,12 @@
 	}
 
 
-	define("NOT_EMPTY","({}!='')&&");
-	define("DB_ID","({}>=0&&bccomp('{}',\"10000000000000000000\")<0)&&");
+	define('NOT_EMPTY',"({}!='')&&");
+	define('DB_ID',"({}>=0&&bccomp('{}',\"10000000000000000000\")<0)&&");
 
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 
-	function	calc_exp2($fields,$field,$expression){
+	function calc_exp2($fields,$field,$expression){
 		foreach($fields as $f => $checks){
 /*
 			// If an unset variable used in expression, return FALSE
@@ -189,8 +189,9 @@
 			$expression = str_replace('{'.$f.'}','$_REQUEST["'.$f.'"]',$expression);
 //$debug .= $f." = ".$_REQUEST[$f].SBR;
 		}
-		$expression = trim($expression,"& ");
-		$exec = "return (".$expression.") ? 1 : 0;";
+
+		$expression = trim($expression,'& ');
+		$exec = 'return ('.$expression.')?1:0;';
 		$ret = eval($exec);
 //echo $debug;
 //echo "$field - result: ".$ret." exec: $exec".SBR.SBR;
@@ -198,28 +199,30 @@
 		return $ret;
 	}
 
-	function	calc_exp($fields,$field,$expression){
+	function calc_exp($fields,$field,$expression){
 //SDI("$field - expression: ".$expression);
-
-		if(zbx_strstr($expression,"{}") && !isset($_REQUEST[$field]))
+		if(zbx_strstr($expression,'{}') && !isset($_REQUEST[$field]))
 			return FALSE;
 
-		if(zbx_strstr($expression,"{}") && !is_array($_REQUEST[$field]))
-			$expression = str_replace("{}",'$_REQUEST["'.$field.'"]',$expression);
+		if(zbx_strstr($expression,'{}') && !is_array($_REQUEST[$field]))
+			$expression = str_replace('{}','$_REQUEST["'.$field.'"]',$expression);
 
-		if(zbx_strstr($expression,"{}") && is_array($_REQUEST[$field])){
+		if(zbx_strstr($expression,'{}') && is_array($_REQUEST[$field])){
 			foreach($_REQUEST[$field] as $key => $val){
-				$expression2 = str_replace("{}",'$_REQUEST["'.$field.'"]["'.$key.'"]',$expression);
-				if(calc_exp2($fields,$field,$expression2)==FALSE)
+				if(!ereg('^[a-zA-Z0-9_]+$',$key)) return FALSE;
+
+				$expression2 = str_replace('{}','$_REQUEST["'.$field.'"]["'.$key.'"]',$expression);
+				if(calc_exp2($fields,$field,$expression2)==FALSE) 
 					return FALSE;
 			}	
 			return TRUE;
 		}
+
 //SDI("$field - expression: ".$expression);
 		return calc_exp2($fields,$field,$expression);
 	}
 
-	function	unset_not_in_list(&$fields){
+	function unset_not_in_list(&$fields){
 		foreach($_REQUEST as $key => $val){
 			if(!isset($fields[$key])){
 				unset_request($key,'unset_not_in_list');
@@ -227,7 +230,7 @@
 		}
 	}
 
-	function	unset_if_zero($fields){
+	function unset_if_zero($fields){
 		foreach($fields as $field => $checks){
 			list($type,$opt,$flags,$validation,$exception)=$checks;
 
@@ -238,7 +241,7 @@
 	}
 
 
-	function	unset_action_vars($fields){
+	function unset_action_vars($fields){
 		foreach($fields as $field => $checks){
 			list($type,$opt,$flags,$validation,$exception)=$checks;
 			
@@ -248,13 +251,13 @@
 		}
 	}
 
-	function	unset_all(){
+	function unset_all(){
 		foreach($_REQUEST as $key => $val){
 			unset_request($key,'unset_all');
 		}
 	}
 
-	function 	check_type(&$field, $flags, &$var, $type){
+	function check_type(&$field, $flags, &$var, $type){
 		if(is_array($var) && $type != T_ZBX_IP){
 			$err = ZBX_VALID_OK;
 			foreach($var as $el){
@@ -371,7 +374,7 @@
 		return ZBX_VALID_OK;
 	}
 
-	function	check_trim(&$var){
+	function check_trim(&$var){
 		if(is_string($var)) {
 			$var = trim($var);
 		}
@@ -382,7 +385,7 @@
 		}
 	}
 
-	function	check_field(&$fields, &$field, $checks){
+	function check_field(&$fields, &$field, $checks){
 		list($type,$opt,$flags,$validation,$exception)=$checks;
 
 		if($flags&P_UNSET_EMPTY && isset($_REQUEST[$field]) && $_REQUEST[$field]==''){
@@ -426,8 +429,17 @@
 			}
 		}
 		else if($opt == O_OPT){
-			if(!isset($_REQUEST[$field]))
+			if(!isset($_REQUEST[$field])){
 				return ZBX_VALID_OK;
+			}
+			else if($flags&P_ACT){
+				if(!isset($_REQUEST['sid'])){
+					return ZBX_VALID_ERROR;
+				}
+				else if(isset($_COOKIE['zbx_sessionid']) && ($_REQUEST['sid'] != substr($_COOKIE['zbx_sessionid'],16,16))){
+					return ZBX_VALID_ERROR;
+				}
+			}
 		}
 
 		check_trim($_REQUEST[$field]);
@@ -456,26 +468,27 @@
 		return ZBX_VALID_OK;
 	}
 
-//		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
+//		VAR							TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$system_fields=array(
-		"sessionid"=>		array(T_ZBX_STR, O_OPT,	 P_SYS,	HEX(),NULL),
-		"switch_node"=>		array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,NULL),
-		"triggers_hash"=>	array(T_ZBX_STR, O_OPT,	 P_SYS,	NOT_EMPTY,NULL),
-		'print'=>			array(T_ZBX_INT, O_OPT,	 P_SYS,	IN("1"),NULL),
+		'sid'=>		array(T_ZBX_STR, O_OPT,	 P_SYS,	HEX(), NULL),
+// 
+		'switch_node'=>		array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,NULL),
+		'triggers_hash'=>	array(T_ZBX_STR, O_OPT,	 P_SYS,	NOT_EMPTY,NULL),
+		'print'=>			array(T_ZBX_INT, O_OPT,	 P_SYS,	IN('1'),NULL),
+		
+// table sorting
 		'sort'=>			array(T_ZBX_STR, O_OPT,	 P_SYS,	NULL,NULL),
 		'sortorder'=>		array(T_ZBX_STR, O_OPT,	 P_SYS,	NULL,NULL)
 	);
 
-	function	invalid_url(){
+	function invalid_url(){
 		include_once "include/page_header.php";
 		unset_all();
 		show_error_message(S_INVALID_URL);
 		include_once "include/page_footer.php";
 	}
 	
-	function	check_fields(&$fields, $show_messages=true){
-
-		global	$_REQUEST;
+	function check_fields(&$fields, $show_messages=true){
 		global	$system_fields;
 
 		$err = ZBX_VALID_OK;
diff --git a/frontends/php/index.php b/frontends/php/index.php
index 20a3764..ad23fb1 100644
--- a/frontends/php/index.php
+++ b/frontends/php/index.php
@@ -19,22 +19,20 @@
 **/
 ?>
 <?php
-	require_once "include/config.inc.php";
-	require_once "include/forms.inc.php";
+require_once "include/config.inc.php";
+require_once "include/forms.inc.php";
+
+$page["title"]	= "S_ZABBIX_BIG";
+$page['file']	= "index.php";
 
-	$page["title"]	= "S_ZABBIX_BIG";
-	$page["file"]	= "index.php";
-	
-?>
-<?php
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$fields=array(
 		"name"=>			array(T_ZBX_STR, O_NO,	NULL,	NOT_EMPTY,	'isset({enter})'),
 		"password"=>		array(T_ZBX_STR, O_OPT,	NULL,	NULL,		'isset({enter})'),
 		"sessionid"=>		array(T_ZBX_STR, O_OPT,	NULL,	NULL,		NULL),
 		"message"=>			array(T_ZBX_STR, O_OPT,	NULL,	NULL,		NULL),
-		"reconnect"=>		array(T_ZBX_INT, O_OPT,	P_ACT, BETWEEN(0,65535),NULL),
-		"enter"=>			array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,    NULL,   NULL),
+		"reconnect"=>		array(T_ZBX_INT, O_OPT,	NULL, BETWEEN(0,65535),NULL),
+		"enter"=>			array(T_ZBX_STR, O_OPT, P_SYS,    NULL,   NULL),
 		"form"=>			array(T_ZBX_STR, O_OPT, P_SYS,  NULL,   	NULL),
 		"form_refresh"=>	array(T_ZBX_INT, O_OPT, NULL,   NULL,   	NULL)
 	);
@@ -43,16 +41,15 @@
 <?php
 	$sessionid = get_cookie('zbx_sessionid', null);
 	
-	if(isset($_REQUEST["reconnect"]) && isset($sessionid)){
+	if(isset($_REQUEST['reconnect']) && isset($sessionid)){
 		add_audit(AUDIT_ACTION_LOGOUT,AUDIT_RESOURCE_USER,'Manual Logout');
 		
 		zbx_unsetcookie('zbx_sessionid');
 		DBexecute('UPDATE sessions SET status='.ZBX_SESSION_PASSIVE.' WHERE sessionid='.zbx_dbstr($sessionid));
 		unset($sessionid);
 
-		redirect("index.php");
+		redirect('index.php');
 		die();
-//		return;
 	}
 
 	$config = select_config();
@@ -62,7 +59,7 @@
 		if(isset($_SERVER['PHP_AUTH_USER']) && !empty($_SERVER['PHP_AUTH_USER'])){
 			if(!isset($sessionid)) $_REQUEST['enter'] = 'Enter';
 			
-			$_REQUEST['name'] = $_SERVER["PHP_AUTH_USER"];
+			$_REQUEST['name'] = $_SERVER['PHP_AUTH_USER'];
 			$_REQUEST['password'] = 'zabbix';//$_SERVER["PHP_AUTH_PW"];
 		}
 		else{
@@ -143,18 +140,18 @@
 			
 			DBexecute('INSERT INTO sessions (sessionid,userid,lastaccess,status) VALUES ('.zbx_dbstr($sessionid).','.$row['userid'].','.time().','.ZBX_SESSION_ACTIVE.')');
 
-			add_audit(AUDIT_ACTION_LOGIN,AUDIT_RESOURCE_USER,"Correct login [".$name."]");
+			add_audit(AUDIT_ACTION_LOGIN,AUDIT_RESOURCE_USER,'Correct login ['.$name.']');
 			
-			if(empty($row["url"])){
+			if(empty($row['url'])){
 				$USER_DETAILS['alias'] = $row['alias'];
 				$USER_DETAILS['userid'] = $row['userid'];
 				
-				$row["url"] = get_profile('web.menu.view.last','index.php');
+				$row['url'] = get_profile('web.menu.view.last','index.php');
 				unset($USER_DETAILS);
 			}
-			redirect($row["url"]);
+
+			redirect($row['url']);
 			die();
-//			return;
 		}
 		else{
 			$row = NULL;
@@ -193,7 +190,7 @@ include_once "include/page_header.php";
 				$frmLogin->AddItemToBottomRow(new CButton('enter','Enter'));
 				$frmLogin->Show(false);
 		
-				SetFocus($frmLogin->GetName(),"name");
+				setFocus($frmLogin->GetName(),'name');
 				
 				$frmLogin->Destroy();
 		}
@@ -207,4 +204,4 @@ include_once "include/page_header.php";
 
 include_once "include/page_footer.php";
 
-?>
+?>
\ No newline at end of file
diff --git a/frontends/php/items.php b/frontends/php/items.php
index d72bd2c..0915252 100644
--- a/frontends/php/items.php
+++ b/frontends/php/items.php
@@ -1,5 +1,5 @@
 <?php
-/* 
+/*
 ** ZABBIX
 ** Copyright (C) 2000-2005 SIA Zabbix
 **
@@ -24,11 +24,11 @@
 	require_once('include/items.inc.php');
 	require_once('include/forms.inc.php');
 
-	$page["title"] = "S_CONFIGURATION_OF_ITEMS";
-	$page["file"] = "items.php";
+	$page['title'] = "S_CONFIGURATION_OF_ITEMS";
+	$page['file'] = 'items.php';
 	$page['hist_arg'] = array();
 
-include_once "include/page_header.php";
+include_once 'include/page_header.php';
 ?>
 <?php
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
@@ -73,7 +73,7 @@ include_once "include/page_header.php";
 		'delay_flex'=>	array(T_ZBX_STR, O_OPT,  null,  '',null),
 		'history'=>	array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,65535),'isset({save})'),
 		'status'=>	array(T_ZBX_INT, O_OPT,  null,  BETWEEN(0,65535),'isset({save})'),
-		'type'=>	array(T_ZBX_INT, O_OPT,  null,  
+		'type'=>	array(T_ZBX_INT, O_OPT,  null,
 				IN(array(-1,ITEM_TYPE_ZABBIX,ITEM_TYPE_SNMPV1,ITEM_TYPE_TRAPPER,ITEM_TYPE_SIMPLE,
 					ITEM_TYPE_SNMPV2C,ITEM_TYPE_INTERNAL,ITEM_TYPE_SNMPV3,ITEM_TYPE_ZABBIX_ACTIVE,
 					ITEM_TYPE_AGGREGATE,ITEM_TYPE_HTTPTEST,ITEM_TYPE_EXTERNAL,ITEM_TYPE_DB_MONITOR,ITEM_TYPE_IPMI)),'isset({save})'),
@@ -100,7 +100,7 @@ include_once "include/page_header.php";
 
 		'formula'=>	array(T_ZBX_DBL, O_OPT,  null,  null,			'isset({save})&&(isset({multiplier})&&({multiplier}==1))'),
 		'logtimefmt'=>	array(T_ZBX_STR, O_OPT,  null,  null,		'isset({save})&&(isset({value_type})&&({value_type}==2))'),
-                 
+
 		'group_itemid'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID, null),
 		'copy_targetid'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID, null),
 		'filter_groupid'=>	array(T_ZBX_INT, O_OPT, P_SYS,	DB_ID,	'isset({copy})&&(isset({copy_type})&&({copy_type}==0))'),
@@ -108,7 +108,7 @@ include_once "include/page_header.php";
 		'applications'=>	array(T_ZBX_INT, O_OPT,	null,	DB_ID, null),
 
 		'showdisabled'=>	array(T_ZBX_INT, O_OPT,	P_SYS,	IN('0,1'),	null),
-		
+
 		'del_history'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
 		'add_delay_flex'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
 		'del_delay_flex'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
@@ -130,16 +130,16 @@ include_once "include/page_header.php";
 // filter
 		"filter_rst"=>				array(T_ZBX_INT, O_OPT,	P_SYS,	IN(array(0,1)),	NULL),
 		"filter_set"=>				array(T_ZBX_STR, O_OPT,	P_SYS,	null,	NULL),
-		
+
 		'selection_mode'=>			array(T_ZBX_INT, O_OPT,	null,	IN('0,1'),		null),
-		
+
 		'filter_node'=>				array(T_ZBX_STR, O_OPT,  null,	null,		null),
 		'filter_group'=>			array(T_ZBX_STR, O_OPT,  null,	null,		null),
 		'filter_host'=>				array(T_ZBX_STR, O_OPT,  null,	null,		null),
 		'filter_hostid'=>			array(T_ZBX_INT, O_OPT,  null,	DB_ID,		null),
 		'filter_application'=>		array(T_ZBX_STR, O_OPT,  null,	null,		null),
 		'filter_description'=>		array(T_ZBX_STR, O_OPT,  null,	null,		null),
-		'filter_type'=>				array(T_ZBX_INT, O_OPT,  null,  
+		'filter_type'=>				array(T_ZBX_INT, O_OPT,  null,
 				IN(array(-1,ITEM_TYPE_ZABBIX,ITEM_TYPE_SNMPV1,ITEM_TYPE_TRAPPER,ITEM_TYPE_SIMPLE,
 				ITEM_TYPE_SNMPV2C,ITEM_TYPE_INTERNAL,ITEM_TYPE_SNMPV3,ITEM_TYPE_ZABBIX_ACTIVE,
 				ITEM_TYPE_AGGREGATE,ITEM_TYPE_HTTPTEST,ITEM_TYPE_EXTERNAL,ITEM_TYPE_DB_MONITOR,ITEM_TYPE_IPMI)),null),
@@ -161,7 +161,7 @@ include_once "include/page_header.php";
 		'filter_logtimefmt'=>		array(T_ZBX_STR, O_OPT,  null,  null, null),
 		'filter_delta'=>			array(T_ZBX_INT, O_OPT,  null,  IN('-1,0,1,2'), null),
 		'filter_trapper_hosts'=>	array(T_ZBX_STR, O_OPT,  null,  null, null),
-		
+
 //ajax
 		'favobj'=>		array(T_ZBX_STR, O_OPT, P_ACT,	NULL,			NULL),
 		'favid'=>		array(T_ZBX_STR, O_OPT, P_ACT,  NOT_EMPTY,		'isset({favobj})'),
@@ -170,16 +170,16 @@ include_once "include/page_header.php";
 	);
 
 	$_REQUEST['showdisabled'] = get_request('showdisabled', get_profile('web.items.showdisabled', 0));
-	
+
 	check_fields($fields);
 	validate_sort_and_sortorder('i.description',ZBX_SORT_UP);
-	
-/* AJAX */	
+
+/* AJAX */
 	if(isset($_REQUEST['favobj'])){
 		if('filter' == $_REQUEST['favobj']){
 			update_profile('web.items.filter.state',$_REQUEST['state'], PROFILE_TYPE_INT);
 		}
-	}	
+	}
 
 	if((PAGE_TYPE_JS == $page['type']) || (PAGE_TYPE_HTML_BLOCK == $page['type'])){
 		exit();
@@ -187,18 +187,18 @@ include_once "include/page_header.php";
 //--------
 
 /* FILTER */
-	
-	if(isset($_REQUEST['filter_set'])) 
+
+	if(isset($_REQUEST['filter_set']))
 		update_profile('web.items.filter.enabled',1, PROFILE_TYPE_INT);
 
 	if(isset($_REQUEST['filter_rst']))
 		update_profile('web.items.filter.enabled',0, PROFILE_TYPE_INT);
-		
+
 	$filter_enabled = get_profile('web.items.filter.enabled',0);
-	
+
 	$prev_selection_mode = get_profile('web.items.filter.selection_mode', 0);
 	$_REQUEST['selection_mode']	= get_request('selection_mode' ,get_profile('web.items.filter.selection_mode', 0));
-	
+
 	if(isset($_REQUEST['filter_rst']) || ($_REQUEST['selection_mode'] == 0)){
 		$_REQUEST['filter_node'] = null;
 		$_REQUEST['filter_group'] = null;
@@ -251,7 +251,7 @@ include_once "include/page_header.php";
 		$_REQUEST['filter_delta']			= empty2null(get_request('filter_delta'				,get_profile('web.items.filter.delta')));
 		$_REQUEST['filter_trapper_hosts']	= empty2null(get_request('filter_trapper_hosts'		,get_profile('web.items.filter.trapper_hosts')));
 	}
-	
+
 	if(isset($_REQUEST['filter_rst'])){
 		$_REQUEST['filter_host'] = null;
 		$_REQUEST['filter_description'] = null;
@@ -262,10 +262,10 @@ include_once "include/page_header.php";
 		$_REQUEST['filter_description']	= empty2null(get_request('filter_description'	,get_profile('web.items.filter.description')));
 		$_REQUEST['filter_key']			= empty2null(get_request('filter_key'			,get_profile('web.items.filter.key')));
 	}
-	
+
 	if(isset($_REQUEST['filter_set']) || isset($_REQUEST['filter_rst']) || ($prev_selection_mode != $_REQUEST['selection_mode'])){
 		update_profile('web.items.filter.selection_mode'            , $_REQUEST['selection_mode'], PROFILE_TYPE_STR);
-							        			     			
+
 		update_profile('web.items.filter.node'                 , $_REQUEST['filter_node'], PROFILE_TYPE_STR);
 		update_profile('web.items.filter.group'                , $_REQUEST['filter_group'], PROFILE_TYPE_STR);
 		update_profile('web.items.filter.host'                 , $_REQUEST['filter_host'], PROFILE_TYPE_STR);
@@ -290,20 +290,17 @@ include_once "include/page_header.php";
 		update_profile('web.items.filter.logtimefmt'           , $_REQUEST['filter_logtimefmt'], PROFILE_TYPE_STR);
 		update_profile('web.items.filter.delta'                , $_REQUEST['filter_delta'], PROFILE_TYPE_STR);
 		update_profile('web.items.filter.trapper_hosts'        , $_REQUEST['filter_trapper_hosts'], PROFILE_TYPE_STR);
-	}	
+	}
 
 	if(!empty($_REQUEST['filter_hostid'])) $_REQUEST['hostid'] = $_REQUEST['filter_hostid'];
 // --------------
 	$showdisabled = get_request('showdisabled', 0);
-	
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE,PERM_RES_IDS_ARRAY);
 
-	if(isset($_REQUEST['hostid']) && !uint_in_array($_REQUEST['hostid'], $available_hosts)){
+	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE);
+
+	if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid'] > 0) && !isset($available_hosts[$_REQUEST['hostid']])){
 		unset($_REQUEST['hostid']);
 	}
-	
-	$options = array('always_select_first_group','always_select_first_host','only_current_node');
-	validate_group_with_host(PERM_READ_WRITE, $options, 'web.last.conf.groupid', 'web.last.conf.hostid');
 
 	update_profile('web.items.showdisabled',$showdisabled, PROFILE_TYPE_INT);
 ?>
@@ -345,19 +342,19 @@ include_once "include/page_header.php";
 		foreach($delay_flex as $val)
 			$db_delay_flex .= $val['delay'].'/'.$val['period'].';';
 		$db_delay_flex = trim($db_delay_flex,';');
-		
+
 		if(isset($_REQUEST['itemid'])){
 			DBstart();
-			
+
 			$new_appid = true;
 			$result = false;
-			
+
 			if(!zbx_empty($_REQUEST['new_application'])){
 				if($new_appid = add_application($_REQUEST['new_application'],$_REQUEST['hostid']))
 					$applications[$new_appid] = $new_appid;
 			}
-			
-			if($new_appid){				
+
+			if($new_appid){
 				$result = smart_update_item($_REQUEST['itemid'],
 					$_REQUEST['description'],$_REQUEST['key'],$_REQUEST['hostid'],$_REQUEST['delay'],
 					$_REQUEST['history'],$_REQUEST['status'],$_REQUEST['type'],
@@ -369,24 +366,24 @@ include_once "include/page_header.php";
 					$_REQUEST['logtimefmt'],$_REQUEST['valuemapid'],$db_delay_flex,$_REQUEST['params'],
 					$_REQUEST['ipmi_sensor'],$applications);
 			}
-			
+
 			$result = DBend($result);
 
 			$itemid = $_REQUEST['itemid'];
 			$action = AUDIT_ACTION_UPDATE;
-			
+
 			show_messages($result, S_ITEM_UPDATED, S_CANNOT_UPDATE_ITEM);
 		}
 		else{
 			DBstart();
-			
+
 			$new_appid = true;
 			$itemid = false;
 			if(!zbx_empty($_REQUEST['new_application'])){
 				if($new_appid = add_application($_REQUEST['new_application'],$_REQUEST['hostid']))
 					$applications[$new_appid] = $new_appid;
 			}
-			
+
 			if($new_appid){
 				$itemid=add_item(
 					$_REQUEST['description'],$_REQUEST['key'],$_REQUEST['hostid'],$_REQUEST['delay'],
@@ -399,13 +396,13 @@ include_once "include/page_header.php";
 					$_REQUEST['logtimefmt'],$_REQUEST['valuemapid'],$db_delay_flex,$_REQUEST['params'],
 					$_REQUEST['ipmi_sensor'],$applications);
 			}
-				
+
 			$result = DBend($itemid);
-			
+
 			$action = AUDIT_ACTION_ADD;
 			show_messages($result, S_ITEM_ADDED, S_CANNOT_ADD_ITEM);
 		}
-		if($result){	
+		if($result){
 			$host = get_host_by_hostid($_REQUEST['hostid']);
 
 			add_audit($action, AUDIT_RESOURCE_ITEM, S_ITEM.' ['.$_REQUEST['key'].'] ['.$itemid.'] '.S_HOST.' ['.$host['host'].']');
@@ -421,18 +418,18 @@ include_once "include/page_header.php";
 				$result = delete_history_by_itemid($_REQUEST['itemid']);
 			$result = DBend($result);
 		}
-		
+
 		if($result){
 			DBexecute('UPDATE items SET nextcheck=0,lastvalue=null,lastclock=null,prevvalue=null '.
 				' WHERE itemid='.$_REQUEST['itemid']);
-			
+
 			$host = get_host_by_hostid($_REQUEST['hostid']);
 
 			add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_ITEM,
 				S_ITEM.' ['.$item['key_'].'] ['.$_REQUEST['itemid'].'] '.S_HOST.' ['.$host['host'].'] '.S_HISTORY_CLEANED);
 		}
 		show_messages($result, S_HISTORY_CLEANED, S_CANNOT_CLEAN_HISTORY);
-		
+
 	}
 	else if(isset($_REQUEST['update'])&&isset($_REQUEST['group_itemid'])&&isset($_REQUEST['form_mass_update'])){
 		$applications = get_request('applications',array());
@@ -442,13 +439,13 @@ include_once "include/page_header.php";
 		foreach($delay_flex as $val)
 			$db_delay_flex .= $val['delay'].'/'.$val['period'].';';
 		$db_delay_flex = trim($db_delay_flex,';');
-		
+
 		if(!is_null(get_request('formula',null))) $_REQUEST['multiplier']=1;
 		if('0' === get_request('formula',null)) $_REQUEST['multiplier']=0;
 
 		$group_itemid = $_REQUEST['group_itemid'];
 		$result = false;
-		
+
 		DBstart();
 		foreach($group_itemid as $id){
 			$result |= smart_update_item($id,
@@ -463,7 +460,7 @@ include_once "include/page_header.php";
 				get_request('ipmi_sensor'),$applications);
 		}
 		$result = DBend($result);
-		
+
 		show_messages($result, S_ITEMS_UPDATED);
 		unset($_REQUEST['group_itemid'], $_REQUEST['form_mass_update'], $_REQUEST['update']);
 	}
@@ -484,14 +481,14 @@ include_once "include/page_header.php";
 					array_push($hosts_ids, $db_host['hostid']);
 				}
 			}
-			
+
 			$result = false;
 			DBstart();
 			foreach($_REQUEST['group_itemid'] as $item_id)
 				foreach($hosts_ids as $host_id){
 					$result |= copy_item_to_host($item_id, $host_id, true);
 				}
-				
+
 			$result = DBend($result);
 			show_messages($result, S_ITEMS_COPIED, S_CANNOT_COPY_ITEMS);
 			unset($_REQUEST['form_copy_to']);
@@ -502,19 +499,19 @@ include_once "include/page_header.php";
 		show_messages();
 	}
 	else if(isset($_REQUEST['register'])){
-	
+
 		if($_REQUEST['register']=='do'){
 			if($_REQUEST['action']=='add to group'){
 				$applications = get_request('applications',array());
 				$delay_flex = get_request('delay_flex',array());
 				$db_delay_flex = '';
-				
+
 				foreach($delay_flex as $val){
 					$db_delay_flex .= $val['delay'].'/'.$val['period'].';';
 				}
-				
+
 				$db_delay_flex = trim($db_delay_flex,';');
-				
+
 				DBstart();
 				$itemid=add_item_to_group(
 					$_REQUEST['add_groupid'],$_REQUEST['description'],$_REQUEST['key'],
@@ -527,7 +524,7 @@ include_once "include/page_header.php";
 					$_REQUEST['snmpv3_privpassphrase'],$_REQUEST['formula'],
 					$_REQUEST['trends'],$_REQUEST['logtimefmt'],$_REQUEST['valuemapid'],
 					$db_delay_flex, $_REQUEST['params'], $_REQUEST['ipmi_sensor'], $applications);
-					
+
 				$result = DBend($itemid);
 				show_messages($result, S_ITEM_ADDED, S_CANNOT_ADD_ITEM);
 				if($result){
@@ -537,17 +534,17 @@ include_once "include/page_header.php";
 				}
 			}
 			if($_REQUEST['action']=='update in group'){
-			
+
 				$applications = get_request('applications',array());
 				$delay_flex = get_request('delay_flex',array());
 				$db_delay_flex = '';
-				
+
 				foreach($delay_flex as $val){
 					$db_delay_flex .= $val['delay'].'/'.$val['period'].';';
 				}
-				
+
 				$db_delay_flex = trim($db_delay_flex,';');
-				
+
 				DBstart();
 					$result = update_item_in_group($_REQUEST['add_groupid'],
 						$_REQUEST['itemid'],$_REQUEST['description'],$_REQUEST['key'],
@@ -561,7 +558,7 @@ include_once "include/page_header.php";
 						$_REQUEST['trends'],$_REQUEST['logtimefmt'],$_REQUEST['valuemapid'],
 						$db_delay_flex, $_REQUEST['params'], $_REQUEST['ipmi_sensor'], $applications);
 				$result = DBend($result);
-				
+
 				show_messages($result, S_ITEM_UPDATED, S_CANNOT_UPDATE_ITEM);
 				if($result){
 					unset($_REQUEST['form']);
@@ -569,11 +566,11 @@ include_once "include/page_header.php";
 				}
 			}
 			if($_REQUEST['action']=='delete from group'){
-				
+
 				DBstart();
 					$result = delete_item_from_group($_REQUEST['add_groupid'],$_REQUEST['itemid']);
 				$result = DBend($result);
-				
+
 				show_messages($result, S_ITEM_DELETED, S_CANNOT_DELETE_ITEM);
 				if($result){
 					unset($_REQUEST['form']);
@@ -588,7 +585,7 @@ include_once "include/page_header.php";
 			global $USER_DETAILS;
 			$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, PERM_READ_WRITE);
 
-			$group_itemid = $_REQUEST['group_itemid'];			
+			$group_itemid = $_REQUEST['group_itemid'];
 
 			DBstart();
 
@@ -615,7 +612,7 @@ include_once "include/page_header.php";
 			global $USER_DETAILS;
 			$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, PERM_READ_WRITE);
 
-			$group_itemid = $_REQUEST['group_itemid'];			
+			$group_itemid = $_REQUEST['group_itemid'];
 
 			DBstart();
 			$sql = 'SELECT h.host, i.itemid, i.key_ '.
@@ -627,7 +624,7 @@ include_once "include/page_header.php";
 			while($item = DBfetch($item_res)){
 				add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_ITEM,S_ITEM.' ['.$item['key_'].'] ['.$item['itemid'].'] '.S_HOST.' ['.$item['host'].']'.S_ITEMS_ACTIVATED);
 			}
-			
+
 			$result = activate_item($group_itemid);
 			$result = DBend($result);
 			show_messages($result, S_ITEMS_ACTIVATED, null);
@@ -636,7 +633,7 @@ include_once "include/page_header.php";
 			global $USER_DETAILS;
 			$available_hosts = get_accessible_hosts_by_user($USER_DETAILS, PERM_READ_WRITE);
 
-			$group_itemid = $_REQUEST['group_itemid'];			
+			$group_itemid = $_REQUEST['group_itemid'];
 
 			DBstart();
 			$sql = 'SELECT h.host, i.itemid, i.key_ '.
@@ -648,7 +645,7 @@ include_once "include/page_header.php";
 			while($item = DBfetch($item_res)){
 				add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_ITEM,S_ITEM.' ['.$item['key_'].'] ['.$item['itemid'].'] '.S_HOST.' ['.$item['host'].']'.S_ITEMS_DISABLED);
 			}
-			
+
 			$result = disable_item($group_itemid);
 			$result = DBend($result);
 			show_messages($result, S_ITEMS_DISABLED, null);
@@ -656,7 +653,7 @@ include_once "include/page_header.php";
 		else if($_REQUEST['group_task']==S_CLEAN_HISTORY_SELECTED_ITEMS){
 			$result = false;
 			$group_itemid = $_REQUEST['group_itemid'];
-			
+
 			DBstart();
 			foreach($group_itemid as $id){
 				if(!$item = get_item_by_itemid($id))	continue;
@@ -666,7 +663,7 @@ include_once "include/page_header.php";
 
 				if($cur_result){
 					DBexecute('update items set nextcheck=0,lastvalue=null,lastclock=null,prevvalue=null where itemid='.$id);
-					
+
 					$host = get_host_by_hostid($item['hostid']);
 					add_audit(AUDIT_ACTION_UPDATE, AUDIT_RESOURCE_ITEM,
 						S_ITEM.' ['.$item['key_'].'] ['.$id.'] '.S_HOST.' ['.$host['host'].'] '.S_HISTORY_CLEANED);
@@ -678,109 +675,131 @@ include_once "include/page_header.php";
 	}
 ?>
 <?php
+	if(isset($_REQUEST['hostid']) && !isset($_REQUEST['groupid']) && !isset($_REQUEST['itemid'])){
+		$sql = 'SELECT DISTINCT hg.groupid '.
+				' FROM hosts_groups hg '.
+				' WHERE hg.hostid='.$_REQUEST['hostid'];
+		if($group=DBfetch(DBselect($sql, 1))){
+			$_REQUEST['groupid'] = $group['groupid'];
+		}
+	}
+
+	if(isset($_REQUEST['itemid']) && ($_REQUEST['itemid']>0)){
+		$sql_from = '';
+		$sql_where = '';
+		if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
+			$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'];
+		}
+
+		if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid'] > 0)){
+			$sql_where.= ' AND hg.hostid='.$_REQUEST['hostid'];
+		}
+
+		$sql = 'SELECT DISTINCT hg.groupid, hg.hostid '.
+				' FROM hosts_groups hg, items i '.
+				' WHERE i.itemid='.$_REQUEST['itemid'].
+					' AND hg.hostid=i.hostid '.
+					$sql_where;
+		if($host_group = DBfetch(DBselect($sql,1))){
+			if(!isset($_REQUEST['groupid']) || !isset($_REQUEST['hostid'])){
+				$_REQUEST['groupid'] = $host_group['groupid'];
+				$_REQUEST['hostid'] = $host_group['hostid'];
+			}
+			else if(($_REQUEST['groupid']!=$host_group['groupid']) || ($_REQUEST['hostid']!=$host_group['hostid'])){
+				$_REQUEST['itemid'] = 0;
+			}
+		}
+		else{
+//			$_REQUEST['itemid'] = 0;
+		}
+	}
+
+	$options = array('only_current_node');
+	if($filter_enabled) array_push($options,'allow_all');
+	foreach($options as $option) $params[$option] = 1;
+
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+?>
+<?php
 	$form = new CForm();
-	$form->SetMethod('get');
-	$form->SetName('hdrform');
+	$form->setMethod('get');
+	$form->setName('hdrform');
 
-	$form->AddVar('hostid',$_REQUEST['hostid']);
-	$form->AddVar('groupid',$_REQUEST['groupid']);
+	$form->addVar('hostid',$_REQUEST['hostid']);
+	$form->addVar('groupid',$_REQUEST['groupid']);
 
-	$form->AddItem(new CButton('form',S_CREATE_ITEM));
+	if($PAGE_HOSTS['selected'] > 0)
+		$form->addItem(new CButton('form',S_CREATE_ITEM));
 
 	show_table_header(S_CONFIGURATION_OF_ITEMS_BIG, $form);
 	echo SBR;
-	
+
 	if(isset($_REQUEST['form_mass_update']) && isset($_REQUEST['group_itemid'])){
 		insert_mass_update_item_form('group_itemid');
-	} 
+	}
 	else if(isset($_REQUEST['form_copy_to']) && isset($_REQUEST['group_itemid'])){
 		insert_copy_elements_to_forms('group_itemid');
-	} 
+	}
 	else if (!isset($_REQUEST['form']) ||  !str_in_array($_REQUEST['form'],array(S_CREATE_ITEM,'update','clone'))) {
 // Table HEADER
 		$form = new CForm();
-		$form->SetMethod('get');
-		
+		$form->setMethod('get');
+
 		$where_case = array();
 		$from_tables['h'] = 'hosts h';
+
 		$where_case[] = 'i.hostid=h.hostid';
 		$where_case[] =  DBcondition('h.hostid',$available_hosts);
-		
+
 // Items Header
- 		$form->AddItem(array('[', 
+ 		$form->addItem(array('[',
 			new CLink($showdisabled ? S_HIDE_DISABLED_ITEMS : S_SHOW_DISABLED_ITEMS,
-				'?showdisabled='.($showdisabled ? 0 : 1),null),
+				'?showdisabled='.($showdisabled?0:1).url_param('groupid').url_param('hostid'),null),
 			']', SPACE));
 
-		$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit();');
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 
-		$result=DBselect('select distinct g.groupid,g.name '.
-					' from groups g,hosts_groups hg '.
-					' where g.groupid=hg.groupid '.
-						' and '.DBcondition('hg.hostid',$available_hosts).
-					' order by name');
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem($row['groupid'],$row['name']);
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 		}
-		$form->AddItem(S_GROUP.SPACE);
-		$form->AddItem($cmbGroup);
-
-		$sql_from = '';
-		$sql_where = '';
-		if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
 
-		$sql='SELECT DISTINCT h.hostid,h.host '.
-			' FROM hosts h'.$sql_from.
-			' WHERE h.status IN ('.HOST_STATUS_MONITORED.','.HOST_STATUS_NOT_MONITORED.','.HOST_STATUS_TEMPLATE.')'.
-				' AND '.DBcondition('h.hostid',$available_hosts).
-				$sql_where.
-			' GROUP BY h.hostid,h.host '.
-			' ORDER BY h.host';
-
-		$result=DBselect($sql);
+		$form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+		$form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
 
-		$_REQUEST['hostid'] = get_request('hostid',0);
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit();');
+		if($PAGE_HOSTS['selected'] > 0)
+			$where_case[] = 'h.hostid='.$PAGE_HOSTS['selected'];
 
-		unset($correct_hostid);
-		$first_hostid = -1;
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem($row['hostid'],$row['host']);
+		$show_host = (($PAGE_HOSTS['selected'] == 0) && (ZBX_DROPDOWN_FIRST_ENTRY == ZBX_DROPDOWN_FIRST_ALL));
 
-			if($_REQUEST['hostid']!=0){
-				if(bccomp($_REQUEST['hostid'], $row['hostid']) == 0)
-					$correct_hostid = 'ok';
-			}
-			if($first_hostid <= 0)
-				$first_hostid = $row['hostid'];
-		}
-		if(!isset($correct_hostid))
-			$_REQUEST['hostid'] = $first_hostid;
-
-		$form->AddItem(SPACE.S_HOST.SPACE);
-		$form->AddItem($cmbHosts);
-
-//			if($host_info = DBfetch(DBselect('select host from hosts where hostid='.$_REQUEST['hostid']))){
-//				$form->AddVar('filter_host', $host_info['host']);
-//			}
 		if(!$filter_enabled){
-			$where_case[] = 'i.hostid='.$_REQUEST['hostid'];
 			$show_applications = 1;
-			$show_host = 0;
 		}
 
 		if($showdisabled == 0) $where_case[] = 'i.status <> 1';
 		
-		show_table_header(S_ITEMS_BIG, $form);
+		$row_count = 0;
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_ITEMS_BIG,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header, $form);
 // ----------------
 
 // Items Filter
 		$filterForm = get_item_filter_form();
-		
+
 		$filter = create_filter(S_FILTER,null,$filterForm,'item_filter',get_profile('web.items.filter.state',0));
 		$filter->Show();
 
@@ -790,19 +809,19 @@ include_once "include/page_header.php";
 				$where_case[] = 'n.nodeid='.DBid2nodeid('i.itemid');
 				$where_case[] = 'n.name like '.zbx_dbstr('%'.$_REQUEST['filter_node'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_group'])){
-				$from_tables['hg'] = 'hosts_groups hg';
+                $from_tables['hg'] = 'hosts_groups hg';
 				$from_tables['g'] = 'groups g';
 				$where_case[] = 'i.hostid=hg.hostid';
 				$where_case[] = 'g.groupid=hg.groupid';
 				$where_case[] = 'g.name like '.zbx_dbstr('%'.$_REQUEST['filter_group'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_host'])){
 				$where_case[] = 'h.host like '.zbx_dbstr('%'.$_REQUEST['filter_host'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_application'])){
 				$from_tables['a'] = 'applications a';
 				$from_tables['ia'] = 'items_applications ia';
@@ -810,94 +829,93 @@ include_once "include/page_header.php";
 				$where_case[] = 'ia.applicationid=a.applicationid';
 				$where_case[] = 'a.name like '.zbx_dbstr('%'.$_REQUEST['filter_application'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_type']) && $_REQUEST['filter_type'] != -1){
 				$where_case[] = 'i.type='.$_REQUEST['filter_type'];
 			}
-			
+
 			if(isset($_REQUEST['filter_key'])){
 				$where_case[] = 'i.key_ like '.zbx_dbstr('%'.$_REQUEST['filter_key'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_snmp_community'])){
 				$where_case[] = 'i.snmp_community like '.zbx_dbstr('%'.$_REQUEST['filter_snmp_community'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_snmp_oid'])){
 				$where_case[] = 'i.snmp_oid like '.zbx_dbstr('%'.$_REQUEST['filter_snmp_oid'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_snmp_port'])){
 				$where_case[] = 'i.snmp_port='.$_REQUEST['filter_snmp_port'];
 			}
-			
+
 			if(isset($_REQUEST['filter_snmpv3_securityname'])){
 				$where_case[] = 'i.snmpv3_securityname like '.zbx_dbstr('%'.$_REQUEST['filter_snmpv3_securityname'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_snmpv3_securitylevel']) && $_REQUEST['filter_snmpv3_securitylevel'] != -1){
 				$where_case[] = 'i.snmpv3_securitylevel='.$_REQUEST['filter_snmpv3_securitylevel'];
 			}
-			
+
 			if(isset($_REQUEST['filter_snmpv3_authpassphrase'])){
 				$where_case[] = 'i.snmpv3_authpassphrase like '.zbx_dbstr('%'.$_REQUEST['filter_snmpv3_authpassphrase'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_snmpv3_privpassphrase'])){
 				$where_case[] = 'i.snmpv3_privpassphrase like '.zbx_dbstr('%'.$_REQUEST['filter_snmpv3_privpassphrase'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_value_type']) && $_REQUEST['filter_value_type'] != -1){
 				$where_case[] = 'i.value_type='.$_REQUEST['filter_value_type'];
 			}
-			
+
 			if(isset($_REQUEST['filter_units'])){
 				$where_case[] = 'i.units='.zbx_dbstr($_REQUEST['filter_units']);
 			}
-			
+
 			if(isset($_REQUEST['filter_formula'])){
 				$where_case[] = 'i.formula like '.zbx_dbstr('%'.$_REQUEST['filter_formula'].'%');
 			}
-			
+
 			if(isset($_REQUEST['filter_delay'])){
 				$where_case[] = 'i.delay='.$_REQUEST['filter_delay'];
 			}
-			
+
 			if(isset($_REQUEST['filter_history'])){
 				$where_case[] = 'i.history='.$_REQUEST['filter_history'];
 			}
-			
+
 			if(isset($_REQUEST['filter_trends'])){
 				$where_case[] = 'i.trends='.$_REQUEST['filter_trends'];
 			}
-			
+
 			if(isset($_REQUEST['filter_status']) && $_REQUEST['filter_status'] != -1){
 				$where_case[] = 'i.status='.$_REQUEST['filter_status'];
 			}
-			
+
 			if(isset($_REQUEST['filter_logtimefmt'])){
 				$where_case[] = 'i.logtimefmt='.zbx_dbstr($_REQUEST['filter_logtimefmt']);
 			}
-			
+
 			if(isset($_REQUEST['filter_delta']) && $_REQUEST['filter_delta'] != -1){
 				$where_case[] = 'i.delta='.$_REQUEST['filter_delta'];
 			}
-			
+
 			if(isset($_REQUEST['filter_trapper_hosts'])){
 				$where_case[] = 'i.trapper_hosts like '.zbx_dbstr('%'.$_REQUEST['filter_trapper_hosts'].'%');
 			}
 
 			$show_applications = 0;
-			$show_host = 1;
 		}
 //--------------------------
 
 // TABLE
 		$form = new CForm();
-		$form->SetName('items');
+		$form->setName('items');
 
 		$table  = new CTableInfo();
-		$table->SetHeader(array(
+		$table->setHeader(array(
 			$show_host ? make_sorting_link(S_HOST,'h.host') : null,
 			array(	new CCheckBox('all_items',null,
 					"CheckAll('".$form->GetName()."','all_items');"),
@@ -913,66 +931,65 @@ include_once "include/page_header.php";
 
 		$from_tables['i'] = 'items i'; /* NOTE: must be added as last element to use left join */
 
-		$sql = 'SELECT DISTINCT th.host as template_host,th.hostid as template_hostid, h.host, h.hostid, i.* '.
+		$sql = 'SELECT DISTINCT th.host as template_host,th.hostid as template_hostid, h.host, h.hostid, hgg.groupid, i.* '.
 				' FROM '.implode(',', $from_tables).
 					' LEFT JOIN items ti ON i.templateid=ti.itemid '.
 					' LEFT JOIN hosts th ON ti.hostid=th.hostid '.
-				' WHERE '.implode(' and ', $where_case).
+					' LEFT JOIN hosts_groups hgg ON hgg.hostid=th.hostid '.
+				' WHERE '.implode(' AND ', $where_case).
 				order_by('h.host,i.description,i.key_,i.delay,i.history,i.trends,i.type,i.status','i.itemid');
 		$db_items = DBselect($sql);
-
 		while($db_item = DBfetch($db_items)){
 			$description = array();
 			$item_description = item_description($db_item);
 
 			if(isset($_REQUEST['filter_description']) && !zbx_stristr($item_description, $_REQUEST['filter_description']) ) continue;
 
-			if($db_item["templateid"]){
-				$template_host = get_realhost_by_itemid($db_item["templateid"]);
-				array_push($description,		
-					new CLink($template_host["host"],"?".
-						"hostid=".$template_host["hostid"],
+			if($db_item['templateid']){
+				$template_host = get_realhost_by_itemid($db_item['templateid']);
+				array_push($description,
+					new CLink($template_host['host'],'?'.
+						'hostid='.$template_host['hostid'],
 						'unknown'),
-					":");
+					':');
 			}
 
 			array_push($description, new CLink(
 				item_description($db_item),
 				'?form=update&itemid='.$db_item['itemid'].
 				'&hostid='.$db_item['hostid'],
-//				url_param('hostid').
-//				url_param('groupid'),
 				'action'));
 
-			$status=new CCol(new CLink(item_status2str($db_item["status"]),
-					"?group_itemid%5B%5D=".$db_item["itemid"].
-					"&group_task=".($db_item["status"] ? "Activate+selected" : "Disable+selected"),
-					item_status2style($db_item["status"])));
-	
-			if($db_item["error"] == ''){
-				$error=new CCol('-',"off");
+			$status=new CCol(new CLink(item_status2str($db_item['status']),
+					'?group_itemid%5B%5D='.$db_item['itemid'].
+					'&group_task='.($db_item['status']?'Activate+selected':'Disable+selected'),
+					item_status2style($db_item['status'])));
+
+			if($db_item['error'] == ''){
+				$error=new CCol('-','off');
 			}
 			else{
-				$error=new CCol($db_item["error"],"on");
+				$error=new CCol($db_item['error'],'on');
 			}
-			
-			$applications = $show_applications ? implode(', ', get_applications_by_itemid($db_item["itemid"], 'name')) : null;
+
+			$applications = $show_applications ? implode(', ', get_applications_by_itemid($db_item['itemid'], 'name')) : null;
 			if(!is_null($applications) && empty($applications)) $applications = ' - ';
-			
-			$chkBox = new CCheckBox('group_itemid['.$db_item["itemid"].']',null,null,$db_item["itemid"]);
-			//if($db_item["templateid"] > 0) $chkBox->SetEnabled(false);
-			$table->AddRow(array(
+
+			$chkBox = new CCheckBox('group_itemid['.$db_item['itemid'].']',null,null,$db_item['itemid']);
+			//if($db_item['templateid'] > 0) $chkBox->setEnabled(false);
+			$table->addRow(array(
 				$show_host ? $db_item['host'] : null,
 				array($chkBox, $description),
-				$db_item["key_"],
-				$db_item["delay"],
-				$db_item["history"],
-				$db_item["trends"],
+				$db_item['key_'],
+				$db_item['delay'],
+				$db_item['history'],
+				$db_item['trends'],
 				item_type2str($db_item['type']),
 				$status,
 				$applications,
 				$error
 				));
+			$row_count++;
 		}
 
 		$footerButtons = array();
@@ -988,21 +1005,25 @@ include_once "include/page_header.php";
 		array_push($footerButtons, new CButton('form_copy_to',S_COPY_SELECTED_TO));
 		array_push($footerButtons, SPACE);
 		array_push($footerButtons, new CButton('form_mass_update',S_MASS_UPDATE));
-		$table->SetFooter(new CCol($footerButtons));
+		$table->setFooter(new CCol($footerButtons));
 
-		$form->AddItem($table);
+		$form->addItem($table);
 		$form->Show();
 	}
 
-	if(isset($_REQUEST["form"]) && (str_in_array($_REQUEST["form"],array(S_CREATE_ITEM,"update","clone")) ||
-		($_REQUEST["form"]=="mass_update" && isset($_REQUEST['group_itemid']))))
-	{
+	if(isset($_REQUEST['form'])){
 // FORM
-		insert_item_form();
+		if(str_in_array($_REQUEST['form'],array(S_CREATE_ITEM,'update','clone')) ||
+			(($_REQUEST['form']=='mass_update') && isset($_REQUEST['group_itemid'])))
+		{
+			insert_item_form();
+		}
 	}
+	if(isset($row_count))
+		zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
 ?>
 <?php
 
-include_once "include/page_footer.php"
+include_once('include/page_footer.php');
 
-?>
+?>
\ No newline at end of file
diff --git a/frontends/php/js/ajax_req.js b/frontends/php/js/ajax_req.js
index b1eb851..3e6b72d 100644
--- a/frontends/php/js/ajax_req.js
+++ b/frontends/php/js/ajax_req.js
@@ -19,13 +19,17 @@
 **/
 
 function send_params(params){
+	if(typeof(params) == 'undefined') var params = new Array();
 
 	var uri = new url(location.href);
-	new Ajax.Request(uri.getPath()+"?output=ajax",
+	uri.setQuery('?output=ajax');
+
+	new Ajax.Request(uri.getUrl(),
 					{
 						'method': 'post',
 						'parameters':params,
-						'onSuccess': function(resp){ },//alert(resp.responseText);
+						'onSuccess': function(resp){ },
+//						'onSuccess': function(resp){ alert(resp.responseText); },
 						'onFailure': function(){ document.location = uri.getPath()+'?'+Object.toQueryString(params); }
 					}
 	);
diff --git a/frontends/php/js/blink.js b/frontends/php/js/blink.js
deleted file mode 100644
index 8f60eb8..0000000
--- a/frontends/php/js/blink.js
+++ /dev/null
@@ -1,21 +0,0 @@
-// JavaScript Document
-var blink = {
-	blinkobjs: new Array(),
-	
-	init: function(){
-		this.blinkobjs = document.getElementsByName("blink");
-		if(this.blinkobjs.length > 0) this.view();
-	},
-	hide: function(){
-		for(var id=0; id<this.blinkobjs.length; id++){
-			this.blinkobjs[id].style.visibility = 'hidden';
-		}
-		setTimeout('blink.view()',500);
-	},
-	view: function(){
-		for(var id=0; id<this.blinkobjs.length; id++){
-			this.blinkobjs[id].style.visibility = 'visible'
-		}
-		setTimeout('blink.hide()',1000);
-	}
-}
\ No newline at end of file
diff --git a/frontends/php/js/chkbxrange.js b/frontends/php/js/chkbxrange.js
deleted file mode 100644
index a2dcc23..0000000
--- a/frontends/php/js/chkbxrange.js
+++ /dev/null
@@ -1,103 +0,0 @@
-// JavaScript Document
-/*
-** ZABBIX
-** Copyright (C) 2000-2008 SIA Zabbix
-**
-** This program is free software; you can redistribute it and/or modify
-** it under the terms of the GNU General Public License as published by
-** the Free Software Foundation; either version 2 of the License, or
-** (at your option) any later version.
-**
-** This program is distributed in the hope that it will be useful,
-** but WITHOUT ANY WARRANTY; without even the implied warranty of
-** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-** GNU General Public License for more details.
-**
-** You should have received a copy of the GNU General Public License
-** along with this program; if not, write to the Free Software
-** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-**
-*/
-
-// Title: automatic checkbox range selection class
-// Author: Aly
-
-var chkbx_range_ext = {
-startbox: 			null,			// start checkbox obj
-startbox_name: 		null,			// start checkbox name
-chkboxes:			new Array(),	// ckbx list
-
-init: function(){
-	var chk_bx = document.getElementsByTagName('input');
-	for(var i=0; i < chk_bx.length; i++){
-		if((typeof(chk_bx[i]) != 'undefined') && (chk_bx[i].type.toLowerCase() == 'checkbox')){
-			this.implement(chk_bx[i]);
-		}
-	}
-},
-
-implement: function(obj){
-	var obj_name = obj.name.split('[')[0];
-
-	if(typeof(this.chkboxes[obj_name]) == 'undefined') this.chkboxes[obj_name] = new Array();
-	this.chkboxes[obj_name].push(obj);
-
-	addListener(obj, 'click', this.check.bindAsEventListener(this), false);
-},
-
-check: function(e){
-	var e = e || window.event;
-	if(!e.ctrlKey) return true;
-	var obj = eventTarget(e);
-
-	if((typeof(obj) != 'undefined') && (obj.type.toLowerCase() == 'checkbox')){
-		var obj_name = obj.name.split('[')[0];
-
-		if(!is_null(this.startbox) && (this.startbox_name == obj_name) && (obj.name != this.startbox.name)){
-			var chkbx_list = this.chkboxes[obj_name];
-			var flag = false;
-			
-			for(var i=0; i < chkbx_list.length; i++){
-				if(typeof(chkbx_list[i]) !='undefined'){
-//alert(obj.name+' == '+chkbx_list[i].name);
-					if(flag){
-						chkbx_list[i].checked = this.startbox.checked;
-					}
-					
-					if(obj.name == chkbx_list[i].name) break;
-					if(this.startbox.name == chkbx_list[i].name) flag = true;
-				}
-			}
-			if(flag){
-				this.startbox = null;
-				this.startbox_name = null;
-				return true;
-			}
-			else{
-				for(var i=chkbx_list.length-1; i >= 0; i--){
-					if(typeof(chkbx_list[i]) !='undefined'){
-//alert(obj.name+' == '+chkbx_list[i].name);			
-						if(flag){
-							chkbx_list[i].checked = this.startbox.checked;
-						}
-						
-						if(obj.name == chkbx_list[i].name){
-							this.startbox = null;
-							this.startbox_name = null;
-							return true;
-						}
-						if(this.startbox.name == chkbx_list[i].name) flag = true;
-					}
-				}	
-			}
-
-		}
-		else{
-			if(!is_null(this.startbox)) this.startbox.checked = !this.startbox.checked;
-			
-			this.startbox = obj;
-			this.startbox_name = obj_name;
-		}
-	}
-}
-}
\ No newline at end of file
diff --git a/frontends/php/js/common.js b/frontends/php/js/common.js
index efed52e..183c157 100644
--- a/frontends/php/js/common.js
+++ b/frontends/php/js/common.js
@@ -21,14 +21,17 @@
 var agt = navigator.userAgent.toLowerCase();
 var OP = (agt.indexOf("opera") != -1) && window.opera;
 var IE = (agt.indexOf("msie") != -1) && document.all && !OP;
+var CR = (agt.indexOf('chrome') != -1);
 var SF = (agt.indexOf("safari") != -1);
 var KQ = (agt.indexOf("khtml") != -1) && (!SF);
 var GK = (agt.indexOf("gecko") != -1) && !KQ && !SF;
 var MC = (agt.indexOf('mac') != -1)
 
+
 function checkBrowser(){
 	if(OP) SDI('Opera');
 	if(IE) SDI('IE');
+	if(CR) SDI('Chrome');
 	if(SF) SDI('Safari');
 	if(KQ) SDI('Konqueror');
 	if(MC) SDI('Mac');
@@ -60,7 +63,7 @@ function is_string(obj){
 
 function is_array(obj) {
 	return obj != null && typeof obj == "object" &&
-      'splice' in obj && 'join' in obj;	  
+      'splice' in obj && 'join' in obj;
 }
 
 function SDI(msg){
@@ -70,11 +73,11 @@ function SDI(msg){
 		var div_help = document.createElement('div');
 		var doc_body = document.getElementsByTagName('body')[0];
 		doc_body.appendChild(div_help);
-		
+
 		div_help.setAttribute('id','div_help');
-		div_help.setAttribute('style','position: absolute; left: 10px; top: 10px; border: 1px red solid; width: 500px; height: 400px; background-color: white; overflow: auto; z-index: 20;');
+		div_help.setAttribute('style','position: absolute; left: 10px; top: 100px; border: 1px red solid; width: 500px; height: 400px; background-color: white; overflow: auto; z-index: 20;');
 	}
-	
+
 	div_help.appendChild(document.createTextNode("DEBUG INFO: "));
 	div_help.appendChild(document.createElement("br"));
 	div_help.appendChild(document.createTextNode(msg));
@@ -82,27 +85,38 @@ function SDI(msg){
 	div_help.appendChild(document.createElement("br"));
 }
 
+function SDJ(obj){
+	var debug = '';
+	for(var key in obj) {
+		var value = obj[key];
+		debug+=key+': '+value+'\n';
+	}
+	SDI('\n'+debug);
+}
+
+
 /// Alpha-Betic sorting
 
 function addListener(element, eventname, expression, bubbling){
 	bubbling = bubbling || false;
-	
-	if(window.addEventListener)	{
+
+	if(window.addEventListener){
 		element.addEventListener(eventname, expression, bubbling);
 		return true;
-	} 
-	else if(window.attachEvent) {
+	}
+	else if(window.attachEvent){
 		element.attachEvent('on'+eventname, expression);
 		return true;
-	} 
+	}
 	else return false;
 }
 
+
 function add_variable(o_el, s_name, x_value, s_formname, o_document){
 	var form;
-	
+
 	if(!o_document)	o_document = document;
-	
+
 	if(s_formname){
 		if( !(form = o_document.forms[s_formname]) )
 			 throw "Missed form with name '"+s_formname+"'.";
@@ -115,23 +129,23 @@ function add_variable(o_el, s_name, x_value, s_formname, o_document){
 		if( !(form = this.form) )
 			throw "Missed form in 'this' object";
 	}
-	
+
 	var o_variable = o_document.createElement('input');
-	
+
 	if( !o_variable )	throw "Can't create element";
-	
+
 	o_variable.type = 'hidden';
 	o_variable.name = s_name;
 	o_variable.id = s_name;
 	o_variable.value = x_value;
 
 	form.appendChild(o_variable);
-	
+
 return true;
 }
 
 function cancelEvent(e){
-	if (!e) var e = window.event;	
+	if (!e) var e = window.event;
 //SDI(e);
 	if(e){
 		if(IE){
@@ -160,7 +174,7 @@ function CheckAll(form_name, chkMain, shkName){
 }
 
 function close_window(){
-	
+
 	window.setTimeout("window.close()", 500); /* Solve bug for Internet Explorer */
 	return false;
 }
@@ -173,7 +187,7 @@ function Confirm(msg){
 }
 
 function create_var(form_name, var_name, var_val, subm){
-	
+
 	var frmForm = (is_string(form_name))?document.forms[form_name]:form_name;
 	if(!frmForm) return false;
 
@@ -183,17 +197,16 @@ function create_var(form_name, var_name, var_val, subm){
 	if(is_null(objVar)){
 		objVar = document.createElement('input');
 		objVar.setAttribute('type', 	'hidden');
-		
+
 		if(!objVar) return false;
 
 		frmForm.appendChild(objVar);
-		
+
 		objVar.setAttribute('name', 	var_name);
 		objVar.setAttribute('id', 		var_name);
 	}
-	
-	objVar.value = var_val;
 
+	objVar.value = var_val;
 	if(subm)
 		frmForm.submit();
 
@@ -205,7 +218,7 @@ function deselectAll(){
 	if(IE){
 		document.selection.empty();
 	}
-	else if(!KQ){	
+	else if(!KQ){
 		var sel = window.getSelection();
 		sel.removeAllRanges();
 	}
@@ -214,31 +227,31 @@ function deselectAll(){
 function empty_form(id){
 	id = $(id);
 	var count = 0;
-	
+
 	var inputs = id.getElementsByTagName('input');
 	for(var i=0; i<inputs.length;i++){
 		if((inputs[i].type == 'text') && (typeof(inputs[i].hidden) == 'undefined') && !empty(inputs[i].value)) return false;
 		if((inputs[i].type == 'checkbox') && (inputs[i].checked)) return false;
 	}
-	
+
 	var selects = id.getElementsByTagName('select');
 	for(var i=0; i<selects.length;i++){
 		if((typeof(selects[i].hidden) == 'undefined') && (selects[i].selectedIndex)) return false;
 	}
-	
+
 return true;
 }
 
 function eventTarget(e){
 	var targ = false;
-	
+
 	if (!e) var e = window.event;
 	if (e.target) targ = e.target;
 	else if (e.srcElement) targ = e.srcElement;
-	
+
 // defeat Safari bug
 	if (targ.nodeType == 3) targ = targ.parentNode;
-	
+
 return targ;
 }
 
@@ -292,13 +305,13 @@ function get_cursor_position(e){
 	if(e.pageX || e.pageY){
 		cursor.x = e.pageX;
 		cursor.y = e.pageY;
-	} 
+	}
 	else {
 		var de = document.documentElement;
 		var b = document.body;
-		cursor.x = e.clientX + 
+		cursor.x = e.clientX +
 		(de.scrollLeft || b.scrollLeft) - (de.clientLeft || 0);
-		cursor.y = e.clientY + 
+		cursor.y = e.clientY +
 		(de.scrollTop || b.scrollTop) - (de.clientTop || 0);
 	}
 	return cursor;
@@ -326,6 +339,9 @@ function get_scroll_pos(){
 
 
 function openWinCentered(loc, winname, iwidth, iheight, params){
+		var uri = new url(loc);
+		loc = uri.getUrl();
+
 		tp=Math.ceil((screen.height-iheight)/2);
 		lf=Math.ceil((screen.width-iwidth)/2);
 		if (params.length > 0){
@@ -341,19 +357,21 @@ function PopUp(url,width,height,form_name){
 	if(!height) height = 450;
 	if(!form_name) form_name = 'zbx_popup';
 
-	var left = (screen.width-(width+150))/2; 
+	var left = (screen.width-(width+150))/2;
 	var top = (screen.height-(height+150))/2;
-	
+
 	var popup = window.open(url,form_name,'width=' + width +',height=' + height + ',top='+ top +',left='+ left +
 			',resizable=yes,scrollbars=yes,location=no,menubar=no');
 
 	popup.focus();
-	
+
 	return false;
 }
 
-function redirect(url) {
-	window.location = url;
+function redirect(uri) {
+	uri = new url(uri);
+	var loc = uri.getUrl();
+	window.location = loc;
 	return false;
 }
 
@@ -364,7 +382,7 @@ function remove_childs(form_name,rmvbyname,tag){
 		if(frmForm.elements[i].type != 'checkbox') continue;
 		if(frmForm.elements[i].disabled == true) continue;
 		if(frmForm.elements[i].checked != true) continue;
-		
+
 		var splt = frmForm.elements[i].name.split('[');
 		var name = splt[0];
 		var serviceid = splt[1];
@@ -382,10 +400,10 @@ function remove_element(elmnt,tag){
 	if(!is_null(elmnt)){
 		if(('undefined' != typeof(elmnt.nodeName)) && (elmnt.nodeName.toLowerCase() == tag.toLowerCase())){
 			elmnt.parentNode.removeChild(elmnt);
-		} 
+		}
 		else if(elmnt.nodeType == 9){
 			return false;
-		} 
+		}
 		else {
 			remove_element(elmnt.parentNode,tag);
 		}
@@ -400,13 +418,13 @@ function resizeiframe(id){
 	if(typeof(indoc) == 'undefined') return;
 	var height = parseInt(indoc.getElementsByTagName('body')[0].scrollHeight);
 	var height2 = parseInt(indoc.getElementsByTagName('body')[0].offsetHeight);
-	
+
 	if(height2 > height){
 		height = height2;
 	}
 
 	iframe.style.height = (height)+'px';
-	
+
 	if(!is_null($('scroll')) && showgraphmenu){
 		showgraphmenu('iframe');
 	}
@@ -418,7 +436,7 @@ function ShowHide(obj,style){
 	if(is_string(obj))
 		obj = document.getElementById(obj);
 	if(!obj){
-		throw 'ShowHide(): Object not foun.';
+		throw 'ShowHide(): Object not found.';
 		return false;
 	}
 
@@ -430,7 +448,6 @@ function ShowHide(obj,style){
 		obj.style.display = style;
 		return 1;
 	}
-return false;
 }
 
 function switchElementsClass(obj,class1,class2){
@@ -462,8 +479,170 @@ function ScaleChartToParenElement(obj_name){
 	}
 }
 
+function insert_in_element(element_name, text){
+	var elems = document.getElementsByName(element_name);
+	
+	for(var key=0; key < elems.length; key++){
+		if((typeof(elems[key]) != 'undefined') && !is_null(elems[key])){
+			$(elems[key]).update(text);
+		}
+	}
+}
+
 function insert_sizeable_graph(graph_id,url){
 	if((typeof(ZBX_G_WIDTH) != 'undefined')) url += "&amp;width="+ZBX_G_WIDTH;
 
 	document.write('<img id="'+graph_id+'" src="'+url+'" alt="graph" /><br />');
-}
\ No newline at end of file
+}
+
+/************************************************************************************/
+/*									MAIN MENU stuff									*/
+/************************************************************************************/
+// Author: Aly
+
+var MMenu = {
+menus:			{'empty': 0, 'view': 0, 'cm': 0, 'reports': 0, 'config': 0, 'admin': 0},
+def_label:		null,
+sub_active: 	false,
+timeout: 		null,
+
+mouseOver: function(show_label){
+	clearTimeout(this.timeout);
+	MMenu.showSubMenu(show_label);
+},
+
+submenu_mouseOver: function(){
+	clearTimeout(this.timeout);
+},
+
+mouseOut: function(){
+	this.timeout = setTimeout('MMenu.showSubMenu("'+this.def_label+'")', 2000);
+},
+
+showSubMenu: function(show_label){
+	var menu_div  = $('sub_'+show_label);
+	if(!is_null(menu_div)){
+		$(show_label).className = 'active';
+		menu_div.show();
+		for(var key in this.menus){
+			if(key == show_label) continue;
+
+			var menu_cell = $(key);
+			if(!is_null(menu_cell)) menu_cell.className = '';
+
+			var sub_menu_cell = $('sub_'+key);
+			if(!is_null(sub_menu_cell)) sub_menu_cell.hide();
+		}
+	}
+}
+}
+
+
+/************************************************************************************/
+/*						Automatic checkbox range selection 							*/
+/************************************************************************************/
+// Author: Aly
+
+var chkbx_range_ext = {
+startbox: 			null,			// start checkbox obj
+startbox_name: 		null,			// start checkbox name
+chkboxes:			new Array(),	// ckbx list
+
+init: function(){
+	var chk_bx = document.getElementsByTagName('input');
+	for(var i=0; i < chk_bx.length; i++){
+		if((typeof(chk_bx[i]) != 'undefined') && (chk_bx[i].type.toLowerCase() == 'checkbox')){
+			this.implement(chk_bx[i]);
+		}
+	}
+},
+
+implement: function(obj){
+	var obj_name = obj.name.split('[')[0];
+
+	if(typeof(this.chkboxes[obj_name]) == 'undefined') this.chkboxes[obj_name] = new Array();
+	this.chkboxes[obj_name].push(obj);
+
+	addListener(obj, 'click', this.check.bindAsEventListener(this), false);
+},
+
+check: function(e){
+	var e = e || window.event;
+	if(!e.ctrlKey) return true;
+	var obj = eventTarget(e);
+
+	if((typeof(obj) != 'undefined') && (obj.type.toLowerCase() == 'checkbox')){
+		var obj_name = obj.name.split('[')[0];
+
+		if(!is_null(this.startbox) && (this.startbox_name == obj_name) && (obj.name != this.startbox.name)){
+			var chkbx_list = this.chkboxes[obj_name];
+			var flag = false;
+			
+			for(var i=0; i < chkbx_list.length; i++){
+				if(typeof(chkbx_list[i]) !='undefined'){
+//alert(obj.name+' == '+chkbx_list[i].name);
+					if(flag){
+						chkbx_list[i].checked = this.startbox.checked;
+					}
+					
+					if(obj.name == chkbx_list[i].name) break;
+					if(this.startbox.name == chkbx_list[i].name) flag = true;
+				}
+			}
+			if(flag){
+				this.startbox = null;
+				this.startbox_name = null;
+				return true;
+			}
+			else{
+				for(var i=chkbx_list.length-1; i >= 0; i--){
+					if(typeof(chkbx_list[i]) !='undefined'){
+//alert(obj.name+' == '+chkbx_list[i].name);			
+						if(flag){
+							chkbx_list[i].checked = this.startbox.checked;
+						}
+						
+						if(obj.name == chkbx_list[i].name){
+							this.startbox = null;
+							this.startbox_name = null;
+							return true;
+						}
+						if(this.startbox.name == chkbx_list[i].name) flag = true;
+					}
+				}	
+			}
+
+		}
+		else{
+			if(!is_null(this.startbox)) this.startbox.checked = !this.startbox.checked;
+			
+			this.startbox = obj;
+			this.startbox_name = obj_name;
+		}
+	}
+}
+}
+/************************************************************************************/
+/*						Replace Standart Blink functionality						*/
+/************************************************************************************/
+// Author: Aly
+var blink = {
+	blinkobjs: new Array(),
+	
+	init: function(){
+		this.blinkobjs = document.getElementsByName("blink");
+		if(this.blinkobjs.length > 0) this.view();
+	},
+	hide: function(){
+		for(var id=0; id<this.blinkobjs.length; id++){
+			this.blinkobjs[id].style.visibility = 'hidden';
+		}
+		setTimeout('blink.view()',500);
+	},
+	view: function(){
+		for(var id=0; id<this.blinkobjs.length; id++){
+			this.blinkobjs[id].style.visibility = 'visible'
+		}
+		setTimeout('blink.hide()',1000);
+	}
+}
diff --git a/frontends/php/js/cookies.js b/frontends/php/js/cookies.js
deleted file mode 100644
index 6b6a32d..0000000
--- a/frontends/php/js/cookies.js
+++ /dev/null
@@ -1,78 +0,0 @@
-//Javascript document
-/*
-** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
-**
-** This program is free software; you can redistribute it and/or modify
-** it under the terms of the GNU General Public License as published by
-** the Free Software Foundation; either version 2 of the License, or
-** (at your option) any later version.
-**
-** This program is distributed in the hope that it will be useful,
-** but WITHOUT ANY WARRANTY; without even the implied warranty of
-** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-** GNU General Public License for more details.
-**
-** You should have received a copy of the GNU General Public License
-** along with this program; if not, write to the Free Software
-** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-**/ 
-// Title: cookies class
-// Description: to manipulate cookies on client side
-// Author: Aly
-
-var cookie ={
-cookies: new Array(),
-
-init: function () {
-	var allCookies = document.cookie.split('; ');
-	for (var i=0;i<allCookies.length;i++) {
-		var cookiePair = allCookies[i].split('=');
-		this.cookies[cookiePair[0]] = cookiePair[1];
-	}
-},
-
-create: function (name,value,days) {
-	if(days) {
-		var date = new Date();
-		date.setTime(date.getTime()+(days*24*60*60*1000));
-		var expires = "; expires="+date.toGMTString();
-	}else{ 
-		var expires = "";
-	}
-	
-	document.cookie = name+"="+value+expires+"; path=/";
-	this.cookies[name] = value;
-},
-
-read : function(name){
-	if(typeof(this.cookies[name]) != 'undefined'){
-		return this.cookies[name];
-	} else {
-		var nameEQ = name + "=";
-		var ca = document.cookie.split(';');
-		for(var i=0;i < ca.length;i++) {
-			var c = ca[i];
-			while (c.charAt(0)==' ') c = c.substring(1,c.length);
-			if(c.indexOf(nameEQ) == 0)	return this.cookies[name] = c.substring(nameEQ.length,c.length);
-		}
-	}
-	return null;
-},
-
-printall: function() {
-	var allCookies = document.cookie.split('; ');
-	for (var i=0;i<allCookies.length;i++) {
-		var cookiePair = allCookies[i].split('=');
-		
-		alert("[" + cookiePair[0] + "] is " + cookiePair[1]); // assumes print is already defined
-	}
-},
-
-erase: function (name) {
-	this.create(name,'',-1);
-	this.cookies[name] = undefined;
-}
-}
-
-cookie.init();
\ No newline at end of file
diff --git a/frontends/php/js/gmenu.js b/frontends/php/js/gmenu.js
index c8de989..542eb70 100644
--- a/frontends/php/js/gmenu.js
+++ b/frontends/php/js/gmenu.js
@@ -810,7 +810,7 @@ function gmenucreate(top,left){
 	
 	Element.extend(div_gmenu);
 	div_gmenu.setAttribute('id','gmenu');
-	div_gmenu.setStyle({top: top+'px', left: left+'px',display: 'none'});
+	div_gmenu.setStyle({'top': top+'px', 'left': left+'px','display': 'none'});
 	
 ////////////////////////////////////////////// BSDATE
 
diff --git a/frontends/php/js/gpc.js b/frontends/php/js/gpc.js
new file mode 100644
index 0000000..e138457
--- /dev/null
+++ b/frontends/php/js/gpc.js
@@ -0,0 +1,302 @@
+//Javascript document
+/*
+** ZABBIX
+** Copyright (C) 2000-2009 SIA Zabbix
+**
+** This program is free software; you can redistribute it and/or modify
+** it under the terms of the GNU General Public License as published by
+** the Free Software Foundation; either version 2 of the License, or
+** (at your option) any later version.
+**
+** This program is distributed in the hope that it will be useful,
+** but WITHOUT ANY WARRANTY; without even the implied warranty of
+** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+** GNU General Public License for more details.
+**
+** You should have received a copy of the GNU General Public License
+** along with this program; if not, write to the Free Software
+** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+**/
+
+// Title: cookies class
+// Description: to manipulate cookies on client side
+// Author: Aly
+var cookie ={
+cookies: new Array(),
+
+init: function () {
+	var allCookies = document.cookie.split('; ');
+	for (var i=0;i<allCookies.length;i++) {
+		var cookiePair = allCookies[i].split('=');
+		this.cookies[cookiePair[0]] = cookiePair[1];
+	}
+},
+
+create: function (name,value,days) {
+	if(days) {
+		var date = new Date();
+		date.setTime(date.getTime()+(days*24*60*60*1000));
+		var expires = "; expires="+date.toGMTString();
+	}
+	else{ 
+		var expires = "";
+	}
+	
+	document.cookie = name+"="+value+expires+"; path=/";
+	this.cookies[name] = value;
+},
+
+read : function(name){
+	if(typeof(this.cookies[name]) != 'undefined'){
+		return this.cookies[name];
+	} 
+	else {
+		var nameEQ = name + "=";
+		var ca = document.cookie.split(';');
+		for(var i=0;i < ca.length;i++) {
+			var c = ca[i];
+			while (c.charAt(0)==' ') c = c.substring(1,c.length);
+			if(c.indexOf(nameEQ) == 0)	return this.cookies[name] = c.substring(nameEQ.length,c.length);
+		}
+	}
+	return null;
+},
+
+printall: function() {
+	var allCookies = document.cookie.split('; ');
+	for(var i=0;i<allCookies.length;i++){
+		var cookiePair = allCookies[i].split('=');
+		
+		alert("[" + cookiePair[0] + "] is " + cookiePair[1]); // assumes print is already defined
+	}
+},
+
+erase: function (name) {
+	this.create(name,'',-1);
+	this.cookies[name] = undefined;
+}
+}
+
+cookie.init();
+
+
+
+// Title: url manipulation class
+// Author: Aly
+var url = Class.create();
+
+url.prototype = {
+url: 		'',		//	actually, it's depricated/private variable 
+port:		 -1,
+host: 		'',
+protocol: 	'',
+username:	'',
+password:	'',
+filr:		'',
+reference:	'',
+path:		'',
+query:		'',
+arguments:  {},
+
+initialize: function(url){
+	this.url=unescape(url);
+	
+	this.query=(this.url.indexOf('?')>=0)?this.url.substring(this.url.indexOf('?')+1):'';
+	if(this.query.indexOf('#')>=0) this.query=this.query.substring(0,this.query.indexOf('#'));
+	
+	var protocolSepIndex=this.url.indexOf('://');
+	if(protocolSepIndex>=0){
+		this.protocol=this.url.substring(0,protocolSepIndex).toLowerCase();
+		this.host=this.url.substring(protocolSepIndex+3);
+		if(this.host.indexOf('/')>=0) this.host=this.host.substring(0,this.host.indexOf('/'));
+		var atIndex=this.host.indexOf('@');
+		if(atIndex>=0){
+			var credentials=this.host.substring(0,atIndex);
+			var colonIndex=credentials.indexOf(':');
+			if(colonIndex>=0){
+				this.username=credentials.substring(0,colonIndex);
+				this.password=credentials.substring(colonIndex);
+			}
+			else{
+				this.username=credentials;
+			}
+			this.host=this.host.substring(atIndex+1);
+		}
+		
+		var host_ipv6 = this.host.indexOf(']');
+		if(host_ipv6>=0){
+			if(host_ipv6 < (this.host.length-1)){
+				host_ipv6++;
+				var host_less = this.host.substring(host_ipv6);
+
+				var portColonIndex=host_less.indexOf(':');
+				if(portColonIndex>=0){
+					this.port=host_less.substring(portColonIndex+1);
+					this.host=this.host.substring(0,host_ipv6);
+				}
+			}
+		}
+		else{
+			var portColonIndex=this.host.indexOf(':');
+			if(portColonIndex>=0){
+				this.port=this.host.substring(portColonIndex+1);
+				this.host=this.host.substring(0,portColonIndex);
+			}
+		}
+		this.file=this.url.substring(protocolSepIndex+3);
+		this.file=this.file.substring(this.file.indexOf('/'));
+	}
+	else{
+		this.file=this.url;
+	}
+	
+	if(this.file.indexOf('?')>=0) this.file=this.file.substring(0, this.file.indexOf('?'));
+
+	var refSepIndex=url.indexOf('#');
+	if(refSepIndex>=0){
+		this.file=this.file.substring(0,refSepIndex);
+		this.reference=this.url.substring(this.url.indexOf('#'));
+	}
+	this.path=this.file;
+	if(this.query.length>0) this.file+='?'+this.query;
+	if(this.reference.length>0) this.file+='#'+this.reference;
+	if(this.query.length > 0)	this.formatArguments();
+	
+	var sid = cookie.read('zbx_sessionid');
+	this.setArgument('sid', sid.substring(16));
+},
+
+
+formatQuery: function(){
+	if(this.arguments.lenght < 1) return;
+	
+	var query = '';
+	for(var key in this.arguments){
+		if((typeof(this.arguments[key]) != 'undefined') && !is_null(this.arguments[key])){
+			query+=key+'='+this.arguments[key]+'&';
+		}
+	}
+	this.query = query.substring(0,query.length-1);
+},
+
+formatArguments: function(){
+	var args=this.query.split('&');
+	var keyval='';
+
+	if(args.length<1) return;
+	
+	for(i=0; i<args.length; i++){
+		keyval = args[i].split('=');
+		this.arguments[keyval[0]] = (keyval.length>1)?keyval[1]:'';
+	}
+},
+
+setArgument: function(key,value){
+	this.arguments[key] = value;
+	this.formatQuery();
+},
+
+getArgument: function(key){
+	if(typeof(this.arguments[key]) != 'undefined') return this.arguments[key];
+	else return null;
+},
+
+getArguments: function(){
+	return this.arguments;
+},
+
+getUrl: function(){
+	var uri = (this.protocol.length > 0)?(this.protocol+'://'):'';
+	uri +=  encodeURI((this.username.length > 0)?(this.username):'');
+	uri +=  encodeURI((this.password.length > 0)?(':'+this.password):'');
+	uri +=  (this.host.length > 0)?(this.host):'';
+	uri +=  (this.port.length > 0)?(':'+this.port):'';
+	uri +=  encodeURI((this.path.length > 0)?(this.path):'');
+	uri +=  encodeURI((this.query.length > 0)?('?'+this.query):'');
+	uri +=  encodeURI((this.reference.length > 0)?('#'+this.reference):'');
+//	alert(uri.getProtocol()+' : '+uri.getHost()+' : '+uri.getPort()+' : '+uri.getPath()+' : '+uri.getQuery());
+return uri;
+},
+
+setPort: function(port){
+	this.port = port;
+},
+
+getPort: function(){ 
+	return this.port;
+},
+
+setQuery: function(query){ 
+	this.query = query;
+	if(this.query.indexOf('?')>=0){
+		this.query= this.query.substring(this.query.indexOf('?')+1);
+	}
+	
+	this.formatArguments();
+	
+	var sid = cookie.read('zbx_sessionid');
+	this.setArgument('sid', sid.substring(16));
+},
+
+getQuery: function(){ 
+	return this.query;
+},
+
+/* Returns the protocol of this URL, i.e. 'http' in the url 'http://server/' */
+getProtocol: function(){
+	return this.protocol;
+},
+
+setProtocol: function(protocol){
+	this.protocol = protocol;
+},
+/* Returns the host name of this URL, i.e. 'server.com' in the url 'http://server.com/' */
+getHost: function(){
+	return this.host;
+},
+
+setHost: function(host){
+	this.host = host;
+},
+
+/* Returns the user name part of this URL, i.e. 'joe' in the url 'http://joe@server.com/' */
+getUserName: function(){
+	return this.username;
+},
+
+setUserName: function(username){
+	this.username = username;
+},
+
+/* Returns the password part of this url, i.e. 'secret' in the url 'http://joe:secret@server.com/' */
+getPassword: function(){
+	return this.password;
+},
+
+setPassword: function(password){
+	this.password = password;
+},
+
+/* Returns the file part of this url, i.e. everything after the host name. */
+getFile: function(){
+	return this.file;
+},
+
+/* Returns the reference of this url, i.e. 'bookmark' in the url 'http://server/file.html#bookmark' */
+getReference: function(){
+	return this.reference;
+},
+
+setReference: function(reference){
+	this.reference = reference;
+},
+
+/* Returns the file path of this url, i.e. '/dir/file.html' in the url 'http://server/dir/file.html' */
+getPath: function(){
+	return this.path;
+},
+
+setPath: function(path){
+	this.path = path;
+}
+}
\ No newline at end of file
diff --git a/frontends/php/js/menu.js b/frontends/php/js/menu.js
index 93037f5..6f19d62 100644
--- a/frontends/php/js/menu.js
+++ b/frontends/php/js/menu.js
@@ -386,8 +386,13 @@ function menu_item (o_parent, n_order) {
 		this.n_y -= this.getprop('height') * (o_parent.a_config.length - item_offset);
 	}
 
+	if(!is_null(this.a_config[1]) && (this.a_config[1].indexOf('javascript') == -1)){
+		var uri = new url(this.a_config[1]);
+		this.a_config[1] = uri.getUrl();
+	}
+	
 	// generate item's HMTL
-	var el = document.createElement("a");
+	var el = document.createElement('a');
 	el.setAttribute('id', 'e' + o_root.n_id + '_' + this.n_id + 'o');
 	el.setAttribute('href', this.a_config[1]);
 
diff --git a/frontends/php/js/menu_scripts.js b/frontends/php/js/menu_scripts.js
index 9a17d01..30c2712 100644
--- a/frontends/php/js/menu_scripts.js
+++ b/frontends/php/js/menu_scripts.js
@@ -39,7 +39,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < menu_usrgrp_all.length; i++){
 		if((typeof(menu_usrgrp_all[i]) != 'undefined') && !empty(menu_usrgrp_all[i])){
 			var row = menu_usrgrp_all[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=1&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=1&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_add_to.push(menu_row);
 		}
 	}
@@ -48,7 +48,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < usr_grp_all_in.length; i++){
 		if((typeof(usr_grp_all_in[i]) != 'undefined') && !empty(usr_grp_all_in[i])){
 			var row = usr_grp_all_in[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=0&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=0&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_rmv_frm.push(menu_row);
 		}
 	}
@@ -64,7 +64,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < menu_usrgrp_gui.length; i++){
 		if((typeof(menu_usrgrp_gui[i]) != 'undefined') && !empty(menu_usrgrp_gui[i])){
 			var row = menu_usrgrp_gui[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=1&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=1&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_gui_add_to.push(menu_row);
 		}
 	}
@@ -73,7 +73,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < usr_grp_gui_in.length; i++){
 		if((typeof(usr_grp_all_in[i]) != 'undefined') && !empty(usr_grp_gui_in[i])){
 			var row = usr_grp_gui_in[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=0&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=0&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_gui_rmv_frm.push(menu_row);
 		}
 	}
@@ -89,7 +89,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < menu_usrgrp_status.length; i++){
 		if((typeof(menu_usrgrp_status[i]) != 'undefined') && !empty(menu_usrgrp_status[i])){
 			var row = menu_usrgrp_status[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=1&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=1&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_status_add_to.push(menu_row);
 		}
 	}
@@ -98,7 +98,7 @@ function create_user_menu(e,userid,usr_grp_all_in,usr_grp_gui_in,usr_grp_status_
 	for(var i=0; i < usr_grp_status_in.length; i++){
 		if((typeof(usr_grp_status_in[i]) != 'undefined') && !empty(usr_grp_status_in[i])){
 			var row = usr_grp_status_in[i];
-			var menu_row = new Array(row.name,"users.php?config=0&form=update&grpaction=0&userid="+userid+"&usrgrpid="+row.usrgrpid);
+			var menu_row = new Array(row.name,'users.php?config=0&form=update&grpaction=0&userid='+userid+'&usrgrpid='+row.usrgrpid);
 			grp_status_rmv_frm.push(menu_row);
 		}
 	}
diff --git a/frontends/php/js/sbinit.js b/frontends/php/js/sbinit.js
index 362be5c..5db8ea0 100644
--- a/frontends/php/js/sbinit.js
+++ b/frontends/php/js/sbinit.js
@@ -205,6 +205,7 @@ function graphload(dom_objects,unix_stime,period,dynamic){
 			G_MENU.setPeriodType();
 //---------
 //alert(url_stime);
+
 			uri = new url(dom_objects[i].src);
 			uri.setArgument('stime', url_stime);
 			uri.setArgument('period', period);
@@ -216,7 +217,8 @@ function graphload(dom_objects,unix_stime,period,dynamic){
 		uri = new url(dom_objects[0].href);
 		uri.setArgument('stime', url_stime);
 		uri.setArgument('period', period);
-
+		uri.setArgument('output', null);
+//	alert(uri.getUrl());
 		dom_objects[0].href = uri.getUrl();
 	}	
 }
diff --git a/frontends/php/js/updater.js b/frontends/php/js/updater.js
index 4293e73..b8c5777 100644
--- a/frontends/php/js/updater.js
+++ b/frontends/php/js/updater.js
@@ -27,7 +27,7 @@ inloadobj:		new Array(),			// array containing updated obj and statuses
 
 	setObj4Update: function(id,frequency,url,params){
 		var obj = document.getElementById(id);
-		if((typeof(obj) == 'undefined')) return false; 
+		if(typeof(obj) == 'undefined') return false; 
 	
 		var obj4update = {
 			'id': 		id,
@@ -65,7 +65,7 @@ inloadobj:		new Array(),			// array containing updated obj and statuses
 		obj4update.ready = false;
 		
 		var uri = new url(obj4update.url);
-		new Ajax.Updater(obj4update.id, obj4update.url,
+		new Ajax.Updater(obj4update.id, uri.getUrl(),//obj4update.url,
 			{
 				method: 'post',
 				'parameters':	obj4update.params,
diff --git a/frontends/php/js/url.js b/frontends/php/js/url.js
deleted file mode 100644
index 6de3030..0000000
--- a/frontends/php/js/url.js
+++ /dev/null
@@ -1,256 +0,0 @@
-// JavaScript Document
-/*
-** ZABBIX
-** Copyright (C) 2000-2007 SIA Zabbix
-**
-** This program is free software; you can redistribute it and/or modify
-** it under the terms of the GNU General Public License as published by
-** the Free Software Foundation; either version 2 of the License, or
-** (at your option) any later version.
-**
-** This program is distributed in the hope that it will be useful,
-** but WITHOUT ANY WARRANTY; without even the implied warranty of
-** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-** GNU General Public License for more details.
-**
-** You should have received a copy of the GNU General Public License
-** along with this program; if not, write to the Free Software
-** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-**
-*/
-
-// Title: url manipulation class
-// Author: Aly
-
-
-var url = Class.create();
-
-url.prototype = {
-url: 		'',		//	actually, it's depricated/private variable 
-port:		 -1,
-host: 		'',
-protocol: 	'',
-username:	'',
-password:	'',
-filr:		'',
-reference:	'',
-path:		'',
-query:		'',
-arguments: new Array(),
-
-initialize: function(url){
-	this.url=unescape(url);
-	
-	this.query=(this.url.indexOf('?')>=0)?this.url.substring(this.url.indexOf('?')+1):'';
-	if(this.query.indexOf('#')>=0) this.query=this.query.substring(0,this.query.indexOf('#'));
-	
-	var protocolSepIndex=this.url.indexOf('://');
-	if(protocolSepIndex>=0){
-		this.protocol=this.url.substring(0,protocolSepIndex).toLowerCase();
-		this.host=this.url.substring(protocolSepIndex+3);
-		if(this.host.indexOf('/')>=0) this.host=this.host.substring(0,this.host.indexOf('/'));
-		var atIndex=this.host.indexOf('@');
-		if(atIndex>=0){
-			var credentials=this.host.substring(0,atIndex);
-			var colonIndex=credentials.indexOf(':');
-			if(colonIndex>=0){
-				this.username=credentials.substring(0,colonIndex);
-				this.password=credentials.substring(colonIndex);
-			}else{
-				this.username=credentials;
-			}
-			this.host=this.host.substring(atIndex+1);
-		}
-		
-		var host_ipv6 = this.host.indexOf(']');
-		if(host_ipv6>=0){
-			if(host_ipv6 < (this.host.length-1)){
-				host_ipv6++;
-				var host_less = this.host.substring(host_ipv6);
-
-				var portColonIndex=host_less.indexOf(':');
-				if(portColonIndex>=0){
-					this.port=host_less.substring(portColonIndex+1);
-					this.host=this.host.substring(0,host_ipv6);
-				}
-			}
-		}
-		else{
-			var portColonIndex=this.host.indexOf(':');
-			if(portColonIndex>=0){
-				this.port=this.host.substring(portColonIndex+1);
-				this.host=this.host.substring(0,portColonIndex);
-			}
-		}
-		this.file=this.url.substring(protocolSepIndex+3);
-		this.file=this.file.substring(this.file.indexOf('/'));
-	}else{
-		this.file=this.url;
-	}
-	if(this.file.indexOf('?')>=0) this.file=this.file.substring(0, this.file.indexOf('?'));
-
-	var refSepIndex=url.indexOf('#');
-	if(refSepIndex>=0){
-		this.file=this.file.substring(0,refSepIndex);
-		this.reference=this.url.substring(this.url.indexOf('#'));
-	}
-	this.path=this.file;
-	if(this.query.length>0) this.file+='?'+this.query;
-	if(this.reference.length>0) this.file+='#'+this.reference;
-	if(this.query.length > 0)	this.getArguments();
-},
-
-getArguments: function(){
-	var args=this.query.split('&');
-	var keyval='';
-	
-	if(args.length<1) return;
-	
-	for(i=0;i<args.length;i++){
-		keyval=args[i].split('=');
-		this.arguments[i] = new Array(keyval[0],(keyval.length==1)?keyval[0]:keyval[1]);
-	}
-},
-
-getArgumentValue: function(key){
-	if(key.length<1) return '';
-	for(i=0; i < this.arguments.length; i++){
-		if(this.arguments[i][0] == key) return this.arguments[i][1];
-	}
-	
-return '';
-},
-
-getArgumentValues: function(){
-	var a=new Array();
-	var b=this.query.split('&');
-	var c='';
-	if(b.length<1) return a;
-	for(i=0;i<b.length;i++){
-		c=b[i].split('=');
-		a[i]=new Array(c[0],((c.length==1)?c[0]:c[1]));
-	}
-return a;
-},
-
-getUrl: function(){
-	var uri = (this.protocol.length > 0)?(this.protocol+'://'):'';
-	uri +=  encodeURI((this.username.length > 0)?(this.username):'');
-	uri +=  encodeURI((this.password.length > 0)?(':'+this.password):'');
-	uri +=  (this.host.length > 0)?(this.host):'';
-	uri +=  (this.port.length > 0)?(':'+this.port):'';
-	uri +=  encodeURI((this.path.length > 0)?(this.path):'');
-	uri +=  encodeURI((this.query.length > 0)?('?'+this.query):'');
-	uri +=  encodeURI((this.reference.length > 0)?('#'+this.reference):'');
-//	alert(uri.getProtocol()+' : '+uri.getHost()+' : '+uri.getPort()+' : '+uri.getPath()+' : '+uri.getQuery());
-return uri;
-},
-
-setArgument: function(key,value){
-
-	var valueisset = false;
-	if(typeof(key) == 'undefined') throw 'Invalid argument past for setArgument';
-	
-	value =('undefined' != typeof(value))?value:'';
-
-	for(i=0; i < this.arguments.length; i++){
-		if(this.arguments[i][0] == key){
-			valueisset = true;
-			this.arguments[i][1] = value;
-		}
-	}	
-	if(!valueisset)	this.arguments[this.arguments.length] = new Array(key,value);
-	this.formatQuery();
-},
-
-formatQuery: function(){
-	if(this.arguments.lenght < 1) return;
-	
-	var query = '';
-	for(i=0; i < this.arguments.length; i++){		
-		query+=this.arguments[i][0]+'='+this.arguments[i][1]+'&';
-	}
-	this.query = query.substring(0,query.length-1);
-},
-
-getPort: function(){ 
-	return this.port;
-},
-
-setPort: function(port){
-	this.port = port;
-},
-
-getQuery: function(){ 
-	return this.query;
-},
-
-setQuery: function(query){ 
-	this.query = query;
-	this.getArgumentValues();
-	this.formatQuery();
-},
-
-/* Returns the protocol of this URL, i.e. 'http' in the url 'http://server/' */
-getProtocol: function(){
-	return this.protocol;
-},
-
-setProtocol: function(protocol){
-	this.protocol = protocol;
-},
-/* Returns the host name of this URL, i.e. 'server.com' in the url 'http://server.com/' */
-getHost: function(){
-	return this.host;
-},
-
-setHost: function(set){
-	this.host = host;
-},
-
-/* Returns the user name part of this URL, i.e. 'joe' in the url 'http://joe@server.com/' */
-getUserName: function(){
-	return this.username;
-},
-
-setUserName: function(username){
-	this.username = username;
-},
-
-/* Returns the password part of this url, i.e. 'secret' in the url 'http://joe:secret@server.com/' */
-getPassword: function(){
-	return this.password;
-},
-
-setPassword: function(password){
-	this.password = password;
-},
-
-/* Returns the file part of this url, i.e. everything after the host name. */
-getFile: function(){
-	return this.file = file;
-},
-
-setFile: function(file){
-	this.file = file;
-},
-
-/* Returns the reference of this url, i.e. 'bookmark' in the url 'http://server/file.html#bookmark' */
-getReference: function(){
-	return this.reference;
-},
-
-setReference: function(reference){
-	this.reference = reference;
-},
-
-/* Returns the file path of this url, i.e. '/dir/file.html' in the url 'http://server/dir/file.html' */
-getPath: function(){
-	return this.path;
-},
-
-setPath: function(path){
-	this.path = path;
-}
-
-}
\ No newline at end of file
diff --git a/frontends/php/latest.php b/frontends/php/latest.php
index d8536e1..08a182e 100644
--- a/frontends/php/latest.php
+++ b/frontends/php/latest.php
@@ -67,21 +67,18 @@ include_once 'include/page_header.php';
 	$_REQUEST['select'] = get_request('select',get_profile('web.latest.filter.select', ''));
 	update_profile('web.latest.filter.select', $_REQUEST['select'], PROFILE_TYPE_STR);
 
-	$options = array('allow_all_hosts','monitored_hosts','with_monitored_items','always_select_first_host');
-	
-	$_REQUEST['hostid'] = get_request('hostid',get_profile('web.latest.last.hostid', null));
-	if(is_null($_REQUEST['hostid'])){
-		array_push($options,'always_select_first_host');
-		
-		$_REQUEST['groupid'] = get_request('groupid',get_profile('web.latest.last.groupid', null));
-		if(is_null($_REQUEST['groupid'])){
-			validate_group(PERM_READ_ONLY,$options,'web.latest.last.groupid');
-		}
-	}
-
+	$options = array('allow_all_hosts','monitored_hosts','with_monitored_items');
 	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
+	
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+	$params = array();
+	foreach($options as  $option) $params[$option] = 1;
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
 
-	validate_group_with_host(PERM_READ_ONLY,$options,'web.latest.last.groupid','web.latest.last.hostid');
 //----------------
 ?>
 <?php
@@ -112,32 +109,22 @@ include_once 'include/page_header.php';
 
 //	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],"javascript: return updater.onetime_update('".ZBX_PAGE_MAIN_HAT."',this.form);");
 //	$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],"javascript: return updater.onetime_update('".ZBX_PAGE_MAIN_HAT."',this.form);");
+	
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
 
-	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'javascript: submit();');
-	$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'javascript: submit();');
+	$cmbGroup = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-	$cmbHosts->AddItem(0,S_ALL_SMALL);
-	
-	$available_groups= get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST);
-
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g, hosts_groups hg, hosts h '.
-			' WHERE '.DBcondition('g.groupid',$available_groups).
-				' AND hg.groupid=g.groupid '.
-				' AND h.hostid=hg.hostid '.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT DISTINCT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-			' ORDER BY g.name';	
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbGroup->AddItem(
-				$row['groupid'],
-				get_node_name_by_elid($row['groupid']).$row['name']
-				);
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroup->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
+	foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+		$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
+	}
+	
+	$r_form->addItem(array(S_GROUP.SPACE,$cmbGroup));
+	$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));	
 	
 	$sql_from = '';
 	$sql_where = '';
@@ -145,23 +132,7 @@ include_once 'include/page_header.php';
 		$sql_from .= ',hosts_groups hg ';
 		$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
 	}
-	$sql='SELECT DISTINCT h.hostid,h.host '.
-		' FROM hosts h '.$sql_from.
-		' WHERE '.DBcondition('h.hostid',$available_hosts).
-			$sql_where.
-			' AND h.status='.HOST_STATUS_MONITORED.
-			' AND EXISTS(SELECT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-		' ORDER BY h.host';
-
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbHosts->AddItem(
-				$row['hostid'],
-				get_node_name_by_elid($row['hostid']).$row['host']
-				);
-	}
-
-	$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+//---
 	
 	$l_form = new CForm();
 	$l_form->SetMethod('get');
@@ -382,7 +353,7 @@ include_once 'include/page_header.php';
 
 	$tab_rows = array();
 
-	$sql = 'SELECT h.host,h.hostid,i.* '.
+	$sql = 'SELECT DISTINCT h.host,h.hostid,i.* '.
 			' FROM hosts h'.$sql_from.', items i '.
 				' LEFT JOIN items_applications ia ON ia.itemid=i.itemid'.
 			' WHERE ia.itemid is NULL '.
@@ -392,7 +363,6 @@ include_once 'include/page_header.php';
 				' AND i.status='.ITEM_STATUS_ACTIVE.
 				' AND '.DBcondition('h.hostid',$db_hostids).
 			' ORDER BY i.description,i.itemid';
-
 	$db_items = DBselect($sql);
 	while($db_item = DBfetch($db_items)){
 		
diff --git a/frontends/php/locales.php b/frontends/php/locales.php
index 70b1b45..0cc23ac 100644
--- a/frontends/php/locales.php
+++ b/frontends/php/locales.php
@@ -19,11 +19,11 @@
 **/
 ?>
 <?php
-include_once "include/config.inc.php";
+include_once('include/config.inc.php');
 
 if(isset($_REQUEST['download'])){
-	$page["type"] = PAGE_TYPE_XML;
-	$page["file"] = "new_locale.inc.php";
+	$page['type'] = PAGE_TYPE_XML;
+	$page['file'] = 'new_locale.inc.php';
 }
 else{
 	$page['title'] = "S_LOCALES";
@@ -181,26 +181,25 @@ else if(isset($_REQUEST['next'])){
 	$frmLcls->AddOption('id','locales');
 	$frmLcls->SetHelp($help);
 	
-	$fileFrom = 'include/locales/'.$_REQUEST['srclang'].".inc.php";
-	if(file_exists($fileFrom)){
-		include($fileFrom);
 	
+	$fileFrom = 'include/locales/'.$_REQUEST['srclang'].'.inc.php';
+	if(ereg('^[A-Za-z0-9_]+$', $_REQUEST['srclang']) && file_exists($fileFrom)){
+		include($fileFrom);	
 		if(!isset($TRANSLATION) || !is_array($TRANSLATION)){
-			error("Passed SOURCE is NOT valid PHP file.");
+			error('Passed SOURCE is NOT valid PHP file.');
 		}
 		$transFrom = $TRANSLATION;
 	}
 	unset($TRANSLATION);
 	
-	$frmLcls->AddVar('extlang',$_REQUEST['extlang']);
-	
-	if($_REQUEST['extlang'] != 'new'){
-		$fileTo = 'include/locales/'.$_REQUEST['extlang'].".inc.php";
+	$frmLcls->addVar('extlang',$_REQUEST['extlang']);
+	if(ereg('^[A-Za-z0-9_]+$', $_REQUEST['extlang']) && ($_REQUEST['extlang'] != 'new')){
+		$fileTo = 'include/locales/'.$_REQUEST['extlang'].'.inc.php';
 		if(file_exists($fileTo)){
 			include($fileTo);
 			
 			if(!isset($TRANSLATION) || !is_array($TRANSLATION)){
-				error("Passed DEST is NOT valid PHP file.");
+				error('Passed DEST is NOT valid PHP file.');
 			}
 			$transTo = $TRANSLATION;
 //			header('Content-Type: text/html; charset='.$TRANSLATION['S_HTML_CHARSET']);
diff --git a/frontends/php/media_types.php b/frontends/php/media_types.php
index 5fd712d..5b9ad6e 100644
--- a/frontends/php/media_types.php
+++ b/frontends/php/media_types.php
@@ -110,7 +110,16 @@ include_once "include/page_header.php";
 	$form->SetMethod('get');
 	
 	$form->AddItem(new CButton("form",S_CREATE_MEDIA_TYPE));
-	show_table_header(S_CONFIGURATION_OF_MEDIA_TYPES_BIG, $form);
+	
+	$row_count = 0;
+	$numrows = new CSpan(null,'info');
+	$numrows->addOption('name','numrows');	
+	$header = get_table_header(array(S_CONFIGURATION_OF_MEDIA_TYPES_BIG,
+					new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+					S_FOUND.': ',$numrows,)
+					);			
+	show_table_header($header, $form);
+
 ?>
 <?php
 	if(isset($_REQUEST["form"]))
@@ -158,9 +167,12 @@ include_once "include/page_header.php";
 				media_type2str($row['type']),
 				new CLink($row["description"],"?&form=update&mediatypeid=".$row["mediatypeid"],'action'),
 				$details));
+			$row_count++;
 		}
 		$table->show();
 	}
+	zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 ?>
 
 <?php
diff --git a/frontends/php/overview.php b/frontends/php/overview.php
index 7ba3662..1e87c4d 100644
--- a/frontends/php/overview.php
+++ b/frontends/php/overview.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -18,10 +18,10 @@
 ** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 **/
 
-require_once "include/config.inc.php";
-require_once "include/hosts.inc.php";
-require_once "include/triggers.inc.php";
-require_once "include/items.inc.php";
+require_once 'include/config.inc.php';
+require_once 'include/hosts.inc.php';
+require_once 'include/triggers.inc.php';
+require_once 'include/items.inc.php';
 
 $page['title'] = "S_OVERVIEW";
 $page['file'] = 'overview.php';
@@ -68,58 +68,33 @@ if(isset($_REQUEST['select']) && ($_REQUEST['select']!='')){
 	$_REQUEST['view_style'] = get_request('view_style',get_profile('web.overview.view.style',STYLE_TOP));
 	update_profile('web.overview.view.style',$_REQUEST['view_style'],PROFILE_TYPE_INT);
 	
+	$_REQUEST['type'] = get_request('type',get_profile('web.overview.type',SHOW_TRIGGERS));
+	update_profile('web.overview.type',$_REQUEST['type'],PROFILE_TYPE_INT);
+	
 	$options = array('allow_all_hosts','monitored_hosts','with_monitored_items');
+	if($_REQUEST['type'] == SHOW_TRIGGERS) array_push($options,'with_monitored_triggers');
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
 
-	$_REQUEST['groupid'] = get_request('groupid',get_profile('web.latest.last.groupid', null));
+//SDI($_REQUEST['groupid']);
+	$params = array();
+	foreach($options as  $option) $params[$option] = 1;
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
 
-	if(is_null($_REQUEST['groupid'])){
-		array_push($options,'always_select_first_group');
-	}	
-	validate_group(PERM_READ_ONLY,$options,'web.overview.groupid');
-
-	$_REQUEST['type'] = get_request('type',get_profile('web.overview.type',SHOW_TRIGGERS));
-	update_profile('web.overview.type',$_REQUEST['type'],PROFILE_TYPE_INT);
+	validate_group($PAGE_GROUPS, $PAGE_HOSTS);
 
 	$form = new CForm();
-	$form->SetMethod('get');
+	$form->setMethod('get');
 
-	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-	
-	if($_REQUEST['type'] == SHOW_TRIGGERS){
-		$from = ', functions f, triggers t ';
-		$where = ' AND i.itemid=f.itemid '.
-					' AND f.triggerid=t.triggerid '.
-					' AND t.status='.TRIGGER_STATUS_ENABLED;
-	}
-	else{
-		$where = $from = '';
-	}
-	
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-	
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-				' FROM groups g, hosts_groups hg, hosts h '.
-				' WHERE '.DBcondition('g.groupid',$available_groups).
-					' AND hg.groupid=g.groupid '.
-					' AND h.hostid=hg.hostid '.
-					' AND h.status='.HOST_STATUS_MONITORED.
-					' AND EXISTS( SELECT i.itemid '.
-									' FROM items i '.$from.
-									' WHERE i.hostid=h.hostid '.
-										' AND i.status='.ITEM_STATUS_ACTIVE.
-										$where.')'.
-				' ORDER BY g.name';
-
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbGroup->addItem(
-				$row['groupid'],
-				get_node_name_by_elid($row['groupid']).$row['name']
-				);
+	$available_groups = $PAGE_GROUPS['groupids'];
+
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
 	
-	$form->addItem(array(S_GROUP.SPACE,$cmbGroup,SPACE));
+	$form->addItem(array(S_GROUP.SPACE,$cmbGroups,SPACE));
 
 	$cmbType = new CComboBox('type',$_REQUEST['type'],'submit()');
 	$cmbType->addItem(SHOW_TRIGGERS,S_TRIGGERS);
@@ -131,27 +106,27 @@ if(isset($_REQUEST['select']) && ($_REQUEST['select']!='')){
 	$help_table->addOption('style', 'width: 200px');
 	
 	if($_REQUEST['type']==SHOW_TRIGGERS){
-		$help_table->AddRow(array(new CCol(SPACE, 'normal'), S_DISABLED));
+		$help_table->addRow(array(new CCol(SPACE, 'normal'), S_DISABLED));
 	}
 	
 	foreach(array(1,2,3,4,5) as $tr_severity)
-		$help_table->AddRow(array(new CCol(get_severity_description($tr_severity),get_severity_style($tr_severity)),S_ENABLED));
+		$help_table->addRow(array(new CCol(get_severity_description($tr_severity),get_severity_style($tr_severity)),S_ENABLED));
 		
-	$help_table->AddRow(array(new CCol(SPACE, 'unknown_trigger'), S_UNKNOWN));
+	$help_table->addRow(array(new CCol(SPACE, 'unknown_trigger'), S_UNKNOWN));
 	
 	if($_REQUEST['type']==SHOW_TRIGGERS){
 		$col = new CCol(SPACE, 'unknown_trigger');
-		$col->AddOption('style','background-image: url(images/gradients/blink1.gif); '.
+		$col->addOption('style','background-image: url(images/gradients/blink1.gif); '.
 			'background-position: top left; background-repeat: repeate;');
-		$help_table->AddRow(array($col, S_5_MIN));
+		$help_table->addRow(array($col, S_5_MIN));
 		$col = new CCol(SPACE, 'unknown_trigger');
-		$col->AddOption('style','background-image: url(images/gradients/blink2.gif); '.
+		$col->addOption('style','background-image: url(images/gradients/blink2.gif); '.
 			'background-position: top left; background-repeat: repeate;');
-		$help_table->AddRow(array($col, S_15_MIN));
-		$help_table->AddRow(array(new CCol(SPACE), S_NO_TRIGGER));
+		$help_table->addRow(array($col, S_15_MIN));
+		$help_table->addRow(array(new CCol(SPACE), S_NO_TRIGGER));
 	}
 	else{
-		$help_table->AddRow(array(new CCol(SPACE), S_DISABLED.' '.S_OR.' '.S_NO_TRIGGER));
+		$help_table->addRow(array(new CCol(SPACE), S_DISABLED.' '.S_OR.' '.S_NO_TRIGGER));
 	}
 
 	$help->SetHint($help_table);
@@ -162,18 +137,18 @@ if(isset($_REQUEST['select']) && ($_REQUEST['select']!='')){
 	$url = 'overview.php?fullscreen='.($_REQUEST['fullscreen']?'0':'1');
 
 	$fs_icon = new CDiv(SPACE,'fullscreen');
-	$fs_icon->AddOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
-	$fs_icon->AddAction('onclick',new CScript("javascript: document.location = '".$url."';"));
+	$fs_icon->addOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
+	$fs_icon->addAction('onclick',new CScript("javascript: document.location = '".$url."';"));
 	
 	$form_l = new CForm();
-	$form_l->SetMethod('get');
-	$form_l->AddVar('groupid',$_REQUEST['groupid']);
+	$form_l->setMethod('get');
+	$form_l->addVar('groupid',$_REQUEST['groupid']);
 		
-	$cmbStyle = new CComboBox("view_style",$_REQUEST["view_style"],"submit()");
-	$cmbStyle->AddItem(STYLE_TOP,S_TOP);
-	$cmbStyle->AddItem(STYLE_LEFT,S_LEFT);
+	$cmbStyle = new CComboBox('view_style',$_REQUEST['view_style'],'submit()');
+	$cmbStyle->addItem(STYLE_TOP,S_TOP);
+	$cmbStyle->addItem(STYLE_LEFT,S_LEFT);
 	
-	$form_l->Additem(array(S_HOSTS_LOCATION.SPACE,$cmbStyle));
+	$form_l->additem(array(S_HOSTS_LOCATION.SPACE,$cmbStyle));
 
 	$p_elements[] = get_table_header($form_l,$form);
 
@@ -181,17 +156,19 @@ if(isset($_REQUEST['select']) && ($_REQUEST['select']!='')){
 	
 ?>
 <?php
-	if($_REQUEST["type"]==SHOW_DATA){
-	
-COpt::profiling_start("get_items_data_overview");
-		$table = get_items_data_overview($_REQUEST["groupid"],$_REQUEST['view_style']);
-COpt::profiling_stop("get_items_data_overview");
+	if($_REQUEST['type']==SHOW_DATA){
+COpt::profiling_start('get_items_data_overview');
+
+		$table = get_items_data_overview($PAGE_HOSTS['hostids'],$_REQUEST['view_style']);
+		
+COpt::profiling_stop('get_items_data_overview');
 	}
-	else if($_REQUEST["type"]==SHOW_TRIGGERS){
-	
-COpt::profiling_start("get_triggers_overview");
-		$table = get_triggers_overview($_REQUEST["groupid"],$_REQUEST['view_style']);
-COpt::profiling_stop("get_triggers_overview");
+	else if($_REQUEST['type']==SHOW_TRIGGERS){
+COpt::profiling_start('get_triggers_overview');
+
+		$table = get_triggers_overview($PAGE_HOSTS['hostids'],$_REQUEST['view_style']);
+		
+COpt::profiling_stop('get_triggers_overview');
 	}
 
 	$p_elements[] = $table;
@@ -208,5 +185,5 @@ COpt::profiling_stop("get_triggers_overview");
 //	$table->Show();
 //	unset($table);
 
-include_once "include/page_footer.php";
+include_once 'include/page_footer.php';
 ?>
diff --git a/frontends/php/popup.php b/frontends/php/popup.php
index 0c8c4e7..7792706 100644
--- a/frontends/php/popup.php
+++ b/frontends/php/popup.php
@@ -34,6 +34,7 @@
 		case 'templates':
 			$page["title"] = "S_TEMPLATES_BIG";
 			$min_user_type = USER_TYPE_ZABBIX_ADMIN;
+			$templated_hosts = true;
 			break;
 		case 'hosts':
 			$page["title"] = "S_HOSTS_BIG";
@@ -171,11 +172,11 @@ include_once "include/page_header.php";
 	$srcfld1	= get_request("srcfld1", '');	// source table field [can be different from fields of source table]
 	$srcfld2	= get_request("srcfld2", null);	// second source table field [can be different from fields of source table]
 	
-	$monitored_hosts	= get_request("monitored_hosts", 0);
-	$real_hosts			= get_request("real_hosts", 0);
-	$only_hostid		= get_request("only_hostid", null);
+	$monitored_hosts	= get_request('monitored_hosts', 0);
+	$real_hosts			= get_request('real_hosts', 0);
+	$only_hostid		= get_request('only_hostid', null);
 
-	$host_status		= array();
+	$host_status = array();
 	if ($monitored_hosts)
 		array_push($host_status, HOST_STATUS_MONITORED);
 	else if ($real_hosts)
@@ -214,12 +215,12 @@ include_once "include/page_header.php";
 	if($real_hosts)
 		$frmTitle->AddVar('real_hosts', 1);
 
-	$frmTitle->AddVar("dstfrm",	$dstfrm);
-	$frmTitle->AddVar("dstfld1",	$dstfld1);
-	$frmTitle->AddVar("dstfld2",	$dstfld2);
-	$frmTitle->AddVar("srctbl",	$srctbl);
-	$frmTitle->AddVar("srcfld1",	$srcfld1);
-	$frmTitle->AddVar("srcfld2",	$srcfld2);
+	$frmTitle->addVar("dstfrm",	$dstfrm);
+	$frmTitle->addVar("dstfld1",	$dstfld1);
+	$frmTitle->addVar("dstfld2",	$dstfld2);
+	$frmTitle->addVar("srctbl",	$srctbl);
+	$frmTitle->addVar("srcfld1",	$srcfld1);
+	$frmTitle->addVar("srcfld2",	$srcfld2);
 	if(isset($_REQUEST['reference']))
 		$frmTitle->AddVar("reference",	$_REQUEST['reference']);
 
@@ -229,25 +230,31 @@ include_once "include/page_header.php";
 		unset($_REQUEST["groupid"],$_REQUEST["nodeid"]);
 	}
 	
-	$validation_param = array('allow_all_hosts','always_select_first_host');
+	$validation_param = array();
+	if($monitored_hosts) array_push($validation_param, 'monitored_hosts');
+	if($real_hosts) 	array_push($validation_param, 'real_hosts');
+	if(isset($templated_hosts)) array_push($validation_param, 'templated_hosts');
 
-	if($monitored_hosts)
-		array_push($validation_param, 'monitored_hosts');
-		
-	if($real_hosts)
-		array_push($validation_param, 'real_hosts');
-		
-	if(str_in_array($srctbl,array("graphs","screens","triggers","logitems","items"))){
-		array_push($validation_param, "always_select_first_host");
-		validate_group_with_host(PERM_READ_LIST,$validation_param);
+	$nodeid = get_request('nodeid', get_current_nodeid());
+
+	$params = array();
+	foreach($validation_param as  $option) $params[$option] = 1;
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params, $nodeid);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params, $nodeid);
+
+	if(str_in_array($srctbl, array('graphs','applications','screens','triggers','logitems','items','simple_graph','plain_text'))){
+		validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
 	}
-	else if(str_in_array($srctbl,array('hosts','templates','host_templates'))){
-		validate_group(PERM_READ_LIST,$validation_param);
+	else if(str_in_array($srctbl,array('host_group','hosts','templates','host_templates'))){
+		validate_group($PAGE_GROUPS, $PAGE_HOSTS);
 	}
-
-	$nodeid 			= get_request('nodeid', get_current_nodeid());
-	$available_hosts	= get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY,$nodeid);
-	$available_nodes	= get_accessible_nodes_by_user($USER_DETAILS,PERM_READ_LIST,PERM_RES_IDS_ARRAY);
+	
+	$groupid = 0;
+	$hostid = 0;
+	
+	$available_nodes	= get_accessible_nodes_by_user($USER_DETAILS, PERM_READ_LIST);
+	$available_groups	= $PAGE_GROUPS['groupids'];
+	$available_hosts	= $PAGE_HOSTS['hostids'];
 
 	if(isset($only_hostid)){
 		if(!isset($_REQUEST["hostid"]) || (bccomp($_REQUEST["hostid"], $only_hostid) != 0)) access_deny();
@@ -274,101 +281,70 @@ include_once "include/page_header.php";
 		unset($ok);
 
 		if(str_in_array($srctbl,array('hosts','templates','triggers','logitems','items','applications','host_templates','graphs','simple_graph','plain_text'))){
-			$groupid = get_request('groupid',get_profile('web.popup.groupid',0));
-
-			$cmbGroups = new CComboBox('groupid',$groupid,'submit()');
-			$cmbGroups->AddItem(0,S_ALL_SMALL);
-			$db_groups = DBselect('SELECT DISTINCT g.groupid,g.name '.
-								' FROM groups g, hosts_groups hg, hosts h '.
-								' WHERE '.DBin_node('g.groupid', $nodeid).
-									' AND g.groupid=hg.groupid '.
-									' AND hg.hostid=h.hostid'.
-									' AND '.DBcondition('h.hostid',$available_hosts).
-									' AND h.status in ('.implode(',', $host_status).')'.
-								' ORDER BY name');
-								
-			while($group = DBfetch($db_groups)){
-				$cmbGroups->AddItem($group["groupid"],$group["name"]);
-				if((bccomp($groupid , $group["groupid"]) == 0)) $ok = true;
+		
+			$groupid = $PAGE_GROUPS['selected'];
+			$cmbGroups = new CComboBox('groupid',$groupid,'javascript: submit();');		
+			foreach($PAGE_GROUPS['groups'] as $slct_groupid => $name){
+				$cmbGroups->addItem($slct_groupid, get_node_name_by_elid($slct_groupid).$name);
 			}
-			$frmTitle->AddItem(array(S_GROUP,SPACE,$cmbGroups));
-			update_profile("web.popup.groupid",$groupid);
-			if(!isset($ok) || $groupid == 0) unset($groupid);
-			unset($ok);
+			
+			$frmTitle->addItem(array(S_GROUP,SPACE,$cmbGroups));
+			update_profile('web.popup.groupid',$groupid);
 		}
 		
-		if(str_in_array($srctbl,array("help_items"))){
-			$itemtype = get_request("itemtype",get_profile("web.popup.itemtype",0));
-			$cmbTypes = new CComboBox("itemtype",$itemtype,"submit()");
+		if(str_in_array($srctbl,array('help_items'))){
+			$itemtype = get_request('itemtype',get_profile('web.popup.itemtype',0));
+			$cmbTypes = new CComboBox('itemtype',$itemtype,'javascript: submit();');
 			foreach($allowed_item_types as $type)
 				$cmbTypes->AddItem($type, item_type2str($type));
 			$frmTitle->AddItem(array(S_TYPE,SPACE,$cmbTypes));
 		}
-		
-		if(str_in_array($srctbl,array("triggers","logitems","items",'applications','graphs','simple_graph','plain_text'))){
-			$hostid = get_request("hostid",get_profile("web.popup.hostid",0));
-			$cmbHosts = new CComboBox("hostid",$hostid,"submit()");
-			
-			$sql = 'SELECT DISTINCT h.hostid,h.host FROM hosts h';
-			if(isset($groupid)){
-				$sql .= ',hosts_groups hg WHERE '.
-					' h.hostid=hg.hostid AND hg.groupid='.$groupid.' AND ';
-			}
-			else{
-				$sql .= ' WHERE ';
-				$cmbHosts->AddItem(0,S_ALL_SMALL);
-			}
 
-			$sql .= DBin_node('h.hostid', $nodeid).
-					' and '.DBcondition('h.hostid',$available_hosts).
-					' and h.status in ('.implode(',', $host_status).')'.
-				' order by host,h.hostid';
+		if(str_in_array($srctbl,array('triggers','logitems','items','applications','graphs','simple_graph','plain_text'))){
+			$hostid = $PAGE_HOSTS['selected'];
 
-			$db_hosts = DBselect($sql);
-			
-			while($host = DBfetch($db_hosts)){
-				$cmbHosts->AddItem($host["hostid"],$host["host"]);
-				if(bccomp($hostid , $host["hostid"]) == 0) $ok = true;
+			$cmbHosts = new CComboBox('hostid',$hostid,'javascript: submit();');
+			foreach($PAGE_HOSTS['hosts'] as $tmp_hostid => $name){
+				$cmbHosts->addItem($tmp_hostid, get_node_name_by_elid($tmp_hostid).$name);
 			}
-			
-			$frmTitle->AddItem(array(SPACE,S_HOST,SPACE,$cmbHosts));
-			update_profile("web.popup.hostid",$hostid);
-			if(!isset($ok) || $hostid == 0) unset($hostid);
-			unset($ok);
+
+			$frmTitle->addItem(array(SPACE,S_HOST,SPACE,$cmbHosts));
+			update_profile('web.popup.hostid',$hostid);
 		}
 
-		if(str_in_array($srctbl,array("triggers","hosts"))){
-			$btnEmpty = new CButton("empty",S_EMPTY,
+		if(str_in_array($srctbl,array('triggers','hosts'))){
+			$btnEmpty = new CButton('empty',S_EMPTY,
 				get_window_opener($dstfrm, $dstfld1, 0).
 				get_window_opener($dstfrm, $dstfld2, '').
 				((isset($_REQUEST['reference']) && ($_REQUEST['reference'] =='dashboard'))?"window.opener.setTimeout('add2favorites();', 1000);":'').
 				" close_window(); return false;");
 
-			$frmTitle->AddItem(array(SPACE,$btnEmpty));
+			$frmTitle->addItem(array(SPACE,$btnEmpty));
 		}
 	}
 
-	show_table_header($page["title"], $frmTitle);
+	show_table_header($page['title'], $frmTitle);
 ?>
 <?php
-	if($srctbl == "hosts"){
+	if($srctbl == 'hosts'){
 		$table = new CTableInfo(S_NO_HOSTS_DEFINED);
-		$table->SetHeader(array(S_HOST,S_DNS,S_IP,S_PORT,S_STATUS,S_AVAILABILITY));
-
-		$sql = 'SELECT DISTINCT h.* FROM hosts h';
-				
-		if(isset($groupid))
-			$sql .= ',hosts_groups hg WHERE hg.groupid='.$groupid.
-				' AND h.hostid=hg.hostid AND ';
-		else
-			$sql .= ' WHERE ';
-
-		$sql .= DBin_node('h.hostid', $nodeid).
-					' and '.DBcondition('h.hostid',$available_hosts).
-					' and h.status in ('.implode(',', $host_status).')'.
-				' order by h.host,h.hostid';
-
+		$table->setHeader(array(S_HOST,S_DNS,S_IP,S_PORT,S_STATUS,S_AVAILABILITY));
+
+		$sql_from = '';
+		$sql_where = '';
+		if($groupid>0){
+			$sql_from.= ',hosts_groups hg ';
+			$sql_where.= ' AND hg.groupid='.$groupid.
+					 ' AND h.hostid=hg.hostid ';
+		}
 
+		$sql = 'SELECT DISTINCT h.* '.
+				' FROM hosts h'.$sql_from.
+				' WHERE '.DBin_node('h.hostid', $nodeid).
+					' AND '.DBcondition('h.hostid',$available_hosts).
+					' AND h.status in ('.implode(',', $host_status).')'.
+					$sql_where.
+				' ORDER BY h.host,h.hostid';
 		$db_hosts = DBselect($sql);
 		while($host = DBfetch($db_hosts)){
 		
@@ -432,8 +408,9 @@ include_once "include/page_header.php";
 		}
 		$table->Show();
 	}
-	else if($srctbl == "templates"){
+	else if($srctbl == 'templates'){
 		$existed_templates = get_request('existed_templates', array());
+		
 		$templates = get_request('templates', array());
 		$templates = $templates + $existed_templates;
 
@@ -443,8 +420,7 @@ include_once "include/page_header.php";
 		else if(isset($_REQUEST['select'])){
 			$new_templates = array_diff($templates, $existed_templates);
 			if(count($new_templates) > 0) {
-				foreach($new_templates as $id => $name)
-				{
+				foreach($new_templates as $id => $name){
 ?>
 
 <script language="JavaScript" type="text/javascript">
@@ -473,29 +449,30 @@ include_once "include/page_header.php";
 		$table = new CTableInfo(S_NO_TEMPLATES_DEFINED);
 		$table->SetHeader(array(S_NAME));
 
-		$sql = "SELECT DISTINCT h.* from hosts h";
-		if(isset($groupid))
-			$sql .= ",hosts_groups hg where hg.groupid=".$groupid.
-				" AND h.hostid=hg.hostid AND ";
-		else
-			$sql .= " where ";
-
-		$sql .= DBin_node('h.hostid', $nodeid).
-				' AND '.DBcondition('h.hostid',$available_hosts).
-				' AND h.status='.HOST_STATUS_TEMPLATE.
-				' order by h.host,h.hostid';
-
+		$sql_from = '';
+		$sql_where = '';
+		if($groupid > 0){
+			$sql_from.= ',hosts_groups hg ';
+			$sql_where.=' AND hg.groupid='.$groupid.
+						' AND h.hostid=hg.hostid ';
+		}
+		$sql = 'SELECT DISTINCT h.* '.
+				' FROM hosts h'.$sql_from.
+				' WHERE '.DBin_node('h.hostid', $nodeid).
+					' AND '.DBcondition('h.hostid',$available_hosts).
+					' AND h.status='.HOST_STATUS_TEMPLATE.
+					$sql_where.
+				' ORDER BY h.host,h.hostid';
 		$db_hosts = DBselect($sql);
-		while($host = DBfetch($db_hosts))
-		{
-			$chk = new CCheckBox('templates['.$host["hostid"].']',isset($templates[$host["hostid"]]),
-					null,$host["host"]);
-			$chk->SetEnabled(!isset($existed_templates[$host["hostid"]]));
+		while($host = DBfetch($db_hosts)){
+			$chk = new CCheckBox('templates['.$host['hostid'].']',isset($templates[$host['hostid']]),
+					null,$host['host']);
+			$chk->setEnabled(!isset($existed_templates[$host['hostid']]));
 
-			$table->AddRow(array(
+			$table->addRow(array(
 				array(
 					$chk,
-					$host["host"])
+					$host['host'])
 				));
 
 			unset($host);
@@ -552,17 +529,20 @@ include_once "include/page_header.php";
 		$table = new CTableInfo(S_NO_TEMPLATES_DEFINED);
 		$table->SetHeader(array(S_NAME));
 
-		$sql = 'SELECT DISTINCT h.* from hosts h';
-		if(isset($groupid))
-			$sql .= ',hosts_groups hg where hg.groupid='.$groupid.
-				' AND h.hostid=hg.hostid AND ';
-		else
-			$sql .= ' WHERE ';
-
-		$sql .= DBin_node('h.hostid',$nodeid).
-					' AND h.status='.HOST_STATUS_TEMPLATE.
+		$sql_from = '';
+		$sql_where = '';
+		if($groupid > 0){
+			$sql_from.= ',hosts_groups hg ';
+			$sql_where.=' AND hg.groupid='.$groupid.
+						' AND h.hostid=hg.hostid ';
+		}
+		$sql = 'SELECT DISTINCT h.* '.
+				' FROM hosts h'.$sql_from.
+				' WHERE '.DBin_node('h.hostid', $nodeid).
 					' AND '.DBcondition('h.hostid',$available_hosts).
-				' ORDER BY h.host,h.hostid';
+					' AND h.status='.HOST_STATUS_TEMPLATE.
+					$sql_where.
+				' ORDER BY h.host,h.hostid';				
 		$db_hosts = DBselect($sql);
 		while($row = DBfetch($db_hosts)){
 			$name = new CLink($row['host'],'#','action');
@@ -576,15 +556,15 @@ include_once "include/page_header.php";
 				(isset($srcfld2) ? get_window_opener($dstfrm, $dstfld2, $row[$srcfld2]) : '');
 			}
 			
-			$name->SetAction($action." close_window(); return false;");
+			$name->setAction($action." close_window(); return false;");
 
-			$table->AddRow($name);
+			$table->addRow($name);
 		}
-		$table->Show();
+		$table->show();
 	}
 	else if($srctbl == "usrgrp"){
 		$table = new CTableInfo(S_NO_GROUPS_DEFINED);
-		$table->SetHeader(array(S_NAME));
+		$table->setHeader(array(S_NAME));
 
 		$result = DBselect('select * from usrgrp where '.DBin_node('usrgrpid').' order by name');
 		while($row = DBfetch($result)){
@@ -604,15 +584,15 @@ include_once "include/page_header.php";
 				(isset($srcfld2) ? get_window_opener($dstfrm, $dstfld2, $row[$srcfld2]) : '');
 			}
 			
-			$name->SetAction($action." close_window(); return false;");			
+			$name->setAction($action." close_window(); return false;");			
 
-			$table->AddRow($name);
+			$table->addRow($name);
 		}
-		$table->Show();
+		$table->show();
 	}
 	else if($srctbl == "users"){
 		$table = new CTableInfo(S_NO_USERS_DEFINED);
-		$table->SetHeader(array(S_NAME));
+		$table->setHeader(array(S_NAME));
 
 		$result = DBselect('select * from users where '.DBin_node('userid').' order by name');
 		while($row = DBfetch($result)){
@@ -664,8 +644,8 @@ include_once "include/page_header.php";
 		}
 		$table->Show();
 	}
-	else if($srctbl == "triggers"){
-		$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY, $nodeid);
+	else if($srctbl == 'triggers'){
+		$available_triggers = get_accessible_triggers(PERM_READ_ONLY, $available_hosts, PERM_RES_IDS_ARRAY, $nodeid);
 			
 		$table = new CTableInfo(S_NO_TRIGGERS_DEFINED);
 		$table->SetHeader(array(
@@ -675,7 +655,7 @@ include_once "include/page_header.php";
 
 		$sql = 'SELECT h.host,t.triggerid,t.description,t.expression,t.priority,t.status,count(d.triggerid_up) as dep_count '.
 				' FROM hosts h,items i,functions f, triggers t'.
-				' LEFT JOIN trigger_depends d ON d.triggerid_down=t.triggerid '.
+					' LEFT JOIN trigger_depends d ON d.triggerid_down=t.triggerid '.
 				' WHERE f.itemid=i.itemid '.
 					' AND h.hostid=i.hostid '.
 					' AND t.triggerid=f.triggerid'.
@@ -683,16 +663,16 @@ include_once "include/page_header.php";
 					' AND '.DBcondition('t.triggerid',$available_triggers).
 					' AND h.status in ('.implode(',', $host_status).')';
 
-		if(isset($hostid)) 
+		if($hostid>0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= ' GROUP BY h.host, t.triggerid, t.description, t.expression, t.priority, t.status'.
-			' ORDER BY h.host,t.description';
+				' ORDER BY h.host,t.description';
 
 		$result=DBselect($sql);
 		while($row=DBfetch($result)){			
 			$exp_desc = expand_trigger_description_by_data($row);
-			$description = new CLink($exp_desc,"#","action");
+			$description = new CLink($exp_desc,'#','action');
 			
 			if(isset($_REQUEST['reference']) && ($_REQUEST['reference'] =='dashboard')){
 				$action = get_window_opener($dstfrm, $dstfld1, $srcfld2).
@@ -750,7 +730,7 @@ include_once "include/page_header.php";
 		$table = new CTableInfo(S_NO_ITEMS_DEFINED);
 
 		$table->SetHeader(array(
-			!isset($hostid) ? S_HOST : null,
+			($hostid>0)?null:S_HOST,
 			S_DESCRIPTION,S_KEY,nbsp(S_UPDATE_INTERVAL),
 			S_STATUS));
 
@@ -759,7 +739,7 @@ include_once "include/page_header.php";
 					' WHERE i.value_type='.ITEM_VALUE_TYPE_LOG.
 						' AND h.hostid=i.hostid '.
 						' AND '.DBin_node('i.itemid', $nodeid).
-						(isset($hostid)?' AND '.$hostid.'=i.hostid ':'').
+						(($hostid>0)?' AND '.$hostid.'=i.hostid ':'').
 						' and '.DBcondition('h.hostid',$available_hosts).
 						' and h.status in ('.implode(',', $host_status).')'.
 					' ORDER BY h.host,i.description, i.key_, i.itemid');
@@ -777,7 +757,7 @@ include_once "include/page_header.php";
 			}
 
 			$table->AddRow(array(
-				!isset($hostid) ? $db_item["host"] : null,
+				($hostid>0)?null:$db_item['host'],
 				$description,
 				$db_item["key_"],
 				$db_item["delay"],
@@ -792,7 +772,7 @@ include_once "include/page_header.php";
 	{
 		$table = new CTableInfo(S_NO_GROUPS_DEFINED);
 		$table->SetHeader(array(
-			(isset($hostid) ? null : S_HOST),
+			($hostid>0)?null:S_HOST,
 			S_DESCRIPTION,
 			S_TYPE,
 			S_TYPE_OF_INFORMATION,
@@ -804,8 +784,7 @@ include_once "include/page_header.php";
 					' AND '.DBin_node('i.itemid', $nodeid).
 					' AND '.DBcondition('h.hostid',$available_hosts).
 					' AND h.status in ('.implode(',', $host_status).')';
-
-		if(isset($hostid)) 
+		if($hostid > 0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= " order by h.host, i.description, i.key_, i.itemid";
@@ -832,7 +811,7 @@ include_once "include/page_header.php";
 			$description->SetAction($action." close_window(); return false;");
 			
 			$table->AddRow(array(
-				(isset($hostid) ? null : $row['host']),
+				($hostid>0)?null:$row['host'],
 				$description,
 				item_type2str($row['type']),
 				item_value_type2str($row['value_type']),
@@ -844,7 +823,7 @@ include_once "include/page_header.php";
 	else if($srctbl == "applications"){
 		$table = new CTableInfo(S_NO_APPLICATIONS_DEFINED);
 		$table->SetHeader(array(
-			(isset($hostid) ? null : S_HOST),
+			($hostid>0)?null:S_HOST,
 			S_NAME));
 
 		$sql = 'SELECT DISTINCT h.host,a.* '.
@@ -854,7 +833,7 @@ include_once "include/page_header.php";
 					' and '.DBcondition('h.hostid',$available_hosts).
 					' and h.status in ('.implode(',', $host_status).')';
 
-		if(isset($hostid)) 
+		if($hostid>0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= " order by h.host,a.name";
@@ -875,7 +854,7 @@ include_once "include/page_header.php";
 			
 			$name->SetAction($action." close_window(); return false;");
 			
-			$table->AddRow(array(isset($hostid) ? null : $row['host'], $name));
+			$table->AddRow(array(($hostid>0)?null:$row['host'], $name));
 		}
 		$table->Show();
 	}
@@ -907,12 +886,12 @@ include_once "include/page_header.php";
 	
 		$table = new CTableInfo(S_NO_GRAPHS_DEFINED);
 		$table->SetHeader(array(
-			isset($hostid)?null:S_HOST,
+			($hostid>0)?null:S_HOST,
 			S_NAME,
 			S_GRAPH_TYPE
 		));
 		
-		$available_graphs = get_accessible_graphs(PERM_READ_ONLY, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
+		$available_graphs = get_accessible_graphs(PERM_READ_ONLY, $available_hosts, PERM_RES_IDS_ARRAY, get_current_nodeid(true));
 		$sql = 'SELECT DISTINCT g.graphid,g.name,g.graphtype,h.host '.
 			' FROM graphs g,graphs_items gi,items i,hosts h '.
 			' WHERE gi.graphid=g.graphid '.
@@ -922,7 +901,7 @@ include_once "include/page_header.php";
 				' AND h.status='.HOST_STATUS_MONITORED.
 				' AND '.DBcondition('g.graphid',$available_graphs);
 
-		if(isset($hostid)) 
+		if($hostid>0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= ' ORDER BY h.host,g.name';
@@ -961,7 +940,7 @@ include_once "include/page_header.php";
 			}
 			
 			$table->AddRow(array(
-				isset($hostid)?null:$row['host'],
+				($hostid>0)?null:$row['host'],
 				$description,
 				$graphtype
 			));
@@ -974,7 +953,7 @@ include_once "include/page_header.php";
 	
 		$table = new CTableInfo(S_NO_ITEMS_DEFINED);
 		$table->SetHeader(array(
-			(isset($hostid) ? null : S_HOST),
+			($hostid>0)?null:S_HOST,
 			S_DESCRIPTION,
 			S_TYPE,
 			S_TYPE_OF_INFORMATION,
@@ -991,7 +970,7 @@ include_once "include/page_header.php";
 					' AND '.DBin_node('i.itemid', $nodeid).
 					' AND '.DBcondition('h.hostid',$available_hosts);
 
-		if(isset($hostid)) 
+		if($hostid>0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= ' ORDER BY h.host, i.description, i.key_, i.itemid';
@@ -1018,7 +997,7 @@ include_once "include/page_header.php";
 			$description->SetAction($action.' close_window(); return false;');
 			
 			$table->AddRow(array(
-				(isset($hostid) ? null : $row['host']),
+				($hostid>0)?null:$row['host'],
 				$description,
 				item_type2str($row['type']),
 				item_value_type2str($row['value_type']),
@@ -1070,7 +1049,7 @@ include_once "include/page_header.php";
 	
 		$table = new CTableInfo(S_NO_ITEMS_DEFINED);
 		$table->SetHeader(array(
-			(isset($hostid) ? null : S_HOST),
+			($hostid>0)?null:S_HOST,
 			S_DESCRIPTION,
 			S_TYPE,
 			S_TYPE_OF_INFORMATION,
@@ -1086,7 +1065,7 @@ include_once "include/page_header.php";
 					' AND '.DBin_node('i.itemid', $nodeid).
 					' AND '.DBcondition('h.hostid',$available_hosts);
 
-		if(isset($hostid)) 
+		if($hostid>0) 
 			$sql .= ' AND h.hostid='.$hostid;
 
 		$sql .= ' ORDER BY h.host, i.description, i.key_, i.itemid';
@@ -1114,7 +1093,7 @@ include_once "include/page_header.php";
 			$description->SetAction($action.' close_window(); return false;');
 			
 			$table->AddRow(array(
-				(isset($hostid) ? null : $row['host']),
+				($hostid>0)?null:$row['host'],
 				$description,
 				item_type2str($row['type']),
 				item_value_type2str($row['value_type']),
@@ -1225,8 +1204,7 @@ include_once "include/page_header.php";
 
 		$table->Show();
 	}
-	else if($srctbl == "overview")
-	{
+	else if($srctbl == 'overview'){
 		$table = new CTableInfo(S_NO_GROUPS_DEFINED);
 		$table->SetHeader(S_NAME);
 
@@ -1238,8 +1216,7 @@ include_once "include/page_header.php";
 							' AND hg.hostid=h.hostid '.
 							' AND h.status='.HOST_STATUS_MONITORED.
 						' ORDER BY g.name');
-		while($row=DBfetch($result))
-		{
+		while($row=DBfetch($result)){
 			$row['node_name'] = isset($row['node_name']) ? '('.$row['node_name'].') ' : '';
 
 			$name = new CLink($row['name'],'#','action');			
@@ -1255,9 +1232,9 @@ include_once "include/page_header.php";
 				(isset($srcfld2) ? get_window_opener($dstfrm, $dstfld2, $row[$srcfld2]) : '');
 			}
 			
-			$name->SetAction($action." close_window(); return false;");
+			$name->setAction($action." close_window(); return false;");
 			
-			$table->AddRow($name);
+			$table->addRow($name);
 		}
 
 		$table->Show();
@@ -1266,7 +1243,7 @@ include_once "include/page_header.php";
 		$available_groups	= get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY,null,$nodeid);
 
 		$table = new CTableInfo(S_NO_GROUPS_DEFINED);
-		$table->SetHeader(array(S_NAME));
+		$table->setHeader(array(S_NAME));
 
 		$db_groups = DBselect('SELECT DISTINCT n.name as node_name,g.groupid,g.name,n.nodeid '.
 						' FROM hosts_groups hg, groups g '.
@@ -1277,8 +1254,7 @@ include_once "include/page_header.php";
 		
 		$all = false;
 		
-		while($row = DBfetch($db_groups))
-		{
+		while($row = DBfetch($db_groups)){
 			$row['node_name'] = isset($row['node_name'])?'('.$row['node_name'].') ':'';
 			
 			if(!$all){
@@ -1295,24 +1271,24 @@ include_once "include/page_header.php";
 
 				}
 				
-				$name->SetAction($action." close_window(); return false;");
+				$name->setAction($action." close_window(); return false;");
 				
-				$table->AddRow($name);
+				$table->addRow($name);
 				$all = true;
 			}
 
 			$name = new CLink($row['name'],'#','action');			
 			$row['name'] = $row['node_name'].$row['name'];
 			
-			$name->SetAction(
+			$name->setAction(
 				get_window_opener($dstfrm, $dstfld1, $row[$srcfld1]).
 				get_window_opener($dstfrm, $dstfld2, $row[$srcfld2]).
 				((isset($_REQUEST['reference']) && ($_REQUEST['reference'] =='dashboard'))?"window.opener.setTimeout('add2favorites();', 1000);":'').
 				' return close_window();');
 
-			$table->AddRow($name);
+			$table->addRow($name);
 		}
-		$table->Show();
+		$table->show();
 	}
 ?>
 <?php
diff --git a/frontends/php/popup_httpstep.php b/frontends/php/popup_httpstep.php
index 15de51f..2a4eeaa 100644
--- a/frontends/php/popup_httpstep.php
+++ b/frontends/php/popup_httpstep.php
@@ -38,8 +38,8 @@ include_once "include/page_header.php";
 	$fields=array(
 		"dstfrm"=>	array(T_ZBX_STR, O_MAND,P_SYS,	NOT_EMPTY,		null),
 
-		"sid"=>		array(T_ZBX_INT, O_OPT,  P_SYS,	BETWEEN(0,65535),	null),
-		"list_name"=>	array(T_ZBX_STR, O_OPT,  P_SYS,	NOT_EMPTY,		'isset({save})&&isset({sid})'),
+		"stepid"=>		array(T_ZBX_INT, O_OPT,  P_SYS,	BETWEEN(0,65535),	null),
+		"list_name"=>	array(T_ZBX_STR, O_OPT,  P_SYS,	NOT_EMPTY,		'isset({save})&&isset({stepid})'),
 		
 		"name"=>	array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY.KEY_PARAM(),'isset({save})'),
 		"url"=>		array(T_ZBX_STR, O_OPT,  null,	NOT_EMPTY,		'isset({save})'),
@@ -73,7 +73,7 @@ function add_var_to_opener_obj(obj,name,value)
 -->
 </script>
 <?php
-	if(isset($_REQUEST['save']) && !isset($_REQUEST['sid']))
+	if(isset($_REQUEST['save']) && !isset($_REQUEST['stepid']))
 	{
 ?>
 <script language="JavaScript" type="text/javascript">
@@ -115,40 +115,38 @@ function add_httpstep(formname,name,timeout,url,posts,required,status_codes)
 </script>
 <?php
 	}
-	if(isset($_REQUEST['save']) && isset($_REQUEST['sid']))
+	if(isset($_REQUEST['save']) && isset($_REQUEST['stepid']))
 	{
 ?>
 <script language="JavaScript" type="text/javascript">
 <!--
 
-function update_httpstep(formname,list_name,sid,name,timeout,url,posts,required,status_codes)
-{
-        var form = window.opener.document.forms[formname];
-
-        if(!form)
-        {
-                close_window();
+function update_httpstep(formname,list_name,stepid,name,timeout,url,posts,required,status_codes){
+	var form = window.opener.document.forms[formname];
+	
+	if(!form){
+		close_window();
 		return false;
-        }
+	}
 
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][name]',name);
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][timeout]',timeout);
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][url]',url);
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][posts]',posts);
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][required]',required);
-	add_var_to_opener_obj(form,list_name + '[' + sid + '][status_codes]',status_codes);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][name]',name);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][timeout]',timeout);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][url]',url);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][posts]',posts);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][required]',required);
+	add_var_to_opener_obj(form,list_name + '[' + stepid + '][status_codes]',status_codes);
 	
 	
 	form.submit();
 	close_window();
-	return true;
+return true;
 }
 
 <?php
 		echo "update_httpstep(".
 			zbx_jsvalue($_REQUEST['dstfrm']).",".
 			zbx_jsvalue($_REQUEST['list_name']).",".
-			zbx_jsvalue($_REQUEST['sid']).",".
+			zbx_jsvalue($_REQUEST['stepid']).",".
 			zbx_jsvalue($_REQUEST['name']).",".
 			zbx_jsvalue($_REQUEST['timeout']).",".
 			zbx_jsvalue($_REQUEST['url']).",".
diff --git a/frontends/php/popup_right.php b/frontends/php/popup_right.php
index f424c58..a9665c0 100644
--- a/frontends/php/popup_right.php
+++ b/frontends/php/popup_right.php
@@ -112,8 +112,8 @@ function add_right(formname,id,permission,name){
 		if(isset($db_resource['node_name']))
 			$db_resource['name'] = $db_resource['node_name'].':'.$db_resource['name'];
 
-		$name = new CLink($db_resource['name'],'#','action');
-		$name->SetAction("return add_right('".$dstfrm."','".$db_resource['id']."','".$permission."','".$db_resource['name']."');");
+		$name = new CSpan($db_resource['name'],'link');
+		$name->addAction('onclick', "return add_right('".$dstfrm."','".$db_resource['id']."','".$permission."','".$db_resource['name']."');");
 
 		$table->AddRow(array($name));
 	}
diff --git a/frontends/php/popup_users.php b/frontends/php/popup_users.php
index 2beb337..dea2a58 100644
--- a/frontends/php/popup_users.php
+++ b/frontends/php/popup_users.php
@@ -88,8 +88,8 @@ function add_user(formname,user_id,alias)
 	$result = DBselect('select * from users where '.DBin_node('userid').' order by name');
 	while($row = DBfetch($result))
 	{
-		$name = new CLink($row["alias"],"#","action");
-		$name->SetAction('return add_user("'.$dstfrm.'","'.$row['userid'].'","'.$row['alias'].'");');
+		$name = new CSpan($row["alias"],'link');
+		$name->addAction('onclick', 'javascript: return add_user("'.$dstfrm.'","'.$row['userid'].'","'.$row['alias'].'");');
 		$table->addRow(array($name, $row['name'], $row['surname'], user_type2str($row['type'])));
 	}
 	$table->show();
diff --git a/frontends/php/profile.php b/frontends/php/profile.php
index a873d8b..0e15198 100644
--- a/frontends/php/profile.php
+++ b/frontends/php/profile.php
@@ -44,7 +44,7 @@ include_once "include/page_header.php";
 		"lang"=>	array(T_ZBX_STR, O_OPT,	null,	NOT_EMPTY,	'isset({save})'),
 		"theme"=>		array(T_ZBX_STR, O_OPT,	null,	NOT_EMPTY,	'isset({save})'),
 		'autologin'=>	array(T_ZBX_INT, O_OPT,	null,	IN('0,1'),	null),
-		"autologout"=>  array(T_ZBX_INT, O_OPT, null,   BETWEEN(0,3600),'isset({save})'),
+		"autologout"=>  array(T_ZBX_INT, O_OPT, null,   BETWEEN(90,10000), null),
 		"url"=>		array(T_ZBX_STR, O_OPT,	null,	null,		'isset({save})'),
 		"refresh"=>	array(T_ZBX_INT, O_OPT,	null,	BETWEEN(0,3600),'isset({save})'),
 		"change_password"=>	array(T_ZBX_STR, O_OPT,	null,	null,	null),
diff --git a/frontends/php/report2.php b/frontends/php/report2.php
index 6498b2d..7a4ac01 100644
--- a/frontends/php/report2.php
+++ b/frontends/php/report2.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2008 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -95,32 +95,41 @@ include_once 'include/page_header.php';
 	$config = get_request('config',get_profile('web.avail_report.config',0));
 	update_profile('web.avail_report.config',$config, PROFILE_TYPE_INT);
 	
-	$options = array('always_select_first_host','with_items');
+	$params = array();
+	$options = array('allow_all_hosts','with_items');
+	if(0 == $config) array_push($options,'monitored_hosts');
+	else array_push($options,'templated_hosts');
 
-	if(isset($_REQUEST['groupid']) && (0 == $_REQUEST['groupid'])){
-		array_push($options,'allow_all_hosts');
-	}
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');	
+	foreach($options as $option) $params[$option] = 1;
 	
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+?>
+<?php
+
 	if(0 == $config){
-		array_push($options,'monitored_hosts');
+		$available_groups = $PAGE_GROUPS['groupids'];
+		$available_hosts = $PAGE_HOSTS['hostids'];
 	}
 	else{
-		array_push($options,'templated_hosts');
+		$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
+		if($PAGE_HOSTS['selected'] != 0)
+			$PAGE_HOSTS['hostids'] = $available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
+		else
+			$available_hosts = $PAGE_HOSTS['hostids'];
 	}
-		
-	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
 	
-	validate_group_with_host(PERM_READ_LIST,$options);	
-?>
-<?php
-
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,$available_hosts);
 	
-	show_report2_header($config);
+	show_report2_header($config, $PAGE_GROUPS, $PAGE_HOSTS);
 	
 	if(isset($_REQUEST['triggerid'])){
-		if(uint_in_array($_REQUEST['triggerid'], $available_triggers)){
+		if(isset($available_triggers[$_REQUEST['triggerid']])){
 			$sql = 'SELECT DISTINCT t.*, h.host, h.hostid '.
 					' FROM triggers t, functions f, items i, hosts h '.
 					' WHERE t.triggerid='.$_REQUEST['triggerid'].
@@ -142,50 +151,38 @@ include_once 'include/page_header.php';
 		show_table_header(array(new CLink($trigger_data['host'],'?hostid='.$trigger_data['hostid']),' : "',expand_trigger_description_by_data($trigger_data),'"'));
 
 		$table = new CTableInfo(null,'graph');
-		$table->AddRow(new CImg('chart4.php?triggerid='.$_REQUEST['triggerid']));
-		$table->Show();
+		$table->addRow(new CImg('chart4.php?triggerid='.$_REQUEST['triggerid']));
+		$table->show();
 	}
 	else if(isset($_REQUEST['hostid'])){
 		
-/*
-		if($_REQUEST['hostid'] > 0){
-			$row	= DBfetch(DBselect('SELECT host FROM hosts WHERE hostid='.$_REQUEST['hostid']));
-			show_table_header($row['host']);
-		}
-		else{
-			if(isset($_REQUEST['tpl_triggerid']) && ($_REQUEST['tpl_triggerid'] > 0))
-				show_table_header(expand_trigger_description($_REQUEST['tpl_triggerid']));
-			else
-				show_table_header(S_ALL_HOSTS_BIG);				
-		}
-//*/
 /************************* FILTER *************************/
 /***********************************************************/	
 		$filterForm = new CFormTable(S_FILTER);//,'events.php?filter_set=1','POST',null,'sform');
-		$filterForm->AddOption('name','zbx_filter');
-		$filterForm->AddOption('id','zbx_filter');
-		$filterForm->SetMethod('get');
+		$filterForm->addOption('name','zbx_filter');
+		$filterForm->addOption('id','zbx_filter');
+		$filterForm->setMethod('get');
 	
 		$script = new CScript("javascript: if(CLNDR['avail_report_since'].clndr.setSDateFromOuterObj()){". 
 								"$('filter_timesince').value = parseInt(CLNDR['avail_report_since'].clndr.sdt.getTime()/1000);}".
 							"if(CLNDR['avail_report_till'].clndr.setSDateFromOuterObj()){". 
 								"$('filter_timetill').value = parseInt(CLNDR['avail_report_till'].clndr.sdt.getTime()/1000);}"
 							);
-		$filterForm->AddAction('onsubmit',$script);
+		$filterForm->addAction('onsubmit',$script);
 		
-		$filterForm->AddVar('filter_timesince',($_REQUEST['filter_timesince']>0)?$_REQUEST['filter_timesince']:'');
-		$filterForm->AddVar('filter_timetill',($_REQUEST['filter_timetill']>0)?$_REQUEST['filter_timetill']:'');
+		$filterForm->addVar('filter_timesince',($_REQUEST['filter_timesince']>0)?$_REQUEST['filter_timesince']:'');
+		$filterForm->addVar('filter_timetill',($_REQUEST['filter_timetill']>0)?$_REQUEST['filter_timetill']:'');
 	//*	
 		$clndr_icon = new CImg('images/general/bar/cal.gif','calendar', 16, 12, 'pointer');
-		$clndr_icon->AddAction('onclick',"javascript: var pos = getPosition(this); pos.top+=10; pos.left+=16; CLNDR['avail_report_since'].clndr.clndrshow(pos.top,pos.left);");
+		$clndr_icon->addAction('onclick',"javascript: var pos = getPosition(this); pos.top+=10; pos.left+=16; CLNDR['avail_report_since'].clndr.clndrshow(pos.top,pos.left);");
 		
 		$filtertimetab = new CTable(null,'calendar');
-		$filtertimetab->AddOption('width','10%');
+		$filtertimetab->addOption('width','10%');
 		
-		$filtertimetab->SetCellPadding(0);
-		$filtertimetab->SetCellSpacing(0);
+		$filtertimetab->setCellPadding(0);
+		$filtertimetab->setCellSpacing(0);
 	
-		$filtertimetab->AddRow(array(
+		$filtertimetab->addRow(array(
 								S_FROM, 
 								new CNumericBox('filter_since_day',(($_REQUEST['filter_timesince']>0)?date('d',$_REQUEST['filter_timesince']):''),2),
 								'/',
@@ -200,8 +197,8 @@ include_once 'include/page_header.php';
 						));
 		zbx_add_post_js('create_calendar(null,["filter_since_day","filter_since_month","filter_since_year","filter_since_hour","filter_since_minute"],"avail_report_since");');
 	
-		$clndr_icon->AddAction('onclick',"javascript: var pos = getPosition(this); pos.top+=10; pos.left+=16; CLNDR['avail_report_till'].clndr.clndrshow(pos.top,pos.left);");
-		$filtertimetab->AddRow(array(
+		$clndr_icon->addAction('onclick',"javascript: var pos = getPosition(this); pos.top+=10; pos.left+=16; CLNDR['avail_report_till'].clndr.clndrshow(pos.top,pos.left);");
+		$filtertimetab->addRow(array(
 								S_TILL, 
 								new CNumericBox('filter_till_day',(($_REQUEST['filter_timetill']>0)?date('d',$_REQUEST['filter_timetill']):''),2),
 								'/',
@@ -220,35 +217,35 @@ include_once 'include/page_header.php';
 						'addListener($("filter_icon"),"click",CLNDR[\'avail_report_till\'].clndr.clndrhide.bindAsEventListener(CLNDR[\'avail_report_till\'].clndr));'
 						);
 		
-		$filterForm->AddRow(S_PERIOD, $filtertimetab);
+		$filterForm->addRow(S_PERIOD, $filtertimetab);
 	//*/	
-		$filterForm->AddItemToBottomRow(new CButton("filter_set",S_FILTER));
+		$filterForm->addItemToBottomRow(new CButton('filter_set',S_FILTER));
 		
-		$reset = new CButton("filter_rst",S_RESET);
-		$reset->SetType('button');
-		$reset->SetAction('javascript: var uri = new url(location.href); uri.setArgument("filter_rst",1); location.href = uri.getUrl();');
+		$reset = new CButton('filter_rst',S_RESET);
+		$reset->setType('button');
+		$reset->setAction('javascript: var uri = new url(location.href); uri.setArgument("filter_rst",1); location.href = uri.getUrl();');
 	
-		$filterForm->AddItemToBottomRow($reset);
+		$filterForm->addItemToBottomRow($reset);
 								
 		$filter = create_filter(S_FILTER,NULL,$filterForm,'tr_filter',get_profile('web.avail_report.filter.state',0));
-		$filter->Show();
+		$filter->show();
 //-------
 
 		$sql_from = '';
 		$sql_where = '';
 
 		if(0 == $config){
-			if($_REQUEST['hostid'] > 0)	
-				$sql_where.= ' AND h.hostid='.$_REQUEST['hostid'];
-		}
-		else{
 			if($_REQUEST['groupid'] > 0){
 				$sql_from .= ',hosts_groups hg ';
 				$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
 			}
 			
 			if($_REQUEST['hostid'] > 0){
-			
+				$sql_where.= ' AND h.hostid='.$_REQUEST['hostid'];
+			}
+		}
+		else{
+			if($_REQUEST['hostid'] > 0){
 				$sql_from.=',hosts_templates ht ';
 				$sql_where.=' AND ht.hostid=h.hostid AND ht.templateid='.$_REQUEST['hostid'];
 			}
@@ -270,8 +267,6 @@ include_once 'include/page_header.php';
 			' ORDER BY h.host, t.description');
 
 		
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-
 		$table = new CTableInfo();
 		$table->setHeader(
 				array(is_show_subnodes()?S_NODE : null,
diff --git a/frontends/php/report3.php b/frontends/php/report3.php
index 4b77a6c..40c7ab8 100644
--- a/frontends/php/report3.php
+++ b/frontends/php/report3.php
@@ -49,7 +49,7 @@ include_once "include/page_header.php";
 		fatal_error(S_NO_IT_SERVICE_DEFINED);
 	}
 	
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 	
 	$sql = 'SELECT s.* '.
 			' FROM services s '.
diff --git a/frontends/php/screenconf.php b/frontends/php/screenconf.php
index e7a2211..b65dab2 100644
--- a/frontends/php/screenconf.php
+++ b/frontends/php/screenconf.php
@@ -227,12 +227,20 @@ include_once "include/page_header.php";
 	show_table_header(0 == $config ? S_CONFIGURATION_OF_SCREENS_BIG : S_CONFIGURATION_OF_SLIDESHOWS_BIG, $form);
 	echo SBR;
 
+	$row_count = 0;
 	if( 0 == $config ){
 		if(isset($_REQUEST["form"])){
 			insert_screen_form();
 		}
 		else{
-			show_table_header(S_SCREENS_BIG);
+			
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');	
+			$header = get_table_header(array(S_SCREENS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);			
+			show_table_header($header);
 
 			$table = new CTableInfo(S_NO_SCREENS_DEFINED);
 			$table->SetHeader(array(
@@ -254,6 +262,7 @@ include_once "include/page_header.php";
 					$row["hsize"]." x ".$row["vsize"],
 					new CLink(S_EDIT,"screenedit.php?screenid=".$row["screenid"])
 					));
+				$row_count++;
 			}
 			$table->Show();
 		}
@@ -263,7 +272,15 @@ include_once "include/page_header.php";
 			insert_slideshow_form();
 		}
 		else{
-			show_table_header(S_SLIDESHOWS_BIG);
+			$row_count = 0;
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');	
+			$header = get_table_header(array(S_SLIDESHOWS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);			
+			show_table_header($header);
+
 
 			$table = new CTableInfo(S_NO_SLIDESHOWS_DEFINED);
 			$table->SetHeader(array(
@@ -288,11 +305,14 @@ include_once "include/page_header.php";
 					$slide_data['delay'],
 					$slide_data['cnt']
 					));
+				$row_count++;
 			}
 			$table->Show();
 		}
 
 	}
+	zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 
 include_once "include/page_footer.php";
 ?>
\ No newline at end of file
diff --git a/frontends/php/screens.php b/frontends/php/screens.php
index d67617c..ebb67b1 100644
--- a/frontends/php/screens.php
+++ b/frontends/php/screens.php
@@ -128,15 +128,15 @@ include_once 'include/page_header.php';
 	$form = new CForm();
 	$form->SetMethod('get');
 	
-	$form->AddVar('fullscreen',$_REQUEST['fullscreen']);
-	if(isset($_REQUEST['period']))	$form->AddVar('period', $_REQUEST['period']);
-	if(isset($_REQUEST['stime']))	$form->AddVar('stime', $_REQUEST['stime']);
+	$form->addVar('fullscreen',$_REQUEST['fullscreen']);
+	if(isset($_REQUEST['period']))	$form->addVar('period', $_REQUEST['period']);
+	if(isset($_REQUEST['stime']))	$form->addVar('stime', $_REQUEST['stime']);
 
 	$cmbConfig = new CComboBox('config', $config, 'submit()');
-	$cmbConfig->AddItem(0, S_SCREENS);
-	$cmbConfig->AddItem(1, S_SLIDESHOWS);
+	$cmbConfig->addItem(0, S_SCREENS);
+	$cmbConfig->addItem(1, S_SLIDESHOWS);
 
-	$form->AddItem(array(S_SHOW.SPACE,$cmbConfig));
+	$form->addItem(array(S_SHOW.SPACE,$cmbConfig));
 
 	$cmbElements = new CComboBox('elementid',$elementid,'submit()');
 	unset($screen_correct);
@@ -152,7 +152,7 @@ include_once 'include/page_header.php';
 			if(!screen_accessible($row['elementid'], PERM_READ_ONLY))
 				continue;
 
-			$cmbElements->AddItem(
+			$cmbElements->addItem(
 					$row['elementid'],
 					get_node_name_by_elid($row['elementid']).$row['name']
 					);
@@ -170,7 +170,7 @@ include_once 'include/page_header.php';
 			if(!slideshow_accessible($row['elementid'], PERM_READ_ONLY))
 				continue;
 
-			$cmbElements->AddItem(
+			$cmbElements->addItem(
 					$row['elementid'],
 					get_node_name_by_elid($row['elementid']).$row['name']
 					);
@@ -199,10 +199,10 @@ include_once 'include/page_header.php';
 	}
 
 	if(0 == $config){
-		if($cmbElements->ItemsCount() > 0) $form->AddItem(array(SPACE.S_SCREENS.SPACE,$cmbElements));
+		if($cmbElements->ItemsCount() > 0) $form->addItem(array(SPACE.S_SCREENS.SPACE,$cmbElements));
 	}
 	else{
-		if($cmbElements->ItemsCount() > 0) $form->AddItem(array(SPACE.S_SLIDESHOW.SPACE,$cmbElements));
+		if($cmbElements->ItemsCount() > 0) $form->addItem(array(SPACE.S_SLIDESHOW.SPACE,$cmbElements));
 	}
 	
 	
@@ -211,62 +211,34 @@ include_once 'include/page_header.php';
 			$_REQUEST['groupid'] = $_REQUEST['hostid'] = 0;
 		}
 		
-		$options = array('allow_all_hosts','monitored_hosts','with_items');//, 'always_select_first_host');
+		$options = array('allow_all_hosts','monitored_hosts','with_items');
 		if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
 		
-		validate_group_with_host(PERM_READ_ONLY,$options);
+		$params = array();
+		foreach($options as  $option) $params[$option] = 1;
+		$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+		$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+		validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+
+		$available_groups = $PAGE_GROUPS['groupids'];
+//		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
+		$available_hosts = $PAGE_HOSTS['hostids'];
 		
-		$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_LIST);
-		$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_LIST);
-		
-		$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
-	
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
-		$cmbHosts->AddItem(0,S_DEFAULT);
-						
-		$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g, hosts_groups hg, hosts h '.
-			' WHERE '.DBcondition('g.groupid',$available_groups).
-				' AND hg.groupid=g.groupid '.
-				' AND h.hostid=hg.hostid '.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-			' ORDER BY g.name';	
-
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem(
-					$row['groupid'],
-					get_node_name_by_elid($row['groupid']).$row['name']
-					);
-		}
-		
-		$form->AddItem(array(SPACE.S_GROUP.SPACE,$cmbGroup));
-		
-		$sql_from = '';
-		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 		}
-		$sql='SELECT DISTINCT h.hostid,h.host '.
-			' FROM hosts h '.$sql_from.
-			' WHERE '.DBcondition('h.hostid',$available_hosts).
-				$sql_where.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-			' ORDER BY h.host';
-
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem(
-					$row['hostid'],
-					get_node_name_by_elid($row['hostid']).$row['host']
-					);
+		$form->addItem(array(SPACE.S_GROUP.SPACE,$cmbGroups));
+
+
+		$PAGE_HOSTS['hosts']['0'] = S_DEFAULT;
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');		
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
-	
-		$form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));	
+		$form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+
 		$p_elements[] = get_table_header($text,$form);
 	}
 	else if(2 != $_REQUEST['fullscreen']){
@@ -322,22 +294,22 @@ include_once 'include/page_header.php';
 	if(isset($elementid) && $element ){
 		if(infavorites('web.favorite.screenids',$elementid,(0 == $config)?'screenid':'slideshowid')){
 			$icon = new CDiv(SPACE,'iconminus');
-			$icon->AddOption('title',S_REMOVE_FROM.' '.S_FAVORITES);
-			$icon->AddAction('onclick',new CScript("javascript: rm4favorites('".((0 == $config)?'screenid':'slideshowid')."','".$elementid."',0);"));
+			$icon->addOption('title',S_REMOVE_FROM.' '.S_FAVORITES);
+			$icon->addAction('onclick',new CScript("javascript: rm4favorites('".((0 == $config)?'screenid':'slideshowid')."','".$elementid."',0);"));
 		}
 		else{
 			$icon = new CDiv(SPACE,'iconplus');
-			$icon->AddOption('title',S_ADD_TO.' '.S_FAVORITES);
-			$icon->AddAction('onclick',new CScript("javascript: add2favorites('".((0 == $config)?'screenid':'slideshowid')."','".$elementid."');"));
+			$icon->addOption('title',S_ADD_TO.' '.S_FAVORITES);
+			$icon->addAction('onclick',new CScript("javascript: add2favorites('".((0 == $config)?'screenid':'slideshowid')."','".$elementid."');"));
 		}
-		$icon->AddOption('id','addrm_fav');
+		$icon->addOption('id','addrm_fav');
 		
 		$url = '?elementid='.$elementid.($_REQUEST['fullscreen']?'':'&fullscreen=1');
 		$url.=url_param('groupid').url_param('hostid');
 		
 		$fs_icon = new CDiv(SPACE,'fullscreen');
-		$fs_icon->AddOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
-		$fs_icon->AddAction('onclick',new CScript("javascript: document.location = '".$url."';"));	
+		$fs_icon->addOption('title',$_REQUEST['fullscreen']?S_NORMAL.' '.S_VIEW:S_FULLSCREEN);
+		$fs_icon->addAction('onclick',new CScript("javascript: document.location = '".$url."';"));	
 	}
 	
 	if( 2 == $_REQUEST['fullscreen']){
diff --git a/frontends/php/scripts.php b/frontends/php/scripts.php
index 2e6c676..ce53420 100644
--- a/frontends/php/scripts.php
+++ b/frontends/php/scripts.php
@@ -19,10 +19,10 @@
 **/
 ?>
 <?php
-	include_once "include/config.inc.php";
-	require_once "include/hosts.inc.php";
-	require_once "include/scripts.inc.php";
-	require_once "include/users.inc.php";
+	include_once('include/config.inc.php');
+	require_once('include/hosts.inc.php');
+	require_once('include/scripts.inc.php');
+	require_once('include/users.inc.php');
 
 	$page['title'] = "S_SCRIPTS";
 	$page['file'] = 'scripts.php';
@@ -119,6 +119,7 @@ if(isset($_REQUEST['action'])){
 	}
 }
 
+$row_count = 0;
 if(isset($_REQUEST['form'])){
 	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
 	
@@ -126,9 +127,9 @@ if(isset($_REQUEST['form'])){
 	echo SBR;
 	
 	$frmScr = new CFormTable(S_SCRIPT,'scripts.php','POST',null,'form');
-	$frmScr->AddOption('id','scripts');
+	$frmScr->addOption('id','scripts');
 	
-	if(isset($_REQUEST['scriptid'])) $frmScr->AddVar('scriptid',$_REQUEST['scriptid']);
+	if(isset($_REQUEST['scriptid'])) $frmScr->addVar('scriptid',$_REQUEST['scriptid']);
 	
 	if(!isset($_REQUEST['scriptid']) || isset($_REQUEST['form_refresh'])){
 		$name = get_request('name','');
@@ -140,7 +141,7 @@ if(isset($_REQUEST['form'])){
 		$access = get_request('access',	PERM_READ_ONLY);
 	}
 	if(isset($_REQUEST['scriptid']) && !isset($_REQUEST['form_refresh'])){
-		$frmScr->AddVar('form_refresh',get_request('form_refresh',1));
+		$frmScr->addVar('form_refresh',get_request('form_refresh',1));
 		
 		if($script = get_script_by_scriptid($_REQUEST['scriptid'])){
 			$name = $script['name'];
@@ -153,25 +154,26 @@ if(isset($_REQUEST['form'])){
 		}
 	}
 	
-	$frmScr->AddRow(S_NAME,new CTextBox('name',$name,80));
-	$frmScr->AddRow(S_COMMAND,new CTextBox('command',$command,80));
+	$frmScr->addRow(S_NAME,new CTextBox('name',$name,80));
+	$frmScr->addRow(S_COMMAND,new CTextBox('command',$command,80));
 	
 	$usr_groups = new CCombobox('usrgrpid',$usrgrpid);
-		$usr_groups->AddItem(0,S_ALL_S);
+		$usr_groups->addItem(0,S_ALL_S);
 	
 	$sql = 'SELECT DISTINCT ug.name, ug.usrgrpid '.
 			' FROM usrgrp ug '.
+				' WHERE '.DBin_node('ug.usrgrpid').
 			' ORDER BY ug.name';
 			
 	$usrgrp_result = DBselect($sql);
 	while($usr_group=DBfetch($usrgrp_result)){
-		$usr_groups->AddItem($usr_group['usrgrpid'],$usr_group['name']);
+		$usr_groups->addItem($usr_group['usrgrpid'],$usr_group['name']);
 	}
 	
-	$frmScr->AddRow(S_USER_GROUPS,$usr_groups);
+	$frmScr->addRow(S_USER_GROUPS,$usr_groups);
 		
 	$host_groups = new CCombobox('groupid',$groupid);
-		$host_groups->AddItem(0,S_ALL_S);
+		$host_groups->addItem(0,S_ALL_S);
 		
 	$sql = 'SELECT DISTINCT g.name, g.groupid '.
 			' FROM groups g '.
@@ -180,31 +182,37 @@ if(isset($_REQUEST['form'])){
 			
 	$grp_result = DBselect($sql);
 	while($group=DBfetch($grp_result)){
-		$host_groups->AddItem($group['groupid'],$group['name']);
+		$host_groups->addItem($group['groupid'],$group['name']);
 	}
 		
-	$frmScr->AddRow(S_HOST_GROUPS,$host_groups);
+	$frmScr->addRow(S_HOST_GROUPS,$host_groups);
 	
 	$select_acc = new CCombobox('access',$access);
-		$select_acc->AddItem(PERM_READ_ONLY,S_READ);
-		$select_acc->AddItem(PERM_READ_WRITE,S_WRITE);
+		$select_acc->addItem(PERM_READ_ONLY,S_READ);
+		$select_acc->addItem(PERM_READ_WRITE,S_WRITE);
 		
-	$frmScr->AddRow(S_REQUIRED_HOST.SPACE.S_PERMISSIONS_SMALL,$select_acc);
+	$frmScr->addRow(S_REQUIRED_HOST.SPACE.S_PERMISSIONS_SMALL,$select_acc);
 
-	$frmScr->AddItemToBottomRow(new CButton('save',S_SAVE,"javascript: document.getElementById('scripts').action+='?action=1'; "));
-	$frmScr->AddItemToBottomRow(SPACE);
+	$frmScr->addItemToBottomRow(new CButton('save',S_SAVE,"javascript: document.getElementById('scripts').action+='?action=1'; "));
+	$frmScr->addItemToBottomRow(SPACE);
 
-	$frmScr->AddItemToBottomRow(new CButtonCancel());
+	$frmScr->addItemToBottomRow(new CButtonCancel());
 	$frmScr->Show();
 }
 else {
 	validate_sort_and_sortorder('s.name',ZBX_SORT_UP);
 	
 	$form = new CForm();
-	$form->SetName('scripts');
-	$form->AddOption('id','scripts');
-	
-	show_table_header(S_SCRIPTS);
+	$form->setName('scripts');
+	$form->addOption('id','scripts');
+			
+	$numrows = new CSpan(null,'info');
+	$numrows->addOption('name','numrows');	
+	$header = get_table_header(array(S_SCRIPTS,
+					new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+					S_FOUND.': ',$numrows,)
+					);			
+	show_table_header($header);
 	
 	$table=new CTableInfo(S_NO_SCRIPTS_DEFINED);
 	$table->setHeader(array(
@@ -248,9 +256,10 @@ else {
 			$host_group_name,
 			((PERM_READ_WRITE == $script['host_access'])?S_WRITE:S_READ)
 			));
+		$row_count++;
 	}
 	$qbutton = new CButtonQMessage('delete',S_DELETE_SELECTED,S_DELETE_SELECTED_SCRIPTS_Q,'1');
-	$qbutton->SetAction("javascript: document.getElementById('scripts').action+='?action=1';");
+	$qbutton->setAction("javascript: document.getElementById('scripts').action+='?action=1';");
 	
 	$tr = new CCol(
 				array(
@@ -260,12 +269,14 @@ else {
 				)
 			);
 	
-	$table->SetFooter($tr);
+	$table->setFooter($tr);
 	
-	$form->AddItem($table);
+	$form->addItem($table);
 	$form->show();
+	zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 }
 ?>
 <?php
-include_once "include/page_footer.php";
+include_once('include/page_footer.php');
 ?>
diff --git a/frontends/php/services.php b/frontends/php/services.php
index ad888b7..8369dcd 100644
--- a/frontends/php/services.php
+++ b/frontends/php/services.php
@@ -60,7 +60,7 @@ include_once "include/page_header.php";
 
 //--------------------------------------------------------------------------
 
-$available_triggers = get_accessible_triggers(PERM_READ_ONLY, PERM_RES_IDS_ARRAY);
+$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 
 $query = 'SELECT DISTINCT s.serviceid, sl.servicedownid, sl_p.serviceupid as serviceupid, s.triggerid, '.
 		' s.name as caption, s.algorithm, t.description, t.expression, s.sortorder, sl.linkid, s.showsla, s.goodsla, s.status '.
diff --git a/frontends/php/services_form.php b/frontends/php/services_form.php
index 64c5bb8..fcb55a8 100644
--- a/frontends/php/services_form.php
+++ b/frontends/php/services_form.php
@@ -89,7 +89,7 @@ include_once "include/page_header.php";
 //----------------------------------------------------------------------
 
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 
 	if(isset($_REQUEST['serviceid']) && $_REQUEST['serviceid'] > 0){
 		$sql = 'SELECT s.* '.
diff --git a/frontends/php/setup.php b/frontends/php/setup.php
index d09f7bb..72749d1 100644
--- a/frontends/php/setup.php
+++ b/frontends/php/setup.php
@@ -54,12 +54,12 @@ if(!defined("PAGE_HEADER_LOADED"))
 		"nodename"=>		array(T_ZBX_STR, O_OPT,	null,	NOT_EMPTY,		null),
 		"nodeid"=>		array(T_ZBX_INT, O_OPT,	null,	BETWEEN(0,999),		null),
 /* actions */
-		"save_config"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"retry"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"cancel"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"finish"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"next"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"back"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
+		"save_config"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		"retry"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		"cancel"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		"finish"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		"next"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		"back"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
 /* other */
 		"form"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
 		"form_refresh"=>	array(T_ZBX_INT, O_OPT,	NULL,	NULL,	NULL)
diff --git a/frontends/php/srv_status.php b/frontends/php/srv_status.php
index cae2c1e..3ee59e7 100644
--- a/frontends/php/srv_status.php
+++ b/frontends/php/srv_status.php
@@ -68,7 +68,7 @@ include_once "include/page_header.php";
         }
 
 	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array(), PERM_RES_IDS_ARRAY);
 
 	if(isset($_REQUEST["serviceid"]) && $_REQUEST["serviceid"] > 0){
 		$sql = 'SELECT s.serviceid '.
@@ -169,7 +169,7 @@ include_once "include/page_header.php";
 				
 
 				$stat = calculate_service_availability($row["serviceid"],$period_start,$period_end);
-				
+
 				if($row["goodsla"] > $stat["ok"]){
 					$sla_style='red';
 				} 
@@ -177,7 +177,7 @@ include_once "include/page_header.php";
 					$sla_style='green';
 				}
 				
-				$row['sla2'] = array(new CSpan(round($row["goodsla"],3),'green'),'/', new CSpan(round($stat["ok"],3),$sla_style));
+				$row['sla2'] = array(new CSpan(sprintf("%.2f",$row['goodsla']),'green'),'/', new CSpan(sprintf("%.2f",$stat['ok']),$sla_style));
 			} 
 			else {
 				$row['sla']= "-";
diff --git a/frontends/php/styles/bar.css b/frontends/php/styles/bar.css
deleted file mode 100644
index 9a454b9..0000000
--- a/frontends/php/styles/bar.css
+++ /dev/null
@@ -1,188 +0,0 @@
-/* CSS Document */
-/*
-** ZABBIX
-** Copyright (C) 2000-2007 SIA Zabbix
-**
-** This program is free software; you can redistribute it and/or modify
-** it under the terms of the GNU General Public License as published by
-** the Free Software Foundation; either version 2 of the License, or
-** (at your option) any later version.
-**
-** This program is distributed in the hope that it will be useful,
-** but WITHOUT ANY WARRANTY; without even the implied warranty of
-** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-** GNU General Public License for more details.
-**
-** You should have received a copy of the GNU General Public License
-** along with this program; if not, write to the Free Software
-** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-**
-*/
-div.scrollx{
-	overflow:auto;
-	height:18px;
-}
-
-div.scrolly{
-	overflow:auto;
-	width:20px;
-}
-
-div.sdi{
-	position:absolute;
-	right:	2px;
-	top:	2px;
-	width:	200px;
-	height: 100px;
-	border: red 1px solid;
-	overflow:auto;
-}
-
-img.bar_arrow{
-	display: none;
-	position: relative;
-	z-index: 10;
-}
-
-div#scroll{
-	position:absolute;
-/*	display:none; */
-	height:17px;
-}
-
-img#scroll_calendar{
-	position: absolute;
-	top: -12px;
-	left: 0px;	
-}
-
-img#scroll_calendar:hover{
-	cursor: pointer;
-}
-
-div#scrolltableft{
-	position:absolute;
-	top: -15px;
-	left: 18px;
-	font-family:Verdana, Arial, Helvetica, sans-serif;
-	font-size:10px;
-	font-weight:bold;
-/*	background-color:#FFF; */
-}
-
-div#scrolltabright{
-	position:absolute;
-	top: -15px;
-	right: 0px;
-	font-family:Verdana, Arial, Helvetica, sans-serif;
-	font-size:10px;	
-	font-weight:bold;
-/*	background-color:#FFF; */
-}
-
-div#scroll_left{
-	background-image: url(../images/general/bar/left.gif); 
-	background-repeat:no-repeat; 
-	width:17px; 
-	height: 17px; 
-	float: left;
-}
-
-div#scroll_left:hover{
-	cursor:pointer;
-}
-
-div#scroll_right{
-	background-image: url(../images/general/bar/right.gif); 
-	background-repeat:no-repeat; 
-	width:17px; 
-	height: 17px; 
-	float: left;
-}
-
-div#scroll_right:hover{
-	cursor:pointer;
-}
-
-div#scroll_middle{
-	background-image: url(../images/general/bar/bg.gif); 
-	height: 17px; 
-	float: left;
-}
-
-div#scroll_bar{
-	position: absolute; 
-	bottom: 0px; 
-	left: 17px;
-}
-
-div#scroll_bar:hover{
-	cursor:pointer;
-}
-
-
-div#arrow_l{
-	position:absolute;
-	bottom: 0px;
-	display:none;
-	background-image:url(../images/general/bar/arrow_l.gif); 
-	background-repeat:no-repeat; 
-	width: 12px; 
-	height:17px;
-}
-
-div#arrow_l:hover{
-	cursor:pointer;
-}
-
-div#arrow_r{
-	position:absolute;
-	bottom: 0px;
-	display:none;
-	background-image:url(../images/general/bar/arrow_r.gif); 
-	background-repeat:no-repeat; 
-	width: 12px; 
-	height:17px;
-}
-
-div#arrow_r:hover{
-	cursor:pointer;
-}
-
-div#bar_left{
-	background-image: url(../images/general/bar/bar_left.gif); 
-	background-repeat:no-repeat; 
-	width:2px; 
-	height: 17px; 
-	float: left;
-}
-
-div#bar_bg_l{
-	background-image: url(../images/general/bar/bar_bg.gif); 
-	width:26px; 
-	height: 17px; 
-	float: left;
-}
-
-div#bar_middle{
-	background-image: url(../images/general/bar/bar_middle.gif); 
-	background-repeat:no-repeat; 
-	width:8px; 
-	height: 17px; 
-	float: left;
-}
-
-div#bar_bg_r{
-	background-image: url(../images/general/bar/bar_bg.gif); 
-	width:26px; 
-	height: 17px; 
-	float: left;
-}
-
-div#bar_right{
-	background-image: url(../images/general/bar/bar_right.gif); 
-	background-repeat:no-repeat; 
-	width:2px; 
-	height: 17px; 
-	float: left;
-}
\ No newline at end of file
diff --git a/frontends/php/styles/blocks.css b/frontends/php/styles/blocks.css
new file mode 100644
index 0000000..b95be6b
--- /dev/null
+++ b/frontends/php/styles/blocks.css
@@ -0,0 +1,617 @@
+/* CSS Document */
+/*
+** ZABBIX
+** Copyright (C) 2000-2007 SIA Zabbix
+**
+** This program is free software; you can redistribute it and/or modify
+** it under the terms of the GNU General Public License as published by
+** the Free Software Foundation; either version 2 of the License, or
+** (at your option) any later version.
+**
+** This program is distributed in the hope that it will be useful,
+** but WITHOUT ANY WARRANTY; without even the implied warranty of
+** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+** GNU General Public License for more details.
+**
+** You should have received a copy of the GNU General Public License
+** along with this program; if not, write to the Free Software
+** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+**
+*/
+
+/************************************************************/
+/*					SCROLLBAR STYLES						*/
+/************************************************************/
+
+div.scrollx{
+	overflow:auto;
+	height:18px;
+}
+
+div.scrolly{
+	overflow:auto;
+	width:20px;
+}
+
+div.sdi{
+	position:absolute;
+	right:	2px;
+	top:	2px;
+	width:	200px;
+	height: 100px;
+	border: red 1px solid;
+	overflow:auto;
+}
+
+img.bar_arrow{
+	display: none;
+	position: relative;
+	z-index: 10;
+}
+
+div#scroll{
+	position:absolute;
+/*	display:none; */
+	height:17px;
+}
+
+img#scroll_calendar{
+	position: absolute;
+	top: -12px;
+	left: 0px;	
+}
+
+img#scroll_calendar:hover{
+	cursor: pointer;
+}
+
+div#scrolltableft{
+	position:absolute;
+	top: -15px;
+	left: 18px;
+	font-family:Verdana, Arial, Helvetica, sans-serif;
+	font-size:10px;
+	font-weight:bold;
+/*	background-color:#FFF; */
+}
+
+div#scrolltabright{
+	position:absolute;
+	top: -15px;
+	right: 0px;
+	font-family:Verdana, Arial, Helvetica, sans-serif;
+	font-size:10px;	
+	font-weight:bold;
+/*	background-color:#FFF; */
+}
+
+div#scroll_left{
+	background-image: url(../images/general/bar/left.gif); 
+	background-repeat:no-repeat; 
+	width:17px; 
+	height: 17px; 
+	float: left;
+}
+
+div#scroll_left:hover{
+	cursor:pointer;
+}
+
+div#scroll_right{
+	background-image: url(../images/general/bar/right.gif); 
+	background-repeat:no-repeat; 
+	width:17px; 
+	height: 17px; 
+	float: left;
+}
+
+div#scroll_right:hover{
+	cursor:pointer;
+}
+
+div#scroll_middle{
+	background-image: url(../images/general/bar/bg.gif); 
+	height: 17px; 
+	float: left;
+}
+
+div#scroll_bar{
+	position: absolute; 
+	bottom: 0px; 
+	left: 17px;
+}
+
+div#scroll_bar:hover{
+	cursor:pointer;
+}
+
+
+div#arrow_l{
+	position:absolute;
+	bottom: 0px;
+	display:none;
+	background-image:url(../images/general/bar/arrow_l.gif); 
+	background-repeat:no-repeat; 
+	width: 12px; 
+	height:17px;
+}
+
+div#arrow_l:hover{
+	cursor:pointer;
+}
+
+div#arrow_r{
+	position:absolute;
+	bottom: 0px;
+	display:none;
+	background-image:url(../images/general/bar/arrow_r.gif); 
+	background-repeat:no-repeat; 
+	width: 12px; 
+	height:17px;
+}
+
+div#arrow_r:hover{
+	cursor:pointer;
+}
+
+div#bar_left{
+	background-image: url(../images/general/bar/bar_left.gif); 
+	background-repeat:no-repeat; 
+	width:2px; 
+	height: 17px; 
+	float: left;
+}
+
+div#bar_bg_l{
+	background-image: url(../images/general/bar/bar_bg.gif); 
+	width:26px; 
+	height: 17px; 
+	float: left;
+}
+
+div#bar_middle{
+	background-image: url(../images/general/bar/bar_middle.gif); 
+	background-repeat:no-repeat; 
+	width:8px; 
+	height: 17px; 
+	float: left;
+}
+
+div#bar_bg_r{
+	background-image: url(../images/general/bar/bar_bg.gif); 
+	width:26px; 
+	height: 17px; 
+	float: left;
+}
+
+div#bar_right{
+	background-image: url(../images/general/bar/bar_right.gif); 
+	background-repeat:no-repeat; 
+	width:2px; 
+	height: 17px; 
+	float: left;
+}
+
+
+/************************************************************/
+/*						GMENU STYLES						*/
+/************************************************************/
+
+
+img{
+	border: 0px;
+}
+
+img#gmenu_day_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 28px;
+}
+img#gmenu_day_up:hover{
+	cursor:pointer;
+}
+
+img#gmenu_month_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 100px;
+}
+img#gmenu_month_up:hover{
+	cursor:pointer;
+}
+
+
+img#gmenu_year_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 152px;
+}
+img#gmenu_year_up:hover{
+	cursor:pointer;
+}
+
+
+img#gmenu_day_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 28px;
+}
+
+img#gmenu_day_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_month_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 100px;
+}
+img#gmenu_month_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_year_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 152px;
+}
+img#gmenu_year_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_hour_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 196px;
+}
+img#gmenu_hour_up:hover{
+	cursor:pointer;
+}
+
+img#gmenu_minute_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 230px;
+}
+img#gmenu_minute_up:hover{
+	cursor:pointer;
+}
+
+img#gmenu_hour_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 196px;
+}
+img#gmenu_hour_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_minute_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 230px;
+}
+img#gmenu_minute_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_period_v_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 82px;
+}
+img#gmenu_period_v_up:hover{
+	cursor:pointer;
+}
+
+img#gmenu_period_t_up{
+	position:absolute;
+	text-align:center;
+	top: 10px;
+	left: 154px;
+}
+img#gmenu_period_t_up:hover{
+	cursor:pointer;
+}
+
+img#gmenu_period_v_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 82px;
+}
+img#gmenu_period_v_down:hover{
+	cursor:pointer;
+}
+
+img#gmenu_period_t_down{
+	position:absolute;
+	text-align:center;
+	top: 23px;
+	left: 154px;
+}
+img#gmenu_period_t_down:hover{
+	cursor:pointer;
+}
+
+a#gmenu_load:link{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 9px;
+	font-weight:bold;
+	top: 50px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_load:visited{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 50px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_load:hover{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#CFCFCF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 50px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_load:active{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 50px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_hide:link{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 72px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_hide:visited{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 72px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_hide:hover{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#CFCFCF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 72px;
+	left: 175px;
+	width: 72px;
+}
+
+a#gmenu_hide:active{
+	position:absolute;
+	border:#666666 1px solid;
+	background-color:#FFFFFF;
+	text-align:center;
+	text-decoration:none;
+	color:#333333;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	font-weight:bold;
+	top: 72px;
+	left: 175px;
+	width: 72px;
+}
+
+div#gmenu{
+	position:absolute;
+	background-color:#EFEFFF;
+	border:#3333FF 1px solid;
+	width: 254px;
+	height: 94px;
+}
+
+
+div#gmenu_bsdate{
+	position: absolute;
+	border:1px #888888 dashed;
+	top: 3px;
+	left: 4px;
+	height: 38px;
+	width: 244px;
+}
+
+div#gmenu_period{
+	position: absolute;
+	border:1px #888888 dashed;
+	top: 50px;
+	left: 4px;
+	height: 38px;
+	width: 166px;
+}
+
+span#gmenu_day{
+	position:absolute;
+	text-align:center;;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 6px;
+	width: 20px;
+}
+
+span#gmenu_month{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 38px;
+	width: 60px;
+}
+
+span#gmenu_year{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 110px;
+	width: 40px;
+}
+
+span#gmenu_hour{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 174px;
+	width: 20px;
+}
+
+span#gmenu_minute{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 208px;
+	width: 20px;
+}
+
+span#gmenu_period_desc{
+	position:absolute;
+	text-align:left;
+	font-weight:bold;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 13px;
+	color:#3F3F3F;
+	top: 10px;
+	left: 6px;
+	width: 48px;
+}
+
+span#gmenu_period_value{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 52px;
+	width: 28px;
+}
+
+span#gmenu_period_type{
+	position:absolute;
+	text-align:center;
+	font-family:Arial, Helvetica, sans-serif;
+	font-size: 11px;
+	border:#666666 1px solid;
+	top: 10px;
+	left: 100px;
+	width: 52px;
+}
+
+/************************************************************/
+/*						SBOX STYLES							*/
+/************************************************************/
+
+div#selection_box{
+	position: absolute;
+	
+	-moz-opacity:.40;
+	filter:alpha(opacity=40);
+	opacity:.40;
+	background-color:#0000FF;
+	border:1px black solid;
+	width: 1px;
+	height: 1px;
+	z-index: 4;
+	overflow:hidden;
+}
+
+div.box_on{
+	position: absolute;
+/*	border: 1px red solid;
+/*	background-color:#FF0000;*/
+	z-index:2;
+}
+
+span#period_span{
+	font-weight: bold; 
+	font-size: 11px; 
+	color: #FFFFFF; 
+	position: absolute; 
+	top: 2px; 
+	right: 4px;
+	text-decoration:none;
+}
\ No newline at end of file
diff --git a/frontends/php/styles/css_bb.css b/frontends/php/styles/css_bb.css
index 3e91d3f..a61cd6f 100644
--- a/frontends/php/styles/css_bb.css
+++ b/frontends/php/styles/css_bb.css
@@ -10,6 +10,7 @@
 @media screen {
 	body{
 		background-color:#353535;
+		color: #0088FF;
 	} 
 }
 
@@ -113,6 +114,10 @@ A.styled:active 	{	color:#0BF;	 }
 
 
 /*////////////////	TABLES	////////////////////*/
+table{
+	color: #000000;
+}
+
 table.page_header tr td.page_header_r{
 /*
 	background-position:right;
@@ -159,15 +164,16 @@ td.form_row_r_simple { /* right cell simple */
 	border-color: #222; 
 }
 
-table.formlongtable tr td.form_row_first
-{
+table.formlongtable tr td.form_row_first{
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
 	border-color: #222; 
 }
+
 table.formlongtable tr td.form_row_last {
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
 	border-color: #222; 
 }
+
 table.formlongtable tr td.form_row_l { /* left cell */
 	border-color:	#222;
 }
@@ -183,7 +189,9 @@ table.tabletree tr.footer td {
 }
 
 table.tableinfo{
+	border-spacing: 1px; 
 	background-color: #5A5A5A;
+	border: 0px #5A5A5A solid; 
 }
 
 table.tableinfo tr td.normal			{	background-color: #AADDDD;	border: 1px #AADDDD solid; }
@@ -201,6 +209,12 @@ table.tableinfo tr.footer td {
 table.header{
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
 }
+table.header tr td.header_l{
+	height: 24px;
+}
+table.header tr td.header_r{
+	height: 24px;
+}
 
 table.filter{
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
@@ -238,11 +252,18 @@ table.hosts_info tr td.header {
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
 }
 
+table.server_info{
+	border: 1px #555555 solid;
+}
 
 table.server_info tr td.header {
 	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
 }
 
+table.server_info tr.footer td {
+	background: #5C7099 url('../images/gradients/table_head2_bb.gif') repeat-x top left;
+}
+
 table.history td.caption{
 	color:#0AF;
 }
@@ -252,13 +273,30 @@ table.msgok{
 	border: 1px #0088FF solid;
 }
 
-table.msgok td.clr{
+table.msgok tr td.clr{
 	background-color:#0088FF;
 }
 
-table.msgok td.msg{
+table.msgok tr td.msg{
 	background-color:#BBBBFF;
 }
+
+/*  SCREENS */
+table.screen_edit{
+	background-color: #333333;
+}
+
+table.screen_edit td{
+	background-color: #333333;
+}
+
+table.screen_view{
+	background-color: #333333;
+}
+
+table.screen_view td{
+	background-color: #333333;
+}
 /*----------*/
 
 /*////////////////	DIVS	////////////////////*/
@@ -319,7 +357,11 @@ div#scrolltabright{
 }
 
 span.green{
-	color:		#0088FF;
+	color:	#0088FF;
+}
+
+span.info{
+	color:	#0088FF;
 }
 
 /*////////////////	FORMS	////////////////////*/
diff --git a/frontends/php/styles/div.css b/frontends/php/styles/div.css
index 073b3af..868e09a 100644
--- a/frontends/php/styles/div.css
+++ b/frontends/php/styles/div.css
@@ -33,11 +33,11 @@ div.warning{
 
 div.onajaxload{
 	position: absolute;
-	background-color:#000000; 
-	
+	background-color:#000000;
+
 	filter:alpha(opacity=05);
 	opacity:.05;
-	
+
 	cursor:wait;
 	z-index: 50;
 }
@@ -143,7 +143,7 @@ div.filteropened{
 	background-repeat:no-repeat;
 }
 
-div.filteropened:hover{         
+div.filteropened:hover{
 	cursor:pointer;
 }
 
@@ -186,14 +186,23 @@ span.footer_sign{
 	padding-left: 5px;
 }
 
-span.divider{	
-	color: #000000;	
-	font-family: Verdana, Arial, sans-serif; 
-	font-size: 10px; 
+span.divider{
+	color: #000000;
+	font-family: Verdana, Arial, sans-serif;
+	font-size: 10px;
 	font-weight: normal;
 }
 
 /********** REQUIREMENTS TABLE *************/
+span.link{
+	color:#333399;
+	cursor: pointer;
+}
+
+span.link:hover{
+	text-decoration: underline;
+}
+
 span.ok{
 	white-space: normal;
 	color:		#00AA00;
@@ -215,4 +224,9 @@ span.red{
 
 span.orange{
 	color:		#EE6000;
+}
+
+span.info{
+	font-weight: bold;
+	color:#DDDDDD;
 }
\ No newline at end of file
diff --git a/frontends/php/styles/gmenu.css b/frontends/php/styles/gmenu.css
deleted file mode 100644
index 156fb4c..0000000
--- a/frontends/php/styles/gmenu.css
+++ /dev/null
@@ -1,384 +0,0 @@
-@charset "utf-8";
-/* CSS Document */
-img{
-	border: 0px;
-}
-
-img#gmenu_day_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 28px;
-}
-img#gmenu_day_up:hover{
-	cursor:pointer;
-}
-
-img#gmenu_month_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 100px;
-}
-img#gmenu_month_up:hover{
-	cursor:pointer;
-}
-
-
-img#gmenu_year_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 152px;
-}
-img#gmenu_year_up:hover{
-	cursor:pointer;
-}
-
-
-img#gmenu_day_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 28px;
-}
-
-img#gmenu_day_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_month_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 100px;
-}
-img#gmenu_month_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_year_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 152px;
-}
-img#gmenu_year_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_hour_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 196px;
-}
-img#gmenu_hour_up:hover{
-	cursor:pointer;
-}
-
-img#gmenu_minute_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 230px;
-}
-img#gmenu_minute_up:hover{
-	cursor:pointer;
-}
-
-img#gmenu_hour_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 196px;
-}
-img#gmenu_hour_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_minute_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 230px;
-}
-img#gmenu_minute_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_period_v_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 82px;
-}
-img#gmenu_period_v_up:hover{
-	cursor:pointer;
-}
-
-img#gmenu_period_t_up{
-	position:absolute;
-	text-align:center;
-	top: 10px;
-	left: 154px;
-}
-img#gmenu_period_t_up:hover{
-	cursor:pointer;
-}
-
-img#gmenu_period_v_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 82px;
-}
-img#gmenu_period_v_down:hover{
-	cursor:pointer;
-}
-
-img#gmenu_period_t_down{
-	position:absolute;
-	text-align:center;
-	top: 23px;
-	left: 154px;
-}
-img#gmenu_period_t_down:hover{
-	cursor:pointer;
-}
-
-a#gmenu_load:link{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 9px;
-	font-weight:bold;
-	top: 50px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_load:visited{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 50px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_load:hover{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#CFCFCF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 50px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_load:active{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 50px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_hide:link{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 72px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_hide:visited{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 72px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_hide:hover{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#CFCFCF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 72px;
-	left: 175px;
-	width: 72px;
-}
-
-a#gmenu_hide:active{
-	position:absolute;
-	border:#666666 1px solid;
-	background-color:#FFFFFF;
-	text-align:center;
-	text-decoration:none;
-	color:#333333;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	font-weight:bold;
-	top: 72px;
-	left: 175px;
-	width: 72px;
-}
-
-div#gmenu{
-	position:absolute;
-	background-color:#EFEFFF;
-	border:#3333FF 1px solid;
-	width: 254px;
-	height: 94px;
-}
-
-
-div#gmenu_bsdate{
-	position: absolute;
-	border:1px #888888 dashed;
-	top: 3px;
-	left: 4px;
-	height: 38px;
-	width: 244px;
-}
-
-div#gmenu_period{
-	position: absolute;
-	border:1px #888888 dashed;
-	top: 50px;
-	left: 4px;
-	height: 38px;
-	width: 166px;
-}
-
-span#gmenu_day{
-	position:absolute;
-	text-align:center;;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 6px;
-	width: 20px;
-}
-
-span#gmenu_month{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 38px;
-	width: 60px;
-}
-
-span#gmenu_year{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 110px;
-	width: 40px;
-}
-
-span#gmenu_hour{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 174px;
-	width: 20px;
-}
-
-span#gmenu_minute{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 208px;
-	width: 20px;
-}
-
-span#gmenu_period_desc{
-	position:absolute;
-	text-align:left;
-	font-weight:bold;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 13px;
-	color:#3F3F3F;
-	top: 10px;
-	left: 6px;
-	width: 48px;
-}
-
-span#gmenu_period_value{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 52px;
-	width: 28px;
-}
-
-span#gmenu_period_type{
-	position:absolute;
-	text-align:center;
-	font-family:Arial, Helvetica, sans-serif;
-	font-size: 11px;
-	border:#666666 1px solid;
-	top: 10px;
-	left: 100px;
-	width: 52px;
-}
\ No newline at end of file
diff --git a/frontends/php/styles/link.css b/frontends/php/styles/link.css
index 01bf71e..428f1d7 100644
--- a/frontends/php/styles/link.css
+++ b/frontends/php/styles/link.css
@@ -1,9 +1,9 @@
 /* CSS Document */
 A {font-family:Verdana, Arial, Helvetica, sans-serif;font-size:8pt;}
 
-a.highlight { font-family: Verdana, Arial, sans-serif;	font-size:10px; 	font-weight: bold; }
+a.highlight 		{	font-family: Verdana, Arial, sans-serif;	font-size:10px; 	font-weight: bold; }
 a.highlight:link 	{ 	text-decoration: none;		color: #ffffff; }
-a.highlight:visited 	{	text-decoration: none;		color: #ffffff; }
+a.highlight:visited {	text-decoration: none;		color: #ffffff; }
 a.highlight:hover	{	text-decoration: underline;	color: #ffcc00; }
 
 A.enabled:link		{	color:#00AA00;	text-decoration: none; }
diff --git a/frontends/php/styles/sbox.css b/frontends/php/styles/sbox.css
deleted file mode 100644
index 2802c7a..0000000
--- a/frontends/php/styles/sbox.css
+++ /dev/null
@@ -1,33 +0,0 @@
-@charset "utf-8";
-/* CSS Document */
-
-div#selection_box{
-	position: absolute;
-	
-	-moz-opacity:.40;
-	filter:alpha(opacity=40);
-	opacity:.40;
-	background-color:#0000FF;
-	border:1px black solid;
-	width: 1px;
-	height: 1px;
-	z-index: 4;
-	overflow:hidden;
-}
-
-div.box_on{
-	position: absolute;
-/*	border: 1px red solid;
-/*	background-color:#FF0000;*/
-	z-index:2;
-}
-
-span#period_span{
-	font-weight: bold; 
-	font-size: 11px; 
-	color: #FFFFFF; 
-	position: absolute; 
-	top: 2px; 
-	right: 4px;
-	text-decoration:none;
-}
\ No newline at end of file
diff --git a/frontends/php/styles/table.css b/frontends/php/styles/table.css
index bcc188f..b5e15e7 100644
--- a/frontends/php/styles/table.css
+++ b/frontends/php/styles/table.css
@@ -370,15 +370,13 @@ table.screen_edit tr td.right_top {	text-align: right;	vertical-align: top;		}
 table.screen_edit tr td.right_mdl {	text-align: right;	vertical-align: middle;		}
 table.screen_edit tr td.right_bttm {	text-align: right;	vertical-align: bottom;		}
 
-table.screen_view
-{
+table.screen_view{
 	background-color: #FFFFFF;
 	width: 100%;
 	border: 1px #DDDDDD;
 }
 
-table.screen_view td
-{
+table.screen_view td{
 	background-color: #FFFFFF;
 	border: 1px #DDDDDD;
 	text-align: center;
@@ -476,8 +474,9 @@ table.tableinfo{
 	color: #000000;
 	width: 100%; 
 	background-color: #AAAAAA;
-	border-spacing:	1px; /* cellspacing */
-	border-width: 0px;
+	border-spacing: 1px; 
+
+/*	border: 1px #AAAAAA dotted; */
 }
 
 table.tableinfo tr td {
@@ -620,8 +619,7 @@ table.header tr td.header_r{
 	padding-right: 5px;
 }
 
-table.header a
-{
+table.header a{
 	color: #FFFFFF;
 }
 
@@ -766,15 +764,18 @@ table.menu{
 }
 
 table.menu tr{
-	font-family:verdana, arial, helvetica, sans-serif;
-	font-size:10px;
 	background: #AAAAAA url('../images/gradients/menu_not_active.gif') repeat-x top left;
 	padding-right: 5px;
 	padding-left: 5px;
 }
 
 table.menu td{
-	border-color: #AAAAAA;
+	color: #ffffff;
+	font-family: verdana, arial, helvetica, sans-serif;
+	font-size:10px;
+	font-weight: bold;
+
+	border-color: #aaaaaa;
 	border-width:1px;
 	border-top-style: solid;
 	border-left-style: solid;
@@ -782,10 +783,13 @@ table.menu td{
 	border-bottom-style: solid;
 }
 
+table.menu tr td:hover{
+	cursor: pointer; 
+}
+
 table.menu tr td.active{
-	color: #FFFFFF;
 	background: #5C7099 url('../images/gradients/table_head.gif') repeat-x top left;
-	border-width:0px;
+	border-color: #6666AA;
 }
 
 /************* SUB MENU ************/
@@ -904,7 +908,6 @@ table.server_info tr td {
 	border: 0px;
 	padding-left: 5px;
 	padding-right: 5px;
-	font-weight: bold;
 	text-align: left;
 	font-family: Verdana, Helvetica, Geneva;
 	font-size: 11px;
@@ -922,7 +925,6 @@ table.server_info tr.status td{
 	white-space: nowrap;
 	word-spacing:	0px;
 }
-
 /**************** WARNING ***********/
 
 table.warning{
@@ -1135,25 +1137,26 @@ table.msgok{
 	border: 1px #44CC44 solid;
 }
 
-table.msgok tr{
-	height: 26px;
-}
-
-table.msgok td{
+table.msgok tr td{
 	color:#333;
 	font-family: Verdana, Helvetica, Geneva;
 	font-size:11px;
 	text-align:center;
 }
 
-table.msgok td.clr{
+table.msgok tr td.clr{
 	width: 60px;
 	background-color:#44CC44;
 	font-size:10px;
 	font-weight: bold;
 }
 
-table.msgok td.msg{
+
+table.msgok tr td.msg_main{
+	height: 26px;
+}
+
+table.msgok tr td.msg{
 	background-color:#BBFFBB;
 }
 
@@ -1162,25 +1165,25 @@ table.msgerr{
 	border: 1px #CC4444 solid;
 }
 
-table.msgerr tr{
-	height: 26px;
-}
-
-table.msgerr td{
+table.msgerr tr td{
 	color:#333;
 	font-family: Verdana, Helvetica, Geneva;
 	font-size:11px;
 	text-align:center;
 }
 
-table.msgerr td.clr{
+table.msgerr tr td.clr{
 	width: 60px;
 	background-color:#CC4444;
 	font-size:10px;
 	font-weight: bold;
 }
 
-table.msgerr td.msg{
+table.msgerr tr td.msg_main{
+	height: 26px;
+}
+
+table.msgerr tr td.msg{
 	background-color:#FFBBBB;
 }
 /**************** </MESSAGE> *****************/
\ No newline at end of file
diff --git a/frontends/php/styles/ul.css b/frontends/php/styles/ul.css
index 8b27ca9..42d4502 100644
--- a/frontends/php/styles/ul.css
+++ b/frontends/php/styles/ul.css
@@ -21,6 +21,7 @@ ul.messages{
 ul.messages li{
 	font-family: Verdana, Arial, Helvetica, sans-serif;
 	font-size: 8pt;
+	height: 18px;
 }
 
 ul.messages li.info{
@@ -28,8 +29,7 @@ ul.messages li.info{
 	list-style: url("../images/general/warning_small.gif") inside;
 }
 
-ul.messages li.error
-{
+ul.messages li.error{
 	color:#AA0000;
 	list-style: url("../images/general/error_small.gif") inside;
 }
\ No newline at end of file
diff --git a/frontends/php/sysmap.php b/frontends/php/sysmap.php
index 1aba268..a73b728 100644
--- a/frontends/php/sysmap.php
+++ b/frontends/php/sysmap.php
@@ -19,51 +19,51 @@
 **/
 ?>
 <?php
-	require_once "include/config.inc.php";
-	require_once "include/maps.inc.php";
-	require_once "include/forms.inc.php";
+	require_once('include/config.inc.php');
+	require_once('include/maps.inc.php');
+	require_once('include/forms.inc.php');
 
-	$page["title"] = "S_CONFIGURATION_OF_NETWORK_MAPS";
-	$page["file"] = "sysmap.php";
+	$page['title'] = "S_CONFIGURATION_OF_NETWORK_MAPS";
+	$page['file'] = 'sysmap.php';
 	$page['hist_arg'] = array('sysmapid');
 	
-include_once "include/page_header.php";
+include_once('include/page_header.php');
 
 ?>
 <?php
 
 //		VAR			TYPE	OPTIONAL FLAGS	VALIDATION	EXCEPTION
 	$fields=array(
-		"sysmapid"=>	array(T_ZBX_INT, O_MAND, P_SYS,	DB_ID,NULL),
+		'sysmapid'=>	array(T_ZBX_INT, O_MAND, P_SYS,	DB_ID,NULL),
 
-		"selementid"=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,		NULL),
-		"elementid"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,	'isset({save})'),
-		"elementtype"=>	array(T_ZBX_INT, O_OPT,  NULL, IN("0,1,2,3,4"),	'isset({save})'),
-		"label"=>	array(T_ZBX_STR, O_OPT,  NULL, NOT_EMPTY,	'isset({save})'),
-		"x"=>		array(T_ZBX_INT, O_OPT,  NULL,  BETWEEN(0,65535),'isset({save})'),
-		"y"=>           array(T_ZBX_INT, O_OPT,  NULL,  BETWEEN(0,65535),'isset({save})'),
-		"iconid_off"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
-		"iconid_on"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
-		"iconid_unknown"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
-		"iconid_disabled"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
-		"url"=>		array(T_ZBX_STR, O_OPT,  NULL, NULL,		'isset({save})'),
-		"label_location"=>array(T_ZBX_INT, O_OPT, NULL,	IN("-1,0,1,2,3"),'isset({save})'),
+		'selementid'=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,		NULL),
+		'elementid'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,	'isset({save})'),
+		'elementtype'=>	array(T_ZBX_INT, O_OPT,  NULL, IN('0,1,2,3,4'),	'isset({save})'),
+		'label'=>	array(T_ZBX_STR, O_OPT,  NULL, NOT_EMPTY,	'isset({save})'),
+		'x'=>		array(T_ZBX_INT, O_OPT,  NULL,  BETWEEN(0,65535),'isset({save})'),
+		'y'=>           array(T_ZBX_INT, O_OPT,  NULL,  BETWEEN(0,65535),'isset({save})'),
+		'iconid_off'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
+		'iconid_on'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
+		'iconid_unknown'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
+		'iconid_disabled'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID,		'isset({save})'),
+		'url'=>		array(T_ZBX_STR, O_OPT,  NULL, NULL,		'isset({save})'),
+		'label_location'=>array(T_ZBX_INT, O_OPT, NULL,	IN('-1,0,1,2,3'),'isset({save})'),
 
-		"linkid"=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,NULL),
-		"selementid1"=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID.'{}!={selementid2}','isset({save_link})'),
-		"selementid2"=> array(T_ZBX_INT, O_OPT,  NULL, DB_ID.'{}!={selementid1}','isset({save_link})'),
-		"triggers"=>	array(T_ZBX_STR, O_OPT,  NULL, null,null),
-		"drawtype"=>array(T_ZBX_INT, O_OPT,  NULL, IN("0,1,2,3,4"),'isset({save_link})'),
-		"color"=>	array(T_ZBX_STR, O_OPT,  NULL, NOT_EMPTY,'isset({save_link})'),
+		'linkid'=>	array(T_ZBX_INT, O_OPT,	 P_SYS,	DB_ID,NULL),
+		'selementid1'=>	array(T_ZBX_INT, O_OPT,  NULL, DB_ID.'{}!={selementid2}','isset({save_link})'),
+		'selementid2'=> array(T_ZBX_INT, O_OPT,  NULL, DB_ID.'{}!={selementid1}','isset({save_link})'),
+		'triggers'=>	array(T_ZBX_STR, O_OPT,  NULL, null,null),
+		'drawtype'=>array(T_ZBX_INT, O_OPT,  NULL, IN('0,1,2,3,4'),'isset({save_link})'),
+		'color'=>	array(T_ZBX_STR, O_OPT,  NULL, NOT_EMPTY,'isset({save_link})'),
 
 /* actions */
-		"save"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"save_link"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"delete"=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
-		"cancel"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		'save'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
+		'save_link'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
+		'delete'=>		array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	NULL,	NULL),
+		'cancel'=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
 /* other */
-		"form"=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
-		"form_refresh"=>	array(T_ZBX_INT, O_OPT,	NULL,	NULL,	NULL)
+		'form'=>		array(T_ZBX_STR, O_OPT, P_SYS,	NULL,	NULL),
+		'form_refresh'=>	array(T_ZBX_INT, O_OPT,	NULL,	NULL,	NULL)
 	);
 
 	check_fields($fields);
@@ -73,85 +73,89 @@ include_once "include/page_header.php";
 
 	if(!sysmap_accessible($_REQUEST['sysmapid'],PERM_READ_WRITE)) access_deny();
 	
-	$sysmap = DBfetch(DBselect("select * from sysmaps where sysmapid=".$_REQUEST["sysmapid"]));
+	$sysmap = DBfetch(DBselect('select * from sysmaps where sysmapid='.$_REQUEST['sysmapid']));
 ?>
 <?php
-	if(isset($_REQUEST["save"])){
+	if(isset($_REQUEST['save'])){
+		$result = false;
+		$selementid = get_request('selementid');
 
-		if(isset($_REQUEST["selementid"])){ // update element
-			$result=update_sysmap_element($_REQUEST["selementid"],
-				$_REQUEST["sysmapid"],$_REQUEST["elementid"],$_REQUEST["elementtype"],
-				$_REQUEST["label"],$_REQUEST["x"],$_REQUEST["y"],
-				$_REQUEST["iconid_off"],$_REQUEST["iconid_unknown"],$_REQUEST["iconid_on"],
-				$_REQUEST["iconid_disabled"],$_REQUEST["url"],$_REQUEST["label_location"]);
-			$selementid = $_REQUEST["selementid"];
-			
-			show_messages($result,"Element updated","Cannot update element");
+		if(isset($_REQUEST['selementid'])){ // update element
+			if(($_REQUEST['elementid']>0) || ($_REQUEST['elementtype'] == SYSMAP_ELEMENT_TYPE_IMAGE)){
+				$result=update_sysmap_element($_REQUEST['selementid'],
+					$_REQUEST['sysmapid'],$_REQUEST['elementid'],$_REQUEST['elementtype'],
+					$_REQUEST['label'],$_REQUEST['x'],$_REQUEST['y'],
+					$_REQUEST['iconid_off'],$_REQUEST['iconid_unknown'],$_REQUEST['iconid_on'],
+					$_REQUEST['iconid_disabled'],$_REQUEST['url'],$_REQUEST['label_location']);
+				$selementid = $_REQUEST['selementid'];
+			}
+
+			show_messages($result,'Element updated','Cannot update element');
 		}
 		else{ // add element
 		
-			$result=add_element_to_sysmap($_REQUEST["sysmapid"],$_REQUEST["elementid"],
-				$_REQUEST["elementtype"],$_REQUEST["label"],$_REQUEST["x"],$_REQUEST["y"],
-				$_REQUEST["iconid_off"],$_REQUEST["iconid_unknown"],$_REQUEST["iconid_on"],
-				$_REQUEST["iconid_disabled"],$_REQUEST["url"],$_REQUEST["label_location"]);
+			$result=add_element_to_sysmap($_REQUEST['sysmapid'],$_REQUEST['elementid'],
+				$_REQUEST['elementtype'],$_REQUEST['label'],$_REQUEST['x'],$_REQUEST['y'],
+				$_REQUEST['iconid_off'],$_REQUEST['iconid_unknown'],$_REQUEST['iconid_on'],
+				$_REQUEST['iconid_disabled'],$_REQUEST['url'],$_REQUEST['label_location']);
 			$selementid = $result;
 
-			show_messages($result,"Element added","Cannot add element");
+			show_messages($result,'Element added','Cannot add element');
 		}
 		add_audit_if($result,AUDIT_ACTION_UPDATE,AUDIT_RESOURCE_MAP,'Name ['.$sysmap['name'].'] Element ['.$selementid.'] updated ');
-		if($result)	unset($_REQUEST["form"]);
+		if($result)	unset($_REQUEST['form']);
 	}
 	
-	if(isset($_REQUEST["save_link"])){
-		if(isset($_REQUEST["linkid"])){ // update link
-			$result=update_link($_REQUEST["linkid"],
-				$_REQUEST["sysmapid"],$_REQUEST["selementid1"],$_REQUEST["selementid2"],
-				get_request("triggers",array()), $_REQUEST["drawtype"],$_REQUEST["color"]);
-			$linkid = $_REQUEST["linkid"];
+	if(isset($_REQUEST['save_link'])){
+		if(isset($_REQUEST['linkid'])){ // update link
+			$result=update_link($_REQUEST['linkid'],
+				$_REQUEST['sysmapid'],$_REQUEST['selementid1'],$_REQUEST['selementid2'],
+				get_request('triggers',array()), $_REQUEST['drawtype'],$_REQUEST['color']);
+			$linkid = $_REQUEST['linkid'];
 
-			show_messages($result,"Link updated","Cannot update link");
+			show_messages($result,'Link updated','Cannot update link');
 		}
 		else{ // add link
-			$result=add_link($_REQUEST["sysmapid"],$_REQUEST["selementid1"],$_REQUEST["selementid2"],
-				get_request("triggers",array()),	$_REQUEST["drawtype"],$_REQUEST["color"]);
+			$result=add_link($_REQUEST['sysmapid'],$_REQUEST['selementid1'],$_REQUEST['selementid2'],
+				get_request('triggers',array()),	$_REQUEST['drawtype'],$_REQUEST['color']);
 			$linkid = $result;
 
-			show_messages($result,"Link added","Cannot add link");
+			show_messages($result,'Link added','Cannot add link');
 		}
 		add_audit_if($result,AUDIT_ACTION_UPDATE,AUDIT_RESOURCE_MAP,'Name ['.$sysmap['name'].'] Link ['.$linkid.'] updated ');
-		if($result)	unset($_REQUEST["form"]);
+		if($result)	unset($_REQUEST['form']);
 	}
-	else if(isset($_REQUEST["delete"])){
+	else if(isset($_REQUEST['delete'])){
 		
-		if(isset($_REQUEST["linkid"])){
-			$result=delete_link($_REQUEST["linkid"]);
-			show_messages($result,"Link deleted","Cannot delete link");
+		if(isset($_REQUEST['linkid'])){
+			$result=delete_link($_REQUEST['linkid']);
+			show_messages($result,'Link deleted','Cannot delete link');
 			add_audit_if($result,AUDIT_ACTION_UPDATE,AUDIT_RESOURCE_MAP,
-				'Name ['.$sysmap['name'].'] Link ['.$_REQUEST["linkid"].'] deleted');
+				'Name ['.$sysmap['name'].'] Link ['.$_REQUEST['linkid'].'] deleted');
 
 			if($result)
 			{
-				unset($_REQUEST["linkid"]);
-				unset($_REQUEST["form"]);
+				unset($_REQUEST['linkid']);
+				unset($_REQUEST['form']);
 			}
 		}
-		else if(isset($_REQUEST["selementid"])){
-			$result=delete_sysmaps_element($_REQUEST["selementid"]);
-			show_messages($result,"Element deleted","Cannot delete element");
+		else if(isset($_REQUEST['selementid'])){
+			$result=delete_sysmaps_element($_REQUEST['selementid']);
+			show_messages($result,'Element deleted','Cannot delete element');
 			add_audit_if($result,AUDIT_ACTION_UPDATE,AUDIT_RESOURCE_MAP,
-				'Name ['.$sysmap['name'].'] Element ['.$_REQUEST["selementid"].'] deleteed ');
+				'Name ['.$sysmap['name'].'] Element ['.$_REQUEST['selementid'].'] deleteed ');
 
 			if($result){
-				unset($_REQUEST["selementid"]);
-				unset($_REQUEST["form"]);
+				unset($_REQUEST['selementid']);
+				unset($_REQUEST['form']);
 			}
 		}
 	}
 ?>
 <?php
 	echo SBR;
-	if(isset($_REQUEST["form"]) && ($_REQUEST["form"]=="add_element" ||
-		($_REQUEST["form"]=="update" && isset($_REQUEST["selementid"]))))
+	if(isset($_REQUEST['form']) && ($_REQUEST['form']=='add_element' ||
+		($_REQUEST['form']=='update' && isset($_REQUEST['selementid']))))
 	{
 		show_table_header(S_DISPLAYED_ELEMENTS);
 		echo SBR;
@@ -169,62 +173,62 @@ include_once "include/page_header.php";
 		}
 	}
 	else{
-		show_table_header(S_DISPLAYED_ELEMENTS, new CButton("form",S_ADD_ELEMENT,
-			"return redirect('".$page["file"]."?form=add_element".url_param("sysmapid")."');"));
+		show_table_header(S_DISPLAYED_ELEMENTS, new CButton('form',S_ADD_ELEMENT,
+			"return redirect('".$page['file'].'?form=add_element'.url_param('sysmapid')."');"));
 
 		$table = new CTableInfo();
-		$table->SetHeader(array(S_LABEL,S_TYPE,S_X,S_Y,S_ICON_OK,S_ICON_PROBLEM,S_ICON_UNKNOWN,S_ICON_DISABLED));
+		$table->setHeader(array(S_LABEL,S_TYPE,S_X,S_Y,S_ICON_OK,S_ICON_PROBLEM,S_ICON_UNKNOWN,S_ICON_DISABLED));
 
-		$db_elements = DBselect("select * from sysmaps_elements where sysmapid=".$_REQUEST["sysmapid"].
-			" order by label");
+		$db_elements = DBselect('select * from sysmaps_elements where sysmapid='.$_REQUEST['sysmapid'].
+			' order by label');
 		while($db_element = DBfetch($db_elements)){
 
-			if(    $db_element["elementtype"] == SYSMAP_ELEMENT_TYPE_HOST)		$type = S_HOST;
-			elseif($db_element["elementtype"] == SYSMAP_ELEMENT_TYPE_MAP)		$type = S_MAP;
-			elseif($db_element["elementtype"] == SYSMAP_ELEMENT_TYPE_TRIGGER)	$type = S_TRIGGER;
-			elseif($db_element["elementtype"] == SYSMAP_ELEMENT_TYPE_HOST_GROUP)	$type = S_HOST_GROUP;
-			else $type = "Map element";
+			if(    $db_element['elementtype'] == SYSMAP_ELEMENT_TYPE_HOST)		$type = S_HOST;
+			elseif($db_element['elementtype'] == SYSMAP_ELEMENT_TYPE_MAP)		$type = S_MAP;
+			elseif($db_element['elementtype'] == SYSMAP_ELEMENT_TYPE_TRIGGER)	$type = S_TRIGGER;
+			elseif($db_element['elementtype'] == SYSMAP_ELEMENT_TYPE_HOST_GROUP)	$type = S_HOST_GROUP;
+			else $type = 'Map element';
 
 			$table->addRow(array(
 				new CLink(
-					$db_element["label"],
-					"sysmap.php?sysmapid=".$db_element["sysmapid"].
-					"&form=update&selementid=".$db_element["selementid"],
-					"action"),
+					$db_element['label'],
+					'sysmap.php?sysmapid='.$db_element['sysmapid'].
+					'&form=update&selementid='.$db_element['selementid'],
+					'action'),
 				nbsp($type),
-				$db_element["x"],
-				$db_element["y"],
-				$db_element["iconid_off"] ? new CImg("image.php?height=24&imageid=".$db_element["iconid_off"],"no image",NULL) : '-',
-				$db_element["iconid_on"] ? new CImg("image.php?height=24&imageid=".$db_element["iconid_on"],"no image",NULL) : '-',
-				$db_element["iconid_unknown"] ? new CImg("image.php?height=24&imageid=".$db_element["iconid_unknown"],"no image",NULL) : '-',
-				$db_element["iconid_disabled"] ? new CImg("image.php?height=24&imageid=".$db_element["iconid_disabled"],"no image",NULL) : '-'
+				$db_element['x'],
+				$db_element['y'],
+				$db_element['iconid_off'] ? new CImg('image.php?height=24&imageid='.$db_element['iconid_off'],'no image',NULL) : '-',
+				$db_element['iconid_on'] ? new CImg('image.php?height=24&imageid='.$db_element['iconid_on'],'no image',NULL) : '-',
+				$db_element['iconid_unknown'] ? new CImg('image.php?height=24&imageid='.$db_element['iconid_unknown'],'no image',NULL) : '-',
+				$db_element['iconid_disabled'] ? new CImg('image.php?height=24&imageid='.$db_element['iconid_disabled'],'no image',NULL) : '-'
 				));
 		}
 		$table->show();
 
 		echo SBR;
-		show_table_header(S_CONNECTORS, new CButton("form",S_CREATE_CONNECTION,
-			"return redirect('".$page["file"]."?form=add_link".
-			url_param("sysmapid")."');"));
+		show_table_header(S_CONNECTORS, new CButton('form',S_CREATE_CONNECTION,
+			"return redirect('".$page['file'].'?form=add_link'.
+			url_param('sysmapid')."');"));
 
 		$table = new CTableInfo();
-		$table->SetHeader(array(S_LINK,S_ELEMENT_1,S_ELEMENT_2,S_LINK_STATUS_INDICATOR));
+		$table->setHeader(array(S_LINK,S_ELEMENT_1,S_ELEMENT_2,S_LINK_STATUS_INDICATOR));
 
 		$i = 1;
-		$result=DBselect("select linkid,selementid1,selementid2 from sysmaps_links".
-			" where sysmapid=".$_REQUEST["sysmapid"]." order by linkid");
+		$result=DBselect('select linkid,selementid1,selementid2 from sysmaps_links'.
+			' where sysmapid='.$_REQUEST['sysmapid'].' order by linkid');
 		while($row=DBfetch($result)){
 	/* prepare label 1 */
-			$result1=DBselect("select label from sysmaps_elements".
-				" where selementid=".$row["selementid1"]);
+			$result1=DBselect('select label from sysmaps_elements'.
+				' where selementid='.$row['selementid1']);
 			$row1=DBfetch($result1);
-			$label1=$row1["label"];
+			$label1=$row1['label'];
 
 	/* prepare label 2 */
-			$result1=DBselect("select label from sysmaps_elements".
-				" where selementid=".$row["selementid2"]);
+			$result1=DBselect('select label from sysmaps_elements'.
+				' where selementid='.$row['selementid2']);
 			$row1=DBfetch($result1);
-			$label2=$row1["label"];
+			$label2=$row1['label'];
 			
 	/* prepare description */
 	
@@ -244,10 +248,10 @@ include_once "include/page_header.php";
 
 	/* draw row */
 			$table->addRow(array(
-				new CLink("link ".$i++,
-					"sysmap.php?sysmapid=".$_REQUEST["sysmapid"].
-					"&form=update&linkid=".$row["linkid"],
-					"action"),
+				new CLink('link '.$i++,
+					'sysmap.php?sysmapid='.$_REQUEST['sysmapid'].
+					'&form=update&linkid='.$row['linkid'],
+					'action'),
 				$label1,
 				$label2,
 				$description
@@ -259,39 +263,39 @@ include_once "include/page_header.php";
 	show_messages();
 	
 	echo SBR;
-	$map=get_sysmap_by_sysmapid($_REQUEST["sysmapid"]);
-	show_table_header($map["name"]);
+	$map=get_sysmap_by_sysmapid($_REQUEST['sysmapid']);
+	show_table_header($map['name']);
 
-	$table = new CTable(NULL,"map");
-	if(isset($_REQUEST["sysmapid"])){
-		$linkMap = new CMap("links".$_REQUEST["sysmapid"]."_".rand(0,100000));
+	$table = new CTable(NULL,'map');
+	if(isset($_REQUEST['sysmapid'])){
+		$linkMap = new CMap('links'.$_REQUEST['sysmapid'].'_'.rand(0,100000));
 
-		$db_elements = DBselect("select * from sysmaps_elements where sysmapid=".$_REQUEST["sysmapid"]);
+		$db_elements = DBselect('select * from sysmaps_elements where sysmapid='.$_REQUEST['sysmapid']);
 		while($db_element = DBfetch($db_elements)){
-			$tmp_img = get_png_by_selementid($db_element["selementid"]);
+			$tmp_img = get_png_by_selementid($db_element['selementid']);
 			if(!$tmp_img) continue;
 
-			$x1_	= $db_element["x"];
-			$y1_	= $db_element["y"];
-			$x2_	= $db_element["x"] + imagesx($tmp_img);
-			$y2_	= $db_element["y"] + imagesy($tmp_img);
+			$x1_	= $db_element['x'];
+			$y1_	= $db_element['y'];
+			$x2_	= $db_element['x'] + imagesx($tmp_img);
+			$y2_	= $db_element['y'] + imagesy($tmp_img);
 
-			$linkMap->AddRectArea($x1_,$y1_,$x2_,$y2_,
-				"sysmap.php?form=update&sysmapid=".$_REQUEST["sysmapid"].
-				"&selementid=".$db_element["selementid"],
-				$db_element["label"]);
+			$linkMap->addRectArea($x1_,$y1_,$x2_,$y2_,
+				'sysmap.php?form=update&sysmapid='.$_REQUEST['sysmapid'].
+				'&selementid='.$db_element['selementid'],
+				$db_element['label']);
 
 		}
 		
-		$imgMap = new CImg("map.php?sysmapid=".$_REQUEST["sysmapid"]);
-		$imgMap->SetMap($linkMap->GetName());
-		$table->AddRow($linkMap);
-		$table->AddRow($imgMap);
+		$imgMap = new CImg('map.php?sysmapid='.$_REQUEST['sysmapid']);
+		$imgMap->setMap($linkMap->GetName());
+		$table->addRow($linkMap);
+		$table->addRow($imgMap);
 	}
 	$table->Show();
 ?>
 <?php
 	
-include_once "include/page_footer.php";
+include_once('include/page_footer.php');
 
 ?>
diff --git a/frontends/php/sysmaps.php b/frontends/php/sysmaps.php
index d685db3..bb2ddbf 100644
--- a/frontends/php/sysmaps.php
+++ b/frontends/php/sysmaps.php
@@ -116,7 +116,15 @@ include_once "include/page_header.php";
 		insert_map_form();
 	}
 	else{
-		show_table_header(S_MAPS_BIG);
+		$row_count = 0;
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_MAPS_BIG,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header);
+
 		$table = new CTableInfo(S_NO_MAPS_DEFINED);
 		$table->SetHeader(array(
 			make_sorting_link(S_NAME,'sm.name'),
@@ -140,9 +148,13 @@ include_once "include/page_header.php";
 				$row["height"],
 				new CLink(S_EDIT,"sysmap.php?sysmapid=".$row["sysmapid"])
 				));
+			$row_count++;
 		}
 		$table->Show();
 	}
+	if(isset($row_count))
+		zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 ?>
 <?php
 
diff --git a/frontends/php/tr_comments.php b/frontends/php/tr_comments.php
index 718ec96..e4e6202 100644
--- a/frontends/php/tr_comments.php
+++ b/frontends/php/tr_comments.php
@@ -51,18 +51,21 @@ include_once "include/page_header.php";
 ?>
 <?php
 
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$sql = 'SELECT * '.
+			' FROM items i, functions f '.
+			' WHERE i.itemid=f.itemid '.
+				' AND f.triggerid='.$_REQUEST['triggerid'].
+				' AND '.DBin_node('f.triggerid');				
+	if(!$db_data = DBfetch(DBselect($sql))){
+		fatal_error(S_NO_TRIGGER_DEFINED);
+	}
 	
-	if(!$db_data = DBfetch(DBselect('SELECT * '.
-							' FROM items i, functions f '.
-	                        ' WHERE i.itemid=f.itemid '.
-								' AND f.triggerid='.$_REQUEST["triggerid"].
-								' AND '.DBcondition('f.triggerid',$available_triggers).
-								' AND '.DBin_node('f.triggerid')
-				)))
-	{
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY, array($db_data['hostid']));
+	
+	if(!isset($available_triggers[$_REQUEST['triggerid']])){
 		access_deny();
 	}
+	
 	$trigger_hostid = $db_data['hostid'];
 	
 	if(isset($_REQUEST["save"])){
diff --git a/frontends/php/tr_status.php b/frontends/php/tr_status.php
index 1cbc956..27f2a90 100644
--- a/frontends/php/tr_status.php
+++ b/frontends/php/tr_status.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2007 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -28,7 +28,7 @@
 
 	$page["file"] = "tr_status.php";
 	$page["title"] = "S_STATUS_OF_TRIGGERS";
-	$page['scripts'] = array('blink.js');
+	$page['scripts'] = array();
 	$page['hist_arg'] = array('groupid','hostid');
 	
 	$page['type'] = detect_page_type(PAGE_TYPE_HTML);
@@ -130,7 +130,6 @@ include_once "include/page_header.php";
 		exit();
 	}
 //--------
-
 	$config=select_config();
 
 /* FILTER */
@@ -161,9 +160,9 @@ include_once "include/page_header.php";
 	
 	$_REQUEST['show_triggers']	= get_request('show_triggers',	get_profile('web.tr_status.filter.show_triggers',TRIGGERS_OPTION_ONLYTRUE));
 	$_REQUEST['show_events'] 	= get_request('show_events',	get_profile('web.tr_status.filter.show_events',EVENTS_OPTION_NOEVENT));
-	
+
 	$_REQUEST['show_severity'] 	= get_request('show_severity',	get_profile('web.tr_status.filter.show_severity',-1));
-	
+
 	$_REQUEST['txt_select']	 	= get_request('txt_select',	get_profile('web.tr_status.filter.select',''));
 	
 // if trigger option is NOFALSEFORB than only 1 option avalable for events and we are setting it!!!
@@ -186,7 +185,7 @@ include_once "include/page_header.php";
 		
 		update_profile('web.tr_status.filter.show_triggers',$_REQUEST['show_triggers'], PROFILE_TYPE_INT);
 		update_profile('web.tr_status.filter.show_events',$_REQUEST['show_events'], 	PROFILE_TYPE_INT);
-		
+
 		update_profile('web.tr_status.filter.show_severity',$_REQUEST['show_severity'], 	PROFILE_TYPE_INT);
 		
 		update_profile('web.tr_status.filter.txt_select',$_REQUEST['txt_select'], PROFILE_TYPE_STR);
@@ -197,24 +196,21 @@ include_once "include/page_header.php";
 	$show_events   = $_REQUEST['show_events'];
 	$show_severity = $_REQUEST['show_severity'];
 // --------------
-
 	validate_sort_and_sortorder('t.lastchange',ZBX_SORT_DOWN);
 
-	$options = array('allow_all_hosts','monitored_hosts','with_monitored_items','always_select_first_host'); //always_select_first_host
-	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
+
+	$params = array();
+	$options = array('allow_all_hosts','monitored_hosts','with_monitored_items');
+	if(!$ZBX_WITH_SUBNODES)	array_push($options,'only_current_node');	
+	foreach($options as $option) $params[$option] = 1;
 	
-	$_REQUEST['hostid'] = get_request('hostid',get_profile('web.tr_status.hostid', null, PROFILE_TYPE_ID));
-	if(!isset($_REQUEST['hostid'])){
-		array_push($options,'always_select_first_host');
-		
-		$_REQUEST['groupid'] = get_request('groupid',get_profile('web.tr_status.groupid', null, PROFILE_TYPE_ID));
-		if(!isset($_REQUEST['groupid'])){
-			validate_group(PERM_READ_ONLY,array('allow_all_hosts','monitored_hosts','with_monitored_items','always_select_first_group'),'web.tr_status.groupid');
-		}
-	}
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_ONLY, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_ONLY, $PAGE_GROUPS['selected'], $params);
+//SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
 
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
 //SDI($_REQUEST['groupid'].' : '.$_REQUEST['hostid']);
-	validate_group_with_host(PERM_READ_ONLY,$options,'web.tr_status.groupid','web.tr_status.hostid');
 
 	$mute = get_profile('web.tr_status.mute',0);	
 	if(isset($audio) && !$mute){
@@ -223,73 +219,34 @@ include_once "include/page_header.php";
 ?>                                                                                                             
 <?php
 	$r_form = new CForm();
-	$r_form->SetMethod('get');
+	$r_form->setMethod('get');
 
-	$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-	$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
+//	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
+//	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
 
-	$cmbGroup->AddItem(0,S_ALL_SMALL);
-	$cmbHosts->AddItem(0,S_ALL_SMALL);
-	
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS,PERM_READ_ONLY);
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_ONLY);
-	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,PERM_RES_IDS_ARRAY);
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+	$available_triggers = get_accessible_triggers(PERM_READ_ONLY,$PAGE_HOSTS['hostids']);
 
-	$scripts_by_hosts = get_accessible_scripts_by_hosts($available_hosts);
+	$scripts_by_hosts = get_accessible_scripts_by_hosts($PAGE_HOSTS['hostids']);
 
-	$sql = 'SELECT DISTINCT g.groupid,g.name '.
-			' FROM groups g, hosts_groups hg, hosts h '.
-			' WHERE '.DBcondition('g.groupid',$available_groups).
-				' AND hg.groupid=g.groupid '.
-				' AND h.hostid=hg.hostid '.
-				' AND h.status='.HOST_STATUS_MONITORED.
-				' AND EXISTS(SELECT i.itemid FROM items i WHERE i.status='.ITEM_STATUS_ACTIVE.' AND i.hostid=h.hostid ) '.
-			' ORDER BY g.name';	
-	$result=DBselect($sql);
-	while($row=DBfetch($result)){
-		$cmbGroup->AddItem(
-				$row['groupid'],
-				get_node_name_by_elid($row['groupid']).$row['name']
-				);
-		unset($row);
-	}
-	$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
-	
-	$sql_from = '';
-	$sql_where = '';
-	if($_REQUEST['groupid'] > 0){
-		$sql_from .= ',hosts_groups hg ';
-		$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+	$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+	$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
+
+	foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+		$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 	}
-	$sql='SELECT DISTINCT h.hostid,h.host '.
-		' FROM hosts h, items i, functions f, triggers t '.$sql_from.
-		' WHERE h.status='.HOST_STATUS_MONITORED.
-			$sql_where.		
-			' AND h.hostid=i.hostid '.
-			' AND i.status='.ITEM_STATUS_ACTIVE.
-			' AND i.itemid=f.itemid '.
-			' AND f.triggerid=t.triggerid '.
-			' AND t.status='.TRIGGER_STATUS_ENABLED.
-			' AND '.DBcondition('h.hostid',$available_hosts).
-		' ORDER BY h.host';
-
-	$result=DBselect($sql);
-	$flag = false;
-	while($row=DBfetch($result)){
-		$flag |= (bccomp($_REQUEST['hostid'] , $row['hostid']) == 0);
-		$cmbHosts->AddItem(
-				$row['hostid'],
-				get_node_name_by_elid($row['hostid']).$row['host']
-				);
+	foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+		$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 	}
-	if(!$flag) $_REQUEST['hostid'] = 0;
-
-	$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
-	$r_form->AddVar('fullscreen',$_REQUEST['fullscreen']);
+	
+	$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+	$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+	$r_form->addVar('fullscreen',$_REQUEST['fullscreen']);
 
 	$p_elemetns = array();
 	
-	$text = array(S_STATUS_OF_TRIGGERS_BIG,SPACE,date('[H:i:s]',time()));
+	$text = array(S_STATUS_OF_TRIGGERS_BIG,SPACE);
 	
 	$url = 'tr_status.php'.($_REQUEST['fullscreen']?'':'?fullscreen=1');
 
@@ -301,7 +258,14 @@ include_once "include/page_header.php";
 	$mute_icon->AddOption('title',S_SOUND.' '.S_ON.'/'.S_OFF);
 	$mute_icon->AddAction('onclick',new CScript("javascript: switch_mute(this);"));
 	
-	$p_elements[] = get_table_header(S_TRIGGERS,$r_form);
+	$tr_numrows = new CSpan(null,'info');
+	$tr_numrows->addOption('name','tr_numrows');
+	$p_elements[] = get_table_header(array(S_TRIGGERS,
+								new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+								S_FOUND.': ',$tr_numrows,
+								SPACE.SPACE.SPACE.
+								S_UPDATED.': ',new CSpan(date(S_DATE_FORMAT_YMDHMS),'info'),
+							),$r_form);
 
 /************************* FILTER **************************/
 /***********************************************************/
@@ -354,7 +318,7 @@ include_once "include/page_header.php";
 
 	$filterForm->AddRow(S_TRIGGERS,$tr_select);	
 	$filterForm->AddRow(S_EVENTS,$ev_select);
-	
+
 	$severity_select = new CComboBox('show_severity',$show_severity,'javasctipt: submit();');
 	$severity_select->AddItem(-1, S_ALL_S);
 	$severity_select->AddItem(TRIGGER_SEVERITY_NOT_CLASSIFIED, 	S_NOT_CLASSIFIED);
@@ -379,7 +343,12 @@ include_once "include/page_header.php";
 	$filterForm->AddItemToBottomRow(new CButton("filter_set",S_FILTER));
 	$filterForm->AddItemToBottomRow($reset);
 
-	$p_elements[] = create_filter(S_FILTER,null,$filterForm,'tr_filter',get_profile('web.tr_status.filter.state',0));
+	$p_elements[] = create_filter(S_FILTER,
+			array(),
+			$filterForm,
+			'tr_filter',
+			get_profile('web.tr_status.filter.state',0)
+		);
 /*************** FILTER END ******************/	
 	
   	if($_REQUEST["fullscreen"]){
@@ -402,23 +371,22 @@ include_once "include/page_header.php";
 	$table->ShowStart();
 	
 	$header=array();
+	$show_event_col = ($config['event_ack_enable'] && ($show_events != EVENTS_OPTION_NOEVENT));
 
 	$table->SetHeader(array(
-		($config['event_ack_enable'])?(new CCheckBox("all_events",false, "CheckAll('".$m_form->GetName()."','all_events','events');")): NULL,
+		$show_event_col?(new CCheckBox('all_events',false, "CheckAll('".$m_form->GetName()."','all_events','events');")):NULL,
 		make_sorting_link(S_SEVERITY,'t.priority'),
 		S_STATUS,
 		make_sorting_link(S_LAST_CHANGE,'t.lastchange'),
 		is_show_subnodes()?make_sorting_link(S_NODE,'h.hostid'):null,
-		($_REQUEST["hostid"]>0)?null:make_sorting_link(S_HOST,'h.host'),
+		($_REQUEST['hostid']>0)?null:make_sorting_link(S_HOST,'h.host'),
 		make_sorting_link(S_NAME,'t.description'),
 		$_REQUEST['show_actions']?S_ACTIONS:NULL,
-		$config['event_ack_enable']?S_ACKNOWLEDGED:NULL,
+		$show_event_col?S_ACKNOWLEDGED:NULL,
 		S_COMMENTS
 		));
 	
-	$cond =($_REQUEST['hostid'] > 0)?' AND h.hostid='.$_REQUEST['hostid'].' ':'';
-	$cond.=($_REQUEST['groupid']> 0)?' AND hg.hostid=h.hostid AND hg.groupid ='.$_REQUEST['groupid']:'';
-	
+	$cond =($_REQUEST['hostid'] > 0)?' AND h.hostid='.$_REQUEST['hostid'].' ':'';	
 	switch($show_triggers){
 		case TRIGGERS_OPTION_ALL:
 			$cond.='';
@@ -436,6 +404,7 @@ include_once "include/page_header.php";
 		$cond.=' AND t.priority>='.$show_severity;
 	}
 
+	$triggers_num = 0;
 	$cond_event = '';
 	$event_expire = ($config['event_expire']*86400); // days
 	switch($show_events){
@@ -459,16 +428,16 @@ include_once "include/page_header.php";
 
 	$sql = 'SELECT DISTINCT t.triggerid,t.status,t.description, t.expression,t.priority, '.
 					' t.lastchange,t.comments,t.url,t.value,h.host,h.hostid,t.type '.
-			' FROM triggers t,hosts h,items i,functions f '.($_REQUEST['groupid']?', hosts_groups hg ':'').
+			' FROM triggers t,hosts h,items i,functions f '.
 			' WHERE '.DBcondition('t.triggerid',$available_triggers).
 				' AND t.status='.TRIGGER_STATUS_ENABLED.
 				' AND f.triggerid=t.triggerid '.			
 				' AND i.itemid=f.itemid '.
 				' AND i.status='.ITEM_STATUS_ACTIVE.
 				' AND h.hostid=i.hostid '.
-				' AND h.status='.HOST_STATUS_MONITORED.' '.$cond.
+				' AND h.status='.HOST_STATUS_MONITORED.
+				$cond.
 			order_by('h.host,h.hostid,t.description,t.priority,t.lastchange');
-
 	$result = DBselect($sql);
 	while($row=DBfetch($result)){
 // Check for dependencies
@@ -476,16 +445,18 @@ include_once "include/page_header.php";
 
 		$event_sql = 'SELECT e.eventid, e.value, e.clock, e.objectid as triggerid, e.acknowledged, t.type '.
 					' FROM events e, triggers t '.
-					' WHERE e.object=0 '.
+					' WHERE e.object='.EVENT_SOURCE_TRIGGERS.
 						' AND e.objectid='.$row['triggerid'].
-						' AND t.triggerid=e.objectid '.$cond_event.
+						' AND t.triggerid=e.objectid '.
+						$cond_event.
 					' ORDER by e.object DESC, e.objectid DESC, e.eventid DESC';
-
 		if($show_triggers == TRIGGERS_OPTION_NOFALSEFORB){
 			if(!$row = get_row_for_nofalseforb($row,$event_sql)){
 				continue;
 			}
 		}
+		
+		$triggers_num++;
 		$elements=array();
 
 		$description = expand_trigger_description($row['triggerid']);
@@ -587,7 +558,7 @@ include_once "include/page_header.php";
 		}
 
 			$table->AddRow(array(
-				($config['event_ack_enable'])?SPACE:NULL,
+				$show_event_col?SPACE:NULL,
 				new CCol(
 					get_severity_description($row['priority']),
 					get_severity_style($row['priority'],$row['value'])
@@ -598,7 +569,7 @@ include_once "include/page_header.php";
 				$host,
 				$description,
 				$actions,
-				($config['event_ack_enable'])?SPACE:NULL,
+				$show_event_col?SPACE:NULL,
 				new CLink(zbx_empty($row['comments'])?S_ADD:S_SHOW,'tr_comments.php?triggerid='.$row['triggerid'],'action')
 				));
 
@@ -660,11 +631,7 @@ include_once "include/page_header.php";
 		unset($row,$description, $actions);
 	}
 
-	$table->SetFooter(new CCol(array(S_TOTAL.": ",
-							$table->GetNumRows(),
-							SPACE.SPACE.SPACE,
-							($config['event_ack_enable'])?(new CButton('bulkacknowledge',S_BULK_ACKNOWLEDGE,'javascript: submit();')):(SPACE)
-					)));
+	$table->SetFooter(new CCol(array($show_event_col?(new CButton('bulkacknowledge',S_BULK_ACKNOWLEDGE,'javascript: submit();')):SPACE)));
 					
 	$m_form->AddItem($table);
 	unset($table);
@@ -680,7 +647,7 @@ include_once "include/page_header.php";
 	);
 
 	$triggers_hat->Show();
-
+	zbx_add_post_js('insert_in_element("tr_numrows","'.$triggers_num.'");');
 	
 
 	zbx_add_post_js('blink.init();');	
diff --git a/frontends/php/triggers.php b/frontends/php/triggers.php
index 8c766bc..90c785f 100644
--- a/frontends/php/triggers.php
+++ b/frontends/php/triggers.php
@@ -95,14 +95,11 @@
 			access_deny();
 
 	$showdisabled = get_request('showdisabled', 0);
-
-	$options = array('allow_all_hosts','always_select_first_host','with_items','only_current_node');
-	validate_group_with_host(PERM_READ_WRITE,$options,'web.last.conf.groupid','web.last.conf.hostid');
 ?>
 <?php
 	update_profile('web.triggers.showdisabled',$showdisabled,PROFILE_TYPE_INT);
 
-	$available_triggers = get_accessible_triggers(PERM_READ_WRITE);
+	$available_triggers = get_accessible_triggers(PERM_READ_WRITE, array());			// OPTIMIZE!!!
 /* FORM ACTIONS */
 
 	if(isset($_REQUEST['clone']) && isset($_REQUEST['triggerid'])){
@@ -115,7 +112,7 @@
 		$result = false;
 		
 		
-		$visible = $_REQUEST['visible'];
+		$visible = get_request('visible', array());
 		$dependencies = get_request('dependencies',array());
 		
 		$triggers = $_REQUEST['g_triggerid'];
@@ -207,7 +204,7 @@
 	else if(isset($_REQUEST['delete'])&&isset($_REQUEST['triggerid'])){
 		$result = false;
 		
-		if(!uint_in_array($_REQUEST['triggerid'],$available_triggers))
+		if(!isset($available_triggers[$_REQUEST['triggerid']]))
 			access_deny();
 			
 		if($trigger_data = DBfetch(
@@ -240,7 +237,7 @@
 			if(0 == $_REQUEST['copy_type']){ /* hosts */
 				$hosts_ids = $_REQUEST['copy_targetid'];
 			}
-			else{ /* groups */
+			else{ /* groups */ 
 				$hosts_ids = array();
 				$group_ids = $_REQUEST['copy_targetid'];
 
@@ -264,21 +261,21 @@
 		else{
 			error('No target selection.');
 		}
-		show_messages();
+		show_messages($result, S_TRIGGER_ADDED, S_CANNOT_ADD_TRIGGER);
 	}
 /* DEPENDENCE ACTIONS */
 	else if(isset($_REQUEST['add_dependence'])&&isset($_REQUEST['new_dependence'])){
 		if(!isset($_REQUEST['dependencies']))
 			$_REQUEST['dependencies'] = array();
 
-		if(!uint_in_array($_REQUEST["new_dependence"], $_REQUEST["dependencies"]))
-			array_push($_REQUEST["dependencies"], $_REQUEST["new_dependence"]);
+		if(!uint_in_array($_REQUEST['new_dependence'], $_REQUEST['dependencies']))
+			array_push($_REQUEST['dependencies'], $_REQUEST['new_dependence']);
 	}
-	else if(isset($_REQUEST["del_dependence"])&&isset($_REQUEST["rem_dependence"])){
-		if(isset($_REQUEST["dependencies"])){
-			foreach($_REQUEST["dependencies"]as $key => $val){
-				if(!uint_in_array($val, $_REQUEST["rem_dependence"]))	continue;
-				unset($_REQUEST["dependencies"][$key]);
+	else if(isset($_REQUEST['del_dependence'])&&isset($_REQUEST['rem_dependence'])){
+		if(isset($_REQUEST['dependencies'])){
+			foreach($_REQUEST['dependencies'] as $key => $val){
+				if(!uint_in_array($val, $_REQUEST['rem_dependence']))	continue;
+				unset($_REQUEST['dependencies'][$key]);
 			}
 		}
 	}
@@ -344,13 +341,68 @@
 	}
 ?>
 <?php
-	$available_groups = get_accessible_groups_by_user($USER_DETAILS, PERM_READ_WRITE);
-	$available_hosts = get_accessible_hosts_by_user($USER_DETAILS,PERM_READ_WRITE);
-	$available_triggers = get_accessible_triggers(PERM_READ_WRITE,PERM_RES_IDS_ARRAY,null,null,0);
+
+	if(isset($_REQUEST['hostid']) && !isset($_REQUEST['groupid']) && !isset($_REQUEST['triggerid'])){
+		$sql = 'SELECT DISTINCT hg.groupid '.
+				' FROM hosts_groups hg '.
+				' WHERE hg.hostid='.$_REQUEST['hostid'];
+		if($group=DBfetch(DBselect($sql, 1))){
+			$_REQUEST['groupid'] = $group['groupid'];
+		}
+	}
+	
+	if(isset($_REQUEST['triggerid']) && ($_REQUEST['triggerid']>0)){
+		$sql_from = '';
+		$sql_where = '';
+		if(isset($_REQUEST['groupid']) && ($_REQUEST['groupid'] > 0)){
+			$sql_where.= ' AND hg.groupid='.$_REQUEST['groupid'];
+		}
+		
+		if(isset($_REQUEST['hostid']) && ($_REQUEST['hostid'] > 0)){
+			$sql_where.= ' AND hg.hostid='.$_REQUEST['hostid'];
+		}
+		
+		$sql = 'SELECT DISTINCT hg.groupid, hg.hostid '.
+				' FROM hosts_groups hg '.
+				' WHERE EXISTS( SELECT i.itemid '.
+								' FROM items i, functions f'.
+								' WHERE i.hostid=hg.hostid '.
+									' AND f.itemid=i.itemid '.
+									' AND f.triggerid='.$_REQUEST['triggerid'].')'.
+						$sql_where;
+		if($host_group = DBfetch(DBselect($sql,1))){
+			if(!isset($_REQUEST['groupid']) || !isset($_REQUEST['hostid'])){
+				$_REQUEST['groupid'] = $host_group['groupid'];
+				$_REQUEST['hostid'] = $host_group['hostid'];
+			}
+			else if(($_REQUEST['groupid']!=$host_group['groupid']) || ($_REQUEST['hostid']!=$host_group['hostid'])){
+				$_REQUEST['triggerid'] = 0;
+			}
+		}
+		else{
+//			$_REQUEST['triggerid'] = 0;
+		}
+	}
+	
+	$params=array();
+	$options = array('with_items','only_current_node');
+	foreach($options as $option) $params[$option] = 1;
 	
+	$PAGE_GROUPS = get_viewed_groups(PERM_READ_WRITE, $params);
+	$PAGE_HOSTS = get_viewed_hosts(PERM_READ_WRITE, $PAGE_GROUPS['selected'], $params);
+
+	validate_group_with_host($PAGE_GROUPS,$PAGE_HOSTS);
+
+	$available_groups = $PAGE_GROUPS['groupids'];
+	$available_hosts = $PAGE_HOSTS['hostids'];
+
+	$available_triggers = get_accessible_triggers(PERM_READ_WRITE,$PAGE_HOSTS['hostids'],PERM_RES_IDS_ARRAY,null,0);
+?>
+<?php
+
 	$form = new CForm();
-	$form->SetMethod('get');
-	$form->AddItem(new CButton('form',S_CREATE_TRIGGER));
+	$form->setMethod('get');
+	$form->addItem(new CButton('form',S_CREATE_TRIGGER));
 
 	show_table_header(S_CONFIGURATION_OF_TRIGGERS_BIG,$form);
 	echo SBR;
@@ -370,91 +422,69 @@
 	else{
 /* TABLE */
 		$r_form = new CForm();
-		$r_form->SetMethod('get');
-		$r_form->AddItem(array('[', 
+		$r_form->setMethod('get');
+		$r_form->addItem(array('[', 
 			new CLink($showdisabled ? S_HIDE_DISABLED_TRIGGERS : S_SHOW_DISABLED_TRIGGERS,
 				'triggers.php?showdisabled='.($showdisabled ? 0 : 1),NULL),
 			']', SPACE));
 	
-		$cmbGroup = new CComboBox('groupid',$_REQUEST['groupid'],'submit()');
-		$cmbHosts = new CComboBox('hostid',$_REQUEST['hostid'],'submit()');
+		$cmbGroups = new CComboBox('groupid',$PAGE_GROUPS['selected'],'javascript: submit();');
+		$cmbHosts = new CComboBox('hostid',$PAGE_HOSTS['selected'],'javascript: submit();');
 	
-		$cmbGroup->AddItem(0,S_ALL_SMALL);
-		
-		
-		$sql = 'SELECT DISTINCT g.groupid,g.name '.
-				' FROM groups g, hosts_groups hg, hosts h '.
-				' WHERE '.DBcondition('g.groupid',$available_groups).
-					' AND hg.groupid=g.groupid '.
-					' AND h.hostid=hg.hostid '.
-					' AND EXISTS(SELECT DISTINCT i.itemid FROM items i WHERE i.hostid=h.hostid ) '.
-				' ORDER BY g.name';	
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbGroup->AddItem($row['groupid'],$row['name']);
+		foreach($PAGE_GROUPS['groups'] as $groupid => $name){
+			$cmbGroups->addItem($groupid, get_node_name_by_elid($groupid).$name);
 		}
-		$r_form->AddItem(array(S_GROUP.SPACE,$cmbGroup));
-		
-		$sql_from = '';
-		$sql_where = '';
-		if($_REQUEST['groupid'] > 0){
-			$cmbHosts->AddItem(0,S_ALL_SMALL);
-			$sql_from .= ',hosts_groups hg ';
-			$sql_where.= ' AND hg.hostid=h.hostid AND hg.groupid='.$_REQUEST['groupid'];
+		foreach($PAGE_HOSTS['hosts'] as $hostid => $name){
+			$cmbHosts->addItem($hostid, get_node_name_by_elid($hostid).$name);
 		}
-			
-		$sql='SELECT DISTINCT h.hostid,h.host '.
-			' FROM hosts h,items i '.$sql_from.
-			' WHERE h.hostid=i.hostid '.
-				' AND '.DBcondition('h.hostid',$available_hosts).
-				$sql_where.
-			' ORDER BY h.host';
 		
-		$result=DBselect($sql);
-		while($row=DBfetch($result)){
-			$cmbHosts->AddItem($row['hostid'],$row['host']);
-		}
-	
-		$r_form->AddItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
-	
-		show_table_header(S_TRIGGERS_BIG, $r_form);
+		$r_form->addItem(array(S_GROUP.SPACE,$cmbGroups));
+		$r_form->addItem(array(SPACE.S_HOST.SPACE,$cmbHosts));
+				
+		$row_count = 0;
+		$numrows = new CSpan(null,'info');
+		$numrows->addOption('name','numrows');	
+		$header = get_table_header(array(S_TRIGGERS_BIG,
+						new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+						S_FOUND.': ',$numrows,)
+						);			
+		show_table_header($header, $r_form);
 			
 		$form = new CForm('triggers.php');
-		$form->SetName('triggers');
-		$form->SetMethod('post');
-		$form->AddVar('hostid',$_REQUEST['hostid']);
+		$form->setName('triggers');
+		$form->setMethod('post');
+		$form->addVar('hostid',$_REQUEST['hostid']);
 
 		$table = new CTableInfo(S_NO_TRIGGERS_DEFINED);
 		$table->setHeader(array(
 			make_sorting_link(S_SEVERITY,'t.priority'), 
 			make_sorting_link(S_STATUS,'t.status'), 
 
-			$_REQUEST['hostid'] > 0 ? NULL : make_sorting_link(S_HOST,'h.host'),
+			($_REQUEST['hostid'] > 0)?NULL:make_sorting_link(S_HOST,'h.host'),
 			array(	new CCheckBox('all_triggers',NULL,
 					"CheckAll('".$form->GetName()."','all_triggers');")
 				,make_sorting_link(S_NAME,'t.description'),
 			),
 			S_EXPRESSION));
 
-		$sql = 'SELECT DISTINCT h.hostid,h.host,t.*'.
+		$sql_from = '';
+		$sql_where = '';	
+		if($showdisabled == 0){
+		    $sql_where.= ' AND t.status <> '.TRIGGER_STATUS_DISABLED;
+		}
+
+		if($PAGE_HOSTS['selected'] > 0)
+			$sql_where.= ' AND h.hostid='.$PAGE_HOSTS['selected'];
+	
+		$sql = 'SELECT DISTINCT h.hostid,h.host,h.status as hoststatus,t.*'.
 			' FROM triggers t '.
 				' LEFT JOIN functions f ON t.triggerid=f.triggerid '.
 				' LEFT JOIN items i ON f.itemid=i.itemid '.
 				' LEFT JOIN hosts h ON h.hostid=i.hostid '.
-				(($_REQUEST['groupid']>0)?' LEFT JOIN hosts_groups hg ON hg.hostid=h.hostid ':'').
 			' WHERE '.DBin_node('t.triggerid').
-				' AND '.DBcondition('t.triggerid',$available_triggers);
-
-		if($showdisabled == 0)
-		    $sql .= ' AND t.status <> '.TRIGGER_STATUS_DISABLED;
-
-		if($_REQUEST['hostid'] > 0) 
-			$sql .= ' AND h.hostid='.$_REQUEST['hostid'];
-			
-		if($_REQUEST['groupid'] > 0)
-			$sql .= ' AND hg.groupid='.$_REQUEST['groupid'];
-
-		$sql .= order_by('h.host,t.description,t.priority,t.status');
+				$sql_where.
+				' AND '.DBcondition('t.triggerid',$available_triggers).
+			order_by('h.host,t.description,t.priority,t.status');
 
 		$result=DBselect($sql);
 		while($row=DBfetch($result)){
@@ -462,7 +492,7 @@
 			if(is_null($row['host'])) $row['host'] = '';
 			if(is_null($row['hostid'])) $row['hostid'] = '0';
 
-			$description = array(new CCheckBox('g_triggerid['.$row['triggerid'].']', NULL,NULL,$row["triggerid"]), SPACE);
+			$description = array(new CCheckBox('g_triggerid['.$row['triggerid'].']', NULL,NULL,$row['triggerid']), SPACE);
 
 			if($row['templateid']){
 				$real_hosts = get_realhosts_by_triggerid($row['triggerid']);
@@ -487,8 +517,8 @@
 				foreach($deps as $val)
 					$description[] = array(BR(),expand_trigger_description($val));
 			}
-
-			if ($row['error'] != '')
+			
+			if ( ($row['error'] != '') && ($row['hoststatus'] != 3) ) //host status 3 means Template
 			{
 				$description[] = array(BR(), bold(S_ERROR.':'), SPACE);
 				$description[] = array(BR(), new CSpan($row['error'], 'red'));
@@ -530,6 +560,7 @@
 				$description,
 				explode_exp($row['expression'],1)
 			));
+			$row_count++;
 		}
 		
 		$table->SetFooter(new CCol(array(
@@ -547,6 +578,9 @@
 		$form->AddItem($table);
 		$form->Show();
 	}
+	if(isset($row_count))
+		zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 ?>
 
 <?php
diff --git a/frontends/php/users.php b/frontends/php/users.php
index d5b8cc6..b334ca2 100644
--- a/frontends/php/users.php
+++ b/frontends/php/users.php
@@ -1,7 +1,7 @@
 <?php
 /* 
 ** ZABBIX
-** Copyright (C) 2000-2005 SIA Zabbix
+** Copyright (C) 2000-2009 SIA Zabbix
 **
 ** This program is free software; you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
@@ -24,6 +24,7 @@
 	require_once('include/media.inc.php');
 	require_once('include/users.inc.php');
 	require_once('include/forms.inc.php');
+	require_once('include/classes/curl.inc.php');
 	require_once('include/js.inc.php');
 
 	$page['title'] = 'S_USERS';
@@ -32,7 +33,6 @@
 	$page['scripts'] = array('menu_scripts.js');
 
 include_once('include/page_header.php');
-
 ?>
 <?php
 	$_REQUEST['config']=get_request('config',get_profile('web.users.config',0));
@@ -65,7 +65,7 @@ include_once('include/page_header.php');
 		'lang'=>		array(T_ZBX_STR, O_OPT,	null,	NOT_EMPTY,	'(isset({config})&&({config}==0))&&isset({save})'),
 		'theme'=>		array(T_ZBX_STR, O_OPT,	null,	NOT_EMPTY,	'(isset({config})&&({config}==0))&&isset({save})'),
 		'autologin'=>	array(T_ZBX_INT, O_OPT,	null,	IN('0,1'),	null),
-		'autologout'=>	array(T_ZBX_INT, O_OPT,	null,	BETWEEN(0,3600),'(isset({config})&&({config}==0))&&isset({save})'),
+		'autologout'=>	array(T_ZBX_INT, O_OPT,	null,	BETWEEN(90,10000), null),
 		'url'=>			array(T_ZBX_STR, O_OPT,	null,	null,		'(isset({config})&&({config}==0))&&isset({save})'),
 		'refresh'=>		array(T_ZBX_INT, O_OPT,	null,	BETWEEN(0,3600),'(isset({config})&&({config}==0))&&isset({save})'),
 
@@ -94,8 +94,7 @@ include_once('include/page_header.php');
 		'set_gui_access'=>		array(T_ZBX_INT, O_OPT,	null,	IN('0,1,2'), null),
 
 /* actions */
-		'register'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	
-					IN('"add permission","delete permission"'), null),
+		'register'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT, IN('"add permission","delete permission"'), null),
 
 		'save'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
 		'delete'=>	array(T_ZBX_STR, O_OPT, P_SYS|P_ACT,	null,	null),
@@ -120,9 +119,8 @@ include_once('include/page_header.php');
 		'form_refresh'=>array(T_ZBX_STR, O_OPT, null,	null,	null)
 	);
 
-
 	check_fields($fields);
-	validate_sort_and_sortorder('u.alias',ZBX_SORT_UP);	
+	validate_sort_and_sortorder('u.alias',ZBX_SORT_UP);
 ?>
 <?php
 	if($_REQUEST['config']==0){
@@ -157,7 +155,7 @@ include_once('include/page_header.php');
 			if(($config['authentication_type'] != ZBX_AUTH_INTERNAL) && zbx_empty($_REQUEST['password1'])){
 				if(($config['authentication_type'] == ZBX_AUTH_LDAP) && isset($_REQUEST['userid'])){
 					if(GROUP_GUI_ACCESS_INTERNAL != get_user_auth($_REQUEST['userid'])){
-						$_REQUEST['password1'] = $_REQUEST['password2'] = 'zabbix';
+//						$_REQUEST['password1'] = $_REQUEST['password2'] = 'zabbix';
 					}
 				}
 				else{
@@ -183,7 +181,7 @@ include_once('include/page_header.php');
 					DBstart();
 					$result=update_user($_REQUEST['userid'],
 						$_REQUEST['name'],$_REQUEST['surname'],$_REQUEST['alias'],
-						$_REQUEST['password1'],$_REQUEST['url'],get_request('autologin',0),$_REQUEST['autologout'],
+						$_REQUEST['password1'],$_REQUEST['url'],get_request('autologin',0),get_request('autologout',0),
 						$_REQUEST['lang'],$_REQUEST['theme'],$_REQUEST['refresh'],$_REQUEST['user_type'],
 						$user_groups, $user_medias);
 						
@@ -467,6 +465,7 @@ include_once('include/page_header.php');
 	echo SBR; 
 ?>
 <?php
+	$row_count = 0;
 	if($_REQUEST['config']==0){
 		if(isset($_REQUEST['form'])){
 			insert_user_form(get_request('userid',null));
@@ -474,8 +473,15 @@ include_once('include/page_header.php');
 		else{
 			$form = new CForm(null,'post');
 			$form->SetName('users');
+		
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');	
+			$header = get_table_header(array(S_USERS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);			
+			show_table_header($header);
 
-			show_table_header(S_USERS_BIG);
 			$table=new CTableInfo(S_NO_USERS_DEFINED);
 			$table->setHeader(array(
 				array(new CCheckBox('all_users',NULL,
@@ -584,6 +590,7 @@ include_once('include/page_header.php');
 					$users_status,
 					$action
 					));
+				$row_count++;
 			}
 			$table->SetFooter(new CCol(new CButtonQMessage('delete_selected',S_DELETE_SELECTED,S_DELETE_SELECTED_USERS_Q)));
 
@@ -601,7 +608,13 @@ include_once('include/page_header.php');
 			insert_usergroups_form();
 		}
 		else{
-			show_table_header(S_USER_GROUPS_BIG);
+			$numrows = new CSpan(null,'info');
+			$numrows->addOption('name','numrows');	
+			$header = get_table_header(array(S_USER_GROUPS_BIG,
+							new CSpan(SPACE.SPACE.'|'.SPACE.SPACE, 'divider'),
+							S_FOUND.': ',$numrows,)
+							);			
+			show_table_header($header);
 			$form = new CForm();
 
 			$table = new CTableInfo(S_NO_USER_GROUPS_DEFINED);
@@ -672,6 +685,7 @@ include_once('include/page_header.php');
 					),
 					new CCol($users,'wraptext')
 					));
+				$row_count++;
 			}
 			$table->SetFooter(new CCol(new CButtonQMessage('delete_selected',S_DELETE_SELECTED,S_DELETE_SELECTED_GROUPS_Q)));
 
@@ -679,6 +693,8 @@ include_once('include/page_header.php');
 			$form->Show();
 		}
 	}
+	zbx_add_post_js('insert_in_element("numrows","'.$row_count.'");');
+
 ?>
 <?php
 
diff --git a/include/cfg.h b/include/cfg.h
index 19b7f51..baefe45 100644
--- a/include/cfg.h
+++ b/include/cfg.h
@@ -34,7 +34,7 @@
 #define AF_USE_EVENT_LOG            0x0002
 #define AF_LOG_UNRESOLVED_SYMBOLS   0x0004
 
-extern int	CONFIG_ZABBIX_FORKS;
+extern int	CONFIG_ZABBIX_FORKS;/* Contains a number of listeners for processing passive checks. */
 extern char	*CONFIG_FILE;
 
 extern char	*CONFIG_LOG_FILE;
diff --git a/include/common.h b/include/common.h
index 0e100af..e6c94ed 100644
--- a/include/common.h
+++ b/include/common.h
@@ -313,7 +313,8 @@ typedef enum
 	SYSMAP_ELEMENT_TYPE_HOST = 0,
 	SYSMAP_ELEMENT_TYPE_MAP,
 	SYSMAP_ELEMENT_TYPE_TRIGGER,
-	SYSMAP_ELEMENT_TYPE_HOST_GROUP
+	SYSMAP_ELEMENT_TYPE_HOST_GROUP,
+	SYSMAP_ELEMENT_TYPE_IMAGE
 } zbx_sysmap_element_types_t;
 
 /* Special item key used for storing server status */
diff --git a/include/db.h b/include/db.h
index d8440b2..e147807 100644
--- a/include/db.h
+++ b/include/db.h
@@ -115,6 +115,8 @@ typedef enum {
 #define TRIGGER_EXPRESSION_LEN_MAX	TRIGGER_EXPRESSION_LEN+1
 #define TRIGGER_URL_LEN			255
 #define TRIGGER_URL_LEN_MAX		TRIGGER_URL_LEN+1
+#define TRIGGER_ERROR_LEN		128
+#define TRIGGER_ERROR_LEN_MAX		TRIGGER_ERROR_LEN+1
 
 #define CONDITION_VALUE_LEN		255
 #define CONDITION_VALUE_LEN_MAX		CONDITION_VALUE_LEN+1
@@ -136,10 +138,55 @@ typedef enum {
 
 #define ITEM_KEY_LEN			255
 #define ITEM_KEY_LEN_MAX		ITEM_KEY_LEN+1
+#define ITEM_DESCRIPTION_LEN		255
+#define ITEM_DESCRIPTION_LEN_MAX	ITEM_DESCRIPTION_LEN+1
+#define ITEM_SNMP_COMMUNITY_LEN		64
+#define ITEM_SNMP_COMMUNITY_LEN_MAX	ITEM_SNMP_COMMUNITY_LEN+1
+#define ITEM_SNMP_OID_LEN		255
+#define ITEM_SNMP_OID_LEN_MAX		ITEM_SNMP_OID_LEN+1
 #define ITEM_LASTVALUE_LEN		255
 #define ITEM_LASTVALUE_LEN_MAX		ITEM_LASTVALUE_LEN+1
 #define ITEM_ERROR_LEN			128
 #define ITEM_ERROR_LEN_MAX		ITEM_ERROR_LEN+1
+#define ITEM_TRAPPER_HOSTS_LEN		255
+#define ITEM_TRAPPER_HOSTS_LEN_MAX	ITEM_TRAPPER_HOSTS_LEN+1
+#define ITEM_UNITS_LEN			10
+#define ITEM_UNITS_LEN_MAX		ITEM_UNITS_LEN+1
+#define ITEM_SNMPV3_SECURITYNAME_LEN		64
+#define ITEM_SNMPV3_SECURITYNAME_LEN_MAX	ITEM_SNMPV3_SECURITYNAME_LEN+1
+#define ITEM_SNMPV3_AUTHPASSPHRASE_LEN		64
+#define ITEM_SNMPV3_AUTHPASSPHRASE_LEN_MAX	ITEM_SNMPV3_AUTHPASSPHRASE_LEN+1
+#define ITEM_SNMPV3_PRIVPASSPHRASE_LEN		64
+#define ITEM_SNMPV3_PRIVPASSPHRASE_LEN_MAX	ITEM_SNMPV3_PRIVPASSPHRASE_LEN+1
+#define ITEM_FORMULA_LEN		255
+#define ITEM_FORMULA_LEN_MAX		ITEM_FORMULA_LEN+1
+#define ITEM_LOGTIMEFMT_LEN		64
+#define ITEM_LOGTIMEFMT_LEN_MAX		ITEM_LOGTIMEFMT_LEN+1
+#define ITEM_DELAY_FLEX_LEN		255
+#define ITEM_DELAY_FLEX_LEN_MAX		ITEM_DELAY_FLEX_LEN+1
+
+#define FUNCTION_LASTVALUE_LEN		255
+#define FUNCTION_LASTVALUE_LEN_MAX	FUNCTION_LASTVALUE_LEN+1
+#define FUNCTION_FUNCTION_LEN		12
+#define FUNCTION_FUNCTION_LEN_MAX	FUNCTION_FUNCTION_LEN+1
+#define FUNCTION_PARAMETER_LEN		255
+#define FUNCTION_PARAMETER_LEN_MAX	FUNCTION_PARAMETER_LEN+1
+
+#define HISTORY_STR_VALUE_LEN		255
+#define HISTORY_STR_VALUE_LEN_MAX	HISTORY_STR_VALUE_LEN+1
+
+#define HISTORY_LOG_SOURCE_LEN		64
+#define HISTORY_LOG_SOURCE_LEN_MAX	HISTORY_LOG_SOURCE_LEN+1
+
+#define ALERT_SENDTO_LEN		100
+#define ALERT_SENDTO_LEN_MAX		ALERT_SENDTO_LEN+1
+#define ALERT_SUBJECT_LEN		255
+#define ALERT_SUBJECT_LEN_MAX		ALERT_SUBJECT_LEN+1
+#define ALERT_ERROR_LEN			128
+#define ALERT_ERROR_LEN_MAX		ALERT_ERROR_LEN+1
+
+#define APPLICATION_NAME_LEN		255
+#define APPLICATION_NAME_LEN_MAX	APPLICATION_NAME_LEN+1
 
 #define GRAPH_NAME_LEN			128
 #define GRAPH_NAME_LEN_MAX		GRAPH_NAME_LEN+1
@@ -150,9 +197,24 @@ typedef enum {
 #define ACTION_SUBJECT_LEN		255
 #define ACTION_SUBJECT_LEN_MAX		ACTION_SUBJECT_LEN+1
 
+#define DHOST_IP_LEN			39
+#define DHOST_IP_LEN_MAX		DHOST_IP_LEN+1
+
+#define DSERVICE_KEY_LEN		255
+#define DSERVICE_KEY_LEN_MAX		DSERVICE_KEY_LEN+1
 #define DSERVICE_VALUE_LEN		255
 #define DSERVICE_VALUE_LEN_MAX		DSERVICE_VALUE_LEN+1
 
+#define PROXY_DHISTORY_IP_LEN		39
+#define PROXY_DHISTORY_IP_LEN_MAX	PROXY_DHISTORY_IP_LEN+1
+#define PROXY_DHISTORY_KEY_LEN		255
+#define PROXY_DHISTORY_KEY_LEN_MAX	PROXY_DHISTORY_KEY_LEN+1
+#define PROXY_DHISTORY_VALUE_LEN	255
+#define PROXY_DHISTORY_VALUE_LEN_MAX	PROXY_DHISTORY_VALUE_LEN+1
+
+#define HTTPTEST_ERROR_LEN		255
+#define HTTPTEST_ERROR_LEN_MAX		HTTPTEST_ERROR_LEN+1
+
 #define HTTPSTEP_STATUS_LEN		255
 #define HTTPSTEP_STATUS_LEN_MAX		HTTPSTEP_STATUS_LEN+1
 
@@ -563,6 +625,7 @@ zbx_uint64_t DBget_proxy_lastaccess(const char *hostname);
 
 void    DBescape_string(const char *from, char *to, int maxlen);
 char*   DBdyn_escape_string(const char *str);
+char*	DBdyn_escape_string_len(const char *src, int max_src_len);
 
 void    DBget_item_from_db(DB_ITEM *item,DB_ROW row);
 
diff --git a/include/dbcache.h b/include/dbcache.h
index b04adcb..cc2e22b 100644
--- a/include/dbcache.h
+++ b/include/dbcache.h
@@ -25,12 +25,15 @@
 #define ZBX_DC_HISTORY struct zbx_dc_history_type
 #define ZBX_DC_TREND struct zbx_dc_trend_type
 #define ZBX_DC_NEXTCHECK struct zbx_dc_nextcheck_type
+#define ZBX_DC_ID struct zbx_dc_id_type
+#define ZBX_DC_IDS struct zbx_dc_ids_type
 
 #define	ZBX_HISTORY_SIZE	100000
 /* Must be less than ZBX_HISTORY_SIZE */
 #define	ZBX_SYNC_MAX		1000
 #define	ZBX_TREND_SIZE		100000
 #define	ZBX_TEXTBUFFER_SIZE	16384*1024
+#define ZBX_IDS_SIZE		6
 
 #define ZBX_SYNC_PARTIAL	0
 #define	ZBX_SYNC_FULL		1
@@ -43,6 +46,17 @@ typedef union{
 	char		*value_str;
 } history_value_t;
 
+ZBX_DC_ID
+{
+	char		table_name[64], field_name[64];
+	zbx_uint64_t	lastid;
+};
+
+ZBX_DC_IDS
+{
+	ZBX_DC_ID	id[ZBX_IDS_SIZE];
+};
+
 ZBX_DC_HISTORY
 {
 	zbx_uint64_t	itemid;
@@ -57,6 +71,7 @@ ZBX_DC_HISTORY
 	int		lastlogsize;
 	int		keep_history;
 	int		keep_trends;
+	int		functions;
 };
 
 ZBX_DC_TREND
@@ -103,4 +118,6 @@ void	DCinit_nextchecks();
 void	DCadd_nextcheck(DB_ITEM *item, time_t now, time_t timediff, const char *error_msg);
 void	DCflush_nextchecks();
 
+zbx_uint64_t	DCget_nextid(const char *table_name, const char *field_name, int num);
+
 #endif
diff --git a/include/dbschema.h b/include/dbschema.h
index 39f6cdb..3c1061d 100644
--- a/include/dbschema.h
+++ b/include/dbschema.h
@@ -27,6 +27,7 @@ ZBX_FIELD
 	char    *name;
 	int	type;
 	int	flags;
+	char	*rel;
 };
 
 #define ZBX_MAX_FIELDS 64
diff --git a/include/mutexs.h b/include/mutexs.h
index 83c5075..76e3134 100644
--- a/include/mutexs.h
+++ b/include/mutexs.h
@@ -43,8 +43,9 @@
 #	define ZBX_MUTEX_LOG		0
 #	define ZBX_MUTEX_NODE_SYNC	1
 #	define ZBX_MUTEX_CACHE		2
+#	define ZBX_MUTEX_CACHE_IDS	3
 /* This has to be the last MUTEX in the list with MAX number */
-#	define ZBX_MUTEX_COUNT		3
+#	define ZBX_MUTEX_COUNT		4
 
 #	define ZBX_MUTEX_MAX_TRIES	20 /* seconds */
 
diff --git a/include/sysinfo.h b/include/sysinfo.h
index c5bd3d3..75be99f 100644
--- a/include/sysinfo.h
+++ b/include/sysinfo.h
@@ -47,7 +47,7 @@ typedef struct zbx_result_s {
 #define ISSET_STR(res)		((res)->type & AR_STRING)
 #define ISSET_TEXT(res)		((res)->type & AR_TEXT)
 #define ISSET_MSG(res)		((res)->type & AR_MESSAGE)
-#define ISSET_RESULT(res)	((res)->type & (AR_DOUBLE | AR_UINT64 | AR_STRING | AR_TEXT | AR_MESSAGE))
+#define ISSET_RESULT(res)	((res)->type & (AR_DOUBLE | AR_UINT64 | AR_STRING | AR_TEXT))
 
 /* UNSER RESULT */
 
diff --git a/include/zbxserver.h b/include/zbxserver.h
index c17dab2..80ad964 100644
--- a/include/zbxserver.h
+++ b/include/zbxserver.h
@@ -38,8 +38,8 @@ void	update_functions(DB_ITEM *item, time_t now);
 void	process_new_value(DB_ITEM *item, AGENT_RESULT *value, time_t now);
 void	proxy_process_new_value(DB_ITEM *item, AGENT_RESULT *value, time_t now);
 
-void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item, char **data, int macro_type);
-void	substitute_macros(DB_EVENT *event, DB_ACTION *action, char **data);
+void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item, DB_ESCALATION *escalation, char **data, int macro_type);
+void	substitute_macros(DB_EVENT *event, DB_ACTION *action, DB_ESCALATION *escalation, char **data);
 	
 int	evaluate_expression(int *result,char **expression, DB_TRIGGER *triggger, char *error, int maxerrlen);
 #endif
diff --git a/m4/netsnmp.m4 b/m4/netsnmp.m4
index edd7de0..46e57a4 100644
--- a/m4/netsnmp.m4
+++ b/m4/netsnmp.m4
@@ -101,6 +101,17 @@ AC_HELP_STRING([--with-net-snmp@<:@=ARG@:>@],
 		       	AC_MSG_ERROR([Not found NET-SNMP library])
 			])
 
+		dnl Check for localname in struct snmp_session
+		AC_MSG_CHECKING(for localname in struct snmp_session)
+		AC_TRY_COMPILE([#include <net-snmp/net-snmp-config.h>
+		#include <net-snmp/net-snmp-includes.h>],
+		[struct snmp_session session;
+		session.localname = "";
+		],
+		AC_DEFINE(HAVE_SNMP_SESSION_LOCALNAME,1,[Define to 1 if 'session.localname' exist.])
+		AC_MSG_RESULT(yes),
+		AC_MSG_RESULT(no))
+
 		LIBS="${_save_netsnmp_libs}"
 		LDFLAGS="${_save_netsnmp_ldflags}"
 		CFLAGS="${_save_netsnmp_cflags}"
@@ -110,6 +121,7 @@ AC_HELP_STRING([--with-net-snmp@<:@=ARG@:>@],
 
 		AC_DEFINE(HAVE_NETSNMP,1,[Define to 1 if NET-SNMP should be enabled.])
 		AC_DEFINE(HAVE_SNMP,1,[Define to 1 if SNMP should be enabled.])
+		AC_DEFINE([SNMP_NO_DEBUGGING],[],[Disabling debugging messages from NET-SNMP library])
 
 		found_netsnmp="yes"
 	else
diff --git a/m4/ucdsnmp.m4 b/m4/ucdsnmp.m4
index 933fd04..45a43a2 100644
--- a/m4/ucdsnmp.m4
+++ b/m4/ucdsnmp.m4
@@ -79,6 +79,31 @@ AC_DEFUN([LIBSNMP_CHECK_CONFIG],
                 SNMP_CPPFLAGS=-I$SNMP_INCDIR
                 SNMP_LDFLAGS="-L$SNMP_LIBDIR $SNMP_LFLAGS -lsnmp $SNMP_LIBS"
 
+		_save_udcsnmp_libs="${LIBS}"
+		_save_udcsnmp_ldflags="${LDFLAGS}"
+		_save_udcsnmp_cflags="${CFLAGS}"
+		LIBS="${LIBS} ${SNMP_LIBS}"
+		LDFLAGS="${LDFLAGS} ${SNMP_LDFLAGS}"
+		CFLAGS="${CFLAGS} ${SNMP_CPPFLAGS}"
+
+		dnl Check for localname in struct snmp_session
+		AC_MSG_CHECKING(for localname in struct snmp_session)
+		AC_TRY_COMPILE([#include <ucd-snmp/ucd-snmp-config.h>
+		#include <ucd-snmp/ucd-snmp-includes.h>],
+		[struct snmp_session session;
+		session.localname = "";
+		],
+		AC_DEFINE(HAVE_SNMP_SESSION_LOCALNAME,1,[Define to 1 if 'session.localname' exist.])
+		AC_MSG_RESULT(yes),
+		AC_MSG_RESULT(no))
+
+		LIBS="${_save_udcsnmp_libs}"
+		LDFLAGS="${_save_udcsnmp_ldflags}"
+		CFLAGS="${_save_udcsnmp_cflags}"
+		unset _save_udcsnmp_libs
+		unset _save_udcsnmp_ldflags
+		unset _save_udcsnmp_cflags
+
                 AC_DEFINE(HAVE_UCDSNMP,1,[Define to 1 if UCD-SNMP should be enabled.])
                 AC_DEFINE(HAVE_SNMP,1,[Define to 1 if SNMP should be enabled.])
 	fi
diff --git a/misc/clock/clock.fla b/misc/clock/clock.fla
index 0d2ed4b..7bb107a 100755
Binary files a/misc/clock/clock.fla and b/misc/clock/clock.fla differ
diff --git a/misc/conf/zabbix_agentd.conf b/misc/conf/zabbix_agentd.conf
index 8881312..3f5b188 100644
--- a/misc/conf/zabbix_agentd.conf
+++ b/misc/conf/zabbix_agentd.conf
@@ -30,11 +30,12 @@ Hostname=ZABBIX Server
 # Source IP address for outgouing connections
 #SourceIP=
 
-# Number of pre-forked instances of zabbix_agentd.
-# Default value is 5
-# This parameter must be between 1 and 16
+# Number of pre-forked instances of zabbix_agentd,
+# which process passive checks.
+# Default value is 3.
+# This parameter must be between 1 and 16.
 
-StartAgents=5
+StartAgents=3
 
 # How often refresh list of active checks. 2 minutes by default.
 
@@ -44,6 +45,11 @@ StartAgents=5
 
 #DisableActive=1
 
+# Disable passive checks. The agent will not listen to any TCP ports.
+# Only active checks will be processed.
+
+#DisablePassive=1
+
 # Enable remote commands for ZABBIX agent. By default remote commands disabled.
 
 #EnableRemoteCommands=1
diff --git a/misc/conf/zabbix_server.conf b/misc/conf/zabbix_server.conf
index 1b837ea..9db2519 100644
--- a/misc/conf/zabbix_server.conf
+++ b/misc/conf/zabbix_server.conf
@@ -49,10 +49,10 @@
 
 #ListenPort=10051
 
-# Source IP address for outgouing connections
+# Source IP address for outgoing connections
 #SourceIP=
 
-# Listen interface for trapper. Trapper will listen all network interfaces
+# Listen interface for trapper. Trapper will listen on all network interfaces
 # if this parameter is missing.
 
 #ListenIP=127.0.0.1
@@ -94,7 +94,7 @@ Timeout=5
 # After how many seconds of unreachability treat a host as unavailable
 #UnreachablePeriod=45
 
-# How ofter check host for availability during the unavailability period
+# How often check host for availability during the unavailability period
 #UnavailableDelay=60
 
 # Name of PID file
@@ -126,7 +126,7 @@ AlertScriptsPath=/home/zabbix/bin/
 # Temporary directory. Default is /tmp
 #TmpDir=/tmp
 
-# Frequency of ICMP pings (item keys 'icmpping' and 'icmppingsec'). Defauls is 60 seconds.
+# Frequency of ICMP pings (item keys 'icmpping' and 'icmppingsec'). Default is 60 seconds.
 #PingerFrequency=60
 
 # Database host name
diff --git a/src/libs/zbxcomms/comms.c b/src/libs/zbxcomms/comms.c
index 1712283..3124231 100644
--- a/src/libs/zbxcomms/comms.c
+++ b/src/libs/zbxcomms/comms.c
@@ -926,21 +926,27 @@ int	zbx_tcp_recv_ext(zbx_sock_t *s, char **data, unsigned char flags)
 
 
 		/* fill static buffer */
-		while(	read_bytes < expected_len && left > 0
-			&& ZBX_TCP_ERROR != (nbytes = ZBX_TCP_READ( s->socket, s->buf_stat + read_bytes, left)))
-		{
+		if ( s->buf_stat[ read_bytes - 1 ] != '\n' ) /* Not try to read from an empty socket. */
+		{	
+			while(	read_bytes < expected_len && left > 0
+				&& ZBX_TCP_ERROR != (nbytes = ZBX_TCP_READ( s->socket, s->buf_stat + read_bytes, left)))
+			{
 
-			read_bytes += nbytes;
+				read_bytes += nbytes;
 
-			if( flags & ZBX_TCP_READ_UNTIL_CLOSE ) {
-				if(nbytes == 0)	break;
-			} else {
-				if(nbytes < left) break;
-			}
+				if( flags & ZBX_TCP_READ_UNTIL_CLOSE ) 
+				{
+					if(nbytes == 0)	break;
+				} 
+				else 
+				{
+					if(nbytes < left) break;
+				}
 
-			left -= nbytes;
+				left -= nbytes;
+			}
 		}
-
+		
 		s->buf_stat[read_bytes] = '\0';
 		if( (sizeof(s->buf_stat) - 1) == read_bytes) /* static buffer is full */
 		{
diff --git a/src/libs/zbxconf/cfg.c b/src/libs/zbxconf/cfg.c
index bc8ddf1..d03a53e 100644
--- a/src/libs/zbxconf/cfg.c
+++ b/src/libs/zbxconf/cfg.c
@@ -22,17 +22,19 @@
 #include "log.h"
 
 char	*CONFIG_FILE			= NULL;
-int	CONFIG_ZABBIX_FORKS		= 5;
+int	CONFIG_ZABBIX_FORKS		= 3;
 
 char	*CONFIG_LOG_FILE		= NULL;
 int	CONFIG_LOG_FILE_SIZE		= 1;
 char	CONFIG_ALLOW_ROOT		= 0;
 int	CONFIG_TIMEOUT			= AGENT_TIMEOUT;
 
-static int	parse_cfg_object(const char *cfg_file, struct cfg_line *cfg)
+static int	__parse_cfg_file(const char *cfg_file, struct cfg_line *cfg, int level);
+
+static int	parse_cfg_object(const char *cfg_file, struct cfg_line *cfg, int level)
 {
 #ifdef _WINDOWS
-	return parse_cfg_file(cfg_file, cfg);
+	return __parse_cfg_file(cfg_file, cfg, level);
 #else
 	DIR		*dir;
 	struct stat	sb;
@@ -46,7 +48,7 @@ static int	parse_cfg_object(const char *cfg_file, struct cfg_line *cfg)
 	}
 
 	if (!S_ISDIR(sb.st_mode))
-		return parse_cfg_file(cfg_file, cfg);
+		return __parse_cfg_file(cfg_file, cfg, level);
 
 	if (NULL == (dir = opendir(cfg_file))) {
 		zbx_error("%s: %s\n", cfg_file, strerror(errno));
@@ -59,7 +61,7 @@ static int	parse_cfg_object(const char *cfg_file, struct cfg_line *cfg)
 		if (stat(incl_file, &sb) == -1 || !S_ISREG(sb.st_mode))
 			continue;
 
-		if (parse_cfg_file(incl_file, cfg) == FAIL) {
+		if (__parse_cfg_file(incl_file, cfg, level) == FAIL) {
 			result = FAIL;
 			break;
 		}
@@ -93,12 +95,10 @@ static int	parse_cfg_object(const char *cfg_file, struct cfg_line *cfg)
  * Comments:                                                                  *
  *                                                                            *
  ******************************************************************************/
-int	parse_cfg_file(const char *cfg_file,struct cfg_line *cfg)
+static int	__parse_cfg_file(const char *cfg_file, struct cfg_line *cfg, int level)
 {
 	FILE	*file;
 
-	static int level = 0;
-
 #define ZBX_MAX_INCLUDE_LEVEL 10
 
 #define ZBX_CFG_LTRIM_CHARS "\t "
@@ -118,10 +118,10 @@ int	parse_cfg_file(const char *cfg_file,struct cfg_line *cfg)
 
 	assert(cfg);
 
-	if(++level > ZBX_MAX_INCLUDE_LEVEL)
+	if (++level > ZBX_MAX_INCLUDE_LEVEL)
 	{
-		/* Ignore include files of depth 10 */
-		return result;
+		zbx_error("Recursion detected! Skipped processing of '%s'", cfg_file);
+		return FAIL;
 	}
 
 	if(cfg_file)
@@ -161,7 +161,8 @@ int	parse_cfg_file(const char *cfg_file,struct cfg_line *cfg)
 
 				if(strcmp(parameter, "Include") == 0)
 				{
-					parse_cfg_object(value, cfg);
+					if (FAIL == (result = parse_cfg_object(value, cfg, level)))
+						break;
 				}
 
 				for(i = 0; value[i] != '\0'; i++)
@@ -224,7 +225,7 @@ int	parse_cfg_file(const char *cfg_file,struct cfg_line *cfg)
 		}
 	}
 
-	return	SUCCEED;
+	return	result;
 
 lbl_cannot_open:
 	zbx_error("Cannot open config file [%s] [%s].",cfg_file,strerror(errno));
@@ -238,3 +239,8 @@ lbl_incorrect_config:
 	zbx_error("Wrong value of [%s] in line %d.", cfg[i].parameter, lineno);
 	exit(1);
 }
+
+int	parse_cfg_file(const char *cfg_file,struct cfg_line *cfg)
+{
+	return __parse_cfg_file(cfg_file, cfg, 0);
+}
diff --git a/src/libs/zbxdbcache/dbcache.c b/src/libs/zbxdbcache/dbcache.c
index 65f40df..a5c2d26 100644
--- a/src/libs/zbxdbcache/dbcache.c
+++ b/src/libs/zbxdbcache/dbcache.c
@@ -29,6 +29,8 @@
 
 #define	LOCK_CACHE	zbx_mutex_lock(&cache_lock)
 #define	UNLOCK_CACHE	zbx_mutex_unlock(&cache_lock)
+#define	LOCK_CACHE_IDS		zbx_mutex_lock(&cache_ids_lock)
+#define	UNLOCK_CACHE_IDS	zbx_mutex_unlock(&cache_ids_lock)
 
 #define ZBX_GET_SHM_DBCACHE_KEY(smk_key) 								\
 	{if( -1 == (shm_key = ftok(CONFIG_FILE, (int)'c') )) 						\
@@ -43,7 +45,10 @@
         }}
 
 ZBX_DC_CACHE		*cache = NULL;
+ZBX_DC_IDS		*ids = NULL;
+
 static ZBX_MUTEX	cache_lock;
+static ZBX_MUTEX	cache_ids_lock;
 
 static char		*sql = NULL;
 static int		sql_allocated = 65536;
@@ -469,7 +474,7 @@ static void	DCmass_update_triggers(ZBX_DC_HISTORY *history, int history_num)
 			TRIGGER_STATUS_ENABLED);
 
 	for (i = 0; i < history_num; i++)
-		if (0 == history[i].value_null)
+		if (0 != history[i].functions)
 			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ZBX_FS_UI64 ",",
 					history[i].itemid);
 
@@ -478,6 +483,11 @@ static void	DCmass_update_triggers(ZBX_DC_HISTORY *history, int history_num)
 		sql_offset--;
 		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ")");
 	}
+	else
+	{
+		zabbix_log(LOG_LEVEL_DEBUG, "No items with triggers");
+		return;
+	}
 
 	result = DBselect("%s", sql);
 
@@ -554,26 +564,30 @@ static void	DCmass_update_item(ZBX_DC_HISTORY *history, int history_num)
 	DB_RESULT	result;
 	DB_ROW		row;
 	DB_ITEM		item;
-	char		value_esc[ITEM_LASTVALUE_LEN_MAX];
+	char		*value_esc;
 	int		sql_offset = 0, i;
 	ZBX_DC_HISTORY	*h;
+	zbx_uint64_t	*ids = NULL;
+	int		ids_alloc = 1024, ids_num = 0;
 
 	zabbix_log( LOG_LEVEL_DEBUG, "In DCmass_update_item()");
 
+	ids = zbx_malloc(ids, ids_alloc * sizeof(zbx_uint64_t));
+
+	for (i = 0; i < history_num; i++)
+		uint64_array_add(&ids, &ids_alloc, &ids_num, history[i].itemid);
+
 	zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 1024,
-			"select %s where h.hostid = i.hostid and i.itemid in (",
+			"select %s where h.hostid = i.hostid and",
 			ZBX_SQL_ITEM_SELECT,
 			TRIGGER_STATUS_ENABLED);
 
-	for (i = 0; i < history_num; i++)
-		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ZBX_FS_UI64 ",",
-				history[i].itemid);
+	DBadd_condition_alloc(&sql, &sql_allocated, &sql_offset, "i.itemid", ids, ids_num);
 
-	if (sql[sql_offset - 1] == ',')
-	{
-		sql_offset--;
-		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ")");
-	}
+	zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32,
+			" order by i.itemid");
+
+	zbx_free(ids);
 
 	result = DBselect("%s", sql);
 
@@ -715,17 +729,19 @@ static void	DCmass_update_item(ZBX_DC_HISTORY *history, int history_num)
 			break;
 		case ITEM_VALUE_TYPE_STR:
 		case ITEM_VALUE_TYPE_TEXT:
-			DBescape_string(h->value_orig.value_str, value_esc, sizeof(value_esc));
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512,
+			value_esc = DBdyn_escape_string_len(h->value_orig.value_str, ITEM_LASTVALUE_LEN);
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 576,
 					",prevvalue=lastvalue,lastvalue='%s'",
 					value_esc);
+			zbx_free(value_esc);
 			break;
 		case ITEM_VALUE_TYPE_LOG:
-			DBescape_string(h->value_orig.value_str, value_esc, sizeof(value_esc));
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512,
+			value_esc = DBdyn_escape_string_len(h->value_orig.value_str, ITEM_LASTVALUE_LEN);
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 576,
 					",prevvalue=lastvalue,lastvalue='%s',lastlogsize=%d",
 					value_esc,
 					h->lastlogsize);
+			zbx_free(value_esc);
 			break;
 		}
 
@@ -746,6 +762,18 @@ static void	DCmass_update_item(ZBX_DC_HISTORY *history, int history_num)
 
 		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 128, " where itemid=" ZBX_FS_UI64 ";\n",
 				item.itemid);
+
+		if (sql_offset > ZBX_MAX_SQL_SIZE)
+		{
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "end;\n");
+#endif
+			DBexecute("%s", sql);
+			sql_offset = 0;
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
+#endif
+		}
 	}
 	DBfree_result(result);
 
@@ -773,22 +801,57 @@ static void	DCmass_update_item(ZBX_DC_HISTORY *history, int history_num)
  ******************************************************************************/
 static void	DCmass_proxy_update_item(ZBX_DC_HISTORY *history, int history_num)
 {
-	int	sql_offset = 0, i;
+	int		sql_offset = 0, i, j;
+	zbx_uint64_t	*ids = NULL;
+	int		ids_alloc = 1024, ids_num = 0;
+	int		lastlogsize;
+
+	zabbix_log(LOG_LEVEL_DEBUG, "In DCmass_proxy_update_item()");
+
+	ids = zbx_malloc(ids, ids_alloc * sizeof(zbx_uint64_t));
 
-	zabbix_log( LOG_LEVEL_DEBUG, "In DCmass_proxy_update_item()");
+	for (i = 0; i < history_num; i++)
+		if (history[i].value_type == ITEM_VALUE_TYPE_LOG)
+			uint64_array_add(&ids, &ids_alloc, &ids_num, history[i].itemid);
 
 #ifdef HAVE_ORACLE
 	zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
 #endif
 
-	for (i = 0; i < history_num; i++)
+	for (i = 0; i < ids_num; i++)
 	{
-		if (history[i].value_type == ITEM_VALUE_TYPE_LOG)
+		lastlogsize = -1;
+
+		for (j = 0; j < history_num; j++)
 		{
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 128,
-					"update items set lastlogsize=%d where itemid=" ZBX_FS_UI64 ";\n",
-					history[i].lastlogsize,
-					history[i].itemid);
+			if (history[j].itemid != ids[i])
+				continue;
+
+			if (history[j].value_type != ITEM_VALUE_TYPE_LOG)
+				continue;
+
+			if (lastlogsize < history[j].lastlogsize)
+				lastlogsize = history[j].lastlogsize;
+		}
+
+		if (-1 == lastlogsize)
+			continue;
+
+		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 128,
+				"update items set lastlogsize=%d where itemid=" ZBX_FS_UI64 ";\n",
+				lastlogsize,
+				ids[i]);
+
+		if (sql_offset > ZBX_MAX_SQL_SIZE)
+		{
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "end;\n");
+#endif
+			DBexecute("%s", sql);
+			sql_offset = 0;
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
+#endif
 		}
 	}
 
@@ -796,6 +859,8 @@ static void	DCmass_proxy_update_item(ZBX_DC_HISTORY *history, int history_num)
 	zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "end;\n");
 #endif
 
+	zbx_free(ids);
+
 	if (sql_offset > 16) /* In ORACLE always present begin..end; */
 		DBexecute("%s", sql);
 }
@@ -822,7 +887,7 @@ static void DCmass_function_update(ZBX_DC_HISTORY *history, int history_num)
 	DB_ITEM		item;
 	ZBX_DC_HISTORY	*h;
 	char		*lastvalue;
-	char		value[MAX_STRING_LEN], *value_esc, *parameter_esc;
+	char		value[MAX_STRING_LEN], *value_esc, *function_esc, *parameter_esc;
 	int		sql_offset = 0, i;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In DCmass_function_update()");
@@ -836,9 +901,12 @@ static void DCmass_function_update(ZBX_DC_HISTORY *history, int history_num)
 			TRIGGER_STATUS_ENABLED);
 
 	for (i = 0; i < history_num; i++)
+	{
+		history[i].functions = 0;
 		if (0 == history[i].value_null)
 			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ZBX_FS_UI64 ",",
 					history[i].itemid);
+	}
 
 	if (sql[sql_offset - 1] == ',')
 	{
@@ -872,6 +940,8 @@ static void DCmass_function_update(ZBX_DC_HISTORY *history, int history_num)
 		if (NULL == h)
 			continue;
 
+		h->functions		= 1;
+
 		function.function	= row[ZBX_SQL_ITEM_FIELDS_NUM];
 		function.parameter	= row[ZBX_SQL_ITEM_FIELDS_NUM + 1];
 		function.itemid		= zbx_atoui64(row[ZBX_SQL_ITEM_FIELDS_NUM + 2]);
@@ -888,18 +958,20 @@ static void DCmass_function_update(ZBX_DC_HISTORY *history, int history_num)
 		/* Update only if lastvalue differs from new one */
 		if (DBis_null(lastvalue) == SUCCEED || strcmp(lastvalue, value) != 0)
 		{
-			value_esc = DBdyn_escape_string(value);
+			value_esc = DBdyn_escape_string_len(value, FUNCTION_LASTVALUE_LEN);
+			function_esc = DBdyn_escape_string(function.function);
 			parameter_esc = DBdyn_escape_string(function.parameter);
 
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 1024,
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 1280,
 					"update functions set lastvalue='%s' where itemid=" ZBX_FS_UI64
 					" and function='%s' and parameter='%s';\n",
 					value_esc,
 					function.itemid,
-					function.function,
+					function_esc,
 					parameter_esc);
 
 			zbx_free(parameter_esc);
+			zbx_free(function_esc);
 			zbx_free(value_esc);
 		}
 	}
@@ -930,7 +1002,7 @@ static void DCmass_function_update(ZBX_DC_HISTORY *history, int history_num)
 static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 {
 	int		sql_offset = 0, i;
-	char		value_esc[MAX_STRING_LEN], *value_esc_dyn;
+	char		*value_esc, *source_esc;
 	int		history_text_num, history_log_num;
 	zbx_uint64_t	id;
 #ifdef HAVE_MYSQL
@@ -1151,7 +1223,7 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 		if (0 != history[i].value_null)
 			continue;
 
-		DBescape_string(history[i].value_orig.value_str, value_esc, sizeof(value_esc));
+		value_esc = DBdyn_escape_string_len(history[i].value_orig.value_str, HISTORY_STR_VALUE_LEN);
 #ifdef HAVE_MYSQL
 		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512,
 				"(" ZBX_FS_UI64 ",%d,'%s'),",
@@ -1166,6 +1238,7 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 				history[i].clock,
 				value_esc);
 #endif
+		zbx_free(value_esc);
 	}
 
 #ifdef HAVE_MYSQL
@@ -1197,7 +1270,7 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 			if (0 != history[i].value_null)
 				continue;
 
-			DBescape_string(history[i].value_orig.value_str, value_esc, sizeof(value_esc));
+			value_esc = DBdyn_escape_string_len(history[i].value_orig.value_str, HISTORY_STR_VALUE_LEN);
 #ifdef HAVE_MYSQL
 			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512,
 					"(%d," ZBX_FS_UI64 ",%d,'%s'),",
@@ -1214,6 +1287,7 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 					history[i].clock,
 					value_esc);
 #endif
+			zbx_free(value_esc);
 		}
 
 #ifdef HAVE_MYSQL
@@ -1260,24 +1334,24 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 			if (0 != history[i].value_null)
 				continue;
 
-			value_esc_dyn = DBdyn_escape_string(history[i].value_orig.value_str);
+			value_esc = DBdyn_escape_string(history[i].value_orig.value_str);
 #ifdef HAVE_MYSQL
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"(" ZBX_FS_UI64 "," ZBX_FS_UI64 ",%d,'%s'),",
 					id,
 					history[i].itemid,
 					history[i].clock,
-					value_esc_dyn);
+					value_esc);
 #else
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"insert into history_text (id,itemid,clock,value) values "
 					"(" ZBX_FS_UI64 "," ZBX_FS_UI64 ",%d,'%s');\n",
 					id,
 					history[i].itemid,
 					history[i].clock,
-					value_esc_dyn);
+					value_esc);
 #endif
-			zbx_free(value_esc_dyn);
+			zbx_free(value_esc);
 			id++;
 		}
 
@@ -1316,31 +1390,32 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 			if (0 != history[i].value_null)
 				continue;
 
-			DBescape_string(history[i].source, value_esc, sizeof(value_esc));
-			value_esc_dyn = DBdyn_escape_string(history[i].value_orig.value_str);
+			source_esc = DBdyn_escape_string_len(history[i].source, HISTORY_LOG_SOURCE_LEN);
+			value_esc = DBdyn_escape_string(history[i].value_orig.value_str);
 #ifdef HAVE_MYSQL
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"(" ZBX_FS_UI64 "," ZBX_FS_UI64 ",%d,%d,'%s',%d,'%s'),",
 					id,
 					history[i].itemid,
 					history[i].clock,
 					history[i].timestamp,
-					value_esc,
+					source_esc,
 					history[i].severity,
-					value_esc_dyn);
+					value_esc);
 #else
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"insert into history_log (id,itemid,clock,timestamp,source,severity,value) values "
 					"(" ZBX_FS_UI64 "," ZBX_FS_UI64 ",%d,%d,'%s',%d,'%s');\n",
 					id,
 					history[i].itemid,
 					history[i].clock,
 					history[i].timestamp,
-					value_esc,
+					source_esc,
 					history[i].severity,
-					value_esc_dyn);
+					value_esc);
 #endif
-			zbx_free(value_esc_dyn);
+			zbx_free(value_esc);
+			zbx_free(source_esc);
 			id++;
 		}
 
@@ -1384,7 +1459,7 @@ static void	DCmass_add_history(ZBX_DC_HISTORY *history, int history_num)
 static void	DCmass_proxy_add_history(ZBX_DC_HISTORY *history, int history_num)
 {
 	int		sql_offset = 0, i;
-	char		value_esc[MAX_STRING_LEN], *value_esc_dyn;
+	char		*value_esc, *source_esc;
 #ifdef HAVE_MYSQL
 	int		tmp_offset;
 #endif
@@ -1479,7 +1554,7 @@ static void	DCmass_proxy_add_history(ZBX_DC_HISTORY *history, int history_num)
 	{
 		if (history[i].value_type == ITEM_VALUE_TYPE_STR)
 		{
-			DBescape_string(history[i].value_orig.value_str, value_esc, sizeof(value_esc));
+			value_esc = DBdyn_escape_string(history[i].value_orig.value_str);
 #ifdef HAVE_MYSQL
 			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512,
 					"(" ZBX_FS_UI64 ",%d,'%s'),",
@@ -1494,6 +1569,7 @@ static void	DCmass_proxy_add_history(ZBX_DC_HISTORY *history, int history_num)
 					history[i].clock,
 					value_esc);
 #endif
+			zbx_free(value_esc);
 		}
 	}
 
@@ -1517,22 +1593,22 @@ static void	DCmass_proxy_add_history(ZBX_DC_HISTORY *history, int history_num)
 	{
 		if (history[i].value_type == ITEM_VALUE_TYPE_TEXT)
 		{
-			value_esc_dyn = DBdyn_escape_string(history[i].value_orig.value_str);
+			value_esc = DBdyn_escape_string(history[i].value_orig.value_str);
 #ifdef HAVE_MYSQL
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"(" ZBX_FS_UI64 ",%d,'%s'),",
 					history[i].itemid,
 					history[i].clock,
-					value_esc_dyn);
+					value_esc);
 #else
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"insert into proxy_history (itemid,clock,value) values "
 					"(" ZBX_FS_UI64 ",%d,'%s');\n",
 					history[i].itemid,
 					history[i].clock,
-					value_esc_dyn);
+					value_esc);
 #endif
-			zbx_free(value_esc_dyn);
+			zbx_free(value_esc);
 		}
 	}
 
@@ -1556,29 +1632,30 @@ static void	DCmass_proxy_add_history(ZBX_DC_HISTORY *history, int history_num)
 	{
 		if (history[i].value_type == ITEM_VALUE_TYPE_LOG)
 		{
-			DBescape_string(history[i].source, value_esc, sizeof(value_esc));
-			value_esc_dyn = DBdyn_escape_string(history[i].value_orig.value_str);
+			source_esc = DBdyn_escape_string_len(history[i].source, HISTORY_LOG_SOURCE_LEN);
+			value_esc = DBdyn_escape_string(history[i].value_orig.value_str);
 #ifdef HAVE_MYSQL
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"(" ZBX_FS_UI64 ",%d,%d,'%s',%d,'%s'),",
 					history[i].itemid,
 					history[i].clock,
 					history[i].timestamp,
-					value_esc,
+					source_esc,
 					history[i].severity,
-					value_esc_dyn);
+					value_esc);
 #else
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc_dyn),
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 512 + strlen(value_esc),
 					"insert into proxy_history (itemid,clock,timestamp,source,severity,value) values "
 					"(" ZBX_FS_UI64 ",%d,%d,'%s',%d,'%s');\n",
 					history[i].itemid,
 					history[i].clock,
 					history[i].timestamp,
-					value_esc,
+					source_esc,
 					history[i].severity,
-					value_esc_dyn);
+					value_esc);
 #endif
-			zbx_free(value_esc_dyn);
+			zbx_free(value_esc);
+			zbx_free(source_esc);
 		}
 	}
 
@@ -2089,13 +2166,21 @@ void	init_database_cache(zbx_process_t p)
 
 	key_t	shm_key;
 	int	shm_id;
+	size_t	sz;
+	void	*ptr;
 
 	zbx_process = p;
 
 	ZBX_GET_SHM_DBCACHE_KEY(shm_key);
 
+	sz = sizeof(ZBX_DC_IDS);
+	if (0 != CONFIG_DBSYNCER_FORKS)
+		sz += sizeof(ZBX_DC_CACHE);
+
+	zabbix_log(LOG_LEVEL_DEBUG, "In init_database_cache() size:%d", (int)sz);
+
 lbl_create:
-	if ( -1 == (shm_id = shmget(shm_key, sizeof(ZBX_DC_CACHE), IPC_CREAT | IPC_EXCL | 0666 /* 0022 */)) )
+	if ( -1 == (shm_id = shmget(shm_key, sz, IPC_CREAT | IPC_EXCL | 0666 /* 0022 */)) )
 	{
 		if( EEXIST == errno )
 		{
@@ -2123,9 +2208,9 @@ lbl_create:
 		}
 	}
 	
-	cache = shmat(shm_id, 0, 0);
+	ptr = shmat(shm_id, 0, 0);
 
-	if ((void*)(-1) == cache)
+	if ((void*)(-1) == ptr)
 	{
 		zabbix_log(LOG_LEVEL_CRIT, "Can't attach shared memory for database cache. [%s]",strerror(errno));
 		exit(FAIL);
@@ -2137,11 +2222,27 @@ lbl_create:
 		exit(FAIL);
 	}
 
-	cache->last_text = cache->text;
+	if(ZBX_MUTEX_ERROR == zbx_mutex_create_force(&cache_ids_lock, ZBX_MUTEX_CACHE_IDS))
+	{
+		zbx_error("Unable to create mutex for database cache");
+		exit(FAIL);
+	}
+
+	if (0 != CONFIG_DBSYNCER_FORKS)
+	{
+		cache = ptr;
+		cache->history_first = 0;
+		cache->history_num = 0;
+		cache->trends_num = 0;
+		cache->last_text = cache->text;
+
+		ptr += sizeof(ZBX_DC_CACHE);
+	}
+	ids = ptr;
+	memset(ids, 0, sizeof(ZBX_DC_IDS));
 
 	if (NULL == sql)
 		sql = zbx_malloc(sql, sql_allocated);
-
 }
 
 /******************************************************************************
@@ -2186,18 +2287,16 @@ static void	DCsync_all()
  ******************************************************************************/
 void	free_database_cache()
 {
-
 	key_t	shm_key;
 	int	shm_id;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In free_database_cache()");
 
-	if (NULL == cache)
-		return;
-
-	DCsync_all();
+	if (0 != CONFIG_DBSYNCER_FORKS)
+		DCsync_all();
 
 	LOCK_CACHE;
+	LOCK_CACHE_IDS;
 	
 	ZBX_GET_SHM_DBCACHE_KEY(shm_key);
 
@@ -2214,8 +2313,104 @@ void	free_database_cache()
 	cache = NULL;
 
 	UNLOCK_CACHE;
+	UNLOCK_CACHE_IDS;
 
 	zbx_mutex_destroy(&cache_lock);
+	zbx_mutex_destroy(&cache_ids_lock);
 
 	zabbix_log(LOG_LEVEL_DEBUG,"End of free_database_cache()");
 }
+
+/******************************************************************************
+ *                                                                            *
+ * Function: DCget_maxid                                                      *
+ *                                                                            *
+ * Purpose: Return next id for requested table                                *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value:                                                              *
+ *                                                                            *
+ * Author: Alexander Vladishev                                                *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+zbx_uint64_t	DCget_nextid(const char *table_name, const char *field_name, int num)
+{
+	int		i, nodeid;
+	DB_RESULT	result;
+	DB_ROW		row;
+	const ZBX_TABLE	*table;
+	ZBX_DC_ID	*id;
+	zbx_uint64_t	min, max, nextid;
+
+	LOCK_CACHE_IDS;
+
+	zabbix_log(LOG_LEVEL_DEBUG, "In DCget_nextid %s.%s [%d]",
+			table_name, field_name, num);
+
+	for (i = 0; i < ZBX_IDS_SIZE; i++)
+	{
+		id = &ids->id[i];
+		if ('\0' == *id->table_name)
+			break;
+
+		if (0 == strcmp(id->table_name, table_name) && 0 == strcmp(id->field_name, field_name))
+		{
+			nextid = id->lastid + 1;
+			id->lastid += num;
+			UNLOCK_CACHE_IDS;
+
+			zabbix_log(LOG_LEVEL_DEBUG, "End of DCget_nextid %s.%s [" ZBX_FS_UI64 ":" ZBX_FS_UI64 "]",
+					table_name, field_name, nextid, id->lastid);
+			return nextid;
+		}
+	}
+
+	if (i == ZBX_IDS_SIZE)
+	{
+		zabbix_log(LOG_LEVEL_ERR, "Insufficient shared memory");
+		exit(-1);
+	}
+
+	zbx_strlcpy(id->table_name, table_name, sizeof(id->table_name));
+	zbx_strlcpy(id->field_name, field_name, sizeof(id->field_name));
+
+	table = DBget_table(table_name);
+	nodeid = CONFIG_NODEID >= 0 ? CONFIG_NODEID : 0;
+
+	min = (zbx_uint64_t)__UINT64_C(100000000000000) * (zbx_uint64_t)nodeid;
+	max = (zbx_uint64_t)__UINT64_C(100000000000000) * (zbx_uint64_t)nodeid;
+
+	if (table->flags & ZBX_SYNC)
+	{
+		min += (zbx_uint64_t)__UINT64_C(100000000000) * (zbx_uint64_t)nodeid;
+		max += (zbx_uint64_t)__UINT64_C(100000000000) * (zbx_uint64_t)nodeid + (zbx_uint64_t)__UINT64_C(99999999999);
+	}
+	else
+		max += (zbx_uint64_t)__UINT64_C(99999999999999);
+
+	result = DBselect("select max(%s) from %s where %s between " ZBX_FS_UI64 " and " ZBX_FS_UI64,
+			field_name,
+			table_name,
+			field_name,
+			min, max);
+
+	if (NULL == (row = DBfetch(result)) || SUCCEED == DBis_null(row[0]))
+		id->lastid = min + 1;
+	else
+		ZBX_STR2UINT64(id->lastid, row[0]);
+
+	nextid = id->lastid + 1;
+	id->lastid += num;
+
+	DBfree_result(result);
+
+	UNLOCK_CACHE_IDS;
+
+	zabbix_log(LOG_LEVEL_DEBUG, "End of DCget_nextid %s.%s [" ZBX_FS_UI64 ":" ZBX_FS_UI64 "]",
+			table_name, field_name, nextid, id->lastid);
+
+	return nextid;
+}
diff --git a/src/libs/zbxdbcache/nextchecks.c b/src/libs/zbxdbcache/nextchecks.c
index 3097d3c..6a59eff 100644
--- a/src/libs/zbxdbcache/nextchecks.c
+++ b/src/libs/zbxdbcache/nextchecks.c
@@ -52,9 +52,10 @@ void	DCinit_nextchecks()
 	nextcheck_num = 0;
 }
 
-static int	DCget_nextcheck_nearestindex(time_t clock)
+static int	DCget_nextcheck_nearestindex(time_t clock, zbx_uint64_t itemid)
 {
-	int	first_index, last_index, index;
+	int			first_index, last_index, index, c;
+	ZBX_DC_NEXTCHECK	*nc;
 
 	if (nextcheck_num == 0)
 		return 0;
@@ -65,15 +66,17 @@ static int	DCget_nextcheck_nearestindex(time_t clock)
 	{
 		index = first_index + (last_index - first_index) / 2;
 
-		if (nextchecks[index].clock == clock)
+		nc = &nextchecks[index];
+		c = (NULL != nc->error_msg) ? 0 : nc->clock;
+		if (c == clock && nc->itemid == itemid)
 			return index;
 		else if (last_index == first_index)
 		{
-			if (nextchecks[index].clock < clock)
+			if (c < clock || (c == clock && nc->itemid < itemid))
 				index++;
 			return index;
 		}
-		else if (nextchecks[index].clock < clock)
+		else if (c < clock || (c == clock && nc->itemid < itemid))
 			first_index = index + 1;
 		else
 			last_index = index;
@@ -97,16 +100,11 @@ static int	DCget_nextcheck_nearestindex(time_t clock)
  ******************************************************************************/
 void	DCadd_nextcheck(DB_ITEM *item, time_t now, time_t timediff, const char *error_msg)
 {
-	int	index;
+	int	i;
+	size_t	sz;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In DCadd_nextcheck()");
 
-	if (nextcheck_allocated == nextcheck_num)
-	{
-		nextcheck_allocated *= 2;
-		nextchecks = zbx_realloc(nextchecks, nextcheck_allocated * sizeof(ZBX_DC_NEXTCHECK));
-	}
-
 	if (NULL != error_msg)
 	{
 		item->status = ITEM_STATUS_NOTSUPPORTED;
@@ -116,13 +114,39 @@ void	DCadd_nextcheck(DB_ITEM *item, time_t now, time_t timediff, const char *err
 		item->nextcheck = calculate_item_nextcheck(item->itemid, item->type, item->delay,
 				item->delay_flex, now - timediff) + timediff;
 
-	index = DCget_nextcheck_nearestindex(item->nextcheck);
+	sz = sizeof(ZBX_DC_NEXTCHECK);
 
-	memmove(&nextchecks[index + 1], &nextchecks[index], sizeof(ZBX_DC_NEXTCHECK) * (nextcheck_num - index));
+	/* item exists? */
+	for (i = 0; i < nextcheck_num; i ++)
+	{
+		if (nextchecks[i].itemid == item->itemid)
+		{
+			if (nextchecks[i].clock < item->nextcheck)
+			{
+				/* delete item */
+				memmove(&nextchecks[i], &nextchecks[i + 1], sz * (nextcheck_num - (i + 1)));
+				nextcheck_num --;
+				break;
+			}
+			else
+				return;
+		}
+	}
 
-	nextchecks[index].itemid = item->itemid;
-	nextchecks[index].clock = item->nextcheck;
-	nextchecks[index].error_msg = (NULL != error_msg) ? strdup(error_msg) : NULL;
+	if (nextcheck_allocated == nextcheck_num)
+	{
+		nextcheck_allocated *= 2;
+		nextchecks = zbx_realloc(nextchecks, nextcheck_allocated * sz);
+	}
+
+	i = DCget_nextcheck_nearestindex((NULL != error_msg) ? 0 : item->nextcheck, item->itemid);
+
+	/* insert new item */
+	memmove(&nextchecks[i + 1], &nextchecks[i], sz * (nextcheck_num - i));
+
+	nextchecks[i].itemid = item->itemid;
+	nextchecks[i].clock = item->nextcheck;
+	nextchecks[i].error_msg = (NULL != error_msg) ? strdup(error_msg) : NULL;
 
 	nextcheck_num ++;
 }
@@ -144,42 +168,28 @@ void	DCadd_nextcheck(DB_ITEM *item, time_t now, time_t timediff, const char *err
  ******************************************************************************/
 void	DCflush_nextchecks()
 {
-	int			i, sql_offset = 0;
-	static char		*sql = NULL;
-	static int		sql_allocated = 4096;
+	int			i, sql_offset = 0, sql_allocated = 1024;
+	char			*sql = NULL;
 	time_t			last_clock = -1;
-	char			error_esc[ITEM_ERROR_LEN_MAX * 2];
-	static zbx_uint64_t	*ids = NULL;
-	static int		ids_alloc = 20;
-	int			ids_num;
+	zbx_uint64_t		last_itemid = 0;
+	char			*error_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In DCflush_nextchecks()");
 
 	if (nextcheck_num == 0)
 		return;
 
-	if (sql == NULL)
-		sql = zbx_malloc(sql, sql_allocated);
+	sql = zbx_malloc(sql, sql_allocated);
 
 #ifdef HAVE_ORACLE
 	zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
 #endif
 
-	if (NULL == ids)
-		ids = zbx_malloc(ids, ids_alloc * sizeof(zbx_uint64_t));
-
-	ids_num = 0;
-
-	for (i = nextcheck_num - 1; i >= 0; i--)
+	for (i = 0; i < nextcheck_num; i++)
 	{
 		if (NULL != nextchecks[i].error_msg)
 			continue;
 
-		if (SUCCEED == uint64_array_exists(ids, ids_num, nextchecks[i].itemid))
-			continue;
-
-		uint64_array_add(&ids, &ids_alloc, &ids_num, nextchecks[i].itemid);
-
 		if (last_clock != nextchecks[i].clock) {
 			if (last_clock != -1)
 			{
@@ -187,15 +197,30 @@ void	DCflush_nextchecks()
 				zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 4, ");\n");
 			}
 
-			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 128,
+			if (last_itemid > nextchecks[i].itemid)
+			{
+#ifdef HAVE_ORACLE
+				zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "end;\n");
+#endif
+				DBbegin();
+				DBexecute("%s", sql);
+				DBcommit();
+
+				sql_offset = 0;
+#ifdef HAVE_ORACLE
+				zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
+#endif
+			}
+
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 64,
 					"update items set nextcheck=%d where itemid in (",
 					(int)nextchecks[i].clock);
-
 			last_clock = nextchecks[i].clock;
 		}
 
 		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 32, ZBX_FS_UI64 ",",
 				nextchecks[i].itemid);
+		last_itemid = nextchecks[i].itemid;
 	}
 
 	if (sql_offset > 8)
@@ -204,22 +229,30 @@ void	DCflush_nextchecks()
 		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 4, ");\n");
 	}
 
-	ids_num = 0;
-
-	for (i = 0; i < nextcheck_num; i++ )
+	for (i = 0; i < nextcheck_num; i++)
 	{
 		if (NULL == nextchecks[i].error_msg) /* not supported items */
 			continue;
 
-		if (SUCCEED == uint64_array_exists(ids, ids_num, nextchecks[i].itemid))
-			continue;
+		if (last_itemid > nextchecks[i].itemid)
+		{
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "end;\n");
+#endif
+			DBbegin();
+			DBexecute("%s", sql);
+			DBcommit();
 
-		uint64_array_add(&ids, &ids_alloc, &ids_num, nextchecks[i].itemid);
+			sql_offset = 0;
+#ifdef HAVE_ORACLE
+			zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 8, "begin\n");
+#endif
+		}
 
-		DBescape_string(nextchecks[i].error_msg, error_esc, sizeof(error_esc));
+		error_esc = DBdyn_escape_string_len(nextchecks[i].error_msg, ITEM_ERROR_LEN);
 		zbx_free(nextchecks[i].error_msg);
 
-		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 1024,
+		zbx_snprintf_alloc(&sql, &sql_allocated, &sql_offset, 128 + strlen(error_esc),
 				"update items set status=%d,lastclock=%d,nextcheck=%d,error='%s'"
 				" where itemid=" ZBX_FS_UI64 ";\n",
 				ITEM_STATUS_NOTSUPPORTED,
@@ -227,6 +260,9 @@ void	DCflush_nextchecks()
 				(int)(nextchecks[i].clock + CONFIG_REFRESH_UNSUPPORTED),
 				error_esc,
 				nextchecks[i].itemid);
+		last_itemid = nextchecks[i].itemid;
+
+		zbx_free(error_esc);
 	}
 
 #ifdef HAVE_ORACLE
@@ -239,4 +275,6 @@ void	DCflush_nextchecks()
 		DBexecute("%s", sql);
 		DBcommit();
 	}
+
+	zbx_free(sql);
 }
diff --git a/src/libs/zbxdbhigh/db.c b/src/libs/zbxdbhigh/db.c
index c832bc1..c31e9ee 100644
--- a/src/libs/zbxdbhigh/db.c
+++ b/src/libs/zbxdbhigh/db.c
@@ -36,6 +36,7 @@
 #include "events.h"
 #include "threads.h"
 #include "zbxserver.h"
+#include "dbcache.h"
 
 const char *DBnode(const char *fieldid, const int nodeid)
 {
@@ -555,6 +556,7 @@ int	DBupdate_trigger_value(DB_TRIGGER *trigger, int new_value, int now, const ch
 	int		event_last_status;
 	int		event_prev_status;
 	int		update_status;
+	char		*reason_esc;
 
 	if(reason==NULL)
 	{
@@ -612,11 +614,13 @@ int	DBupdate_trigger_value(DB_TRIGGER *trigger, int new_value, int now, const ch
 			}
 			else
 			{
+				reason_esc = DBdyn_escape_string_len(reason, TRIGGER_ERROR_LEN);
 				DBexecute("update triggers set value=%d,lastchange=%d,error='%s' where triggerid=" ZBX_FS_UI64,
 					new_value,
 					now,
-					reason,
+					reason_esc,
 					trigger->triggerid);
+				zbx_free(reason_esc);
 			}
 		}
 
@@ -809,7 +813,7 @@ void DBupdate_triggers_status_after_restart(void)
 
 void DBupdate_host_availability(DB_ITEM *item, int available, int clock, const char *error)
 {
-	char	error_esc[MAX_STRING_LEN], error_msg[MAX_STRING_LEN];
+	char	*error_esc, error_msg[MAX_STRING_LEN];
 	int	log_level = LOG_LEVEL_WARNING;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In update_host_availability()");
@@ -818,11 +822,12 @@ void DBupdate_host_availability(DB_ITEM *item, int available, int clock, const c
 	{
 		if (available == HOST_AVAILABLE_FALSE)
 		{
-			DBescape_string(error, error_esc, sizeof(error_esc));
+			error_esc = DBdyn_escape_string_len(error, HOST_ERROR_LEN);
 			DBexecute("update hosts set error='%s',disable_until=%d where hostid=" ZBX_FS_UI64,
 					error_esc,
 					clock + CONFIG_UNAVAILABLE_DELAY,
 					item->hostid);
+			zbx_free(error_esc);
 		}
 		return;
 	}
@@ -845,12 +850,13 @@ void DBupdate_host_availability(DB_ITEM *item, int available, int clock, const c
 				item->host_name,
 				CONFIG_UNAVAILABLE_DELAY);
 
-		DBescape_string(error, error_esc, sizeof(error_esc));
+		error_esc = DBdyn_escape_string_len(error, HOST_ERROR_LEN);
 		DBexecute("update hosts set available=%d,error='%s',disable_until=%d where hostid=" ZBX_FS_UI64,
 				available,
 				error_esc,
 				clock + CONFIG_UNAVAILABLE_DELAY,
 				item->hostid);
+		zbx_free(error_esc);
 
 		update_triggers_status_to_unknown(item->hostid, clock, "Host is unavailable.");
 	}
@@ -921,24 +927,24 @@ void	DBproxy_update_host_availability(DB_ITEM *item, int available, int clock)
 
 int	DBupdate_item_status_to_notsupported(DB_ITEM *item, int clock, const char *error)
 {
-	char		error_esc[MAX_STRING_LEN];
+	char		*error_esc;
 	DB_RESULT	result;
 	DB_ROW		row;
 	DB_TRIGGER	trigger;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In DBupdate_item_status_to_notsupported()");
 
-	DBescape_string(error, error_esc, sizeof(error_esc));
-
 	item->status	= ITEM_STATUS_NOTSUPPORTED;
 	item->nextcheck	= clock + CONFIG_REFRESH_UNSUPPORTED;
 
+	error_esc = DBdyn_escape_string_len(error, ITEM_ERROR_LEN);
 	DBexecute("update items set status=%d,lastclock=%d,nextcheck=%d,error='%s' where itemid=" ZBX_FS_UI64,
 			item->status,
 			clock,
 			item->nextcheck,
 			error_esc,
 			item->itemid);
+	zbx_free(error_esc);
 
 	result = DBselect("select t.triggerid,t.expression,t.description,t.url,t.comments,t.status,t.value,t.priority"
 			" from triggers t,functions f,items i"
@@ -1124,12 +1130,11 @@ int	DBadd_history_uint(zbx_uint64_t itemid, zbx_uint64_t value, int clock)
 
 int	DBadd_history_str(zbx_uint64_t itemid, char *value, int clock)
 {
-	char	value_esc[MAX_STRING_LEN];
+	char	*value_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG,"In add_history_str()");
 
-	DBescape_string(value,value_esc,MAX_STRING_LEN);
-
+	value_esc = DBdyn_escape_string_len(value, HISTORY_STR_VALUE_LEN);
 	DBexecute("insert into history_str (clock,itemid,value) values (%d," ZBX_FS_UI64 ",'%s')",
 			clock,
 			itemid,
@@ -1143,6 +1148,7 @@ int	DBadd_history_str(zbx_uint64_t itemid, char *value, int clock)
 				itemid,
 				value_esc);
 	}
+	zbx_free(value_esc);
 
 	return SUCCEED;
 }
@@ -1151,14 +1157,11 @@ int	DBadd_history_text(zbx_uint64_t itemid, char *value, int clock)
 {
 #ifdef HAVE_ORACLE
 	char		sql[MAX_STRING_LEN];
-	char		*value_esc = NULL;
-	int		value_esc_max_len = 0;
+	int		value_esc_max_len;
 	int		ret = FAIL;
-	zbx_uint64_t	id;
-#else
-	char		*value_esc = NULL;
-	zbx_uint64_t	id;
 #endif
+	char		*value_esc;
+	zbx_uint64_t	id;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In add_history_text()");
 
@@ -1168,10 +1171,7 @@ int	DBadd_history_text(zbx_uint64_t itemid, char *value, int clock)
 
 	sqlo_autocommit_off(oracle);
 
-	value_esc_max_len = strlen(value)+1024;
-	value_esc = zbx_malloc(value_esc, value_esc_max_len);
-
-	DBescape_string(value, value_esc, value_esc_max_len-1);
+	value_esc = DBdyn_escape_string(value);
 	value_esc_max_len = strlen(value_esc);
 
 	/* alloate the lob descriptor */
@@ -1259,12 +1259,12 @@ lbl_exit:
 
 int	DBadd_history_log(zbx_uint64_t itemid, char *value, int clock, int timestamp, char *source, int severity, int lastlogsize)
 {
-	char		*value_esc = NULL, source_esc[MAX_STRING_LEN];
+	char		*value_esc, *source_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In add_history_log()");
 
 	value_esc = DBdyn_escape_string(value);
-	DBescape_string(source, source_esc, sizeof(source_esc));
+	source_esc = DBdyn_escape_string_len(source, HISTORY_LOG_SOURCE_LEN);
 
 	DBexecute("insert into history_log (id,clock,itemid,timestamp,value,source,severity)"
 			" values (" ZBX_FS_UI64 ",%d," ZBX_FS_UI64 ",%d,'%s','%s',%d)",
@@ -1276,6 +1276,7 @@ int	DBadd_history_log(zbx_uint64_t itemid, char *value, int clock, int timestamp
 			source_esc,
 			severity);
 
+	zbx_free(source_esc);
 	zbx_free(value_esc);
 
 	return SUCCEED;
@@ -1512,12 +1513,15 @@ zbx_uint64_t DBget_proxy_lastaccess(const char *hostname)
 	zbx_uint64_t	res;
 	DB_RESULT	result;
 	DB_ROW		row;
+	char		*host_esc;
 
-	zabbix_log(LOG_LEVEL_DEBUG,"In D()");
+	zabbix_log(LOG_LEVEL_DEBUG,"In DBget_proxy_lastaccess()");
 
+	host_esc = DBdyn_escape_string(hostname);
 	result = DBselect("select lastaccess from hosts where host='%s' and status in (%d)",
-			hostname,
+			host_esc,
 			HOST_STATUS_PROXY);
+	zbx_free(host_esc);
 
 	if (NULL == (row = DBfetch(result)) || SUCCEED == DBis_null(row[0])) {
 		zabbix_log(LOG_LEVEL_ERR, "Proxy \"%s\" not exists",
@@ -1538,33 +1542,17 @@ zbx_uint64_t DBget_proxy_lastaccess(const char *hostname)
 int	DBadd_alert(zbx_uint64_t actionid, zbx_uint64_t userid, zbx_uint64_t eventid,  zbx_uint64_t mediatypeid, char *sendto, char *subject, char *message)
 {
 	int	now;
-	
-	char	*sendto_esc	= NULL;
-	char	*subject_esc	= NULL;
-	char	*message_esc	= NULL;
-	
-	int	size;
+	char	*sendto_esc, *subject_esc, *message_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG,"In add_alert(eventid:" ZBX_FS_UI64 ")",
 		eventid);
 
 	now = time(NULL);
 
-	size = strlen(sendto) * 3 / 2 + 1;
-	sendto_esc = zbx_malloc(sendto_esc, size);
-	memset(sendto_esc, 0, size);
-	DBescape_string(sendto, sendto_esc, size);
+	sendto_esc = DBdyn_escape_string_len(sendto, ALERT_SENDTO_LEN);
+	subject_esc = DBdyn_escape_string_len(subject, ALERT_SUBJECT_LEN);
+	message_esc = DBdyn_escape_string(message);
 
-	size = strlen(subject) * 3 / 2 + 1;
-	subject_esc = zbx_malloc(subject_esc, size);
-	memset(subject_esc, 0, size);
-	DBescape_string(subject,subject_esc,size);
-	
-	size = strlen(message) * 3 / 2 + 1;
-	message_esc = zbx_malloc(message_esc,size);
-	memset(message_esc, 0, size);
-	DBescape_string(message,message_esc,size);
-	
 	DBexecute("insert into alerts (alertid,actionid,eventid,userid,clock,mediatypeid,sendto,subject,message,status,retries)"
 		" values (" ZBX_FS_UI64 "," ZBX_FS_UI64 "," ZBX_FS_UI64 "," ZBX_FS_UI64 ",%d," ZBX_FS_UI64 ",'%s','%s','%s',0,0)",
 		DBget_maxid("alerts","alertid"),
@@ -1716,6 +1704,56 @@ char*	DBdyn_escape_string(const char *src)
 	return dst;
 }
 
+/******************************************************************************
+ *                                                                            *
+ * Function: DBdyn_escape_string_len                                          *
+ *                                                                            *
+ * Purpose:                                                                   *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: escaped string                                               *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments: sync changes with 'DBdyn_escape_string'                          *
+ *                                                                            *
+ ******************************************************************************/
+char*	DBdyn_escape_string_len(const char *src, int max_src_len)
+{
+	const char	*s;
+	char		*dst = NULL;
+	int		len = 0;
+
+	len++;	/* '\0' */
+
+	for (s = src; s && *s; s++)
+	{
+		if (max_src_len <= 0)
+			break;
+
+		if (*s == '\r')
+			continue;
+
+		if (*s == '\'' 
+#if !defined(HAVE_ORACLE) && !defined(HAVE_SQLITE3)
+			|| *s == '\\'
+#endif
+			)
+		{
+			len++;
+		}
+		len++;
+		max_src_len--;
+	}
+
+	dst = zbx_malloc(dst, len);
+
+	DBescape_string(src, dst, len);
+
+	return dst;
+}
+
 void	DBget_item_from_db(DB_ITEM *item,DB_ROW row)
 {
 	char		*s;
@@ -1724,6 +1762,7 @@ void	DBget_item_from_db(DB_ITEM *item,DB_ROW row)
 
 	ZBX_STR2UINT64(item->itemid, row[0]);
 /*	item->itemid=atoi(row[0]); */
+	item->key	= row[1];
 	item->key_orig=row[1];
 	item->host_name=row[2];
 	item->port=atoi(row[3]);
@@ -1851,16 +1890,16 @@ void	DBget_item_from_db(DB_ITEM *item,DB_ROW row)
 		case ITEM_TYPE_SIMPLE:
 		case ITEM_TYPE_EXTERNAL:
 			key = zbx_dsprintf(key, "%s", item->key_orig);
-			substitute_simple_macros(NULL, NULL, item, &key, MACRO_TYPE_ITEM_KEY);
+			substitute_simple_macros(NULL, NULL, item, NULL, &key, MACRO_TYPE_ITEM_KEY);
 			item->key	= key;
 			break;
 		case ITEM_TYPE_IPMI:
 			ipmi_ip = zbx_dsprintf(ipmi_ip, "%s", item->ipmi_ip);
-			substitute_simple_macros(NULL, NULL, item, &ipmi_ip, MACRO_TYPE_HOST_IPMI_IP);
+			substitute_simple_macros(NULL, NULL, item, NULL, &ipmi_ip, MACRO_TYPE_HOST_IPMI_IP);
 			item->ipmi_ip	= ipmi_ip;
 			break;
 		default:
-			item->key	= item->key_orig;
+			/* nothing */;
 	}
 }
 
@@ -1935,10 +1974,18 @@ zbx_uint64_t DBget_maxid_num(char *tablename, char *fieldname, int num)
 	int		found  = FAIL, dbres, nodeid;
 	const ZBX_TABLE	*table;
 
-	zabbix_log(LOG_LEVEL_DEBUG,"In DBget_maxid \"%s\".\"%s\"",
+	zabbix_log(LOG_LEVEL_DEBUG,"In DBget_maxid %s.%s",
 			tablename,
 			fieldname);
 
+	if ((0 == strcmp(tablename, "history_log") && 0 == strcmp(fieldname, "id")) ||
+			(0 == strcmp(tablename, "history_text") && 0 == strcmp(fieldname, "id")) ||
+			(0 == strcmp(tablename, "dservices") && 0 == strcmp(fieldname, "dserviceid")) ||
+			(0 == strcmp(tablename, "dhosts") && 0 == strcmp(fieldname, "dhostid")) ||
+			(0 == strcmp(tablename, "alerts") && 0 == strcmp(fieldname, "alertid")) ||
+			(0 == strcmp(tablename, "escalations") && 0 == strcmp(fieldname, "escalationid")))
+		return DCget_nextid(tablename, fieldname, num);
+
 	table = DBget_table(tablename);
 	nodeid = CONFIG_NODEID >= 0 ? CONFIG_NODEID : 0;
 
@@ -2103,16 +2150,18 @@ void	DBproxy_add_history_uint(zbx_uint64_t itemid, zbx_uint64_t value, int clock
 
 void	DBproxy_add_history_str(zbx_uint64_t itemid, char *value, int clock)
 {
-	char	value_esc[MAX_STRING_LEN];
+	char	*value_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In proxy_add_history_str()");
 
-	DBescape_string(value, value_esc, sizeof(value_esc));
+	value_esc = DBdyn_escape_string(value);
 
 	DBexecute("insert into proxy_history (itemid,clock,value) values (" ZBX_FS_UI64 ",%d,'%s')",
 			itemid,
 			clock,
 			value_esc);
+
+	zbx_free(value_esc);
 }
 
 void	DBproxy_add_history_text(zbx_uint64_t itemid, char *value, int clock)
@@ -2133,11 +2182,11 @@ void	DBproxy_add_history_text(zbx_uint64_t itemid, char *value, int clock)
 
 void	DBproxy_add_history_log(zbx_uint64_t itemid, char *value, int clock, int timestamp, char *source, int severity, int lastlogsize)
 {
-	char		source_esc[MAX_STRING_LEN], *value_esc;
+	char		*source_esc, *value_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In proxy_add_history_log()");
 
-	DBescape_string(source, source_esc, sizeof(source_esc));
+	source_esc = DBdyn_escape_string_len(source, HISTORY_LOG_SOURCE_LEN);
 	value_esc = DBdyn_escape_string(value);
 
 	DBexecute("insert into proxy_history (itemid,clock,timestamp,source,severity,value)"
@@ -2150,6 +2199,7 @@ void	DBproxy_add_history_log(zbx_uint64_t itemid, char *value, int clock, int ti
 			value_esc);
 
 	zbx_free(value_esc);
+	zbx_free(source_esc);
 }
 
 void	DBadd_condition_alloc(char **sql, int *sql_alloc, int *sql_offset, const char *fieldname, const zbx_uint64_t *values, const int num)
@@ -2187,8 +2237,23 @@ void	DBadd_condition_alloc(char **sql, int *sql_alloc, int *sql_offset, const ch
 		zbx_snprintf_alloc(sql, sql_alloc, sql_offset, 2, ")");
 }
 
-static char	string[128];
+static char	string[640];
 
+/******************************************************************************
+ *                                                                            *
+ * Function: zbx_host_key_string                                              *
+ *                                                                            *
+ * Purpose:                                                                   *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: <host>:<key> or "???" if item not found                      *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  * 
+ *                                                                            *
+ ******************************************************************************/
 char	*zbx_host_key_string(zbx_uint64_t itemid)
 {
 	DB_RESULT	result;
@@ -2203,9 +2268,26 @@ char	*zbx_host_key_string(zbx_uint64_t itemid)
 	else
 		zbx_snprintf(string, sizeof(string), "???");
 
+	DBfree_result(result);
+
 	return string;
 }
 
+/******************************************************************************
+ *                                                                            *
+ * Function: zbx_host_key_string_by_item                                      *
+ *                                                                            *
+ * Purpose:                                                                   *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: <host>:<key>                                                 *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  * 
+ *                                                                            *
+ ******************************************************************************/
 char	*zbx_host_key_string_by_item(DB_ITEM *item)
 {
 	zbx_snprintf(string, sizeof(string), "%s:%s", item->host_name, item->key);
@@ -2213,6 +2295,23 @@ char	*zbx_host_key_string_by_item(DB_ITEM *item)
 	return string;
 }
 
+/******************************************************************************
+ *                                                                            *
+ * Function: zbx_host_key_function_string                                     *
+ *                                                                            *
+ * Purpose:                                                                   *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: function name in format:                                     *
+ *                                    <host>:<key>.<function>(<parameters>)   *
+ *                             or "???" if function not found                 *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  * 
+ *                                                                            *
+ ******************************************************************************/
 char	*zbx_host_key_function_string(zbx_uint64_t functionid)
 {
 	DB_RESULT	result;
@@ -2227,6 +2326,8 @@ char	*zbx_host_key_function_string(zbx_uint64_t functionid)
 	else
 		zbx_snprintf(string, sizeof(string), "???");
 
+	DBfree_result(result);
+
 	return string;
 }
 
diff --git a/src/libs/zbxdbhigh/host.c b/src/libs/zbxdbhigh/host.c
index 5bcb247..6d14649 100644
--- a/src/libs/zbxdbhigh/host.c
+++ b/src/libs/zbxdbhigh/host.c
@@ -1084,7 +1084,7 @@ static int	DBadd_item_to_graph(
 
 	gitemid = DBget_maxid("graphs_items","gitemid");
 
-	color_esc = DBdyn_escape_string(color);
+	color_esc = DBdyn_escape_string_len(color, GRAPH_ITEM_COLOR_LEN);
 
 	DBexecute("insert into graphs_items"
 		" (gitemid,graphid,itemid,color,drawtype,sortorder,yaxisside,calc_fnc,type,periods_cnt)"
@@ -1209,7 +1209,7 @@ static int	DBupdate_graph(
 	}
 	DBfree_result(db_graphs);
 
-	name_esc = DBdyn_escape_string(name);
+	name_esc = DBdyn_escape_string_len(name, GRAPH_NAME_LEN);
 
 	DBexecute("update graphs set name='%s',width=%i,height=%i,"
 		"yaxistype=%i,yaxismin=%i,yaxismax=%i,templateid=" ZBX_FS_UI64 ","
@@ -1447,7 +1447,7 @@ static int	DBadd_graph(
 
 	assert(name);
 
-	name_esc = DBdyn_escape_string(name);
+	name_esc = DBdyn_escape_string_len(name, GRAPH_NAME_LEN);
 
 	DBexecute("insert into graphs"
 		" (graphid,name,width,height,yaxistype,yaxismin,yaxismax,show_work_period,show_triggers,graphtype,show_legend,show_3d,templateid)"
@@ -2114,13 +2114,13 @@ static int	DBdb_save_application(
 			elementid,
 			db_hostid;
 
-	char	*name_esc = NULL;
+	char	*name_esc;
 
 	int	result = SUCCEED;
 
 	assert(name);
 
-	name_esc = DBdyn_escape_string(name);
+	name_esc = DBdyn_escape_string_len(name, APPLICATION_NAME_LEN);
 
 	if( 0 == applicationid )
 		db_elements = DBselect("select distinct applicationid from applications "
@@ -2398,7 +2398,7 @@ static int	DBupdate_item(
 
 	if( (host_data = DBfetch(db_hosts)) )
 	{
-		key_esc	= DBdyn_escape_string(key);
+		key_esc	= DBdyn_escape_string_len(key, ITEM_KEY_LEN);
 
 		if( ITEM_VALUE_TYPE_STR == value_type )
 		{
@@ -2478,17 +2478,17 @@ static int	DBupdate_item(
 						itemappid, itemid, apps[i]);
 				}
 
-				description_esc			= DBdyn_escape_string(description);
-				snmp_community_esc		= DBdyn_escape_string(snmp_community);
-				snmp_oid_esc			= DBdyn_escape_string(snmp_oid);
-				trapper_hosts_esc		= DBdyn_escape_string(trapper_hosts);
-				units_esc			= DBdyn_escape_string(units);
-				snmpv3_securityname_esc		= DBdyn_escape_string(snmpv3_securityname);
-				snmpv3_authpassphrase_esc	= DBdyn_escape_string(snmpv3_authpassphrase);
-				snmpv3_privpassphrase_esc	= DBdyn_escape_string(snmpv3_privpassphrase);
-				formula_esc			= DBdyn_escape_string(formula);
-				logtimefmt_esc			= DBdyn_escape_string(logtimefmt);
-				delay_flex_esc			= DBdyn_escape_string(delay_flex);
+				description_esc			= DBdyn_escape_string_len(description, ITEM_DESCRIPTION_LEN);
+				snmp_community_esc		= DBdyn_escape_string_len(snmp_community, ITEM_SNMP_COMMUNITY_LEN);
+				snmp_oid_esc			= DBdyn_escape_string_len(snmp_oid, ITEM_SNMP_OID_LEN);
+				trapper_hosts_esc		= DBdyn_escape_string_len(trapper_hosts, ITEM_TRAPPER_HOSTS_LEN);
+				units_esc			= DBdyn_escape_string_len(units, ITEM_UNITS_LEN);
+				snmpv3_securityname_esc		= DBdyn_escape_string_len(snmpv3_securityname, ITEM_SNMPV3_SECURITYNAME_LEN);
+				snmpv3_authpassphrase_esc	= DBdyn_escape_string_len(snmpv3_authpassphrase, ITEM_SNMPV3_AUTHPASSPHRASE_LEN);
+				snmpv3_privpassphrase_esc	= DBdyn_escape_string_len(snmpv3_privpassphrase, ITEM_SNMPV3_PRIVPASSPHRASE_LEN);
+				formula_esc			= DBdyn_escape_string_len(formula, ITEM_FORMULA_LEN);
+				logtimefmt_esc			= DBdyn_escape_string_len(logtimefmt, ITEM_LOGTIMEFMT_LEN);
+				delay_flex_esc			= DBdyn_escape_string_len(delay_flex, ITEM_DELAY_FLEX_LEN);
 				params_esc			= DBdyn_escape_string(params);
 
 				DBexecute(
@@ -2663,7 +2663,7 @@ static int	DBadd_item(
 
 	if( (host_data = DBfetch(db_hosts)) )
 	{
-		key_esc	= DBdyn_escape_string(key);
+		key_esc	= DBdyn_escape_string_len(key, ITEM_KEY_LEN);
 
 		if( ITEM_VALUE_TYPE_STR == value_type )
 		{
@@ -2710,17 +2710,17 @@ static int	DBadd_item(
 			// first add mother item
 			itemid = DBget_maxid("items","itemid");
 
-			description_esc			= DBdyn_escape_string(description);
-			snmp_community_esc		= DBdyn_escape_string(snmp_community);
-			snmp_oid_esc			= DBdyn_escape_string(snmp_oid);
-			trapper_hosts_esc		= DBdyn_escape_string(trapper_hosts);
-			units_esc			= DBdyn_escape_string(units);
-			snmpv3_securityname_esc		= DBdyn_escape_string(snmpv3_securityname);
-			snmpv3_authpassphrase_esc	= DBdyn_escape_string(snmpv3_authpassphrase);
-			snmpv3_privpassphrase_esc	= DBdyn_escape_string(snmpv3_privpassphrase);
-			formula_esc			= DBdyn_escape_string(formula);
-			logtimefmt_esc			= DBdyn_escape_string(logtimefmt);
-			delay_flex_esc			= DBdyn_escape_string(delay_flex);
+			description_esc			= DBdyn_escape_string_len(description, ITEM_DESCRIPTION_LEN);
+			snmp_community_esc		= DBdyn_escape_string_len(snmp_community, ITEM_SNMP_COMMUNITY_LEN);
+			snmp_oid_esc			= DBdyn_escape_string_len(snmp_oid, ITEM_SNMP_OID_LEN);
+			trapper_hosts_esc		= DBdyn_escape_string_len(trapper_hosts, ITEM_TRAPPER_HOSTS_LEN);
+			units_esc			= DBdyn_escape_string_len(units, ITEM_UNITS_LEN);
+			snmpv3_securityname_esc		= DBdyn_escape_string_len(snmpv3_securityname, ITEM_SNMPV3_SECURITYNAME_LEN);
+			snmpv3_authpassphrase_esc	= DBdyn_escape_string_len(snmpv3_authpassphrase, ITEM_SNMPV3_AUTHPASSPHRASE_LEN);
+			snmpv3_privpassphrase_esc	= DBdyn_escape_string_len(snmpv3_privpassphrase, ITEM_SNMPV3_PRIVPASSPHRASE_LEN);
+			formula_esc			= DBdyn_escape_string_len(formula, ITEM_FORMULA_LEN);
+			logtimefmt_esc			= DBdyn_escape_string_len(logtimefmt, ITEM_LOGTIMEFMT_LEN);
+			delay_flex_esc			= DBdyn_escape_string_len(delay_flex, ITEM_DELAY_FLEX_LEN);
 			params_esc			= DBdyn_escape_string(params);
 
 			DBexecute("insert into items (itemid,description,key_,hostid,delay,history,status,type,"
@@ -3221,13 +3221,13 @@ static char*	DBimplode_exp (
 						functionid, itemid, triggerid);
 				/* adding function */
 				function[function_len] = '\0';
-				str_esc = DBdyn_escape_string(function);
+				str_esc = DBdyn_escape_string_len(function, FUNCTION_FUNCTION_LEN);
 				sql = zbx_strdcatf(sql, "'%s',", str_esc);
 				zbx_free(str_esc);
 				function[function_len] = '(';
 				/* adding parameter */
 				parameter[parameter_len] = '\0';
-				str_esc = DBdyn_escape_string(parameter);
+				str_esc = DBdyn_escape_string_len(parameter, FUNCTION_PARAMETER_LEN);
 				sql = zbx_strdcatf(sql, "'%s')", str_esc);
 				zbx_free(str_esc);
 				parameter[parameter_len] = ')';
@@ -3523,14 +3523,14 @@ static int	DBupdate_trigger(
 
 		if( expression ) {
 			short_expression = DBimplode_exp(expression, triggerid);
-			str_esc = DBdyn_escape_string(short_expression);
+			str_esc = DBdyn_escape_string_len(short_expression, TRIGGER_EXPRESSION_LEN);
 			sql = zbx_strdcatf(sql, " expression='%s',", str_esc);
 			zbx_free(str_esc);
 			zbx_free(short_expression);
 
 		}
 		if( description ) {
-			str_esc = DBdyn_escape_string(description);
+			str_esc = DBdyn_escape_string_len(description, TRIGGER_DESCRIPTION_LEN);
 			sql = zbx_strdcatf(sql, " description='%s',", str_esc);
 			zbx_free(str_esc);
 		}
@@ -3543,7 +3543,7 @@ static int	DBupdate_trigger(
 			zbx_free(str_esc);
 		}
 		if( url ) {
-			str_esc = DBdyn_escape_string(url);
+			str_esc = DBdyn_escape_string_len(url, TRIGGER_URL_LEN);
 			sql = zbx_strdcatf(sql, " url='%s',", str_esc);
 			zbx_free(str_esc);
 		}
@@ -3762,9 +3762,9 @@ static int	DBcopy_trigger_to_host(
 
 			new_triggerid = DBget_maxid("triggers","triggerid");
 
-			description_esc = DBdyn_escape_string(trigger_data[0]);
+			description_esc = DBdyn_escape_string_len(trigger_data[0], TRIGGER_DESCRIPTION_LEN);
 			comments_esc = DBdyn_escape_string(trigger_data[3]);
-			url_esc = DBdyn_escape_string(trigger_data[4]);
+			url_esc = DBdyn_escape_string_len(trigger_data[4], TRIGGER_URL_LEN);
 
 			DBexecute("insert into triggers"
 				" (triggerid,description,priority,status,comments,url,type,value,expression,templateid)"
@@ -3793,8 +3793,8 @@ static int	DBcopy_trigger_to_host(
 				ZBX_STR2UINT64(itemid, function_data[0]);
 				ZBX_STR2UINT64(functionid, function_data[3]);
 
-				function_esc = DBdyn_escape_string(function_data[1]);
-				parameter_esc = DBdyn_escape_string(function_data[2]);
+				function_esc = DBdyn_escape_string_len(function_data[1], FUNCTION_FUNCTION_LEN);
+				parameter_esc = DBdyn_escape_string_len(function_data[2], FUNCTION_PARAMETER_LEN);
 
 				search = zbx_dsprintf(NULL, "{" ZBX_FS_UI64 "}", functionid);
 
@@ -3845,8 +3845,8 @@ static int	DBcopy_trigger_to_host(
 
 			if( SUCCEED == result )
 			{
-				new_expression_esc = DBdyn_escape_string(new_expression);
-				DBexecute("update triggers set expression='%s' where triggerid=" ZBX_FS_UI64, new_expression, new_triggerid);
+				new_expression_esc = DBdyn_escape_string_len(new_expression, TRIGGER_EXPRESSION_LEN);
+				DBexecute("update triggers set expression='%s' where triggerid=" ZBX_FS_UI64, new_expression_esc, new_triggerid);
 				zbx_free(new_expression_esc);
 
 				/* copy dependences */
diff --git a/src/libs/zbxjson/json.c b/src/libs/zbxjson/json.c
index a4f06eb..6e34b6a 100644
--- a/src/libs/zbxjson/json.c
+++ b/src/libs/zbxjson/json.c
@@ -103,6 +103,7 @@ static void	__zbx_json_realloc(struct zbx_json *j, size_t need)
 
 	if (1 == realloc) {
 		if (j->buffer == j->buf_stat) {
+			j->buffer = NULL;
 			j->buffer = zbx_malloc(j->buffer, j->buffer_allocated);
 			memcpy(j->buffer, j->buf_stat, sizeof(j->buf_stat));
 		} else
diff --git a/src/libs/zbxserver/evalfunc.c b/src/libs/zbxserver/evalfunc.c
index 5a09919..4e72c06 100644
--- a/src/libs/zbxserver/evalfunc.c
+++ b/src/libs/zbxserver/evalfunc.c
@@ -1082,18 +1082,21 @@ static int	evaluate_DELTA(char *value, DB_ITEM *item, int parameter, int flag, t
  ******************************************************************************/
 static int	evaluate_NODATA(char *value, DB_ITEM *item, int parameter, time_t now)
 {
-	int	res = SUCCEED;
-
 	zabbix_log(LOG_LEVEL_DEBUG, "In evaluate_NODATA()");
 
-	if (CONFIG_SERVER_STARTUP_TIME + parameter > now || item->lastclock + parameter > now)
+	if (item->lastclock + parameter > now)
 		strcpy(value,"0");
 	else
+	{
+		if (CONFIG_SERVER_STARTUP_TIME + parameter > now)
+			return FAIL;
+
 		strcpy(value,"1");
+	}
 
 	zabbix_log(LOG_LEVEL_DEBUG, "End of evaluate_NODATA()");
 
-	return res;
+	return SUCCEED;
 }
 
 /******************************************************************************
@@ -1909,7 +1912,7 @@ int	replace_value_by_map(char *value, zbx_uint64_t valuemapid)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
-	char		new_value[MAX_STRING_LEN], orig_value[MAX_STRING_LEN];
+	char		new_value[MAX_STRING_LEN], orig_value[MAX_STRING_LEN], *value_esc;
 	int		ret = FAIL;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In replace_value_by_map()");
@@ -1917,9 +1920,11 @@ int	replace_value_by_map(char *value, zbx_uint64_t valuemapid)
 	if (valuemapid == 0)
 		return FAIL;
 
+	value_esc = DBdyn_escape_string(value);
 	result = DBselect("select newvalue from mappings where valuemapid=" ZBX_FS_UI64 " and value='%s'",
 			valuemapid,
-			value);
+			value_esc);
+	zbx_free(value_esc);
 	if (NULL != (row = DBfetch(result)) && FAIL == DBis_null(row[0]))
 	{
 		strcpy(new_value, row[0]);
diff --git a/src/libs/zbxserver/expression.c b/src/libs/zbxserver/expression.c
index 0d8a6e0..5648245 100644
--- a/src/libs/zbxserver/expression.c
+++ b/src/libs/zbxserver/expression.c
@@ -732,12 +732,103 @@ static void	expand_trigger_description_constants(
 
 /******************************************************************************
  *                                                                            *
+ * Function: get_host_profile_value_by_triggerid                              *
+ *                                                                            *
+ * Purpose: request host profile value by triggerid and field name            *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: returns requested host profile value                         *
+ *                      or *UNKNOWN* if profile is not defined                *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+#define STR_UNKNOWN_VARIABLE		"*UNKNOWN*"
+
+static char	*get_host_profile_value_by_triggerid(char *dst, zbx_uint64_t triggerid, const char *fieldname)
+{
+	DB_RESULT	result;
+	DB_ROW		row;
+
+	result = DBselect("select distinct p.%s from triggers t,functions f,items i,hosts h,hosts_profiles p"
+			" where t.triggerid=" ZBX_FS_UI64 " and t.triggerid=f.triggerid and i.itemid=f.itemid"
+			" and h.hostid=i.hostid and p.hostid=h.hostid", 
+			fieldname,
+			triggerid);
+
+	if (NULL == (row = DBfetch(result)) || SUCCEED == DBis_null(row[0]))
+	{
+		zabbix_log(LOG_LEVEL_DEBUG, "No PROFILE.%s in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
+				fieldname,
+				triggerid);
+
+		dst = zbx_dsprintf(dst, "%s", STR_UNKNOWN_VARIABLE);
+	}
+	else
+		dst = zbx_dsprintf(dst, "%s", row[0]);
+
+	DBfree_result(result);
+
+	return dst;
+}
+
+/******************************************************************************
+ *                                                                            *
+ * Function: get_host_value_by_triggerid                                      *
+ *                                                                            *
+ * Purpose: request host value by triggerid and field name                    *
+ *                                                                            *
+ * Parameters:                                                                *
+ *                                                                            *
+ * Return value: returns requested host value                                 *
+ *                      or *UNKNOWN* if profile is not defined                *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+static char	*get_host_value_by_triggerid(char *dst, zbx_uint64_t triggerid, const char *fieldname)
+{
+	DB_RESULT	result;
+	DB_ROW		row;
+
+	result = DBselect("select distinct h.%s from triggers t,functions f,items i,hosts h"
+			" where t.triggerid=" ZBX_FS_UI64 " and t.triggerid=f.triggerid and i.itemid=f.itemid"
+			" and h.hostid=i.hostid",
+			fieldname,
+			triggerid);
+
+	if (NULL == (row = DBfetch(result)) || SUCCEED == DBis_null(row[0]))
+	{
+		zabbix_log(LOG_LEVEL_DEBUG, "No HOST.%s in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
+				fieldname,
+				triggerid);
+
+		dst = zbx_dsprintf(dst, "%s", STR_UNKNOWN_VARIABLE);
+	}
+	else
+		dst = zbx_dsprintf(dst, "%s", row[0]);
+
+	DBfree_result(result);
+
+	return dst;
+}
+
+/******************************************************************************
+ *                                                                            *
  * Function: substitute_simple_macros                                         *
  *                                                                            *
  * Purpose: substitute simple macros in data string with real values          *
  *                                                                            *
  * Parameters: trigger - trigger structure                                    *
  *             action - action structure (NULL if unknown)                    *
+ *             escalation - escalation structure. used for recovery           *
+ *                          messages in {ESC.HISTORY} macro.                  *
+ *                          (NULL for other cases)                            * 
  *             data - data string                                             *
  *                                                                            *
  * Return value:                                                              *
@@ -750,22 +841,16 @@ static void	expand_trigger_description_constants(
  ******************************************************************************/
 /* definition of macros variables */
 #define MVAR_DATE			"{DATE}"
-#define MVAR_DATE_LEN			6
 #define MVAR_EVENT_ID			"{EVENT.ID}"
 #define MVAR_EVENT_DATE			"{EVENT.DATE}"
 #define MVAR_EVENT_TIME			"{EVENT.TIME}"
 #define MVAR_EVENT_AGE			"{EVENT.AGE}"
 #define MVAR_ESC_HISTORY		"{ESC.HISTORY}"
 #define MVAR_HOSTNAME			"{HOSTNAME}"
-#define MVAR_HOSTNAME_LEN		10
 #define MVAR_IPADDRESS			"{IPADDRESS}"
-#define MVAR_IPADDRESS_LEN		11
 #define MVAR_HOST_DNS			"{HOST.DNS}"
-#define MVAR_HOST_DNS_LEN		10
 #define MVAR_HOST_CONN			"{HOST.CONN}"
-#define MVAR_HOST_CONN_LEN		11
 #define MVAR_TIME			"{TIME}"
-#define MVAR_TIME_LEN			6
 #define MVAR_ITEM_LASTVALUE		"{ITEM.LASTVALUE}"
 #define MVAR_ITEM_NAME			"{ITEM.NAME}"
 #define MVAR_TRIGGER_COMMENT		"{TRIGGER.COMMENT}"
@@ -790,20 +875,18 @@ static void	expand_trigger_description_constants(
 #define MVAR_PROFILE_LOCATION		"{PROFILE.LOCATION}"
 #define MVAR_PROFILE_NOTES		"{PROFILE.NOTES}"
 
-#define STR_UNKNOWN_VARIABLE		"*UNKNOWN*"
-
-void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item, char **data, int macro_type)
+void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item, DB_ESCALATION *escalation, char **data, int macro_type)
 {
 
 	char
-		*pl = NULL,
+		*pl,
 		*pr = NULL,
 		*str_out = NULL,
 		*replace_to = NULL;
 
 	char	tmp[MAX_STRING_LEN], *buf = NULL;
 	int	buf_offset, buf_allocated = MAX_STRING_LEN;
-	int	status;
+	int	status, esc_step;
 	int	var_len;
 
 	time_t  now;
@@ -826,7 +909,10 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 	}
 
 	pl = *data;
-	while((pr = strchr(pl, '{')))
+	if (NULL == (pr = strchr(pl, '{')))
+		return;
+
+	for ( ; NULL != pr; pr = strchr(pl, '{'))
 	{
 		pr[0] = '\0';
 /*zabbix_log(LOG_LEVEL_DEBUG, "str_out1 [%s] pl [%s]", str_out, pl);*/
@@ -841,333 +927,87 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 			strncmp(pr, MVAR_TRIGGER_NAME, strlen(MVAR_TRIGGER_NAME)) == 0)
 		{
 			var_len = strlen(MVAR_TRIGGER_NAME);
-
-			zabbix_log(LOG_LEVEL_DEBUG, "Before replace_to [%s]", replace_to);
-
 			replace_to = zbx_dsprintf(replace_to, "%s", event->trigger_description);
 			/* Why it was here? *//* For substituting macros in trigger description :) */
-			substitute_simple_macros(event, action, item, &replace_to, MACRO_TYPE_TRIGGER_DESCRIPTION);
-
-			zabbix_log(LOG_LEVEL_DEBUG, "After replace_to [%s]", replace_to);
+			substitute_simple_macros(event, action, item, escalation, &replace_to, MACRO_TYPE_TRIGGER_DESCRIPTION);
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_TRIGGER_COMMENT, strlen(MVAR_TRIGGER_COMMENT)) == 0)
 		{
 			var_len = strlen(MVAR_TRIGGER_COMMENT);
-
 			replace_to = zbx_dsprintf(replace_to, "%s", event->trigger_comments);
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_DEVICETYPE, strlen(MVAR_PROFILE_DEVICETYPE)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_DEVICETYPE);
-
-			result = DBselect("select distinct p.devicetype from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.DEVECETYPE in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "devicetype");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_NAME, strlen(MVAR_PROFILE_NAME)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_NAME);
-
-			result = DBselect("select distinct p.name from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.NAME in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "name");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_OS, strlen(MVAR_PROFILE_OS)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_OS);
-
-			result = DBselect("select distinct p.os from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.OS in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "os");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_SERIALNO, strlen(MVAR_PROFILE_SERIALNO)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_SERIALNO);
-
-			result = DBselect("select distinct p.serialno from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.SERIALNO in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "serialno");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_TAG, strlen(MVAR_PROFILE_TAG)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_TAG);
-
-			result = DBselect("select distinct p.tag from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.TAG in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "tag");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_MACADDRESS, strlen(MVAR_PROFILE_MACADDRESS)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_MACADDRESS);
-
-			result = DBselect("select distinct p.macaddress from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.MACADDRESS in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "macaddress");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_HARDWARE, strlen(MVAR_PROFILE_HARDWARE)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_HARDWARE);
-
-			result = DBselect("select distinct p.hardware from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.HARDWARE in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]", 
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "hardware");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_SOFTWARE, strlen(MVAR_PROFILE_SOFTWARE)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_SOFTWARE);
-
-			result = DBselect("select distinct p.software from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.SOFTWARE in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "software");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_CONTACT, strlen(MVAR_PROFILE_CONTACT)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_CONTACT);
-
-			result = DBselect("select distinct p.contact from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.CONTACT in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "contact");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_LOCATION, strlen(MVAR_PROFILE_LOCATION)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_LOCATION);
-
-			result = DBselect("select distinct p.location from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.LOCATION in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "location");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_PROFILE_NOTES, strlen(MVAR_PROFILE_NOTES)) == 0)
 		{
 			var_len = strlen(MVAR_PROFILE_NOTES);
-
-			result = DBselect("select distinct p.notes from triggers t, functions f,items i, hosts h, hosts_profiles p"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid and p.hostid=h.hostid", 
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No PROFILE.NOTES in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			replace_to = get_host_profile_value_by_triggerid(replace_to, event->objectid, "notes");
 		}
 		else if ((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY | MACRO_TYPE_TRIGGER_DESCRIPTION)) &&
-				0 == strncmp(pr, MVAR_HOSTNAME, MVAR_HOSTNAME_LEN))
+				0 == strncmp(pr, MVAR_HOSTNAME, strlen(MVAR_HOSTNAME)))
 		{
-			var_len = MVAR_HOSTNAME_LEN;
-
-			result = DBselect("select distinct h.host from triggers t, functions f,items i, hosts h "
-				"where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid",
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No hostname in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			var_len = strlen(MVAR_HOSTNAME);
+			replace_to = get_host_value_by_triggerid(replace_to, event->objectid, "host");
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
 			strncmp(pr, MVAR_ITEM_NAME, strlen(MVAR_ITEM_NAME)) == 0)
@@ -1258,36 +1098,15 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 			DBfree_result(result);
 		}
 		else if ((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
-				0 == strncmp(pr, MVAR_IPADDRESS, MVAR_IPADDRESS_LEN))
+				0 == strncmp(pr, MVAR_IPADDRESS, strlen(MVAR_IPADDRESS)))
 		{
-			var_len = MVAR_IPADDRESS_LEN;
-
-			result = DBselect("select distinct h.ip from triggers t, functions f,items i, hosts h"
-				" where t.triggerid=" ZBX_FS_UI64 " and f.triggerid=t.triggerid and f.itemid=i.itemid and h.hostid=i.hostid",
-				event->objectid);
-
-			row = DBfetch(result);
-
-			if(!row || DBis_null(row[0])==SUCCEED)
-			{
-				zabbix_log( LOG_LEVEL_DEBUG, "No hostname in substitute_simple_macros. Triggerid [" ZBX_FS_UI64 "]",
-					event->objectid);
-
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					STR_UNKNOWN_VARIABLE);
-			}
-			else
-			{
-				replace_to = zbx_dsprintf(replace_to, "%s",
-					row[0]);
-			}
-			DBfree_result(result);
+			var_len = strlen(MVAR_IPADDRESS);
+			replace_to = get_host_value_by_triggerid(replace_to, event->objectid, "ip");
 		}
 		else if ((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
-				0 == strncmp(pr, MVAR_DATE, MVAR_DATE_LEN))
+				0 == strncmp(pr, MVAR_DATE, strlen(MVAR_DATE)))
 		{
-			var_len	= MVAR_DATE_LEN;
-
+			var_len	= strlen(MVAR_DATE);
 			now	= time(NULL);
 			tm	= localtime(&now);
 			replace_to = zbx_dsprintf(replace_to, "%.4d.%.2d.%.2d",
@@ -1296,10 +1115,9 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 					tm->tm_mday);
 		}
 		else if ((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) &&
-				0 == strncmp(pr, MVAR_TIME, MVAR_TIME_LEN))
+				0 == strncmp(pr, MVAR_TIME, strlen(MVAR_TIME)))
 		{
-			var_len	= MVAR_TIME_LEN;
-
+			var_len	= strlen(MVAR_TIME);
 			now	= time(NULL);
 			tm	= localtime(&now);
 			replace_to = zbx_dsprintf(replace_to, "%.2d:%.2d:%.2d",
@@ -1313,7 +1131,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS_OLD block */
 			var_len = strlen(MVAR_TRIGGER_STATUS);
-
 			replace_to = zbx_dsprintf(replace_to, "%s",
 					event->value == TRIGGER_VALUE_TRUE ? "PROBLEM" : "OK");
 		}
@@ -1322,7 +1139,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_TRIGGER_STATUS_OLD);
-
 			replace_to = zbx_dsprintf(replace_to, "%s",
 					event->value == TRIGGER_VALUE_TRUE ? "PROBLEM" : "OK");
 		}
@@ -1331,7 +1147,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_TRIGGER_ID);
-
 			replace_to = zbx_dsprintf(replace_to, ZBX_FS_UI64,
 				event->objectid);
 		}
@@ -1339,7 +1154,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 			strncmp(pr, MVAR_TRIGGER_VALUE, strlen(MVAR_TRIGGER_VALUE)) == 0)
 		{
 			var_len = strlen(MVAR_TRIGGER_VALUE);
-
 			replace_to = zbx_dsprintf(replace_to, "%d",
 				event->value);
 		}
@@ -1348,7 +1162,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_TRIGGER_URL);
-
 			replace_to = zbx_dsprintf(replace_to, "%s",
 				event->trigger_url);
 		}
@@ -1357,7 +1170,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_EVENT_ID);
-
 			replace_to = zbx_dsprintf(replace_to, ZBX_FS_UI64,
 				event->eventid);
 		}
@@ -1366,7 +1178,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_EVENT_DATE);
-
 			now	= event->clock;
 			tm	= localtime(&now);
 			replace_to = zbx_dsprintf(replace_to, "%.4d.%.2d.%.2d",
@@ -1379,7 +1190,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_EVENT_TIME);
-
 			now	= event->clock;
 			tm	= localtime(&now);
 			replace_to = zbx_dsprintf(replace_to, "%.2d:%.2d:%.2d",
@@ -1392,7 +1202,6 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 		{
 			/* NOTE: if you make changes for this bloc, don't forgot MVAR_TRIGGER_STATUS block */
 			var_len = strlen(MVAR_EVENT_AGE);
-
 			now		= time(NULL) - event->clock;
 			replace_to	= zbx_dsprintf(replace_to, "%s", zbx_age2str(now));
 		}
@@ -1407,16 +1216,40 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 			buf_offset	= 0;
 			*buf		= '\0';
 
-			result = DBselect("select a.clock,a.status,m.description,a.sendto,a.error"
+			result = DBselect("select clock from events where eventid=" ZBX_FS_UI64,
+					escalation != NULL ? escalation->eventid : event->eventid);
+
+			if (NULL != (row = DBfetch(result)))
+			{
+				now	= (time_t)atoi(row[0]);
+				tm	= localtime(&now);
+				zbx_snprintf_alloc(&buf, &buf_allocated, &buf_offset, 64,
+						"Problem started: %.4d.%.2d.%.2d %.2d:%.2d:%.2d Age: %s\n",
+						tm->tm_year + 1900,
+						tm->tm_mon + 1,
+						tm->tm_mday,
+						tm->tm_hour,
+						tm->tm_min,
+						tm->tm_sec,
+						zbx_age2str(time(NULL) - now));
+			}
+
+			DBfree_result(result);
+
+			result = DBselect("select a.clock,a.status,m.description,a.sendto,a.error,a.esc_step"
 					" from alerts a left join media_type m on m.mediatypeid = a.mediatypeid"
 					" where a.eventid=" ZBX_FS_UI64 " and a.alerttype=%d order by a.clock",
-					event->eventid,
+					escalation != NULL ? escalation->eventid : event->eventid,
 					ALERT_TYPE_MESSAGE);
 
 			while (NULL != (row = DBfetch(result))) {
-				now	= atoi(row[0]);
-				tm	= localtime(&now);
-				status	= atoi(row[1]);
+				now	 = atoi(row[0]);
+				tm	 = localtime(&now);
+				status	 = atoi(row[1]);
+				esc_step = atoi(row[5]);
+
+				if (esc_step != 0)
+					zbx_snprintf_alloc(&buf, &buf_allocated, &buf_offset, 16, "%d. ", esc_step);
 
 				zbx_snprintf_alloc(&buf, &buf_allocated, &buf_offset, 256,
 						"%.4d.%.2d.%.2d %.2d:%.2d:%.2d %-11s %s %s %s\n",
@@ -1432,12 +1265,27 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 						row[3],
 						row[4]);
 			}
+
+			DBfree_result(result);
+
+			if (escalation != NULL && escalation->r_eventid == event->eventid)
+			{
+				now	= (time_t)event->clock;
+				tm	= localtime(&now);
+				zbx_snprintf_alloc(&buf, &buf_allocated, &buf_offset, 64,
+						"Problem ended: %.4d.%.2d.%.2d %.2d:%.2d:%.2d\n",
+						tm->tm_year + 1900,
+						tm->tm_mon + 1,
+						tm->tm_mday,
+						tm->tm_hour,
+						tm->tm_min,
+						tm->tm_sec);
+			}
+
 			if (0 != buf_offset)
 				buf[--buf_offset] = '\0';
 
 			replace_to = zbx_dsprintf(replace_to, "%s", buf);
-
-			DBfree_result(result);
 		}
 		else if((macro_type & (MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY)) && 
 			strncmp(pr, MVAR_TRIGGER_SEVERITY, strlen(MVAR_TRIGGER_SEVERITY)) == 0)
@@ -1456,29 +1304,28 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
 			strncmp(pr, MVAR_TRIGGER_NSEVERITY, strlen(MVAR_TRIGGER_NSEVERITY)) == 0)
 		{
 			var_len = strlen(MVAR_TRIGGER_NSEVERITY);
-
 			replace_to = zbx_dsprintf(replace_to, "%d", event->trigger_priority);
 		}
 		else if (macro_type & (MACRO_TYPE_ITEM_KEY | MACRO_TYPE_HOST_IPMI_IP))
 		{
-			if (0 == strncmp(pr, MVAR_HOSTNAME, MVAR_HOSTNAME_LEN))
+			if (0 == strncmp(pr, MVAR_HOSTNAME, strlen(MVAR_HOSTNAME)))
 			{
-				var_len = MVAR_HOSTNAME_LEN;
+				var_len = strlen(MVAR_HOSTNAME);
 				replace_to = zbx_dsprintf(replace_to, "%s", item->host_name);
 			}
-			else if (0 == strncmp(pr, MVAR_IPADDRESS, MVAR_IPADDRESS_LEN))
+			else if (0 == strncmp(pr, MVAR_IPADDRESS, strlen(MVAR_IPADDRESS)))
 			{
-				var_len = MVAR_IPADDRESS_LEN;
+				var_len = strlen(MVAR_IPADDRESS);
 				replace_to = zbx_dsprintf(replace_to, "%s", item->host_ip);
 			}
-			else if (0 == strncmp(pr, MVAR_HOST_DNS, MVAR_HOST_DNS_LEN))
+			else if (0 == strncmp(pr, MVAR_HOST_DNS, strlen(MVAR_HOST_DNS)))
 			{
-				var_len = MVAR_HOST_DNS_LEN;
+				var_len = strlen(MVAR_HOST_DNS);
 				replace_to = zbx_dsprintf(replace_to, "%s", item->host_dns);
 			}
-			else if (0 == strncmp(pr, MVAR_HOST_CONN, MVAR_HOST_CONN_LEN))
+			else if (0 == strncmp(pr, MVAR_HOST_CONN, strlen(MVAR_HOST_CONN)))
 			{
-				var_len = MVAR_HOST_CONN_LEN;
+				var_len = strlen(MVAR_HOST_CONN);
 				replace_to = zbx_dsprintf(replace_to, "%s", item->useip ? item->host_ip : item->host_dns);
 			}
 		}
@@ -1511,6 +1358,9 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
  *                                                                            *
  * Parameters: trigger - trigger structure                                    *
  *             action - action structure                                      *
+ *             escalation - escalation structure. used for recovery           *
+ *                          messages in {ESC.HISTORY} macro.                  *
+ *                          (NULL for other cases)                            * 
  *             data - data string                                             *
  *                                                                            *
  * Return value:                                                              *
@@ -1520,7 +1370,7 @@ void	substitute_simple_macros(DB_EVENT *event, DB_ACTION *action, DB_ITEM *item,
  * Comments: example: "{127.0.0.1:system[procload].last(0)}" to "1.34"        *
  *                                                                            *
  ******************************************************************************/
-void	substitute_macros(DB_EVENT *event, DB_ACTION *action, char **data)
+void	substitute_macros(DB_EVENT *event, DB_ACTION *action, DB_ESCALATION *escalation, char **data)
 {
 	char	
 		*str_out = NULL,
@@ -1545,7 +1395,7 @@ void	substitute_macros(DB_EVENT *event, DB_ACTION *action, char **data)
 	zabbix_log(LOG_LEVEL_DEBUG, "In substitute_macros(data:\"%s\")",
 			*data);
 
-	substitute_simple_macros(event, action, NULL, data, MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY);
+	substitute_simple_macros(event, action, NULL, escalation, data, MACRO_TYPE_MESSAGE_SUBJECT | MACRO_TYPE_MESSAGE_BODY);
 
 	pl = *data;
 	while((pr = strchr(pl, '{')))
@@ -1751,7 +1601,7 @@ int	evaluate_expression(int *result,char **expression, DB_TRIGGER *trigger, char
 	memset(&action,0,sizeof(DB_ACTION));	
 	event.value = trigger->value;
 
-	substitute_simple_macros(&event, &action, NULL, expression, MACRO_TYPE_TRIGGER_EXPRESSION);
+	substitute_simple_macros(&event, &action, NULL, NULL, expression, MACRO_TYPE_TRIGGER_EXPRESSION);
 
 	/* Evaluate expression */
 	delete_spaces(*expression);
diff --git a/src/libs/zbxserver/functions.c b/src/libs/zbxserver/functions.c
index 60b8aee..c3e039d 100644
--- a/src/libs/zbxserver/functions.c
+++ b/src/libs/zbxserver/functions.c
@@ -51,7 +51,7 @@ void	update_functions(DB_ITEM *item, time_t now)
 	DB_RESULT	result;
 	DB_ROW		row;
 	char		value[MAX_STRING_LEN];
-	char		*value_esc, *parameter_esc;
+	char		*value_esc, *function_esc, *parameter_esc;
 	char		*lastvalue;
 	int		ret=SUCCEED;
 
@@ -89,16 +89,18 @@ void	update_functions(DB_ITEM *item, time_t now)
 			/* Update only if lastvalue differs from new one */
 			if (DBis_null(lastvalue) == SUCCEED || 0 != strcmp(lastvalue, value))
 			{
-				value_esc = DBdyn_escape_string(value);
+				value_esc = DBdyn_escape_string_len(value, FUNCTION_LASTVALUE_LEN);
+				function_esc = DBdyn_escape_string(function.function);
 				parameter_esc = DBdyn_escape_string(function.parameter);
 
 				DBexecute("update functions set lastvalue='%s' where itemid=" ZBX_FS_UI64 " and function='%s' and parameter='%s'",
 						value_esc,
 						function.itemid,
-						function.function,
+						function_esc,
 						parameter_esc);
 
 				zbx_free(parameter_esc);
+				zbx_free(function_esc);
 				zbx_free(value_esc);
 			}
 			else
@@ -429,13 +431,12 @@ static int	add_history(DB_ITEM *item, AGENT_RESULT *value, int now)
  ******************************************************************************/
 static void	update_item(DB_ITEM *item, AGENT_RESULT *value, time_t now)
 {
-	char		value_esc[MAX_STRING_LEN];
+	char		*value_esc;
 	zbx_uint64_t	value_uint64;
 	double		value_double;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In update_item()");
 
-	*value_esc	= '\0';
 	item->nextcheck	= calculate_item_nextcheck(item->itemid, item->type, item->delay, item->delay_flex, now);
 
 	switch (item->value_type) {
@@ -578,19 +579,20 @@ static void	update_item(DB_ITEM *item, AGENT_RESULT *value, time_t now)
 		if (NULL == GET_STR_RESULT(value))
 			break;
 
-		DBescape_string(value->str, value_esc, sizeof(value_esc));
+		value_esc = DBdyn_escape_string_len(value->str, ITEM_LASTVALUE_LEN);
 		DBexecute("update items set nextcheck=%d,prevvalue=lastvalue,lastvalue='%s',lastclock=%d"
 				" where itemid=" ZBX_FS_UI64,
 				item->nextcheck,
 				value_esc,
 				(int)now,
 				item->itemid);
+		zbx_free(value_esc);
 		break;
 	case ITEM_VALUE_TYPE_LOG:
 		if (NULL == GET_STR_RESULT(value))
 			break;
 
-		DBescape_string(value->str, value_esc, sizeof(value_esc));
+		value_esc = DBdyn_escape_string_len(value->str, ITEM_LASTVALUE_LEN);
 		DBexecute("update items set nextcheck=%d,prevvalue=lastvalue,lastvalue='%s',lastclock=%d,lastlogsize=%d"
 				" where itemid=" ZBX_FS_UI64,
 				item->nextcheck,
@@ -598,6 +600,7 @@ static void	update_item(DB_ITEM *item, AGENT_RESULT *value, time_t now)
 				(int)now,
 				item->lastlogsize,
 				item->itemid);
+		zbx_free(value_esc);
 		break;
 	}
 
diff --git a/src/libs/zbxsysinfo/freebsd/net.c b/src/libs/zbxsysinfo/freebsd/net.c
index 1c9f0ef..253c1b2 100644
--- a/src/libs/zbxsysinfo/freebsd/net.c
+++ b/src/libs/zbxsysinfo/freebsd/net.c
@@ -183,14 +183,22 @@ int	NET_IF_TOTAL(const char *cmd, const char *param, unsigned flags, AGENT_RESUL
 int     NET_TCP_LISTEN(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
 {
 	char	command[MAX_STRING_LEN];
+	int	res;
 
 	assert(result);
 
 	init_result(result);
 
-	zbx_snprintf(command, sizeof(command), "netstat -an | grep '*.%s' | wc -l", param);
+	zbx_snprintf(command, sizeof(command), "netstat -an | grep '*.%s\\>' | wc -l", param);
 
-	return EXECUTE_INT(NULL, command, flags, result);
+	if (SYSINFO_RET_FAIL == (res = EXECUTE_INT(NULL, command, flags, result)))
+		return res;
+
+	if (NULL != GET_DBL_RESULT(result))
+		if (result->dbl > 1)
+			result->dbl = 1;
+
+	return res;
 }
 
 int     NET_IF_COLLISIONS(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
diff --git a/src/libs/zbxsysinfo/linux/diskspace.c b/src/libs/zbxsysinfo/linux/diskspace.c
index fb4e982..f2536e1 100644
--- a/src/libs/zbxsysinfo/linux/diskspace.c
+++ b/src/libs/zbxsysinfo/linux/diskspace.c
@@ -42,11 +42,11 @@ int	get_fs_size_stat(char *fs, zbx_uint64_t *total, zbx_uint64_t *free, zbx_uint
 
 #ifdef HAVE_SYS_STATVFS_H
         if(total)
-                (*total) = (zbx_uint64_t)(s.f_blocks * (s.f_frsize / 1024.0));
+                (*total) = (zbx_uint64_t)(s.f_blocks * (s.f_bsize / 1024.0));
         if(free)
-                (*free)  = (zbx_uint64_t)(s.f_bavail * (s.f_frsize / 1024.0));
+                (*free)  = (zbx_uint64_t)(s.f_bavail * (s.f_bsize / 1024.0));
         if(usage)
-                (*usage) = (zbx_uint64_t)((s.f_blocks - s.f_bavail) * (s.f_frsize / 1024.0));
+                (*usage) = (zbx_uint64_t)((s.f_blocks - s.f_bfree) * (s.f_bsize / 1024.0));
 #else
         if(total)
                 (*total) = (zbx_uint64_t)(s.f_blocks * (s.f_bsize / 1024.0));
diff --git a/src/libs/zbxsysinfo/solaris/cpu.c b/src/libs/zbxsysinfo/solaris/cpu.c
index 29571b3..c7c73b9 100644
--- a/src/libs/zbxsysinfo/solaris/cpu.c
+++ b/src/libs/zbxsysinfo/solaris/cpu.c
@@ -20,6 +20,7 @@
 #include "common.h"
 
 #include "sysinfo.h"
+#include "stats.h"
 
 int	SYSTEM_CPU_NUM(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
 {
@@ -63,161 +64,76 @@ int	SYSTEM_CPU_NUM(const char *cmd, const char *param, unsigned flags, AGENT_RES
 	return SYSINFO_RET_OK;
 }
 
-static int get_cpu_data(
-	const char* cpuname,
-	unsigned long long *idle,
-	unsigned long long *system,
-	unsigned long long *user,
-	unsigned long long *iowait)
+int	SYSTEM_CPU_UTIL(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
 {
-	kstat_ctl_t	*kc;
-	kstat_t		*k;
-	cpu_stat_t	*cpu;
+	char				cpuname[8], type[8], mode[8];
+	int				cpu_num;
+	ZBX_SINGLE_CPU_STAT_DATA	*cpu;
+
+	if (!CPU_COLLECTOR_STARTED(collector))
+	{
+		SET_MSG_RESULT(result, strdup("Collector is not started!"));
+		return SYSINFO_RET_OK;
+	}
 
-	static int			first_run = 1;
-	static unsigned long long	old_cpu[CPU_STATES];
-	unsigned long long		new_cpu[CPU_STATES];
+	if (num_param(param) > 3)
+		return SYSINFO_RET_FAIL;
 
-	char ks_name[MAX_STRING_LEN];
+	if (0 != get_param(param, 1, cpuname, sizeof(cpuname)))
+		*cpuname = '\0';
 
-	int cpu_count = 0, i;
+	if ('\0' == *cpuname || 0 == strcmp(cpuname, "all"))	/* default parameter */
+		cpu_num = 0;
+	else
+	{
+		if (FAIL == is_uint(cpuname))
+			return SYSINFO_RET_FAIL;
 
-	assert(cpuname);
-	assert(idle);
-	assert(system);
-	assert(user);
-	assert(iowait);
+		cpu_num = atoi(cpuname) + 1;
+		if (cpu_num < 1 || cpu_num > collector->cpus.count)
+			return SYSINFO_RET_FAIL;
+	}
 
-	if(first_run)    for(i = 0; i < CPU_STATES; old_cpu[i++] = 0LL);
+	if (0 != get_param(param, 2, type, sizeof(type)))
+		*type = '\0';
 
-	for(i = 0; i < CPU_STATES; new_cpu[i++] = 0LL);
+	if (0 != get_param(param, 3, mode, sizeof(mode)))
+		*mode = '\0';
 
-        zbx_snprintf(ks_name, sizeof(ks_name), "cpu_stat%s", cpuname);
+	cpu = &collector->cpus.cpu[cpu_num];
 
-	kc = kstat_open();
-	if (kc)
+	if ('\0' == *type || 0 == strcmp(type, "idle"))	/* default parameter */
 	{
-		k = kc->kc_chain;
-		while (k)
-		{
-			if ((strncmp(k->ks_name, ks_name, strlen(ks_name)) == 0)
-				&& (kstat_read(kc, k, NULL) != -1)
-				)
-			{
-				cpu = (cpu_stat_t *) k->ks_data;
-
-				for(i = 0; i < CPU_STATES; i++)
-					new_cpu[i] += cpu->cpu_sysinfo.cpu[i];
-
-				cpu_count += 1;
-			}
-			k = k->ks_next;
-		}
-		kstat_close(kc);
+		if ('\0' == *mode || 0 == strcmp(mode, "avg1"))	SET_DBL_RESULT(result, cpu->idle1)
+		else if (0 == strcmp(mode, "avg5"))		SET_DBL_RESULT(result, cpu->idle5)
+		else if (0 == strcmp(mode, "avg15"))		SET_DBL_RESULT(result, cpu->idle15)
+		else return SYSINFO_RET_FAIL;
 	}
-    
-	if(first_run)
+	else if (0 == strcmp(type, "user"))
 	{
-		*idle = *system = *iowait = *user = 0LL;
-		first_run = 0;
+		if ('\0' == *mode || 0 == strcmp(mode, "avg1"))	SET_DBL_RESULT(result, cpu->user1)
+		else if (0 == strcmp(mode, "avg5"))		SET_DBL_RESULT(result, cpu->user5)
+		else if (0 == strcmp(mode, "avg15"))		SET_DBL_RESULT(result, cpu->user15)
+		else return SYSINFO_RET_FAIL;
 	}
-	else
+	else if (0 == strcmp(type, "kernel"))
 	{
-		*idle	=  new_cpu[CPU_IDLE]	- old_cpu[CPU_IDLE];
-		*system =  new_cpu[CPU_KERNEL]	- old_cpu[CPU_KERNEL];
-		*iowait =  new_cpu[CPU_WAIT]	- old_cpu[CPU_WAIT];
-		*user	=  new_cpu[CPU_USER]	- old_cpu[CPU_USER];
+		if ('\0' == *mode || 0 == strcmp(mode, "avg1"))	SET_DBL_RESULT(result, cpu->system1)
+		else if (0 == strcmp(mode, "avg5"))		SET_DBL_RESULT(result, cpu->system5)
+		else if (0 == strcmp(mode, "avg15"))		SET_DBL_RESULT(result, cpu->system15)
+		else return SYSINFO_RET_FAIL;
 	}
-	
-	for(i = 0; i < CPU_STATES; i++)	old_cpu[i] = new_cpu[i];
-	
-	return cpu_count;
-}
-
-#define CPU_I 0
-#define CPU_U 1
-#define CPU_K 2
-#define CPU_W 3
-
-int	SYSTEM_CPU_UTIL(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
-{
-    unsigned long long cpu_val[4];
-    unsigned long long interval_size;
-
-    char cpuname[MAX_STRING_LEN];
-    char mode[MAX_STRING_LEN];
-    
-    int info_id = 0;
-    
-    int ret = SYSINFO_RET_FAIL;
-
-    if(num_param(param) > 2)
-    {
-        return SYSINFO_RET_FAIL;
-    }
-
-    if(get_param(param, 1, cpuname, sizeof(cpuname)) != 0)
-    {
-	cpuname[0] = '\0';
-    }
-    if(cpuname[0] == '\0')
-    {
-	/* default parameter */
-        zbx_snprintf(cpuname, sizeof(cpuname), "all");
-    }
-
-    if(0 == strncmp(cpuname, "all", MAX_STRING_LEN))
-    {
-	    cpuname[0] = '\0';
-    }
-    
-    if(get_param(param, 2, mode, sizeof(mode)) != 0)
-    {
-	mode[0] = '\0';
-    }
-    
-    if(mode[0] == '\0')
-    {
-	/* default parameter */
-        zbx_snprintf(mode, sizeof(mode),"idle");
-    }
-    
-    if(strcmp(mode,"idle") == 0)
-    {
-        info_id = CPU_I;
-    }
-    else if(strcmp(mode,"user") == 0)
-    {
-        info_id = CPU_U;
-    }
-    else if(strcmp(mode,"kernel") == 0)
-    {
-        info_id = CPU_K;
-    }
-    else if(strcmp(mode,"wait") == 0)
-    {
-	info_id = CPU_W;
-    }
-    else
-    {
-	return SYSINFO_RET_FAIL;
-    }
-    
-    if (get_cpu_data(cpuname,&cpu_val[CPU_I], &cpu_val[CPU_K], &cpu_val[CPU_U], &cpu_val[CPU_W]))
-    {
-        interval_size =	cpu_val[CPU_I] + cpu_val[CPU_K] + cpu_val[CPU_U] + cpu_val[CPU_W];
-        
-	if (interval_size > 0)
-	{
-		SET_DBL_RESULT(result, (cpu_val[info_id] * 100.0)/interval_size);
-        }
-	else
+	else if (0 == strcmp(type, "wait"))
 	{
-		SET_DBL_RESULT(result, 0);
+		if ('\0' == *mode || 0 == strcmp(mode, "avg1"))	SET_DBL_RESULT(result, cpu->nice1)
+		else if (0 == strcmp(mode, "avg5"))		SET_DBL_RESULT(result, cpu->nice5)
+		else if (0 == strcmp(mode, "avg15"))		SET_DBL_RESULT(result, cpu->nice15)
+		else return SYSINFO_RET_FAIL;
 	}
-    ret = SYSINFO_RET_OK;
-    }
-    return ret;
+	else
+		return SYSINFO_RET_FAIL;
+
+	return SYSINFO_RET_OK;
 }
 
 #ifdef HAVE_KSTAT_H
@@ -249,6 +165,8 @@ static int	get_kstat_system_misc(char *s, int *value)
 		return FAIL;
 	}
 
+	kstat_close(kc);
+
 	*value = kn->value.ul;
 
 	return SUCCEED;
diff --git a/src/libs/zbxsysinfo/solaris/net.c b/src/libs/zbxsysinfo/solaris/net.c
index 0344c87..98a031c 100644
--- a/src/libs/zbxsysinfo/solaris/net.c
+++ b/src/libs/zbxsysinfo/solaris/net.c
@@ -359,17 +359,23 @@ int	NET_IF_COLLISIONS(const char *cmd, const char *param, unsigned flags, AGENT_
 
 int	NET_TCP_LISTEN(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
 {
-    char command[MAX_STRING_LEN];
+	char	command[MAX_STRING_LEN];
+	int	res;
 
-    assert(result);
-    
-    init_result(result);
-    
-    memset(command, '\0', sizeof(command));
+	assert(result);
+
+	init_result(result);
+
+	zbx_snprintf(command, sizeof(command), "netstat -an | grep '*.%s\\>' | wc -l", param);
+
+	if (SYSINFO_RET_FAIL == (res = EXECUTE_INT(NULL, command, flags, result)))
+		return res;
+
+	if (NULL != GET_DBL_RESULT(result))
+		if (result->dbl > 1)
+			result->dbl = 1;
 
-    zbx_snprintf(command, sizeof(command), "netstat -an | grep '*.%s' | wc -l", param);
-   
-    return EXECUTE_INT(NULL, command, flags, result);
+	return res;
 }
 
 int	NET_IF_IN(const char *cmd, const char *param, unsigned flags, AGENT_RESULT *result)
diff --git a/src/libs/zbxsysinfo/sysinfo.c b/src/libs/zbxsysinfo/sysinfo.c
index ae2cccb..0058581 100644
--- a/src/libs/zbxsysinfo/sysinfo.c
+++ b/src/libs/zbxsysinfo/sysinfo.c
@@ -81,7 +81,7 @@ int	add_user_parameter(char *key, char *command)
 	char		usr_cmd[MAX_STRING_LEN];
 	char		usr_param[MAX_STRING_LEN];
 	unsigned	flag = 0;
-	
+
 	if (0 == (i = parse_command(key, usr_cmd, MAX_STRING_LEN, usr_param, MAX_STRING_LEN)))
 	{
 		zabbix_log( LOG_LEVEL_WARNING, "Can't add user specifed key \"%s\". Can't parse key!", key);
diff --git a/src/zabbix_agent/active.c b/src/zabbix_agent/active.c
index e221311..ed1f9bf 100644
--- a/src/zabbix_agent/active.c
+++ b/src/zabbix_agent/active.c
@@ -308,7 +308,7 @@ static int	refresh_active_checks(
 
 	zabbix_log( LOG_LEVEL_DEBUG, "refresh_active_checks('%s',%u)", host, port);
 
-	zbx_json_init(&json, 8*1024);
+	zbx_json_init(&json, ZBX_JSON_STAT_BUF_LEN);
 
 	zbx_json_addstring(&json, ZBX_PROTO_TAG_REQUEST, ZBX_PROTO_VALUE_GET_ACTIVE_CHECKS, ZBX_JSON_TYPE_STRING);
 	zbx_json_addstring(&json, ZBX_PROTO_TAG_HOST, CONFIG_HOSTNAME, ZBX_JSON_TYPE_STRING);
@@ -444,7 +444,7 @@ static int	send_buffer(
 		return ret;
 	}
 
-	zbx_json_init(&json, 8*1024);
+	zbx_json_init(&json, ZBX_JSON_STAT_BUF_LEN);
 
 	zbx_json_addstring(&json, ZBX_PROTO_TAG_REQUEST, ZBX_PROTO_VALUE_AGENT_DATA, ZBX_JSON_TYPE_STRING);
 
diff --git a/src/zabbix_agent/cpustat.c b/src/zabbix_agent/cpustat.c
index 2dd2103..9a0d0fd 100644
--- a/src/zabbix_agent/cpustat.c
+++ b/src/zabbix_agent/cpustat.c
@@ -216,7 +216,13 @@ static int	get_cpustat(
 	perfstat_cpu_t		ps_cpu;
 	perfstat_id_t		ps_id;
 
-    #else /* not HAVE_LIBPERFSTAT */
+    #elif defined(HAVE_KSTAT_H)
+
+	kstat_ctl_t	*kc;
+	kstat_t		*k;
+	cpu_stat_t	*cpu;
+
+    #else /* not HAVE_KSTAT_H */
 
 	return 1;
 	
@@ -297,6 +303,56 @@ static int	get_cpustat(
 	*cpu_idle	= (zbx_uint64_t)cp_time[CP_IDLE];
 	*cpu_iowait	= 0;
 
+    #elif defined(HAVE_KSTAT_H)
+
+	/* Solaris */
+
+	*cpu_idle = *cpu_user = *cpu_system = *cpu_nice = *cpu_interrupt = *cpu_iowait = 0;
+
+	if (NULL == (kc = kstat_open()))
+		return 1;
+
+	if (cpuid == 0)	/* all cpus */
+	{
+		k = kc->kc_chain;
+		while (k)
+		{
+			if (0 == strncmp(k->ks_name, "cpu_stat", 8) && -1 != kstat_read(kc, k, NULL))
+			{
+				cpu = (cpu_stat_t *)k->ks_data;
+
+				*cpu_idle	+= cpu->cpu_sysinfo.cpu[CPU_IDLE];
+				*cpu_user	+= cpu->cpu_sysinfo.cpu[CPU_USER];
+				*cpu_system	+= cpu->cpu_sysinfo.cpu[CPU_KERNEL];
+				*cpu_nice	+= cpu->cpu_sysinfo.cpu[CPU_WAIT];
+			}
+			k = k->ks_next;
+		}
+	}
+	else	/* single cpu */
+	{
+		if (NULL == (k = kstat_lookup(kc, "cpu_stat", cpuid - 1, NULL)))
+		{
+			kstat_close(kc);
+			return 1;
+		}
+
+		if (-1 == kstat_read(kc, k, NULL))
+		{
+			kstat_close(kc);
+			return 1;
+		}
+
+		cpu = (cpu_stat_t *)k->ks_data;
+
+		*cpu_idle	= cpu->cpu_sysinfo.cpu[CPU_IDLE];
+		*cpu_user	= cpu->cpu_sysinfo.cpu[CPU_USER];
+		*cpu_system	= cpu->cpu_sysinfo.cpu[CPU_KERNEL];
+		*cpu_nice	= cpu->cpu_sysinfo.cpu[CPU_WAIT];
+	}
+
+	kstat_close(kc);
+
     #elif defined(HAVE_FUNCTION_SYSCTL_KERN_CPTIME)
 	/* OpenBSD 4.3 */
 
@@ -379,7 +435,6 @@ static int	get_cpustat(
 	return 0;
 }
 
-
 static void	apply_cpustat(
 	ZBX_CPUS_STAT_DATA *pcpus,
 	int cpuid,
diff --git a/src/zabbix_agent/eventlog.c b/src/zabbix_agent/eventlog.c
index 6a62014..ce18942 100755
--- a/src/zabbix_agent/eventlog.c
+++ b/src/zabbix_agent/eventlog.c
@@ -125,6 +125,7 @@ static long    zbx_get_eventlog_message(
 	*out_message	= NULL;
 	*out_severity	= 0;
 	*out_timestamp	= 0;
+	memset(aInsertStrs, 0, sizeof(aInsertStrs));
 
 	if (!eventlog_handle)        return(0);
 
@@ -202,8 +203,7 @@ static long    zbx_get_eventlog_message(
 
 			if (ExpandEnvironmentStrings(pFile, MsgDll, MAX_PATH))
 			{
-				hLib = LoadLibraryEx(MsgDll, NULL, LOAD_LIBRARY_AS_DATAFILE);
-				if(hLib)
+				if (NULL != (hLib = LoadLibraryEx(MsgDll, NULL, LOAD_LIBRARY_AS_DATAFILE)))
 				{
 					/* Format the message from the message DLL with the insert strings */
 					FormatMessage(
@@ -215,7 +215,7 @@ static long    zbx_get_eventlog_message(
 						pELR->EventID,                      /* message ID */
 						MAKELANGID(LANG_NEUTRAL, SUBLANG_ENGLISH_US),	/* language ID */
 						(LPTSTR) &msgBuf,                   /* address of pointer to buffer for message */
-						MAX_MSG_LENGTH,                     /* maximum size of the message buffer */
+						0,
 						aInsertStrs);                       /* array of insert strings for the message */
 
 					if(msgBuf)
diff --git a/src/zabbix_agent/stats.c b/src/zabbix_agent/stats.c
index ed9ece6..f117ef3 100644
--- a/src/zabbix_agent/stats.c
+++ b/src/zabbix_agent/stats.c
@@ -165,12 +165,7 @@ void	init_collector_data(void)
 	key_t	shm_key;
 #endif
 
-#if defined(_WINDOWS) || defined(HAVE_PROC_STAT) || defined(HAVE_SYS_PSTAT_H) ||\
-	defined(HAVE_FUNCTION_SYSCTL_KERN_CPTIME) || defined(HAVE_LIBPERFSTAT)
 	cpu_count = zbx_get_cpu_num();
-#else /* HAVE_FUNCTION_SYSCTLBYNAME sysctlbyname("kern.cp_time"...) supported utilization of all CPU only */
-	cpu_count = 0;
-#endif
 
 	sz = sizeof(ZBX_COLLECTOR_DATA);
 	sz_cpu = sizeof(ZBX_SINGLE_CPU_STAT_DATA) * (cpu_count + 1);
diff --git a/src/zabbix_agent/zabbix_agentd.c b/src/zabbix_agent/zabbix_agentd.c
index 4678e8f..ae0c1b1 100644
--- a/src/zabbix_agent/zabbix_agentd.c
+++ b/src/zabbix_agent/zabbix_agentd.c
@@ -261,20 +261,22 @@ int MAIN_ZABBIX_ENTRY(void)
 	if(1 == CONFIG_DISABLE_PASSIVE)
 	{
 		/* Only main process and active checks will be started */
-		CONFIG_ZABBIX_FORKS = 2;
+		CONFIG_ZABBIX_FORKS = 0;/* Listeners won't be needed for passive checks. */
 	}
 
-	threads = calloc(CONFIG_ZABBIX_FORKS, sizeof(ZBX_THREAD_HANDLE));
+	/* Allocate memory for a collector, all listeners and an active check. */	
+	threads = calloc(1 + CONFIG_ZABBIX_FORKS + ((0 == CONFIG_DISABLE_ACTIVE) ? 1 : 0), sizeof(ZBX_THREAD_HANDLE));
 
+	/* Start the collector thread. */
 	threads[i=0] = zbx_thread_start(collector_thread, NULL);
 
 	/* start listeners */
-	for(i++; i < CONFIG_ZABBIX_FORKS - ((0 == CONFIG_DISABLE_ACTIVE) ? 1 : 0); i++)
+	for(i++; i <= CONFIG_ZABBIX_FORKS; i++)
 	{
 		threads[i] = zbx_thread_start(listener_thread, &listen_sock);
 	}
 
-	/* start active chack */
+	/* start active check */
 	if(0 == CONFIG_DISABLE_ACTIVE)
 	{
 		activechk_args.host = CONFIG_HOSTS_ALLOWED;
@@ -287,7 +289,7 @@ int MAIN_ZABBIX_ENTRY(void)
 	init_main_process();
 
 	/* wait for all threads exiting */
-	for(i = 0; i < CONFIG_ZABBIX_FORKS; i++)
+	for(i = 0; i < 1 + CONFIG_ZABBIX_FORKS +((0 == CONFIG_DISABLE_ACTIVE) ? 1 : 0); i++)
 	{
 		if(threads && threads[i])
 		{
@@ -314,7 +316,7 @@ void	zbx_on_exit()
 
 	if(threads != NULL)
 	{
-		for(i = 0; i<CONFIG_ZABBIX_FORKS ; i++)
+		for(i = 0; i < 1 + CONFIG_ZABBIX_FORKS + ((0 == CONFIG_DISABLE_ACTIVE) ? 1 : 0); i++)
 		{
 			if(threads[i]) {
 				zbx_thread_kill(threads[i]);
diff --git a/src/zabbix_agent/zbxconf.c b/src/zabbix_agent/zbxconf.c
index 4fc4368..0758c74 100644
--- a/src/zabbix_agent/zbxconf.c
+++ b/src/zabbix_agent/zbxconf.c
@@ -134,30 +134,16 @@ void    load_config()
 	}
 }
 
-static int     add_parameter(const char *param)
+static int     add_parameter(char *key)
 {
-	char	key[MAX_STRING_LEN], command[MAX_STRING_LEN];
+	char	*command;
 
-	assert(param);
+	if (NULL == (command = strchr(key, ',')))
+		return  FAIL;
 
-	if (num_param(param) != 2)
-		goto syntax_error;
-
-	if (0 != get_param(param, 1, key, sizeof(key)))
-		goto syntax_error;
-
-        if (0 != get_param(param, 2, command, sizeof(command)))
-		goto syntax_error;
-
-	if (*key == '\0' || *command == '\0')
-		goto syntax_error;
+	*command++ = '\0';
 
 	return add_user_parameter(key, command);
-syntax_error:
-	zabbix_log(LOG_LEVEL_WARNING, "UserParameter \"%s\" FAILED: Invalid format.",
-			param);
-
-	return FAIL;
 }
 
 void    load_user_parameters(void)
diff --git a/src/zabbix_proxy/proxy.c b/src/zabbix_proxy/proxy.c
index 5d16278..549d013 100644
--- a/src/zabbix_proxy/proxy.c
+++ b/src/zabbix_proxy/proxy.c
@@ -45,9 +45,6 @@
 #include "datasender/datasender.h"
 #include "heart/heart.h"
 
-/*
-#define       LISTENQ 1024
-*/
 char *progname = NULL;
 char title_message[] = "ZABBIX Proxy (daemon)";
 char usage_message[] = "[-hV] [-c <file>]";
@@ -113,7 +110,7 @@ int	CONFIG_DISCOVERER_FORKS		= 1;
 int	CONFIG_HOUSEKEEPER_FORKS	= 1;
 int	CONFIG_PINGER_FORKS		= 1;
 int	CONFIG_POLLER_FORKS		= 5;
-int	CONFIG_HTTPPOLLER_FORKS		= 5;
+int	CONFIG_HTTPPOLLER_FORKS		= 1;
 int	CONFIG_IPMIPOLLER_FORKS		= 0;
 int	CONFIG_TRAPPERD_FORKS		= 5;
 int	CONFIG_UNREACHABLE_POLLER_FORKS	= 1;
diff --git a/src/zabbix_sender/zabbix_sender.c b/src/zabbix_sender/zabbix_sender.c
index 8224e20..3038088 100644
--- a/src/zabbix_sender/zabbix_sender.c
+++ b/src/zabbix_sender/zabbix_sender.c
@@ -360,7 +360,7 @@ static zbx_task_t parse_commandline(int argc, char **argv)
 				break;
 		}
 
-	if(ZABBIX_SERVER == NULL)
+	if (NULL == ZABBIX_SERVER && NULL == CONFIG_FILE)
 	{
 		usage();
 		exit(FAIL);
@@ -412,7 +412,7 @@ int main(int argc, char **argv)
 	sentdval_args.server	= ZABBIX_SERVER;
 	sentdval_args.port	= ZABBIX_SERVER_PORT;
 
-	zbx_json_init(&sentdval_args.json, 8*1024);
+	zbx_json_init(&sentdval_args.json, ZBX_JSON_STAT_BUF_LEN);
 	zbx_json_addstring(&sentdval_args.json, ZBX_PROTO_TAG_REQUEST, ZBX_PROTO_VALUE_SENDER_DATA, ZBX_JSON_TYPE_STRING);
 	zbx_json_addarray(&sentdval_args.json, ZBX_PROTO_TAG_DATA);
 
diff --git a/src/zabbix_server/actions.c b/src/zabbix_server/actions.c
index 8b07060..d4467b2 100644
--- a/src/zabbix_server/actions.c
+++ b/src/zabbix_server/actions.c
@@ -227,7 +227,7 @@ int	check_action_condition(DB_EVENT *event, DB_CONDITION *condition)
 	{
 		tmp_str = zbx_dsprintf(tmp_str, "%s", event->trigger_description);
 		
-		substitute_simple_macros(event, NULL, NULL, &tmp_str, MACRO_TYPE_TRIGGER_DESCRIPTION);
+		substitute_simple_macros(event, NULL, NULL, NULL, &tmp_str, MACRO_TYPE_TRIGGER_DESCRIPTION);
 		
 		if(condition->operator == CONDITION_OPERATOR_LIKE)
 		{
@@ -776,21 +776,23 @@ void	execute_operations(DB_EVENT *event, DB_ACTION *action)
 	zabbix_log( LOG_LEVEL_DEBUG, "In execute_operations(actionid:" ZBX_FS_UI64 ")",
 		action->actionid);
 
-	result = DBselect("select operationid,actionid,operationtype,object,objectid,shortdata,longdata from operations where actionid=" ZBX_FS_UI64,
-			action->actionid);
+	result = DBselect("select operationid,actionid,operationtype,object,objectid from operations where actionid=" ZBX_FS_UI64,
+			action->actionid);	/* ,shortdata,longdata */
 	while((row=DBfetch(result)))
 	{
+		memset(&operation, 0, sizeof(operation));
+
 		ZBX_STR2UINT64(operation.operationid,	row[0]);
 		ZBX_STR2UINT64(operation.actionid,	row[1]);
 		operation.operationtype			= atoi(row[2]);
 		operation.object			= atoi(row[3]);
 		ZBX_STR2UINT64(operation.objectid,	row[4]);
 
-		operation.shortdata		= strdup(row[5]);
+/*		operation.shortdata		= strdup(row[5]);
 		operation.longdata		= strdup(row[6]);
 
 		substitute_macros(event, action, &operation.shortdata);
-		substitute_macros(event, action, &operation.longdata);
+		substitute_macros(event, action, &operation.longdata);*/
 
 		switch(operation.operationtype)
 		{
@@ -822,8 +824,8 @@ void	execute_operations(DB_EVENT *event, DB_ACTION *action)
 				break;
 		}
 	
-		zbx_free(operation.shortdata);
-		zbx_free(operation.longdata);
+/*		zbx_free(operation.shortdata);
+		zbx_free(operation.longdata);*/
 	}
 	DBfree_result(result);
 }
diff --git a/src/zabbix_server/alerter/alerter.c b/src/zabbix_server/alerter/alerter.c
index 26f0920..ce0eef3 100644
--- a/src/zabbix_server/alerter/alerter.c
+++ b/src/zabbix_server/alerter/alerter.c
@@ -249,7 +249,7 @@ int main_alerter_loop()
 					alert.alertid);
 				zabbix_syslog("Error sending alert ID [" ZBX_FS_UI64 "]",
 					alert.alertid);
-				error_esc = DBdyn_escape_string(error);
+				error_esc = DBdyn_escape_string_len(error, ALERT_ERROR_LEN);
 
 				alert.retries++;
 				if(alert.retries < ALERT_MAX_RETRIES)
diff --git a/src/zabbix_server/discoverer/discoverer.c b/src/zabbix_server/discoverer/discoverer.c
index 8144b6c..587eb2d 100644
--- a/src/zabbix_server/discoverer/discoverer.c
+++ b/src/zabbix_server/discoverer/discoverer.c
@@ -86,11 +86,11 @@ static void	add_event(int object, zbx_uint64_t objectid, int value)
  ******************************************************************************/
 static void	update_dservice(DB_DSERVICE *service)
 {
-	char	value_esc[MAX_STRING_LEN];
+	char	*value_esc;
 
 	assert(service);
 
-	DBescape_string(service->value, value_esc, sizeof(value_esc));
+	value_esc = DBdyn_escape_string_len(service->value, DSERVICE_VALUE_LEN);
 
 	DBexecute("update dservices set status=%d,lastup=%d,lastdown=%d,value='%s' where dserviceid=" ZBX_FS_UI64,
 			service->status,
@@ -98,6 +98,7 @@ static void	update_dservice(DB_DSERVICE *service)
 			service->lastdown,
 			value_esc,
 			service->dserviceid);
+	zbx_free(value_esc);
 }
 
 /******************************************************************************
@@ -117,15 +118,16 @@ static void	update_dservice(DB_DSERVICE *service)
  ******************************************************************************/
 static void	update_dservice_value(DB_DSERVICE *service)
 {
-	char	value_esc[MAX_STRING_LEN];
+	char	*value_esc;
 
 	assert(service);
 
-	DBescape_string(service->value, value_esc, sizeof(value_esc));
+	value_esc = DBdyn_escape_string_len(service->value, DSERVICE_VALUE_LEN);
 
 	DBexecute("update dservices set value='%s' where dserviceid=" ZBX_FS_UI64,
 			value_esc,
 			service->dserviceid);
+	zbx_free(value_esc);
 }
 
 /******************************************************************************
@@ -173,7 +175,7 @@ static void	register_service(DB_DSERVICE *service, const char *ip, int port, int
 {
 	DB_RESULT	result;
 	DB_ROW		row;
-	char		key_esc[MAX_STRING_LEN];
+	char		*key_esc;
 
 	assert(service);
 	assert(ip);
@@ -183,7 +185,7 @@ static void	register_service(DB_DSERVICE *service, const char *ip, int port, int
 			port,
 			service->key_);
 
-	DBescape_string(service->key_, key_esc, sizeof(key_esc));
+	key_esc = DBdyn_escape_string_len(service->key_, DSERVICE_KEY_LEN);
 
 	result = DBselect("select dserviceid,status,lastup,lastdown,value"
 			" from dservices where dhostid=" ZBX_FS_UI64 " and type=%d and port=%d and key_='%s'",
@@ -221,6 +223,8 @@ static void	register_service(DB_DSERVICE *service, const char *ip, int port, int
 	}
 	DBfree_result(result);
 
+	zbx_free(key_esc);
+
 	zabbix_log(LOG_LEVEL_DEBUG, "End register_service()");
 }
 
@@ -243,7 +247,7 @@ void	register_host(DB_DHOST *dhost, const char *ip, int status)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
-	char		ip_esc[MAX_STRING_LEN];
+	char		*ip_esc;
 
 	assert(dhost);
 	assert(ip);
@@ -251,7 +255,7 @@ void	register_host(DB_DHOST *dhost, const char *ip, int status)
 	zabbix_log(LOG_LEVEL_DEBUG, "In register_host(ip:%s)",
 			ip);
 
-	DBescape_string(ip, ip_esc, sizeof(ip_esc));
+	ip_esc = DBdyn_escape_string_len(ip, DHOST_IP_LEN);
 
 	result = DBselect("select dhostid,ip,status,lastup,lastdown from dhosts"
 			" where druleid=" ZBX_FS_UI64 " and ip='%s'" DB_NODE,
@@ -286,6 +290,8 @@ void	register_host(DB_DHOST *dhost, const char *ip, int status)
 	}
 	DBfree_result(result);
 
+	zbx_free(ip_esc);
+
 	zabbix_log(LOG_LEVEL_DEBUG, "End register_host()");
 }
 
@@ -451,16 +457,14 @@ void update_service(DB_DHOST *dhost, DB_DCHECK *check, char *ip, int port, int n
  ******************************************************************************/
 static void proxy_update_service(DB_DCHECK *check, char *ip, int port, int now)
 {
-	char	ip_esc[MAX_STRING_LEN],
-		key_esc[MAX_STRING_LEN],
-		value_esc[MAX_STRING_LEN];
+	char	*ip_esc, *key_esc, *value_esc;
 
 	assert(check);
 	assert(ip);
 
-	DBescape_string(ip, ip_esc, sizeof(ip_esc));
-	DBescape_string(check->key_, key_esc, sizeof(key_esc));
-	DBescape_string(check->value, value_esc, sizeof(value_esc));
+	ip_esc = DBdyn_escape_string_len(ip, PROXY_DHISTORY_IP_LEN);
+	key_esc = DBdyn_escape_string_len(check->key_, PROXY_DHISTORY_KEY_LEN);
+	value_esc = DBdyn_escape_string_len(check->value, PROXY_DHISTORY_VALUE_LEN);
 
 	DBexecute("insert into proxy_dhistory (clock,druleid,type,ip,port,key_,value,status)"
 			" values (%d," ZBX_FS_UI64 ",%d,'%s',%d,'%s','%s',%d)",
@@ -472,6 +476,10 @@ static void proxy_update_service(DB_DCHECK *check, char *ip, int port, int now)
 			key_esc,
 			value_esc,	
 			check->status);
+
+	zbx_free(ip_esc);
+	zbx_free(key_esc);
+	zbx_free(value_esc);
 }
 
 /******************************************************************************
@@ -491,11 +499,11 @@ static void proxy_update_service(DB_DCHECK *check, char *ip, int port, int now)
  ******************************************************************************/
 static void proxy_update_host(zbx_uint64_t druleid, char *ip, int status, int now)
 {
-	char	ip_esc[MAX_STRING_LEN];
+	char	*ip_esc;
 
 	assert(ip);
 
-	DBescape_string(ip, ip_esc, sizeof(ip_esc));
+	ip_esc = DBdyn_escape_string_len(ip, PROXY_DHISTORY_IP_LEN);
 
 	DBexecute("insert into proxy_dhistory (clock,druleid,type,ip,status)"
 			" values (%d," ZBX_FS_UI64 ",-1,'%s',%d)",
@@ -503,6 +511,8 @@ static void proxy_update_host(zbx_uint64_t druleid, char *ip, int status, int no
 			druleid,
 			ip_esc,
 			status);
+
+	zbx_free(ip_esc);
 }
 
 /******************************************************************************
diff --git a/src/zabbix_server/escalator/escalator.c b/src/zabbix_server/escalator/escalator.c
index 45d17e4..34b01a2 100644
--- a/src/zabbix_server/escalator/escalator.c
+++ b/src/zabbix_server/escalator/escalator.c
@@ -246,10 +246,9 @@ static void	add_command_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACT
 {
 	zbx_uint64_t	alertid;
 	int		now;
-	char		*command_esc	= NULL;
+	char		*command_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In add_command_alert()");
-/*	zabbix_log(LOG_LEVEL_DEBUG,"----- COMMAND\n\tcommand: %s", command);*/
 
 	alertid		= DBget_maxid("alerts", "alertid");
 	now		= time(NULL);
@@ -271,23 +270,20 @@ static void	add_command_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACT
 	zbx_free(command_esc);
 }
 
-static void	add_message_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACTION *action, zbx_uint64_t eventid, zbx_uint64_t userid, char *subject, char *message)
+static void	add_message_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACTION *action, zbx_uint64_t userid, char *subject, char *message)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
 	zbx_uint64_t	alertid, mediatypeid;
 	int		now, severity, medias = 0;
-	char		*sendto_esc	= NULL;
-	char		*subject_esc	= NULL;
-	char		*message_esc	= NULL;
-	char		*error_esc	= NULL;
+	char		*sendto_esc, *subject_esc, *message_esc, *error_esc;
 	char		error[MAX_STRING_LEN];
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In add_message_alert()");
 /*	zabbix_log(LOG_LEVEL_DEBUG,"MESSAGE\n\tuserid : " ZBX_FS_UI64 "\n\tsubject: %s\n\tmessage: %s", userid, subject, message);*/
 
 	now		= time(NULL);
-	subject_esc	= DBdyn_escape_string(subject);
+	subject_esc	= DBdyn_escape_string_len(subject, ALERT_SUBJECT_LEN);
 	message_esc	= DBdyn_escape_string(message);
 
 	result = DBselect("select mediatypeid,sendto,severity,period from media"
@@ -317,7 +313,7 @@ static void	add_message_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACT
 		}
 
 		alertid		= DBget_maxid("alerts", "alertid");
-		sendto_esc	= DBdyn_escape_string(row[1]);
+		sendto_esc	= DBdyn_escape_string_len(row[1], ALERT_SENDTO_LEN);
 
 		DBexecute("insert into alerts (alertid,actionid,eventid,userid,clock"
 				",mediatypeid,sendto,subject,message,status,alerttype,esc_step)"
@@ -325,7 +321,7 @@ static void	add_message_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACT
 				"," ZBX_FS_UI64 ",'%s','%s','%s',%d,%d,%d)",
 				alertid,
 				action->actionid,
-				eventid,
+				event->eventid,
 				userid,
 				now,
 				mediatypeid,
@@ -364,7 +360,7 @@ static void	add_message_alert(DB_ESCALATION *escalation, DB_EVENT *event, DB_ACT
 				",'%s','%s',%d,%d,'%s',%d)",
 				alertid,
 				action->actionid,
-				eventid,
+				event->eventid,
 				userid,
 				ALERT_MAX_RETRIES,
 				now,
@@ -519,8 +515,8 @@ static void	execute_operations(DB_ESCALATION *escalation, DB_EVENT *event, DB_AC
 		if (SUCCEED == check_operation_conditions(event, &operation)) {
 			zabbix_log(LOG_LEVEL_DEBUG, "Conditions match our event. Execute operation.");
 
-			substitute_macros(event, action, &operation.shortdata);
-			substitute_macros(event, action, &operation.longdata);
+			substitute_macros(event, action, NULL, &operation.shortdata);
+			substitute_macros(event, action, NULL, &operation.longdata);
 
 			if (0 == esc_period || esc_period > operation.esc_period)
 				esc_period = operation.esc_period;
@@ -558,7 +554,7 @@ static void	execute_operations(DB_ESCALATION *escalation, DB_EVENT *event, DB_AC
 		p = user_msg;
 		user_msg = user_msg->next;
 
-		add_message_alert(escalation, event, action, event->eventid, p->userid, p->subject, p->message);
+		add_message_alert(escalation, event, action, p->userid, p->subject, p->message);
 
 		zbx_free(p->subject);
 		zbx_free(p->message);
@@ -592,59 +588,116 @@ static void	process_recovery_msg(DB_ESCALATION *escalation, DB_EVENT *r_event, D
 	DB_RESULT	result;
 	DB_ROW		row;
 	zbx_uint64_t	userid;
-	
-	if (1 == action->recovery_msg) {
+
+	if (1 == action->recovery_msg)
+	{
 		result = DBselect("select distinct userid from alerts where actionid=" ZBX_FS_UI64
 				" and eventid=" ZBX_FS_UI64 " and alerttype=%d",
 				action->actionid,
 				escalation->eventid,
 				ALERT_TYPE_MESSAGE);
 
-		while (NULL != (row = DBfetch(result))) {
+		while (NULL != (row = DBfetch(result)))
+		{
 			userid = zbx_atoui64(row[0]);
 
-			add_message_alert(escalation, r_event, action, escalation->r_eventid, userid, action->shortdata, action->longdata);
+			escalation->esc_step = 0;
+			add_message_alert(escalation, r_event, action, userid, action->shortdata, action->longdata);
 		}
 
 		DBfree_result(result);
-	} else
+	}
+	else
 		zabbix_log(LOG_LEVEL_DEBUG, "Escalation stopped: recovery message not defined",
 				escalation->actionid);
 
 	escalation->status = ESCALATION_STATUS_COMPLETED;
 }
 
-static int	get_event(zbx_uint64_t eventid, DB_EVENT *event)
+/******************************************************************************
+ *                                                                            *
+ * Function: get_event_info                                                   *
+ *                                                                            *
+ * Purpose: get event and trigger info to event structure                     *
+ *                                                                            *
+ * Parameters: eventid - [IN] requested event id                              *
+ *             event   - [OUT] event data                                     *
+ *                                                                            *
+ * Return value: SUCCEED if processed successfully, FAIL - otherwise          *
+ *                                                                            *
+ * Author: Alexander Vladishev                                                *
+ *                                                                            *
+ * Comments: use 'free_event_info' function to clear allocated memory         *
+ *                                                                            *
+ ******************************************************************************/
+static int	get_event_info(zbx_uint64_t eventid, DB_EVENT *event)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
 	int		res = FAIL;
 
+	memset(event, 0, sizeof(DB_EVENT));
+
 	result = DBselect("select eventid,source,object,objectid,clock,value,acknowledged"
 			" from events where eventid=" ZBX_FS_UI64,
 			eventid);
 
 	if (NULL != (row = DBfetch(result)))
 	{
-		memset(event, 0, sizeof(DB_EVENT));
-		event->eventid		= zbx_atoui64(row[0]);
+		ZBX_STR2UINT64(event->eventid, row[0]);
 		event->source		= atoi(row[1]);
 		event->object		= atoi(row[2]);
-		event->objectid		= zbx_atoui64(row[3]);
+		ZBX_STR2UINT64(event->objectid, row[3]);
 		event->clock		= atoi(row[4]);
 		event->value		= atoi(row[5]);
 		event->acknowledged	= atoi(row[6]);
 
-		add_trigger_info(event);
-
 		res = SUCCEED;
 	}
 
 	DBfree_result(result);
 
+	if (res == SUCCEED && event->object == EVENT_OBJECT_TRIGGER)
+	{
+		result = DBselect("select description,priority,comments,url,type"
+				" from triggers where triggerid=" ZBX_FS_UI64,
+				event->objectid);
+
+		if (NULL != (row = DBfetch(result)))
+		{
+			zbx_strlcpy(event->trigger_description, row[0], sizeof(event->trigger_description));
+			event->trigger_priority = atoi(row[1]);
+			event->trigger_comments	= strdup(row[2]);
+			event->trigger_url	= strdup(row[3]);
+			event->trigger_type	= atoi(row[4]);
+		}
+
+		DBfree_result(result);
+	}
 	return res;
 }
 
+/******************************************************************************
+ *                                                                            *
+ * Function: free_event_info                                                  *
+ *                                                                            *
+ * Purpose: clean allocated memory by function 'get_event_info'               *
+ *                                                                            *
+ * Parameters: event - [IN] event data                                        *
+ *                                                                            *
+ * Return value:                                                              *
+ *                                                                            *
+ * Author: Alexander Vladishev                                                *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+static void	free_event_info(DB_EVENT *event)
+{
+	zbx_free(event->trigger_comments);
+	zbx_free(event->trigger_url);
+}
+
 static void	execute_escalation(DB_ESCALATION *escalation)
 {
 	DB_RESULT	result;
@@ -730,22 +783,24 @@ static void	execute_escalation(DB_ESCALATION *escalation)
 
 		switch (escalation->status) {
 			case ESCALATION_STATUS_ACTIVE:
-				if (SUCCEED == get_event(escalation->eventid, &event))
+				if (SUCCEED == get_event_info(escalation->eventid, &event))
 				{
-					substitute_macros(&event, &action, &action.shortdata);
-					substitute_macros(&event, &action, &action.longdata);
+					substitute_macros(&event, &action, NULL, &action.shortdata);
+					substitute_macros(&event, &action, NULL, &action.longdata);
 
 					execute_operations(escalation, &event, &action);
 				}
+				free_event_info(&event);
 				break;
 			case ESCALATION_STATUS_RECOVERY:
-				if (SUCCEED == get_event(escalation->r_eventid, &event))
+				if (SUCCEED == get_event_info(escalation->r_eventid, &event))
 				{
-					substitute_macros(&event, &action, &action.shortdata);
-					substitute_macros(&event, &action, &action.longdata);
+					substitute_macros(&event, &action, escalation, &action.shortdata);
+					substitute_macros(&event, &action, escalation, &action.longdata);
 
 					process_recovery_msg(escalation, &event, &action);
 				}
+				free_event_info(&event);
 				break;
 			default:
 				break;
diff --git a/src/zabbix_server/events.c b/src/zabbix_server/events.c
index 4271dc3..c29bed2 100644
--- a/src/zabbix_server/events.c
+++ b/src/zabbix_server/events.c
@@ -62,7 +62,7 @@
  * Comments: use 'free_trigger_info' function to clear allocated memory     *
  *                                                                            *
  ******************************************************************************/
-void	add_trigger_info(DB_EVENT *event)
+static void	add_trigger_info(DB_EVENT *event)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
diff --git a/src/zabbix_server/events.h b/src/zabbix_server/events.h
index 80e1594..b56d9f7 100644
--- a/src/zabbix_server/events.h
+++ b/src/zabbix_server/events.h
@@ -24,7 +24,6 @@
 #include "common.h"
 #include "db.h"
 
-void	add_trigger_info(DB_EVENT *event);
 int	process_event(DB_EVENT *event);
 
 #endif
diff --git a/src/zabbix_server/httppoller/httptest.c b/src/zabbix_server/httppoller/httptest.c
index 8912c03..dbb56e2 100644
--- a/src/zabbix_server/httppoller/httptest.c
+++ b/src/zabbix_server/httppoller/httptest.c
@@ -487,7 +487,7 @@ static void	process_httptest(DB_HTTPTEST *httptest)
 	}
 	DBfree_result(result);
 
-	esc_err_str = DBdyn_escape_string(err_str);
+	esc_err_str = DBdyn_escape_string_len(err_str, HTTPTEST_ERROR_LEN);
 	zbx_free(err_str);
 
 	(void)curl_easy_cleanup(easyhandle);
diff --git a/src/zabbix_server/operations.c b/src/zabbix_server/operations.c
index 36d62c6..d53c465 100644
--- a/src/zabbix_server/operations.c
+++ b/src/zabbix_server/operations.c
@@ -213,7 +213,7 @@ static void run_remote_command(char* host_name, char* command)
 	DB_ITEM         item;
 	DB_RESULT	result;
 	DB_ROW		row;
-	char		*p, key[ITEM_KEY_LEN_MAX];
+	char		*p, *host_esc, key[ITEM_KEY_LEN_MAX];
 #ifdef HAVE_OPENIPMI
 	int		val;
 	char		error[MAX_STRING_LEN];
@@ -226,10 +226,12 @@ static void run_remote_command(char* host_name, char* command)
 		host_name,
 		command);
 
+	host_esc = DBdyn_escape_string(host_name);
 	result = DBselect("select distinct host,ip,useip,port,dns,useipmi,ipmi_port,ipmi_authtype,"
 			"ipmi_privilege,ipmi_username,ipmi_password from hosts where host='%s'" DB_NODE,
-			host_name,
+			host_esc,
 			DBnode_local("hostid"));
+	zbx_free(host_esc);
 
 	if (NULL != (row = DBfetch(result)))
 	{
@@ -389,7 +391,7 @@ void	op_run_commands(char *cmd_list)
 {
 	DB_RESULT	result;
 	DB_ROW		row;
-	char		*alias, *command;
+	char		*alias, *alias_esc, *command;
 	int		is_group;
 
 	assert(cmd_list);
@@ -401,10 +403,12 @@ void	op_run_commands(char *cmd_list)
 			continue;
 
 		if (is_group) {
+			alias_esc = DBdyn_escape_string(alias);
 			result = DBselect("select distinct h.host from hosts_groups hg,hosts h,groups g"
 					" where hg.hostid=h.hostid and hg.groupid=g.groupid and g.name='%s'" DB_NODE,
-					alias,
+					alias_esc,
 					DBnode_local("h.hostid"));
+			zbx_free(alias_esc);
 
 			while (NULL != (row = DBfetch(result)))
 				run_remote_command(row[0], command);
@@ -515,7 +519,7 @@ static zbx_uint64_t	add_discovered_host(zbx_uint64_t dhostid)
 	DB_ROW		row2;
 	zbx_uint64_t	hostid = 0, proxy_hostid;
 	char		*ip;
-	char		host[MAX_STRING_LEN], host_esc[MAX_STRING_LEN];
+	char		host[MAX_STRING_LEN], *host_esc, *ip_esc;
 
 	zabbix_log(LOG_LEVEL_DEBUG, "In add_discovered_host(dhostid:" ZBX_FS_UI64 ")",
 			dhostid);
@@ -532,10 +536,11 @@ static zbx_uint64_t	add_discovered_host(zbx_uint64_t dhostid)
 		zbx_gethost_by_ip(ip, host, sizeof(host));
 		alarm(0);
 
-		DBescape_string(host, host_esc, sizeof(host_esc));
+		host_esc = DBdyn_escape_string_len(host, HOST_HOST_LEN);
+		ip_esc = DBdyn_escape_string_len(ip, HOST_IP_LEN);
 
 		result2 = DBselect("select hostid from hosts where ip='%s'" DB_NODE,
-				ip,
+				ip_esc,
 				DBnode_local("hostid"));
 
 		if (NULL == (row2 = DBfetch(result2)) || DBis_null(row2[0]) == SUCCEED) {
@@ -544,8 +549,8 @@ static zbx_uint64_t	add_discovered_host(zbx_uint64_t dhostid)
 					" values (" ZBX_FS_UI64 "," ZBX_FS_UI64 ",'%s',1,'%s','%s')",
 					hostid,
 					proxy_hostid,
-					(host[0] != '\0' ? host_esc : ip), /* Use host name if exists, IP otherwise */
-					ip,
+					(*host != '\0' ? host_esc : ip_esc), /* Use host name if exists, IP otherwise */
+					ip_esc,
 					host_esc);
 		} else {
 			ZBX_STR2UINT64(hostid, row2[0]);
@@ -556,6 +561,9 @@ static zbx_uint64_t	add_discovered_host(zbx_uint64_t dhostid)
 			}
 		}
 		DBfree_result(result2);
+
+		zbx_free(host_esc);
+		zbx_free(ip_esc);
 	}
 	DBfree_result(result);
 
diff --git a/src/zabbix_server/poller/checks_snmp.c b/src/zabbix_server/poller/checks_snmp.c
index ca04114..e99f1cc 100644
--- a/src/zabbix_server/poller/checks_snmp.c
+++ b/src/zabbix_server/poller/checks_snmp.c
@@ -176,8 +176,10 @@ static int snmp_get_index(DB_ITEM * item, char *OID, char *value, int *idx, char
 
 	zabbix_log (LOG_LEVEL_DEBUG, "OID [%s]", OID);
 
+#ifdef HAVE_SNMP_SESSION_LOCALNAME
 	if (NULL != CONFIG_SOURCE_IP)
 		session.localname = CONFIG_SOURCE_IP;
+#endif
 
 	SOCK_STARTUP;
 	ss = snmp_open (&session);
@@ -469,8 +471,10 @@ int	get_snmp(DB_ITEM *item, char *snmp_oid, AGENT_RESULT *value)
 			session.remote_port);
 	}
 
+#ifdef HAVE_SNMP_SESSION_LOCALNAME
 	if (NULL != CONFIG_SOURCE_IP)
 		session.localname = CONFIG_SOURCE_IP;
+#endif
 
 	SOCK_STARTUP;
 	ss = snmp_open(&session);
@@ -598,7 +602,7 @@ int	get_snmp(DB_ITEM *item, char *snmp_oid, AGENT_RESULT *value)
 			}
 			else
 			{
-				SET_MSG_RESULT(value, zbx_dsprintf(NULL, "OID [%s] value has unknow type [%X]",
+				SET_MSG_RESULT(value, zbx_dsprintf(NULL, "OID [%s] value has unknow type [0x%02X]",
 						snmp_oid,
 						vars->type));
 			}
@@ -617,18 +621,20 @@ int	get_snmp(DB_ITEM *item, char *snmp_oid, AGENT_RESULT *value)
 		{
 			SET_MSG_RESULT(value, zbx_dsprintf(NULL, "SNMP error [%s]",
 					snmp_errstring(response->errstat)));
+			ret = NOTSUPPORTED;
 		}
 		else if(status == STAT_TIMEOUT)
 		{
 			SET_MSG_RESULT(value, zbx_dsprintf(NULL, "Timeout while connecting to [%s]",
 					session.peername));
+			ret = NETWORK_ERROR;
 		}
 		else
 		{
 			SET_MSG_RESULT(value, zbx_dsprintf(NULL, "SNMP error [%d]",
 					status));
+			ret = NOTSUPPORTED;
 		}
-		ret = NOTSUPPORTED;
 	}
 
 	if (response)
diff --git a/src/zabbix_server/poller/poller.c b/src/zabbix_server/poller/poller.c
index 1124f3f..fe9e50f 100644
--- a/src/zabbix_server/poller/poller.c
+++ b/src/zabbix_server/poller/poller.c
@@ -43,7 +43,6 @@ static zbx_process_t	zbx_process;
 int			poller_type;
 int			poller_num;
 
-
 int	get_value(DB_ITEM *item, AGENT_RESULT *result)
 {
 	int	res = FAIL;
@@ -348,14 +347,14 @@ static int get_values(int now, int *nextcheck)
 	case ZBX_POLLER_TYPE_UNREACHABLE:
 		result = DBselect("select h.hostid,min(i.itemid) from hosts h,items i"
 				" where " ZBX_SQL_MOD(h.hostid,%d) "=%d and i.nextcheck<=%d and i.status in (%d)"
-				" and i.type not in (%d,%d,%d) and h.status=%d and h.disable_until<=%d"
+				" and i.type in (%d,%d,%d,%d,%d) and h.status=%d and h.disable_until<=%d"
 				" and h.errors_from!=0 and h.hostid=i.hostid and (h.proxy_hostid=0 or i.type in (%d))"
 				" and i.key_ not in ('%s','%s','%s','%s')" DB_NODE " group by h.hostid",
 				CONFIG_UNREACHABLE_POLLER_FORKS,
 				poller_num-1,
 				now + POLLER_DELAY,
 				ITEM_STATUS_ACTIVE,
-				ITEM_TYPE_TRAPPER, ITEM_TYPE_ZABBIX_ACTIVE, ITEM_TYPE_HTTPTEST,
+				ITEM_TYPE_ZABBIX, ITEM_TYPE_SNMPv1, ITEM_TYPE_SNMPv2c, ITEM_TYPE_SNMPv3, ITEM_TYPE_IPMI,
 				HOST_STATUS_MONITORED,
 				now,
 				ITEM_TYPE_INTERNAL,
@@ -381,17 +380,18 @@ static int get_values(int now, int *nextcheck)
 				DBnode_local("h.hostid"));
 		break;
 	default:	/* ZBX_POLLER_TYPE_NORMAL */
-		result = DBselect("select %s where i.nextcheck<=%d and i.status in (%s)"
-				" and i.type not in (%d,%d,%d,%d) and h.status=%d and h.disable_until<=%d"
-				" and h.errors_from=0 and h.hostid=i.hostid and (h.proxy_hostid=0 or i.type in (%d))"
+		result = DBselect("select %s where i.nextcheck<=%d and h.hostid=i.hostid and h.status=%d and i.status in (%s)"
+				" and ((h.disable_until<=%d and h.errors_from=0 and i.type in (%d,%d,%d,%d)) or i.type in (%d,%d,%d,%d,%d))"
+				" and (h.proxy_hostid=0 or i.type in (%d))"
 				" and " ZBX_SQL_MOD(i.itemid,%d) "=%d and i.key_ not in ('%s','%s','%s','%s')"
 				DB_NODE " order by i.nextcheck",
 				ZBX_SQL_ITEM_SELECT,
 				now + POLLER_DELAY,
-				istatus,
-				ITEM_TYPE_TRAPPER, ITEM_TYPE_ZABBIX_ACTIVE, ITEM_TYPE_HTTPTEST, ITEM_TYPE_IPMI,
 				HOST_STATUS_MONITORED,
+				istatus,
 				now,
+				ITEM_TYPE_ZABBIX, ITEM_TYPE_SNMPv1, ITEM_TYPE_SNMPv2c, ITEM_TYPE_SNMPv3,
+				ITEM_TYPE_SIMPLE, ITEM_TYPE_INTERNAL, ITEM_TYPE_AGGREGATE, ITEM_TYPE_EXTERNAL, ITEM_TYPE_DB_MONITOR,
 				ITEM_TYPE_INTERNAL,
 				CONFIG_POLLER_FORKS,
 				poller_num-1,
diff --git a/src/zabbix_server/server.c b/src/zabbix_server/server.c
index fa2087e..24e9666 100644
--- a/src/zabbix_server/server.c
+++ b/src/zabbix_server/server.c
@@ -50,8 +50,6 @@
 #include "utils/nodechange.h"
 #include "escalator/escalator.h"
 
-#define       LISTENQ 1024
-
 #ifdef ZABBIX_TEST
 #include <time.h>
 #endif
@@ -124,7 +122,7 @@ int	CONFIG_HOUSEKEEPER_FORKS	= 1;
 int	CONFIG_NODEWATCHER_FORKS	= 1;
 int	CONFIG_PINGER_FORKS		= 1;
 int	CONFIG_POLLER_FORKS		= 5;
-int	CONFIG_HTTPPOLLER_FORKS		= 5;
+int	CONFIG_HTTPPOLLER_FORKS		= 1;
 int	CONFIG_IPMIPOLLER_FORKS		= 0;
 int	CONFIG_TIMER_FORKS		= 1;
 int	CONFIG_TRAPPERD_FORKS		= 5;
@@ -1080,8 +1078,7 @@ int MAIN_ZABBIX_ENTRY(void)
 		exit(FAIL);
 	}
 
-	if (CONFIG_DBSYNCER_FORKS != 0)
-		init_database_cache(ZBX_PROCESS_SERVER);
+	init_database_cache(ZBX_PROCESS_SERVER);
 
 /*#define CALC_TREND*/
 
@@ -1304,11 +1301,7 @@ void	zbx_on_exit()
 	zbx_sleep(2); /* wait for all threads closing */
 
 	DBconnect(ZBX_DB_CONNECT_EXIT);
-	
-	if(CONFIG_DBSYNCER_FORKS!=0)
-	{
-		free_database_cache();
-	}
+	free_database_cache();
 	DBclose();
 
 	zbx_mutex_destroy(&node_sync_access);
diff --git a/src/zabbix_server/utils/nodechange.c b/src/zabbix_server/utils/nodechange.c
index 60a99e0..ca414d1 100644
--- a/src/zabbix_server/utils/nodechange.c
+++ b/src/zabbix_server/utils/nodechange.c
@@ -26,14 +26,14 @@
 
 /******************************************************************************
  *                                                                            *
- * Function: convert_trigger_expression                                       *
+ * Function: convert_expression                                               *
  *                                                                            *
  * Purpose: convert trigger expression to new node ID                         *
  *                                                                            *
  * Parameters: old_id - old id, new_id - new node id                          *
  *             old_exp - old expression, new_exp - new expression             *
  *                                                                            *
- * Return value: SUCCESS - converted succesfully                              * 
+ * Return value: SUCCESS - converted succesfully                              *
  *               FAIL - an error occured                                      *
  *                                                                            *
  * Author: Alexei Vladishev                                                   *
@@ -41,29 +41,27 @@
  * Comments:                                                                  *
  *                                                                            *
  ******************************************************************************/
-static int convert_trigger_expression(int old_id, int new_id, zbx_uint64_t prefix, char *old_exp, char *new_exp)
+static int convert_expression(int old_id, int new_id, zbx_uint64_t prefix, const char *old_exp, char *new_exp)
 {
-	int	i;
-	char	id[MAX_STRING_LEN];
-	enum	state_t {NORMAL, ID} state = NORMAL;
-	char	*p,
-		*p_id = NULL;
+	int		i;
+	char		id[MAX_STRING_LEN];
+	enum		state_t {NORMAL, ID} state = NORMAL;
+	char		*p, *p_id = NULL;
 	zbx_uint64_t	tmp;
 
 	p = new_exp;
 
-	for(i=0;old_exp[i]!=0;i++)
+	for (i = 0; old_exp[i] != 0; i++)
 	{
-		if(state == ID)
+		if (state == ID)
 		{
-			if(old_exp[i]=='}')
+			if (old_exp[i] == '}')
 			{
 				state = NORMAL;
-				ZBX_STR2UINT64(tmp,id);
-				tmp+=prefix;/*(zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id+(zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;*/
-				p+=zbx_snprintf(p,MAX_STRING_LEN,ZBX_FS_UI64, tmp);
-				p[0] = old_exp[i];
-				p++;
+				ZBX_STR2UINT64(tmp, id);
+				tmp += prefix;
+				p += zbx_snprintf(p, MAX_STRING_LEN, ZBX_FS_UI64, tmp);
+				*p++ = old_exp[i];
 			}
 			else
 			{
@@ -71,21 +69,145 @@ static int convert_trigger_expression(int old_id, int new_id, zbx_uint64_t prefi
 				p_id++;
 			}
 		}
-		else if(old_exp[i]=='{')
+		else if (old_exp[i] == '{')
 		{
 			state = ID;
 			memset(id,0,MAX_STRING_LEN);
 			p_id = id;
-			p[0] = old_exp[i];
-			p++;
+			*p++ = old_exp[i];
 		}
 		else
-		{
-			p[0] = old_exp[i];
-			p++;
-		}
+			*p++ = old_exp[i];
+	}
+
+	return SUCCEED;
+}
+
+/******************************************************************************
+ *                                                                            *
+ * Function: convert_triggers_expression                                      *
+ *                                                                            *
+ * Purpose: convert trigger expressions to new node ID                        *
+ *                                                                            *
+ * Parameters: old_id - old id, new_id - new node id                          *
+ *                                                                            *
+ * Return value: SUCCESS - converted succesfully                              *
+ *               FAIL - an error occured                                      *
+ *                                                                            *
+ * Author: Alexander Vladishev                                                *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+static int convert_triggers_expression(int old_id, int new_id)
+{
+	zbx_uint64_t	prefix;
+	const ZBX_TABLE	*r_table;
+	DB_RESULT	result;
+	DB_ROW		row;
+	char		new_expression[MAX_STRING_LEN];
+	char		*new_expression_esc;
+
+	if (NULL == (r_table = DBget_table("functions")))
+	{
+		printf("triggers.expression FAILED\n");
+		return FAIL;
 	}
 
+	prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id;
+	if (r_table->flags & ZBX_SYNC)
+		prefix += (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
+
+	result = DBselect("select expression,triggerid from triggers");
+
+	while (NULL != (row = DBfetch(result)))
+	{
+		memset(new_expression, 0, sizeof(new_expression));
+		convert_expression(old_id, new_id, prefix, row[0], new_expression);
+
+		new_expression_esc = DBdyn_escape_string_len(new_expression, TRIGGER_EXPRESSION_LEN);
+		DBexecute("update triggers set expression='%s' where triggerid=%s",
+				new_expression_esc,
+				row[1]);
+		zbx_free(new_expression_esc);
+	}
+	DBfree_result(result);
+
+	return SUCCEED;
+}
+
+/******************************************************************************
+ *                                                                            *
+ * Function: convert_profiles                                                 *
+ *                                                                            *
+ * Purpose: convert profiles idx2 and value_id fields to new node ID          *
+ *                                                                            *
+ * Parameters: old_id - old id, new_id - new node id                          *
+ *                                                                            *
+ * Return value: SUCCESS - converted succesfully                              *
+ *               FAIL - an error occured                                      *
+ *                                                                            *
+ * Author: Alexander Vladishev                                                *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+static int convert_profiles(int old_id, int new_id, const char *field_name)
+{
+	zbx_uint64_t	prefix;
+
+	prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id + (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
+
+	DBexecute("update profiles set %s=%s+" ZBX_FS_UI64 " where %s>0",
+			field_name,
+			field_name,
+			prefix,
+			field_name);
+
+	return SUCCEED;
+}
+
+/******************************************************************************
+ *                                                                            *
+ * Function: convert_special_field                                            *
+ *                                                                            *
+ * Purpose: special processing for multipurposes fields                       *
+ *                                                                            *
+ * Parameters: old_id - old id, new_id - new node id                          *
+ *                                                                            *
+ * Return value: SUCCESS - converted succesfully                              *
+ *               FAIL - an error occured                                      *
+ *                                                                            *
+ * Author: Aleksander Vladishev                                               *
+ *                                                                            *
+ * Comments:                                                                  *
+ *                                                                            *
+ ******************************************************************************/
+static int convert_special_field(int old_id, int new_id, const char *table_name, const char *field_name, const char *type_field_name,
+		const char *rel_table_name, int type)
+{
+	zbx_uint64_t	prefix;
+	const ZBX_TABLE	*r_table;
+
+	if (NULL == (r_table = DBget_table(rel_table_name)))
+	{
+		printf("%s.%s FAILED\n", table_name, field_name);
+		return FAIL;
+	}
+
+	prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id;
+	if (r_table->flags & ZBX_SYNC)
+		prefix += (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
+
+	DBexecute("update %s set %s=%s+" ZBX_FS_UI64 " where %s=%d and %s>0",
+			table_name,
+			field_name,
+			field_name,
+			prefix,
+			type_field_name,
+			type,
+			field_name);
+
 	return SUCCEED;
 }
 
@@ -107,12 +229,80 @@ static int convert_trigger_expression(int old_id, int new_id, zbx_uint64_t prefi
  ******************************************************************************/
 int change_nodeid(int old_id, int new_id)
 {
-	int i,j;
-	DB_RESULT	result;
-	DB_ROW		row;
-	char		new_expression[MAX_STRING_LEN];
-	char		new_expression_esc[MAX_STRING_LEN];
+	struct conv_t
+	{
+	        char	*rel;
+        	int	type;
+	};
+
+	struct special_conv_t
+	{
+	        char		*table_name, *field_name, *type_field_name;
+		struct conv_t	convs[10];
+	};
+
+	struct special_conv_t special_convs[]=
+	{
+		{"sysmaps_elements",	"elementid",	"elementtype",
+			{
+			{"hosts",	SYSMAP_ELEMENT_TYPE_HOST},
+			{"sysmaps",	SYSMAP_ELEMENT_TYPE_MAP},
+			{"triggers",	SYSMAP_ELEMENT_TYPE_TRIGGER},
+			{"groups",	SYSMAP_ELEMENT_TYPE_HOST_GROUP},
+			{"images",	SYSMAP_ELEMENT_TYPE_IMAGE},
+			{NULL}
+			}
+		},
+		{"events",		"objectid",	"object",
+			{
+			{"triggers",	EVENT_OBJECT_TRIGGER},
+			{"dhosts",	EVENT_OBJECT_DHOST},
+			{"dservices",	EVENT_OBJECT_DSERVICE},
+			{NULL}
+			}
+		},
+		{"operations",		"objectid",	"object",
+			{
+			{"users",	OPERATION_OBJECT_USER},
+			{"usrgrp",	OPERATION_OBJECT_GROUP},
+			{NULL}
+			}
+		},
+		{"ids",			"nextid",	NULL,
+			{
+			{NULL}
+			}
+		},
+		{"node_cksum",		"recordid",	NULL,
+			{
+			{NULL}
+			}
+		},
+		{"screens_items",	"resourceid",	"resourcetype",
+			{
+			{"graphs",	SCREEN_RESOURCE_GRAPH},
+			{"items",	SCREEN_RESOURCE_SIMPLE_GRAPH},
+			{"sysmaps",	SCREEN_RESOURCE_MAP},
+			{"items",	SCREEN_RESOURCE_PLAIN_TEXT},
+			{"groups",	SCREEN_RESOURCE_HOSTS_INFO},
+/*			{"",	SCREEN_RESOURCE_TRIGGERS_INFO},
+			{"",	SCREEN_RESOURCE_SERVER_INFO},
+			{"",	SCREEN_RESOURCE_CLOCK},*/
+			{"screens",	SCREEN_RESOURCE_SCREEN},
+			{"groups",	SCREEN_RESOURCE_TRIGGERS_OVERVIEW},
+			{"groups",	SCREEN_RESOURCE_DATA_OVERVIEW},
+/*			{"",	SCREEN_RESOURCE_URL},
+			{"",	SCREEN_RESOURCE_ACTIONS},
+			{"",	SCREEN_RESOURCE_EVENTS},*/
+			{NULL}
+			}
+		},
+		{NULL}
+	};
+
+	int		i, j, s, t;
 	zbx_uint64_t	prefix;
+	const ZBX_TABLE	*r_table;
 
 	if(old_id!=0)
 	{
@@ -135,55 +325,84 @@ int change_nodeid(int old_id, int new_id)
 	printf("Converting tables ");
 	fflush(stdout);
 
-	for(i=0;tables[i].table!=0;i++)
+	for (i = 0; NULL != tables[i].table; i++)
 	{
 		printf(".");
 		fflush(stdout);
 
-		prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id;
-		if(tables[i].flags & ZBX_SYNC)
+		for (j = 0; NULL != tables[i].fields[j].name; j++)
 		{
-			prefix += (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
-		}
+			for (s = 0; NULL != special_convs[s].table_name; s++)
+				if (0 == strcmp(special_convs[s].table_name, tables[i].table) &&
+						0 == strcmp(special_convs[s].field_name, tables[i].fields[j].name))
+					break;
 
-		j=0;
-		while(tables[i].fields[j].name != 0)
-		{
-			if(tables[i].fields[j].type == ZBX_TYPE_ID)
+			if (NULL != special_convs[s].table_name)
 			{
-				DBexecute("update %s set %s=%s+"ZBX_FS_UI64" where %s>0\n",
-					tables[i].table,
-					tables[i].fields[j].name,
-					tables[i].fields[j].name,
-					prefix,
-					tables[i].fields[j].name);
+				for (t = 0; NULL != special_convs[s].convs[t].rel; t++)
+				{
+					convert_special_field(old_id, new_id, special_convs[s].table_name, special_convs[s].field_name,
+							special_convs[s].type_field_name, special_convs[s].convs[t].rel,
+							special_convs[s].convs[t].type);
+				}
+				continue;
 			}
-			j++;
-		}
 
-		if(strcmp(tables[i].table, "functions") == 0)
-		{
-			/* Special processing for trigger expressions */
-			result=DBselect("select expression,triggerid from triggers");
-			while((row=DBfetch(result)))
+			if (tables[i].fields[j].type == ZBX_TYPE_ID)
 			{
-				memset(new_expression, 0, MAX_STRING_LEN);
-				convert_trigger_expression(old_id, new_id, prefix, row[0], new_expression);
-				DBescape_string(new_expression, new_expression_esc,MAX_STRING_LEN);
-				DBexecute("update triggers set expression='%s' where triggerid=%s",
-						new_expression_esc,
-						row[1]);
-			}
-			DBfree_result(result);
+				if (0 == strcmp(tables[i].fields[j].name, tables[i].recid))	/* primaky key */
+				{
+					prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id;
+
+					if (tables[i].flags & ZBX_SYNC)
+						prefix += (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
+				}
+				else if (NULL != tables[i].fields[j].rel)	/* relations */
+				{
+					if (NULL == (r_table = DBget_table(tables[i].fields[j].rel)))
+					{
+						printf("%s.%s FAILED\n", tables[i].table, tables[i].fields[j].name);
+						fflush(stdout);
+						continue;
+					}
 
+					prefix = (zbx_uint64_t)__UINT64_C(100000000000000)*(zbx_uint64_t)new_id;
+
+					if (r_table->flags & ZBX_SYNC)
+						prefix += (zbx_uint64_t)__UINT64_C(100000000000)*(zbx_uint64_t)new_id;
+				}
+				else if (0 == strcmp("profiles", tables[i].table))	/* special processing for table 'profiles' */
+				{
+					convert_profiles(old_id, new_id, tables[i].fields[j].name);
+					continue;
+				}
+				else
+				{
+					printf("%s.%s FAILED\n", tables[i].table, tables[i].fields[j].name);
+					fflush(stdout);
+					continue;
+				}
+
+				DBexecute("update %s set %s=%s+" ZBX_FS_UI64 " where %s>0",
+						tables[i].table,
+						tables[i].fields[j].name,
+						tables[i].fields[j].name,
+						prefix,
+						tables[i].fields[j].name);
+			}
 		}
 	}
+
+	/* Special processing for trigger expressions */
+	convert_triggers_expression(old_id, new_id);
+
 	DBexecute("insert into nodes (nodeid,name,ip,nodetype) values (%d,'Local node','127.0.0.1',1)",
-		new_id);
+			new_id);
+
 	DBcommit();
 	
 	DBclose();
-	printf(" done.\n\nConversion completed.\n");
+	printf(" done.\nConversion completed.\n");
 
 	return SUCCEED;
 }
